// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event/event.proto

package event

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	account "github.com/subiz/header/account"
	common "github.com/subiz/header/common"
	content "github.com/subiz/header/content"
	conversation "github.com/subiz/header/conversation"
	email "github.com/subiz/header/email"
	notibox "github.com/subiz/header/notibox"
	payment "github.com/subiz/header/payment"
	user "github.com/subiz/header/user"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountType int32

const (
	AccountType_a                        AccountType = 0
	AccountType_account_deleted          AccountType = 60
	AccountType_account_updated          AccountType = 61
	AccountType_group_created            AccountType = 62
	AccountType_group_deleted            AccountType = 63
	AccountType_group_updated            AccountType = 64
	AccountType_group_joined             AccountType = 65
	AccountType_group_left               AccountType = 66
	AccountType_invitation_accepted      AccountType = 68
	AccountType_agent_deleted            AccountType = 69
	AccountType_agent_updated            AccountType = 70
	AccountType_agent_permission_updated AccountType = 71
	AccountType_limit_updated            AccountType = 72
)

var AccountType_name = map[int32]string{
	0:  "a",
	60: "account_deleted",
	61: "account_updated",
	62: "group_created",
	63: "group_deleted",
	64: "group_updated",
	65: "group_joined",
	66: "group_left",
	68: "invitation_accepted",
	69: "agent_deleted",
	70: "agent_updated",
	71: "agent_permission_updated",
	72: "limit_updated",
}

var AccountType_value = map[string]int32{
	"a":                        0,
	"account_deleted":          60,
	"account_updated":          61,
	"group_created":            62,
	"group_deleted":            63,
	"group_updated":            64,
	"group_joined":             65,
	"group_left":               66,
	"invitation_accepted":      68,
	"agent_deleted":            69,
	"agent_updated":            70,
	"agent_permission_updated": 71,
	"limit_updated":            72,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{0}
}

type UserType int32

const (
	UserType_u                     UserType = 0
	UserType_my_user_upserted      UserType = 46
	UserType_user_info_updated     UserType = 48
	UserType_alias_created         UserType = 49
	UserType_alias_deleted         UserType = 50
	UserType_user_added_to_my_list UserType = 51
	UserType_user_created          UserType = 52
	UserType_note_created          UserType = 53
)

var UserType_name = map[int32]string{
	0:  "u",
	46: "my_user_upserted",
	48: "user_info_updated",
	49: "alias_created",
	50: "alias_deleted",
	51: "user_added_to_my_list",
	52: "user_created",
	53: "note_created",
}

var UserType_value = map[string]int32{
	"u":                     0,
	"my_user_upserted":      46,
	"user_info_updated":     48,
	"alias_created":         49,
	"alias_deleted":         50,
	"user_added_to_my_list": 51,
	"user_created":          52,
	"note_created":          53,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{1}
}

type EventType int32

const (
	EventType_e                        EventType = 0
	EventType_presence_updated         EventType = 38
	EventType_content_viewed           EventType = 39
	EventType_content_searched         EventType = 40
	EventType_content_addedtocart      EventType = 41
	EventType_content_checkedout       EventType = 42
	EventType_content_purchased        EventType = 43
	EventType_topic_read               EventType = 44
	EventType_subscribed_topic_updated EventType = 45
	EventType_user_topic_updated       EventType = 50
	EventType_user_attribute_created   EventType = 51
	EventType_user_attribute_updated   EventType = 52
	EventType_user_attribute_deleted   EventType = 55
	EventType_automation_out_of_credit EventType = 70
)

var EventType_name = map[int32]string{
	0:  "e",
	38: "presence_updated",
	39: "content_viewed",
	40: "content_searched",
	41: "content_addedtocart",
	42: "content_checkedout",
	43: "content_purchased",
	44: "topic_read",
	45: "subscribed_topic_updated",
	50: "user_topic_updated",
	51: "user_attribute_created",
	52: "user_attribute_updated",
	55: "user_attribute_deleted",
	70: "automation_out_of_credit",
}

var EventType_value = map[string]int32{
	"e":                        0,
	"presence_updated":         38,
	"content_viewed":           39,
	"content_searched":         40,
	"content_addedtocart":      41,
	"content_checkedout":       42,
	"content_purchased":        43,
	"topic_read":               44,
	"subscribed_topic_updated": 45,
	"user_topic_updated":       50,
	"user_attribute_created":   51,
	"user_attribute_updated":   52,
	"user_attribute_deleted":   55,
	"automation_out_of_credit": 70,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{2}
}

type WidgetType int32

const (
	WidgetType_w WidgetType = 0
)

var WidgetType_name = map[int32]string{
	0: "w",
}

var WidgetType_value = map[string]int32{
	"w": 0,
}

func (x WidgetType) String() string {
	return proto.EnumName(WidgetType_name, int32(x))
}

func (WidgetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{3}
}

type ConvoType int32

const (
	ConvoType_c ConvoType = 0
	// conversation_updated = 9;
	ConvoType_message_sent               ConvoType = 10
	ConvoType_conversation_state_updated ConvoType = 11
	// conversation_started = 1;
	ConvoType_conversation_joined ConvoType = 2
	// conversation_message = 3;
	ConvoType_conversation_left ConvoType = 4
	// conversation_closed = 5;
	ConvoType_conversation_tagged   ConvoType = 6
	ConvoType_conversation_untagged ConvoType = 7
	// conversation_waiting = 8;
	ConvoType_channel_deintegrated    ConvoType = 20
	ConvoType_channel_integrated      ConvoType = 21
	ConvoType_message_seen            ConvoType = 30
	ConvoType_message_ack             ConvoType = 31
	ConvoType_message_received        ConvoType = 32
	ConvoType_conversation_typing     ConvoType = 33
	ConvoType_conversation_postbacked ConvoType = 34
	ConvoType_conversation_unassigned ConvoType = 35
	ConvoType_conversation_assigned   ConvoType = 36
	ConvoType_message_updated         ConvoType = 38
	ConvoType_conversation_pending    ConvoType = 81
	ConvoType_ticket_created          ConvoType = 82
	ConvoType_ticket_updated          ConvoType = 83
	ConvoType_ticket_deleted          ConvoType = 84
)

var ConvoType_name = map[int32]string{
	0:  "c",
	10: "message_sent",
	11: "conversation_state_updated",
	2:  "conversation_joined",
	4:  "conversation_left",
	6:  "conversation_tagged",
	7:  "conversation_untagged",
	20: "channel_deintegrated",
	21: "channel_integrated",
	30: "message_seen",
	31: "message_ack",
	32: "message_received",
	33: "conversation_typing",
	34: "conversation_postbacked",
	35: "conversation_unassigned",
	36: "conversation_assigned",
	38: "message_updated",
	81: "conversation_pending",
	82: "ticket_created",
	83: "ticket_updated",
	84: "ticket_deleted",
}

var ConvoType_value = map[string]int32{
	"c":                          0,
	"message_sent":               10,
	"conversation_state_updated": 11,
	"conversation_joined":        2,
	"conversation_left":          4,
	"conversation_tagged":        6,
	"conversation_untagged":      7,
	"channel_deintegrated":       20,
	"channel_integrated":         21,
	"message_seen":               30,
	"message_ack":                31,
	"message_received":           32,
	"conversation_typing":        33,
	"conversation_postbacked":    34,
	"conversation_unassigned":    35,
	"conversation_assigned":      36,
	"message_updated":            38,
	"conversation_pending":       81,
	"ticket_created":             82,
	"ticket_updated":             83,
	"ticket_deleted":             84,
}

func (x ConvoType) String() string {
	return proto.EnumName(ConvoType_name, int32(x))
}

func (ConvoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{4}
}

type NotiboxType int32

const (
	NotiboxType_n                     NotiboxType = 0
	NotiboxType_notification_upserted NotiboxType = 52
)

var NotiboxType_name = map[int32]string{
	0:  "n",
	52: "notification_upserted",
}

var NotiboxType_value = map[string]int32{
	"n":                     0,
	"notification_upserted": 52,
}

func (x NotiboxType) String() string {
	return proto.EnumName(NotiboxType_name, int32(x))
}

func (NotiboxType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{5}
}

type SubPrefix int32

const (
	SubPrefix_Webhook   SubPrefix = 0
	SubPrefix_Websocket SubPrefix = 1
)

var SubPrefix_name = map[int32]string{
	0: "Webhook",
	1: "Websocket",
}

var SubPrefix_value = map[string]int32{
	"Webhook":   0,
	"Websocket": 1,
}

func (x SubPrefix) String() string {
	return proto.EnumName(SubPrefix_name, int32(x))
}

func (SubPrefix) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{6}
}

type Automation_State int32

const (
	Automation_active   Automation_State = 0
	Automation_inactive Automation_State = 1
)

var Automation_State_name = map[int32]string{
	0: "active",
	1: "inactive",
}

var Automation_State_value = map[string]int32{
	"active":   0,
	"inactive": 1,
}

func (x Automation_State) String() string {
	return proto.EnumName(Automation_State_name, int32(x))
}

func (Automation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{9, 0}
}

type Automation_ActionType int32

const (
	Automation_conversation_message      Automation_ActionType = 0
	Automation_agent_notification        Automation_ActionType = 1
	Automation_block_user                Automation_ActionType = 5
	Automation_merge_users               Automation_ActionType = 7
	Automation_user_notification         Automation_ActionType = 8
	Automation_user_webhook              Automation_ActionType = 9
	Automation_user_note                 Automation_ActionType = 10
	Automation_conversation_message2     Automation_ActionType = 12
	Automation_conversation_webhook      Automation_ActionType = 13
	Automation_add_agent_to_conversation Automation_ActionType = 14
	Automation_create_ticket             Automation_ActionType = 15
	Automation_conversation_tag          Automation_ActionType = 16
	// agent_notification = 17;
	Automation_add_user_to_segmentation Automation_ActionType = 18
)

var Automation_ActionType_name = map[int32]string{
	0:  "conversation_message",
	1:  "agent_notification",
	5:  "block_user",
	7:  "merge_users",
	8:  "user_notification",
	9:  "user_webhook",
	10: "user_note",
	12: "conversation_message2",
	13: "conversation_webhook",
	14: "add_agent_to_conversation",
	15: "create_ticket",
	16: "conversation_tag",
	18: "add_user_to_segmentation",
}

var Automation_ActionType_value = map[string]int32{
	"conversation_message":      0,
	"agent_notification":        1,
	"block_user":                5,
	"merge_users":               7,
	"user_notification":         8,
	"user_webhook":              9,
	"user_note":                 10,
	"conversation_message2":     12,
	"conversation_webhook":      13,
	"add_agent_to_conversation": 14,
	"create_ticket":             15,
	"conversation_tag":          16,
	"add_user_to_segmentation":  18,
}

func (x Automation_ActionType) String() string {
	return proto.EnumName(Automation_ActionType_name, int32(x))
}

func (Automation_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{9, 1}
}

type Automation_AutomationScope int32

const (
	Automation_conversation Automation_AutomationScope = 0
	Automation_user         Automation_AutomationScope = 3
)

var Automation_AutomationScope_name = map[int32]string{
	0: "conversation",
	3: "user",
}

var Automation_AutomationScope_value = map[string]int32{
	"conversation": 0,
	"user":         3,
}

func (x Automation_AutomationScope) String() string {
	return proto.EnumName(Automation_AutomationScope_name, int32(x))
}

func (Automation_AutomationScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{9, 2}
}

type AutomationAction_ActionType int32

const (
	AutomationAction_update_user_attribute          AutomationAction_ActionType = 0
	AutomationAction_block_user                     AutomationAction_ActionType = 1
	AutomationAction_merge_users                    AutomationAction_ActionType = 3
	AutomationAction_notify_user                    AutomationAction_ActionType = 4
	AutomationAction_send_email                     AutomationAction_ActionType = 5
	AutomationAction_add_user_note                  AutomationAction_ActionType = 6
	AutomationAction_create_conversation            AutomationAction_ActionType = 7
	AutomationAction_send_message                   AutomationAction_ActionType = 8
	AutomationAction_assign_agent_to_conversation   AutomationAction_ActionType = 9
	AutomationAction_convert_conversation_to_ticket AutomationAction_ActionType = 10
	AutomationAction_tag_conversation               AutomationAction_ActionType = 11
	AutomationAction_send_webhook                   AutomationAction_ActionType = 12
	AutomationAction_open_widget_screen             AutomationAction_ActionType = 14
	AutomationAction_add_user_to_segmentation       AutomationAction_ActionType = 15
	AutomationAction_remove_user_from_segmentation  AutomationAction_ActionType = 16
	AutomationAction_send_chat_transcript_email     AutomationAction_ActionType = 17
	AutomationAction_update_conversation_state      AutomationAction_ActionType = 18
)

var AutomationAction_ActionType_name = map[int32]string{
	0:  "update_user_attribute",
	1:  "block_user",
	3:  "merge_users",
	4:  "notify_user",
	5:  "send_email",
	6:  "add_user_note",
	7:  "create_conversation",
	8:  "send_message",
	9:  "assign_agent_to_conversation",
	10: "convert_conversation_to_ticket",
	11: "tag_conversation",
	12: "send_webhook",
	14: "open_widget_screen",
	15: "add_user_to_segmentation",
	16: "remove_user_from_segmentation",
	17: "send_chat_transcript_email",
	18: "update_conversation_state",
}

var AutomationAction_ActionType_value = map[string]int32{
	"update_user_attribute":          0,
	"block_user":                     1,
	"merge_users":                    3,
	"notify_user":                    4,
	"send_email":                     5,
	"add_user_note":                  6,
	"create_conversation":            7,
	"send_message":                   8,
	"assign_agent_to_conversation":   9,
	"convert_conversation_to_ticket": 10,
	"tag_conversation":               11,
	"send_webhook":                   12,
	"open_widget_screen":             14,
	"add_user_to_segmentation":       15,
	"remove_user_from_segmentation":  16,
	"send_chat_transcript_email":     17,
	"update_conversation_state":      18,
}

func (x AutomationAction_ActionType) String() string {
	return proto.EnumName(AutomationAction_ActionType_name, int32(x))
}

func (AutomationAction_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{10, 0}
}

type AutomationCredit_Type int32

const (
	AutomationCredit_email   AutomationCredit_Type = 0
	AutomationCredit_webhook AutomationCredit_Type = 1
	AutomationCredit_message AutomationCredit_Type = 2
)

var AutomationCredit_Type_name = map[int32]string{
	0: "email",
	1: "webhook",
	2: "message",
}

var AutomationCredit_Type_value = map[string]int32{
	"email":   0,
	"webhook": 1,
	"message": 2,
}

func (x AutomationCredit_Type) String() string {
	return proto.EnumName(AutomationCredit_Type_name, int32(x))
}

func (AutomationCredit_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{14, 0}
}

type RawEventCreatedPayload struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Subs                 []string        `protobuf:"bytes,3,rep,name=subs,proto3" json:"subs,omitempty"`
	TargetTopic          string          `protobuf:"bytes,4,opt,name=target_topic,json=targetTopic,proto3" json:"target_topic,omitempty"`
	Payload              string          `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	TargetKey            string          `protobuf:"bytes,6,opt,name=target_key,json=targetKey,proto3" json:"target_key,omitempty"`
	Payloads             []string        `protobuf:"bytes,7,rep,name=payloads,proto3" json:"payloads,omitempty"`
	Topic                string          `protobuf:"bytes,9,opt,name=topic,proto3" json:"topic,omitempty"`
	RouterTopic          string          `protobuf:"bytes,10,opt,name=router_topic,json=routerTopic,proto3" json:"router_topic,omitempty"`
	Sub                  string          `protobuf:"bytes,11,opt,name=sub,proto3" json:"sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RawEventCreatedPayload) Reset()         { *m = RawEventCreatedPayload{} }
func (m *RawEventCreatedPayload) String() string { return proto.CompactTextString(m) }
func (*RawEventCreatedPayload) ProtoMessage()    {}
func (*RawEventCreatedPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{0}
}

func (m *RawEventCreatedPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawEventCreatedPayload.Unmarshal(m, b)
}
func (m *RawEventCreatedPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawEventCreatedPayload.Marshal(b, m, deterministic)
}
func (m *RawEventCreatedPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawEventCreatedPayload.Merge(m, src)
}
func (m *RawEventCreatedPayload) XXX_Size() int {
	return xxx_messageInfo_RawEventCreatedPayload.Size(m)
}
func (m *RawEventCreatedPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RawEventCreatedPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RawEventCreatedPayload proto.InternalMessageInfo

func (m *RawEventCreatedPayload) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *RawEventCreatedPayload) GetSubs() []string {
	if m != nil {
		return m.Subs
	}
	return nil
}

func (m *RawEventCreatedPayload) GetTargetTopic() string {
	if m != nil {
		return m.TargetTopic
	}
	return ""
}

func (m *RawEventCreatedPayload) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *RawEventCreatedPayload) GetTargetKey() string {
	if m != nil {
		return m.TargetKey
	}
	return ""
}

func (m *RawEventCreatedPayload) GetPayloads() []string {
	if m != nil {
		return m.Payloads
	}
	return nil
}

func (m *RawEventCreatedPayload) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *RawEventCreatedPayload) GetRouterTopic() string {
	if m != nil {
		return m.RouterTopic
	}
	return ""
}

func (m *RawEventCreatedPayload) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

type Events struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Events               []*Event        `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	Total                int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Anchor               string          `protobuf:"bytes,3,opt,name=anchor,proto3" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Events) Reset()         { *m = Events{} }
func (m *Events) String() string { return proto.CompactTextString(m) }
func (*Events) ProtoMessage()    {}
func (*Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{1}
}

func (m *Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Events.Unmarshal(m, b)
}
func (m *Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Events.Marshal(b, m, deterministic)
}
func (m *Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Events.Merge(m, src)
}
func (m *Events) XXX_Size() int {
	return xxx_messageInfo_Events.Size(m)
}
func (m *Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Events.DiscardUnknown(m)
}

var xxx_messageInfo_Events proto.InternalMessageInfo

func (m *Events) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Events) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Events) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Events) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

type By struct {
	Device               *common.Device `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Id                   string         `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	ClientId             string         `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Type                 string         `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	DisplayId            string         `protobuf:"bytes,7,opt,name=display_id,json=displayId,proto3" json:"display_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *By) Reset()         { *m = By{} }
func (m *By) String() string { return proto.CompactTextString(m) }
func (*By) ProtoMessage()    {}
func (*By) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{2}
}

func (m *By) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_By.Unmarshal(m, b)
}
func (m *By) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_By.Marshal(b, m, deterministic)
}
func (m *By) XXX_Merge(src proto.Message) {
	xxx_messageInfo_By.Merge(m, src)
}
func (m *By) XXX_Size() int {
	return xxx_messageInfo_By.Size(m)
}
func (m *By) XXX_DiscardUnknown() {
	xxx_messageInfo_By.DiscardUnknown(m)
}

var xxx_messageInfo_By proto.InternalMessageInfo

func (m *By) GetDevice() *common.Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *By) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *By) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *By) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *By) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

type Event struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Id                   string          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AccountId            string          `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Created              int64           `protobuf:"varint,8,opt,name=created,proto3" json:"created,omitempty"`
	Type                 string          `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Topics               []string        `protobuf:"bytes,11,rep,name=topics,proto3" json:"topics,omitempty"`
	By                   *By             `protobuf:"bytes,50,opt,name=by,proto3" json:"by,omitempty"`
	Data                 *Event_Data     `protobuf:"bytes,20,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{3}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Event) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *Event) GetBy() *By {
	if m != nil {
		return m.By
	}
	return nil
}

func (m *Event) GetData() *Event_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Event_Data struct {
	Account              *account.Account           `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Agent                *account.Agent             `protobuf:"bytes,2,opt,name=agent,proto3" json:"agent,omitempty"`
	Message              *conversation.Message      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Conversation         *conversation.Conversation `protobuf:"bytes,4,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Postback             *conversation.Postback     `protobuf:"bytes,5,opt,name=postback,proto3" json:"postback,omitempty"`
	Content              *content.Content           `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Topic                *user.Topic                `protobuf:"bytes,7,opt,name=topic,proto3" json:"topic,omitempty"`
	Presence             *user.Presence             `protobuf:"bytes,8,opt,name=presence,proto3" json:"presence,omitempty"`
	User                 *user.User                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	UnreadTopic          *user.UnreadTopic          `protobuf:"bytes,11,opt,name=unread_topic,json=unreadTopic,proto3" json:"unread_topic,omitempty"`
	MyUser               *user.MyUser               `protobuf:"bytes,12,opt,name=my_user,json=myUser,proto3" json:"my_user,omitempty"`
	Notification         *notibox.Notification      `protobuf:"bytes,14,opt,name=notification,proto3" json:"notification,omitempty"`
	AgentPerm            *account.AgentPerm         `protobuf:"bytes,16,opt,name=agent_perm,json=agentPerm,proto3" json:"agent_perm,omitempty"`
	GroupMember          *account.GroupMember       `protobuf:"bytes,17,opt,name=group_member,json=groupMember,proto3" json:"group_member,omitempty"`
	Group                *account.AgentGroup        `protobuf:"bytes,18,opt,name=group,proto3" json:"group,omitempty"`
	Limit                *payment.Limit             `protobuf:"bytes,19,opt,name=limit,proto3" json:"limit,omitempty"`
	UserAttribute        *user.AttributeData        `protobuf:"bytes,20,opt,name=user_attribute,json=userAttribute,proto3" json:"user_attribute,omitempty"`
	Alias                *user.Alias                `protobuf:"bytes,22,opt,name=alias,proto3" json:"alias,omitempty"`
	Note                 *user.Note                 `protobuf:"bytes,23,opt,name=note,proto3" json:"note,omitempty"`
	Ticket               *conversation.Ticket       `protobuf:"bytes,24,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Automation           *Automation                `protobuf:"bytes,25,opt,name=automation,proto3" json:"automation,omitempty"`
	Event                *Event                     `protobuf:"bytes,26,opt,name=event,proto3" json:"event,omitempty"`
	MessageSeen          *conversation.Seen         `protobuf:"bytes,27,opt,name=message_seen,json=messageSeen,proto3" json:"message_seen,omitempty"`
	MessageAck           *conversation.Ack          `protobuf:"bytes,28,opt,name=message_ack,json=messageAck,proto3" json:"message_ack,omitempty"`
	MessageReceived      *conversation.Received     `protobuf:"bytes,29,opt,name=message_received,json=messageReceived,proto3" json:"message_received,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Event_Data) Reset()         { *m = Event_Data{} }
func (m *Event_Data) String() string { return proto.CompactTextString(m) }
func (*Event_Data) ProtoMessage()    {}
func (*Event_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{3, 0}
}

func (m *Event_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event_Data.Unmarshal(m, b)
}
func (m *Event_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event_Data.Marshal(b, m, deterministic)
}
func (m *Event_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_Data.Merge(m, src)
}
func (m *Event_Data) XXX_Size() int {
	return xxx_messageInfo_Event_Data.Size(m)
}
func (m *Event_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Event_Data proto.InternalMessageInfo

func (m *Event_Data) GetAccount() *account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Event_Data) GetAgent() *account.Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Event_Data) GetMessage() *conversation.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event_Data) GetConversation() *conversation.Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Event_Data) GetPostback() *conversation.Postback {
	if m != nil {
		return m.Postback
	}
	return nil
}

func (m *Event_Data) GetContent() *content.Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Event_Data) GetTopic() *user.Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Event_Data) GetPresence() *user.Presence {
	if m != nil {
		return m.Presence
	}
	return nil
}

func (m *Event_Data) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Event_Data) GetUnreadTopic() *user.UnreadTopic {
	if m != nil {
		return m.UnreadTopic
	}
	return nil
}

func (m *Event_Data) GetMyUser() *user.MyUser {
	if m != nil {
		return m.MyUser
	}
	return nil
}

func (m *Event_Data) GetNotification() *notibox.Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *Event_Data) GetAgentPerm() *account.AgentPerm {
	if m != nil {
		return m.AgentPerm
	}
	return nil
}

func (m *Event_Data) GetGroupMember() *account.GroupMember {
	if m != nil {
		return m.GroupMember
	}
	return nil
}

func (m *Event_Data) GetGroup() *account.AgentGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Event_Data) GetLimit() *payment.Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Event_Data) GetUserAttribute() *user.AttributeData {
	if m != nil {
		return m.UserAttribute
	}
	return nil
}

func (m *Event_Data) GetAlias() *user.Alias {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Event_Data) GetNote() *user.Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *Event_Data) GetTicket() *conversation.Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *Event_Data) GetAutomation() *Automation {
	if m != nil {
		return m.Automation
	}
	return nil
}

func (m *Event_Data) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event_Data) GetMessageSeen() *conversation.Seen {
	if m != nil {
		return m.MessageSeen
	}
	return nil
}

func (m *Event_Data) GetMessageAck() *conversation.Ack {
	if m != nil {
		return m.MessageAck
	}
	return nil
}

func (m *Event_Data) GetMessageReceived() *conversation.Received {
	if m != nil {
		return m.MessageReceived
	}
	return nil
}

type Subscription struct {
	Ctx   *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Topic string          `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// optional SubscribeScope scope = 5;
	// optional string account_id = 6;
	SubId string `protobuf:"bytes,7,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	// optional SubscriberType subscriber_type = 8;
	// optional string subscriber_id = 9;
	TargetTopic          string   `protobuf:"bytes,10,opt,name=target_topic,json=targetTopic,proto3" json:"target_topic,omitempty"`
	TargetKey            string   `protobuf:"bytes,11,opt,name=target_key,json=targetKey,proto3" json:"target_key,omitempty"`
	Ttls                 int64    `protobuf:"varint,12,opt,name=ttls,proto3" json:"ttls,omitempty"`
	RouterTopic          string   `protobuf:"bytes,13,opt,name=router_topic,json=routerTopic,proto3" json:"router_topic,omitempty"`
	TargetPartition      int32    `protobuf:"varint,14,opt,name=target_partition,json=targetPartition,proto3" json:"target_partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{4}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Subscription) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Subscription) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

func (m *Subscription) GetTargetTopic() string {
	if m != nil {
		return m.TargetTopic
	}
	return ""
}

func (m *Subscription) GetTargetKey() string {
	if m != nil {
		return m.TargetKey
	}
	return ""
}

func (m *Subscription) GetTtls() int64 {
	if m != nil {
		return m.Ttls
	}
	return 0
}

func (m *Subscription) GetRouterTopic() string {
	if m != nil {
		return m.RouterTopic
	}
	return ""
}

func (m *Subscription) GetTargetPartition() int32 {
	if m != nil {
		return m.TargetPartition
	}
	return 0
}

type ListEventsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId               string          `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Query                string          `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Anchor               string          `protobuf:"bytes,5,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Limit                int32           `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Category             string          `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListEventsRequest) Reset()         { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()    {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{5}
}

func (m *ListEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventsRequest.Unmarshal(m, b)
}
func (m *ListEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventsRequest.Merge(m, src)
}
func (m *ListEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEventsRequest.Size(m)
}
func (m *ListEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventsRequest proto.InternalMessageInfo

func (m *ListEventsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListEventsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ListEventsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListEventsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListEventsRequest) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

func (m *ListEventsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListEventsRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type UserEvent struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId               string          `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Event                *Event          `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	User                 *user.User      `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserEvent) Reset()         { *m = UserEvent{} }
func (m *UserEvent) String() string { return proto.CompactTextString(m) }
func (*UserEvent) ProtoMessage()    {}
func (*UserEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{6}
}

func (m *UserEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent.Unmarshal(m, b)
}
func (m *UserEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent.Marshal(b, m, deterministic)
}
func (m *UserEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent.Merge(m, src)
}
func (m *UserEvent) XXX_Size() int {
	return xxx_messageInfo_UserEvent.Size(m)
}
func (m *UserEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent proto.InternalMessageInfo

func (m *UserEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UserEvent) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UserEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserEvent) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *UserEvent) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

type SubscriptionResponse struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Status               bool            `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubscriptionResponse) Reset()         { *m = SubscriptionResponse{} }
func (m *SubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResponse) ProtoMessage()    {}
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{7}
}

func (m *SubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResponse.Unmarshal(m, b)
}
func (m *SubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResponse.Merge(m, src)
}
func (m *SubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResponse.Size(m)
}
func (m *SubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResponse proto.InternalMessageInfo

func (m *SubscriptionResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubscriptionResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type AutomationEvent struct {
	Ctx        *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId  string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId     string          `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Automation *Automation     `protobuf:"bytes,5,opt,name=automation,proto3" json:"automation,omitempty"`
	// user.Session session = 6;
	User                 *user.User        `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Event                *Event            `protobuf:"bytes,9,opt,name=event,proto3" json:"event,omitempty"`
	Action               *AutomationAction `protobuf:"bytes,10,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AutomationEvent) Reset()         { *m = AutomationEvent{} }
func (m *AutomationEvent) String() string { return proto.CompactTextString(m) }
func (*AutomationEvent) ProtoMessage()    {}
func (*AutomationEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{8}
}

func (m *AutomationEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutomationEvent.Unmarshal(m, b)
}
func (m *AutomationEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutomationEvent.Marshal(b, m, deterministic)
}
func (m *AutomationEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutomationEvent.Merge(m, src)
}
func (m *AutomationEvent) XXX_Size() int {
	return xxx_messageInfo_AutomationEvent.Size(m)
}
func (m *AutomationEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AutomationEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AutomationEvent proto.InternalMessageInfo

func (m *AutomationEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AutomationEvent) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AutomationEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AutomationEvent) GetAutomation() *Automation {
	if m != nil {
		return m.Automation
	}
	return nil
}

func (m *AutomationEvent) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AutomationEvent) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *AutomationEvent) GetAction() *AutomationAction {
	if m != nil {
		return m.Action
	}
	return nil
}

type Automation struct {
	Ctx                  *common.Context     `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string              `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id                   string              `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Channel              string              `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Name                 string              `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description          string              `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Conditions           []*user.Condition   `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Condition            *user.SCondition    `protobuf:"bytes,8,opt,name=condition,proto3" json:"condition,omitempty"`
	Created              int64               `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	Modified             int64               `protobuf:"varint,10,opt,name=modified,proto3" json:"modified,omitempty"`
	State                string              `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
	ActionType           string              `protobuf:"bytes,13,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	ActionData           string              `protobuf:"bytes,14,opt,name=action_data,json=actionData,proto3" json:"action_data,omitempty"`
	Scope                string              `protobuf:"bytes,15,opt,name=scope,proto3" json:"scope,omitempty"`
	CrossChannel         bool                `protobuf:"varint,16,opt,name=cross_channel,json=crossChannel,proto3" json:"cross_channel,omitempty"`
	Metadata             string              `protobuf:"bytes,17,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Actions              []*AutomationAction `protobuf:"bytes,18,rep,name=actions,proto3" json:"actions,omitempty"`
	DelaySec             uint32              `protobuf:"varint,19,opt,name=delay_sec,json=delaySec,proto3" json:"delay_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Automation) Reset()         { *m = Automation{} }
func (m *Automation) String() string { return proto.CompactTextString(m) }
func (*Automation) ProtoMessage()    {}
func (*Automation) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{9}
}

func (m *Automation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Automation.Unmarshal(m, b)
}
func (m *Automation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Automation.Marshal(b, m, deterministic)
}
func (m *Automation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Automation.Merge(m, src)
}
func (m *Automation) XXX_Size() int {
	return xxx_messageInfo_Automation.Size(m)
}
func (m *Automation) XXX_DiscardUnknown() {
	xxx_messageInfo_Automation.DiscardUnknown(m)
}

var xxx_messageInfo_Automation proto.InternalMessageInfo

func (m *Automation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Automation) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Automation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Automation) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Automation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Automation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Automation) GetConditions() []*user.Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Automation) GetCondition() *user.SCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Automation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Automation) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *Automation) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Automation) GetActionType() string {
	if m != nil {
		return m.ActionType
	}
	return ""
}

func (m *Automation) GetActionData() string {
	if m != nil {
		return m.ActionData
	}
	return ""
}

func (m *Automation) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Automation) GetCrossChannel() bool {
	if m != nil {
		return m.CrossChannel
	}
	return false
}

func (m *Automation) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *Automation) GetActions() []*AutomationAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Automation) GetDelaySec() uint32 {
	if m != nil {
		return m.DelaySec
	}
	return 0
}

type AutomationAction struct {
	Type                 string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	User                 *user.User           `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Email                *email.Email         `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	UserNote             *user.Note           `protobuf:"bytes,6,opt,name=user_note,json=userNote,proto3" json:"user_note,omitempty"`
	Event                *Event               `protobuf:"bytes,7,opt,name=event,proto3" json:"event,omitempty"`
	AgentId              string               `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	TagId                string               `protobuf:"bytes,9,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Events               []*Event             `protobuf:"bytes,10,rep,name=events,proto3" json:"events,omitempty"`
	Ticket               *conversation.Ticket `protobuf:"bytes,11,opt,name=ticket,proto3" json:"ticket,omitempty"`
	IntegrationId        string               `protobuf:"bytes,12,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	SegmentationId       string               `protobuf:"bytes,13,opt,name=segmentation_id,json=segmentationId,proto3" json:"segmentation_id,omitempty"`
	AgentIds             []string             `protobuf:"bytes,14,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	TagIds               []string             `protobuf:"bytes,15,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	Scope                string               `protobuf:"bytes,16,opt,name=scope,proto3" json:"scope,omitempty"`
	ConversationState    string               `protobuf:"bytes,17,opt,name=conversation_state,json=conversationState,proto3" json:"conversation_state,omitempty"`
	Id                   string               `protobuf:"bytes,18,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AutomationAction) Reset()         { *m = AutomationAction{} }
func (m *AutomationAction) String() string { return proto.CompactTextString(m) }
func (*AutomationAction) ProtoMessage()    {}
func (*AutomationAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{10}
}

func (m *AutomationAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutomationAction.Unmarshal(m, b)
}
func (m *AutomationAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutomationAction.Marshal(b, m, deterministic)
}
func (m *AutomationAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutomationAction.Merge(m, src)
}
func (m *AutomationAction) XXX_Size() int {
	return xxx_messageInfo_AutomationAction.Size(m)
}
func (m *AutomationAction) XXX_DiscardUnknown() {
	xxx_messageInfo_AutomationAction.DiscardUnknown(m)
}

var xxx_messageInfo_AutomationAction proto.InternalMessageInfo

func (m *AutomationAction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AutomationAction) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AutomationAction) GetEmail() *email.Email {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *AutomationAction) GetUserNote() *user.Note {
	if m != nil {
		return m.UserNote
	}
	return nil
}

func (m *AutomationAction) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *AutomationAction) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *AutomationAction) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *AutomationAction) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *AutomationAction) GetTicket() *conversation.Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *AutomationAction) GetIntegrationId() string {
	if m != nil {
		return m.IntegrationId
	}
	return ""
}

func (m *AutomationAction) GetSegmentationId() string {
	if m != nil {
		return m.SegmentationId
	}
	return ""
}

func (m *AutomationAction) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *AutomationAction) GetTagIds() []string {
	if m != nil {
		return m.TagIds
	}
	return nil
}

func (m *AutomationAction) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *AutomationAction) GetConversationState() string {
	if m != nil {
		return m.ConversationState
	}
	return ""
}

func (m *AutomationAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Automations struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Automations          []*Automation   `protobuf:"bytes,2,rep,name=automations,proto3" json:"automations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Automations) Reset()         { *m = Automations{} }
func (m *Automations) String() string { return proto.CompactTextString(m) }
func (*Automations) ProtoMessage()    {}
func (*Automations) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{11}
}

func (m *Automations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Automations.Unmarshal(m, b)
}
func (m *Automations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Automations.Marshal(b, m, deterministic)
}
func (m *Automations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Automations.Merge(m, src)
}
func (m *Automations) XXX_Size() int {
	return xxx_messageInfo_Automations.Size(m)
}
func (m *Automations) XXX_DiscardUnknown() {
	xxx_messageInfo_Automations.DiscardUnknown(m)
}

var xxx_messageInfo_Automations proto.InternalMessageInfo

func (m *Automations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Automations) GetAutomations() []*Automation {
	if m != nil {
		return m.Automations
	}
	return nil
}

type AutomationCheck struct {
	AccountId            string   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AutomationId         string   `protobuf:"bytes,3,opt,name=automation_id,json=automationId,proto3" json:"automation_id,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              string   `protobuf:"bytes,5,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Scope                string   `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutomationCheck) Reset()         { *m = AutomationCheck{} }
func (m *AutomationCheck) String() string { return proto.CompactTextString(m) }
func (*AutomationCheck) ProtoMessage()    {}
func (*AutomationCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{12}
}

func (m *AutomationCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutomationCheck.Unmarshal(m, b)
}
func (m *AutomationCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutomationCheck.Marshal(b, m, deterministic)
}
func (m *AutomationCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutomationCheck.Merge(m, src)
}
func (m *AutomationCheck) XXX_Size() int {
	return xxx_messageInfo_AutomationCheck.Size(m)
}
func (m *AutomationCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_AutomationCheck.DiscardUnknown(m)
}

var xxx_messageInfo_AutomationCheck proto.InternalMessageInfo

func (m *AutomationCheck) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AutomationCheck) GetAutomationId() string {
	if m != nil {
		return m.AutomationId
	}
	return ""
}

func (m *AutomationCheck) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AutomationCheck) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *AutomationCheck) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type AutomationCreditsAggregate struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WebhookFired         int64           `protobuf:"varint,3,opt,name=webhook_fired,json=webhookFired,proto3" json:"webhook_fired,omitempty"`
	MessageFired         int64           `protobuf:"varint,4,opt,name=message_fired,json=messageFired,proto3" json:"message_fired,omitempty"`
	EmailFired           int64           `protobuf:"varint,5,opt,name=email_fired,json=emailFired,proto3" json:"email_fired,omitempty"`
	Min                  int64           `protobuf:"varint,6,opt,name=min,proto3" json:"min,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AutomationCreditsAggregate) Reset()         { *m = AutomationCreditsAggregate{} }
func (m *AutomationCreditsAggregate) String() string { return proto.CompactTextString(m) }
func (*AutomationCreditsAggregate) ProtoMessage()    {}
func (*AutomationCreditsAggregate) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{13}
}

func (m *AutomationCreditsAggregate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutomationCreditsAggregate.Unmarshal(m, b)
}
func (m *AutomationCreditsAggregate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutomationCreditsAggregate.Marshal(b, m, deterministic)
}
func (m *AutomationCreditsAggregate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutomationCreditsAggregate.Merge(m, src)
}
func (m *AutomationCreditsAggregate) XXX_Size() int {
	return xxx_messageInfo_AutomationCreditsAggregate.Size(m)
}
func (m *AutomationCreditsAggregate) XXX_DiscardUnknown() {
	xxx_messageInfo_AutomationCreditsAggregate.DiscardUnknown(m)
}

var xxx_messageInfo_AutomationCreditsAggregate proto.InternalMessageInfo

func (m *AutomationCreditsAggregate) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AutomationCreditsAggregate) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AutomationCreditsAggregate) GetWebhookFired() int64 {
	if m != nil {
		return m.WebhookFired
	}
	return 0
}

func (m *AutomationCreditsAggregate) GetMessageFired() int64 {
	if m != nil {
		return m.MessageFired
	}
	return 0
}

func (m *AutomationCreditsAggregate) GetEmailFired() int64 {
	if m != nil {
		return m.EmailFired
	}
	return 0
}

func (m *AutomationCreditsAggregate) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

type AutomationCredit struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	WebhookFired         int64           `protobuf:"varint,3,opt,name=webhook_fired,json=webhookFired,proto3" json:"webhook_fired,omitempty"`
	MessageFired         int64           `protobuf:"varint,4,opt,name=message_fired,json=messageFired,proto3" json:"message_fired,omitempty"`
	EmailFired           int64           `protobuf:"varint,5,opt,name=email_fired,json=emailFired,proto3" json:"email_fired,omitempty"`
	WebhookAddon         int64           `protobuf:"varint,8,opt,name=webhook_addon,json=webhookAddon,proto3" json:"webhook_addon,omitempty"`
	MessageAddon         int64           `protobuf:"varint,9,opt,name=message_addon,json=messageAddon,proto3" json:"message_addon,omitempty"`
	EmailAddon           int64           `protobuf:"varint,10,opt,name=email_addon,json=emailAddon,proto3" json:"email_addon,omitempty"`
	WebhookCredits       int64           `protobuf:"varint,14,opt,name=webhook_credits,json=webhookCredits,proto3" json:"webhook_credits,omitempty"`
	MessageCredits       int64           `protobuf:"varint,15,opt,name=message_credits,json=messageCredits,proto3" json:"message_credits,omitempty"`
	EmailCredits         int64           `protobuf:"varint,16,opt,name=email_credits,json=emailCredits,proto3" json:"email_credits,omitempty"`
	Month                int64           `protobuf:"varint,20,opt,name=month,proto3" json:"month,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AutomationCredit) Reset()         { *m = AutomationCredit{} }
func (m *AutomationCredit) String() string { return proto.CompactTextString(m) }
func (*AutomationCredit) ProtoMessage()    {}
func (*AutomationCredit) Descriptor() ([]byte, []int) {
	return fileDescriptor_510ac585eaa75cc0, []int{14}
}

func (m *AutomationCredit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutomationCredit.Unmarshal(m, b)
}
func (m *AutomationCredit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutomationCredit.Marshal(b, m, deterministic)
}
func (m *AutomationCredit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutomationCredit.Merge(m, src)
}
func (m *AutomationCredit) XXX_Size() int {
	return xxx_messageInfo_AutomationCredit.Size(m)
}
func (m *AutomationCredit) XXX_DiscardUnknown() {
	xxx_messageInfo_AutomationCredit.DiscardUnknown(m)
}

var xxx_messageInfo_AutomationCredit proto.InternalMessageInfo

func (m *AutomationCredit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AutomationCredit) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AutomationCredit) GetWebhookFired() int64 {
	if m != nil {
		return m.WebhookFired
	}
	return 0
}

func (m *AutomationCredit) GetMessageFired() int64 {
	if m != nil {
		return m.MessageFired
	}
	return 0
}

func (m *AutomationCredit) GetEmailFired() int64 {
	if m != nil {
		return m.EmailFired
	}
	return 0
}

func (m *AutomationCredit) GetWebhookAddon() int64 {
	if m != nil {
		return m.WebhookAddon
	}
	return 0
}

func (m *AutomationCredit) GetMessageAddon() int64 {
	if m != nil {
		return m.MessageAddon
	}
	return 0
}

func (m *AutomationCredit) GetEmailAddon() int64 {
	if m != nil {
		return m.EmailAddon
	}
	return 0
}

func (m *AutomationCredit) GetWebhookCredits() int64 {
	if m != nil {
		return m.WebhookCredits
	}
	return 0
}

func (m *AutomationCredit) GetMessageCredits() int64 {
	if m != nil {
		return m.MessageCredits
	}
	return 0
}

func (m *AutomationCredit) GetEmailCredits() int64 {
	if m != nil {
		return m.EmailCredits
	}
	return 0
}

func (m *AutomationCredit) GetMonth() int64 {
	if m != nil {
		return m.Month
	}
	return 0
}

func init() {
	proto.RegisterEnum("event.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("event.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("event.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("event.WidgetType", WidgetType_name, WidgetType_value)
	proto.RegisterEnum("event.ConvoType", ConvoType_name, ConvoType_value)
	proto.RegisterEnum("event.NotiboxType", NotiboxType_name, NotiboxType_value)
	proto.RegisterEnum("event.SubPrefix", SubPrefix_name, SubPrefix_value)
	proto.RegisterEnum("event.Automation_State", Automation_State_name, Automation_State_value)
	proto.RegisterEnum("event.Automation_ActionType", Automation_ActionType_name, Automation_ActionType_value)
	proto.RegisterEnum("event.Automation_AutomationScope", Automation_AutomationScope_name, Automation_AutomationScope_value)
	proto.RegisterEnum("event.AutomationAction_ActionType", AutomationAction_ActionType_name, AutomationAction_ActionType_value)
	proto.RegisterEnum("event.AutomationCredit_Type", AutomationCredit_Type_name, AutomationCredit_Type_value)
	proto.RegisterType((*RawEventCreatedPayload)(nil), "event.RawEventCreatedPayload")
	proto.RegisterType((*Events)(nil), "event.Events")
	proto.RegisterType((*By)(nil), "event.By")
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*Event_Data)(nil), "event.Event.Data")
	proto.RegisterType((*Subscription)(nil), "event.Subscription")
	proto.RegisterType((*ListEventsRequest)(nil), "event.ListEventsRequest")
	proto.RegisterType((*UserEvent)(nil), "event.UserEvent")
	proto.RegisterType((*SubscriptionResponse)(nil), "event.SubscriptionResponse")
	proto.RegisterType((*AutomationEvent)(nil), "event.AutomationEvent")
	proto.RegisterType((*Automation)(nil), "event.Automation")
	proto.RegisterType((*AutomationAction)(nil), "event.AutomationAction")
	proto.RegisterType((*Automations)(nil), "event.Automations")
	proto.RegisterType((*AutomationCheck)(nil), "event.AutomationCheck")
	proto.RegisterType((*AutomationCreditsAggregate)(nil), "event.AutomationCreditsAggregate")
	proto.RegisterType((*AutomationCredit)(nil), "event.AutomationCredit")
}

func init() { proto.RegisterFile("event/event.proto", fileDescriptor_510ac585eaa75cc0) }

var fileDescriptor_510ac585eaa75cc0 = []byte{
	// 2954 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4b, 0x6f, 0x1b, 0xc9,
	0xf1, 0x17, 0xc9, 0x21, 0x39, 0xac, 0xa1, 0xc4, 0x56, 0xeb, 0x35, 0xa2, 0x2d, 0x59, 0xa2, 0x1f,
	0x92, 0xe5, 0xb5, 0xf4, 0x5f, 0xd9, 0x8b, 0xc5, 0x3f, 0x48, 0x36, 0xd1, 0x6a, 0x1f, 0xd1, 0x64,
	0x77, 0xe1, 0x1d, 0x39, 0xd8, 0x23, 0x31, 0x9c, 0x69, 0x51, 0x13, 0x91, 0x33, 0xdc, 0x99, 0xa6,
	0x6c, 0xe6, 0x12, 0x20, 0xb7, 0x00, 0x39, 0x05, 0xb9, 0xef, 0x21, 0xb7, 0x00, 0x39, 0x24, 0x9f,
	0x22, 0x40, 0x80, 0x1c, 0x72, 0xcd, 0x35, 0xc7, 0x7c, 0x88, 0xa0, 0xab, 0xbb, 0xe7, 0x21, 0x59,
	0xb6, 0x0e, 0x9b, 0x43, 0x2e, 0xe2, 0x74, 0xd5, 0xaf, 0xbb, 0xab, 0xeb, 0xdd, 0x2d, 0x58, 0x64,
	0x97, 0x2c, 0xe2, 0x07, 0xf8, 0x77, 0x7f, 0x92, 0xc4, 0x3c, 0xa6, 0x75, 0x1c, 0x74, 0x9f, 0x0c,
	0x43, 0x7e, 0x3e, 0x1d, 0xec, 0xfb, 0xf1, 0xf8, 0x20, 0x9d, 0x0e, 0xc2, 0x5f, 0x1e, 0x9c, 0x33,
	0x2f, 0x60, 0xc9, 0x81, 0x1f, 0x8f, 0xc7, 0x71, 0xa4, 0x7e, 0xe4, 0x9c, 0xee, 0xd3, 0x9b, 0xc0,
	0x9e, 0xef, 0xc7, 0xd3, 0x88, 0xeb, 0x5f, 0x05, 0xff, 0xf0, 0xe6, 0xb5, 0xa3, 0x4b, 0x96, 0xa4,
	0x1e, 0x0f, 0x71, 0x87, 0x7c, 0xf0, 0xae, 0x7d, 0xfc, 0x38, 0xe2, 0xe2, 0x20, 0xea, 0x57, 0xc1,
	0x77, 0x6f, 0x82, 0x4f, 0x53, 0xf5, 0xe7, 0x99, 0x42, 0xee, 0xbc, 0x13, 0xf9, 0x2e, 0x09, 0xa2,
	0x98, 0x87, 0x83, 0xf8, 0xb5, 0xfe, 0x7d, 0x17, 0x7c, 0xe2, 0xcd, 0xc6, 0x42, 0x60, 0xf5, 0xab,
	0xe0, 0x8f, 0x6f, 0x82, 0xb3, 0xb1, 0x17, 0x8e, 0xe4, 0x5f, 0x09, 0xed, 0xfd, 0xae, 0x0a, 0xab,
	0xae, 0xf7, 0xea, 0x53, 0x61, 0xac, 0xe3, 0x84, 0x79, 0x9c, 0x05, 0x2f, 0xbc, 0xd9, 0x28, 0xf6,
	0x02, 0xba, 0x0d, 0x35, 0x9f, 0xbf, 0xb6, 0x2b, 0x5b, 0x95, 0x5d, 0xeb, 0xb0, 0xb3, 0xaf, 0x2c,
	0x75, 0x2c, 0x54, 0xf3, 0x9a, 0xbb, 0x82, 0x47, 0x29, 0x18, 0xe9, 0x74, 0x90, 0xda, 0xb5, 0xad,
	0xda, 0x6e, 0xcb, 0xc5, 0x6f, 0xba, 0x0d, 0x6d, 0xee, 0x25, 0x43, 0xc6, 0xfb, 0x3c, 0x9e, 0x84,
	0xbe, 0x6d, 0x6c, 0x55, 0x76, 0x5b, 0xae, 0x25, 0x69, 0x2f, 0x05, 0x89, 0xda, 0xd0, 0x9c, 0xc8,
	0x4d, 0xec, 0x3a, 0x72, 0xf5, 0x90, 0x6e, 0x00, 0xa8, 0xc9, 0x17, 0x6c, 0x66, 0x37, 0x90, 0xd9,
	0x92, 0x94, 0x9f, 0xb1, 0x19, 0xed, 0x82, 0xa9, 0x90, 0xa9, 0xdd, 0xc4, 0x3d, 0xb3, 0x31, 0x5d,
	0x86, 0xba, 0xdc, 0xb0, 0x85, 0xb3, 0xe4, 0x40, 0x48, 0x93, 0xc4, 0x53, 0xce, 0x12, 0x25, 0x0d,
	0x48, 0x69, 0x24, 0x4d, 0x4a, 0x43, 0xa0, 0x96, 0x4e, 0x07, 0xb6, 0x85, 0x1c, 0xf1, 0xd9, 0xfb,
	0x15, 0x34, 0x50, 0x21, 0xe9, 0x6d, 0x74, 0xf0, 0x00, 0x1a, 0xe8, 0xea, 0xa9, 0x6d, 0x6c, 0xd5,
	0x76, 0xad, 0xc3, 0xf6, 0xbe, 0x0c, 0x03, 0x5c, 0xc1, 0x55, 0x3c, 0x29, 0x1d, 0xf7, 0x46, 0x76,
	0x75, 0xab, 0xb2, 0x5b, 0x73, 0xe5, 0x80, 0xae, 0x42, 0xc3, 0x8b, 0xfc, 0xf3, 0x38, 0xb1, 0x6b,
	0xb8, 0xbb, 0x1a, 0xf5, 0x7e, 0x5b, 0x81, 0xea, 0xc7, 0x33, 0xfa, 0x08, 0x1a, 0x01, 0xbb, 0x0c,
	0x7d, 0x86, 0xb3, 0xac, 0xc3, 0x05, 0x2d, 0xc0, 0x27, 0x48, 0x75, 0x15, 0x97, 0x2e, 0x40, 0x35,
	0x0c, 0xd4, 0x12, 0xd5, 0x30, 0xa0, 0x77, 0xa0, 0xe5, 0x8f, 0x42, 0x16, 0xf1, 0x7e, 0x18, 0x28,
	0xfd, 0x9b, 0x92, 0x70, 0x12, 0x08, 0x9b, 0xf1, 0xd9, 0x84, 0x29, 0xe5, 0xe2, 0xb7, 0x50, 0x7b,
	0x10, 0xa6, 0x93, 0x91, 0x37, 0x13, 0x33, 0x9a, 0x52, 0xed, 0x8a, 0x72, 0x12, 0xf4, 0xfe, 0xdc,
	0x86, 0x3a, 0x1e, 0xe7, 0x36, 0xfa, 0xb8, 0x2a, 0xcc, 0x06, 0x80, 0x0a, 0xdb, 0x5c, 0x9a, 0x96,
	0xa2, 0x9c, 0x04, 0xc2, 0x17, 0x7c, 0xe9, 0x77, 0xb6, 0x89, 0xaa, 0xd1, 0xc3, 0x4c, 0xd0, 0x56,
	0x41, 0xd0, 0x55, 0x68, 0xa0, 0x1d, 0x53, 0xdb, 0x42, 0xf3, 0xab, 0x11, 0x5d, 0x87, 0xea, 0x60,
	0x66, 0x1f, 0xa2, 0x58, 0x2d, 0x65, 0x80, 0x8f, 0x67, 0x6e, 0x75, 0x30, 0xa3, 0x0f, 0xc1, 0x08,
	0x3c, 0xee, 0xd9, 0xcb, 0xc8, 0x5c, 0x2c, 0x5a, 0x67, 0xff, 0x13, 0x8f, 0x7b, 0x2e, 0xb2, 0xbb,
	0xdf, 0xb5, 0xc0, 0x10, 0x43, 0xba, 0x07, 0x4d, 0x25, 0x9d, 0x3a, 0x26, 0xd9, 0xd7, 0x69, 0xe7,
	0x48, 0xfe, 0xba, 0x1a, 0x40, 0x1f, 0x40, 0xdd, 0x1b, 0xb2, 0x88, 0x67, 0xf6, 0xc9, 0x90, 0x82,
	0xea, 0x4a, 0x26, 0x3d, 0x80, 0xe6, 0x98, 0xa5, 0xa9, 0x37, 0x64, 0xa8, 0x16, 0xeb, 0x70, 0x65,
	0xbf, 0x94, 0x94, 0xbe, 0x94, 0x4c, 0x57, 0xa3, 0xe8, 0x47, 0xd0, 0x2e, 0x02, 0x50, 0x69, 0xd6,
	0x61, 0xb7, 0x3c, 0xeb, 0xb8, 0x30, 0x70, 0x4b, 0x78, 0x7a, 0x08, 0xe6, 0x24, 0x4e, 0xf9, 0xc0,
	0xf3, 0x2f, 0x30, 0xc0, 0xac, 0xc3, 0xd5, 0xf2, 0xdc, 0x17, 0x8a, 0xeb, 0x66, 0x38, 0x71, 0x6c,
	0x95, 0xf5, 0xd0, 0x33, 0xc4, 0xb1, 0x75, 0x16, 0x3c, 0x96, 0xbf, 0xae, 0x06, 0xd0, 0x6d, 0x1d,
	0x6a, 0x4d, 0x44, 0x5a, 0xfb, 0x98, 0xd9, 0x30, 0x9a, 0x74, 0xdc, 0xed, 0x81, 0x39, 0x49, 0x58,
	0xca, 0x22, 0x9f, 0xa1, 0x5d, 0x85, 0x72, 0x10, 0xf5, 0x42, 0x51, 0xdd, 0x8c, 0x4f, 0x37, 0xc1,
	0x10, 0x2c, 0x8c, 0x4d, 0xeb, 0x10, 0x24, 0xee, 0xe7, 0x29, 0x4b, 0x5c, 0xa4, 0xd3, 0xe7, 0xd0,
	0x9e, 0x46, 0x09, 0xf3, 0x02, 0x15, 0xc3, 0x96, 0xb2, 0xa4, 0xc4, 0x21, 0x47, 0xee, 0x6d, 0x4d,
	0xf3, 0x01, 0x7d, 0x08, 0xcd, 0xf1, 0xac, 0x8f, 0x0b, 0xb7, 0x71, 0x42, 0x5b, 0x4e, 0xf8, 0x72,
	0x86, 0x4b, 0x37, 0xc6, 0xf8, 0x4b, 0xff, 0x1f, 0xda, 0x22, 0xd7, 0x9e, 0x85, 0xbe, 0xd4, 0xf5,
	0x82, 0xb2, 0x90, 0x4e, 0xc0, 0x5f, 0x15, 0x98, 0x6e, 0x09, 0x4a, 0xdf, 0x07, 0x40, 0x03, 0xf7,
	0x27, 0x2c, 0x19, 0xdb, 0x04, 0x27, 0xd2, 0xb2, 0x0b, 0xbc, 0x60, 0xc9, 0xd8, 0x6d, 0x79, 0xfa,
	0x93, 0x7e, 0x08, 0xed, 0x61, 0x12, 0x4f, 0x27, 0xfd, 0x31, 0x1b, 0x0f, 0x58, 0x62, 0x2f, 0xe2,
	0xa4, 0xe5, 0x6c, 0xd2, 0xe7, 0x82, 0xf9, 0x25, 0xf2, 0x5c, 0x6b, 0x98, 0x0f, 0xe8, 0x63, 0xa8,
	0xe3, 0xd0, 0xa6, 0x38, 0x63, 0xa9, 0xbc, 0x0d, 0x4e, 0x73, 0x25, 0x42, 0x38, 0xe5, 0x28, 0x1c,
	0x87, 0xdc, 0x5e, 0x52, 0x7a, 0xd7, 0xc5, 0xe1, 0x0b, 0x41, 0x75, 0x25, 0x93, 0xfe, 0x00, 0x16,
	0x84, 0x3a, 0xfa, 0x1e, 0xe7, 0x49, 0x38, 0x98, 0x72, 0xa6, 0x02, 0x64, 0x49, 0x6a, 0xe9, 0x48,
	0x93, 0x31, 0x44, 0xe6, 0x05, 0x2d, 0x23, 0x09, 0xfb, 0x7b, 0xa3, 0xd0, 0x4b, 0xed, 0xd5, 0xa2,
	0xfd, 0x8f, 0x04, 0xc9, 0x95, 0x1c, 0x61, 0xd3, 0x28, 0xe6, 0xcc, 0x5e, 0x2b, 0xda, 0xf4, 0xab,
	0x98, 0x33, 0x17, 0xe9, 0xf4, 0x3d, 0x68, 0xf0, 0xd0, 0xbf, 0x60, 0xdc, 0xb6, 0x95, 0x0a, 0x4a,
	0x0e, 0xfa, 0x12, 0x79, 0xae, 0xc2, 0xa0, 0xa6, 0xa7, 0x3c, 0x1e, 0x4b, 0x13, 0xad, 0x97, 0x22,
	0xf9, 0x28, 0x63, 0xb8, 0x05, 0x10, 0xed, 0x81, 0xec, 0x40, 0xec, 0xae, 0x32, 0x7e, 0x31, 0x2b,
	0x4b, 0x16, 0xfd, 0x00, 0xda, 0x2a, 0xe4, 0xfa, 0x29, 0x63, 0x91, 0x7d, 0x47, 0x99, 0xb0, 0x24,
	0xca, 0x29, 0x63, 0x91, 0x6b, 0x29, 0x9c, 0x18, 0xd0, 0x43, 0xd0, 0xc3, 0xbe, 0x88, 0xb0, 0xbb,
	0x4a, 0x9c, 0xd2, 0xac, 0x23, 0xff, 0xc2, 0x05, 0x85, 0x3a, 0xf2, 0x2f, 0xe8, 0x11, 0x10, 0x3d,
	0x27, 0x61, 0x3e, 0x0b, 0x2f, 0x59, 0x60, 0x6f, 0xbc, 0x29, 0x34, 0x5d, 0xc5, 0x75, 0x3b, 0x0a,
	0xaf, 0x09, 0x8e, 0x61, 0x02, 0xb1, 0x1c, 0xc3, 0x6c, 0x93, 0x79, 0xc7, 0x30, 0x09, 0x59, 0x74,
	0x0c, 0x73, 0x91, 0x50, 0xc7, 0x30, 0x29, 0x59, 0x72, 0x0c, 0x73, 0x89, 0x2c, 0x3b, 0x86, 0xb9,
	0x42, 0x56, 0x1d, 0xc3, 0x5c, 0x25, 0x6b, 0x8e, 0x61, 0xae, 0x11, 0xdb, 0x31, 0x4c, 0x9b, 0xac,
	0x3b, 0x86, 0xb9, 0x4e, 0xba, 0x8e, 0x61, 0x76, 0xc9, 0x1d, 0xc7, 0x30, 0xef, 0x90, 0xbb, 0x8e,
	0x61, 0xde, 0x25, 0x1b, 0x8e, 0x61, 0x6e, 0x90, 0x4d, 0xc7, 0x30, 0x37, 0xc9, 0x3d, 0xc7, 0x30,
	0xef, 0x91, 0x2d, 0xc7, 0x30, 0xb7, 0xc8, 0xb6, 0x63, 0x98, 0xdb, 0xa4, 0xe7, 0x18, 0xe6, 0x7d,
	0xf2, 0xc0, 0x31, 0xcc, 0x07, 0xe4, 0xa1, 0x63, 0x98, 0x0f, 0xc9, 0x23, 0xc7, 0x30, 0x1f, 0x91,
	0x1d, 0xc7, 0x30, 0x77, 0xc8, 0xae, 0x63, 0x98, 0xbb, 0xe4, 0xb1, 0x63, 0x98, 0x8f, 0xc9, 0x9e,
	0x63, 0x98, 0x7b, 0xe4, 0x89, 0x63, 0x98, 0xf3, 0x64, 0xc1, 0x31, 0xcc, 0x0e, 0x21, 0xbd, 0x5f,
	0x57, 0xa1, 0x7d, 0x3a, 0x1d, 0xa4, 0x7e, 0x12, 0x4e, 0xd0, 0x20, 0xb7, 0x28, 0x1d, 0x59, 0x09,
	0xaf, 0x15, 0x4b, 0xf8, 0x0a, 0x34, 0xd2, 0xe9, 0x20, 0x2f, 0x4c, 0xf5, 0x74, 0x3a, 0x38, 0x09,
	0xae, 0xf5, 0x19, 0x70, 0xbd, 0xcf, 0x28, 0x77, 0x13, 0xd6, 0xd5, 0x6e, 0x42, 0x14, 0x18, 0x3e,
	0x4a, 0x31, 0x3d, 0xd4, 0x5c, 0xfc, 0xbe, 0xd6, 0x2f, 0xcc, 0x5f, 0xef, 0x17, 0x1e, 0x03, 0x51,
	0xab, 0x4e, 0xbc, 0x84, 0x87, 0x59, 0xd6, 0xa8, 0xbb, 0x1d, 0x49, 0x7f, 0xa1, 0xc9, 0xbd, 0xbf,
	0x57, 0x60, 0xf1, 0x8b, 0x30, 0xe5, 0xb2, 0x9b, 0x70, 0xd9, 0xb7, 0x53, 0x96, 0xde, 0xaa, 0x88,
	0x96, 0x8b, 0x66, 0xf5, 0x6a, 0xd1, 0x5c, 0x83, 0x26, 0x06, 0x6f, 0x56, 0x68, 0x1b, 0x62, 0x78,
	0x12, 0x08, 0x0d, 0x7e, 0x3b, 0x65, 0xc9, 0x4c, 0xd5, 0x59, 0x39, 0x28, 0xb4, 0x19, 0xf5, 0x62,
	0x9b, 0x21, 0xd0, 0x32, 0x53, 0x34, 0x50, 0x7c, 0x95, 0x19, 0xba, 0x60, 0xfa, 0x1e, 0x67, 0xc3,
	0x38, 0x99, 0xa9, 0xda, 0x9b, 0x8d, 0x7b, 0x7f, 0xac, 0x40, 0x4b, 0xa4, 0xcd, 0x5b, 0x77, 0x03,
	0xe5, 0x83, 0xd4, 0xde, 0x72, 0x10, 0xa3, 0x74, 0x90, 0x2c, 0x7c, 0xeb, 0x37, 0x87, 0xaf, 0xae,
	0x1b, 0x8d, 0x37, 0xd7, 0x8d, 0xde, 0xd7, 0xb0, 0x5c, 0xf4, 0x40, 0x97, 0xa5, 0x93, 0x38, 0x4a,
	0xd9, 0x6d, 0xc4, 0x5e, 0x85, 0x46, 0xca, 0x3d, 0x3e, 0x4d, 0x51, 0xf7, 0xa6, 0xab, 0x46, 0xbd,
	0xdf, 0x57, 0xa1, 0x93, 0x27, 0x9c, 0xff, 0xba, 0x16, 0xca, 0x79, 0xaf, 0x7e, 0x9b, 0xbc, 0xa7,
	0x95, 0xd2, 0xbc, 0xa1, 0x98, 0x66, 0x8a, 0x6d, 0xdd, 0xac, 0xd8, 0x03, 0x68, 0x78, 0x3e, 0x6e,
	0x29, 0x4b, 0xf2, 0xda, 0xb5, 0x2d, 0x8f, 0x90, 0xed, 0x2a, 0x58, 0xef, 0x6f, 0x4d, 0x80, 0x9c,
	0xf9, 0x3d, 0x38, 0xf8, 0xd5, 0x26, 0x52, 0x74, 0x89, 0xe7, 0x5e, 0x14, 0xb1, 0x91, 0xd2, 0x90,
	0x1e, 0x8a, 0x20, 0x8e, 0xbc, 0x31, 0x53, 0x9e, 0x8d, 0xdf, 0x74, 0x0b, 0xac, 0x80, 0x65, 0x76,
	0x57, 0x9d, 0x6e, 0x91, 0x44, 0x0f, 0x00, 0xfc, 0x38, 0x0a, 0x30, 0x4a, 0xe5, 0x55, 0x42, 0x08,
	0x8a, 0xba, 0x3a, 0xd6, 0x74, 0xb7, 0x00, 0xa1, 0xfb, 0xd0, 0xca, 0x46, 0xaa, 0xa1, 0x21, 0x12,
	0x7f, 0x9a, 0x4f, 0xc8, 0x21, 0xc5, 0xb6, 0xb6, 0x55, 0x6e, 0x6b, 0xbb, 0x60, 0x8e, 0xe3, 0x20,
	0x3c, 0x0b, 0x59, 0x80, 0xea, 0xad, 0xb9, 0xd9, 0x58, 0x04, 0xa4, 0x70, 0x34, 0x86, 0x29, 0x49,
	0x64, 0x3a, 0x31, 0xa0, 0xf7, 0xc0, 0x92, 0x7a, 0xee, 0x63, 0x3f, 0x2c, 0x53, 0x12, 0x48, 0xd2,
	0x4b, 0xd1, 0x15, 0xe7, 0x00, 0xec, 0x74, 0x17, 0x8a, 0x00, 0xec, 0x69, 0xc5, 0xba, 0x7e, 0x3c,
	0x61, 0x76, 0x47, 0xad, 0x2b, 0x06, 0xf4, 0x3e, 0xcc, 0xfb, 0x49, 0x9c, 0xa6, 0x7d, 0xad, 0x5a,
	0x82, 0xbe, 0xde, 0x46, 0xe2, 0xb1, 0xd2, 0xaf, 0x10, 0x97, 0x71, 0x0f, 0x17, 0x5e, 0x94, 0xd9,
	0x40, 0x8f, 0xe9, 0xfb, 0xa2, 0x55, 0x96, 0x2a, 0xa4, 0xa8, 0xc2, 0x1b, 0x1d, 0x45, 0xe3, 0xc4,
	0xd5, 0x24, 0x60, 0xe2, 0x9e, 0x91, 0x32, 0x1f, 0x1b, 0x94, 0x79, 0xd7, 0x44, 0xc2, 0x29, 0xf3,
	0x7b, 0xdb, 0x50, 0x3f, 0xc5, 0x13, 0x83, 0x74, 0xc0, 0x4b, 0x46, 0xe6, 0x68, 0x1b, 0xcc, 0x30,
	0x52, 0xa3, 0x4a, 0xef, 0x2f, 0x55, 0x80, 0xa3, 0xfc, 0xe4, 0x36, 0x2c, 0x17, 0xab, 0x67, 0x5f,
	0xd5, 0x4c, 0x32, 0x47, 0x57, 0x81, 0xca, 0xe6, 0xac, 0xd8, 0xb2, 0x91, 0x0a, 0x5d, 0x00, 0x18,
	0x8c, 0x62, 0xff, 0x02, 0x3b, 0x43, 0x52, 0xa7, 0x1d, 0x51, 0xcc, 0x93, 0x21, 0xc3, 0x71, 0x4a,
	0x9a, 0x74, 0x05, 0x16, 0x31, 0x18, 0x4b, 0xf3, 0x4c, 0x4a, 0xa0, 0x8d, 0xe4, 0x57, 0x6c, 0x70,
	0x1e, 0xc7, 0x17, 0xa4, 0x45, 0xe7, 0xa1, 0xa5, 0x81, 0x8c, 0x00, 0x5d, 0x87, 0x95, 0x37, 0x89,
	0x72, 0x48, 0xda, 0xd7, 0xa4, 0xd4, 0x6b, 0xcc, 0xd3, 0x0d, 0x58, 0xf7, 0x82, 0xa0, 0x2f, 0x25,
	0xe5, 0x71, 0xbf, 0x08, 0x23, 0x0b, 0x74, 0x51, 0x58, 0x48, 0xb8, 0x4d, 0x5f, 0x36, 0x42, 0xa4,
	0x43, 0x97, 0x81, 0x94, 0xd6, 0xe2, 0xde, 0x90, 0x10, 0x7a, 0x17, 0x6c, 0xb1, 0x0e, 0xca, 0xc3,
	0xe3, 0x7e, 0xca, 0x86, 0xa2, 0xe3, 0x93, 0xcb, 0xd0, 0xde, 0xd3, 0x62, 0xd2, 0x3a, 0x45, 0xdb,
	0x93, 0xf2, 0x15, 0x83, 0xcc, 0x51, 0x53, 0x26, 0x0e, 0x52, 0xeb, 0xfd, 0xb5, 0x09, 0xe4, 0xaa,
	0x05, 0xb3, 0xdb, 0x58, 0xb5, 0x70, 0x1b, 0xd3, 0xb9, 0xc6, 0x78, 0x4b, 0xae, 0x19, 0x7b, 0xe1,
	0x28, 0x4f, 0xe2, 0xf8, 0xf2, 0xf0, 0xa9, 0xf8, 0xeb, 0x4a, 0x16, 0xdd, 0x29, 0x68, 0xb1, 0x9c,
	0xc9, 0xb1, 0x5b, 0x34, 0xc5, 0xa7, 0xf8, 0xca, 0x13, 0x57, 0xf3, 0xe6, 0xc4, 0xb5, 0x0e, 0xa6,
	0x54, 0x65, 0x28, 0x6f, 0x93, 0x2d, 0xb7, 0x89, 0xe3, 0x93, 0x40, 0x74, 0x11, 0xdc, 0x1b, 0x0a,
	0x86, 0x7e, 0x1f, 0xf0, 0x86, 0x27, 0x41, 0xe1, 0xf6, 0x0e, 0x6f, 0xb9, 0xbd, 0xe7, 0xdd, 0xaa,
	0x75, 0x8b, 0x6e, 0xf5, 0x21, 0x2c, 0x84, 0x11, 0x67, 0xc3, 0x44, 0x5a, 0x28, 0x0c, 0x54, 0x38,
	0xcf, 0x17, 0xa8, 0x27, 0x01, 0xdd, 0x81, 0x4e, 0xd1, 0x4e, 0x02, 0x27, 0x43, 0x7b, 0xa1, 0x48,
	0x3e, 0xc1, 0xeb, 0xbc, 0x3e, 0x55, 0x6a, 0x2f, 0xc8, 0x67, 0x0f, 0x75, 0xac, 0x54, 0xd4, 0x0e,
	0x79, 0xae, 0xd4, 0xee, 0xa8, 0x2b, 0xb1, 0x38, 0x58, 0x9a, 0xc7, 0x3c, 0x29, 0xc6, 0xfc, 0x53,
	0xa0, 0x25, 0xf7, 0x91, 0xe9, 0x46, 0x06, 0xf6, 0x62, 0x91, 0x23, 0x03, 0x51, 0xe6, 0x61, 0xaa,
	0xf3, 0x70, 0xef, 0x4f, 0xb5, 0x52, 0xf8, 0xad, 0xc3, 0xca, 0x74, 0x12, 0x08, 0xff, 0x2c, 0xdf,
	0x25, 0xc8, 0xdc, 0x95, 0x38, 0xab, 0x5c, 0x8d, 0xb3, 0x9a, 0x20, 0x60, 0x88, 0xc9, 0x3b, 0x1a,
	0x31, 0xc4, 0x8c, 0x94, 0x45, 0x41, 0x1f, 0xfd, 0x82, 0xd4, 0x85, 0xf3, 0x67, 0x3e, 0x8d, 0x31,
	0xd6, 0xa0, 0x6b, 0xb0, 0xa4, 0xe2, 0xa1, 0xe4, 0xbc, 0x4d, 0xe1, 0xce, 0x38, 0x57, 0xc7, 0xbf,
	0x49, 0xb7, 0xe0, 0xae, 0x97, 0xa6, 0xe1, 0x30, 0xba, 0x21, 0xb8, 0x5a, 0xb4, 0x07, 0x9b, 0x92,
	0xc2, 0xfb, 0xe5, 0x88, 0x8a, 0x75, 0xb4, 0x81, 0x88, 0x36, 0xa1, 0xdd, 0xd2, 0x4c, 0x2b, 0xdb,
	0x4d, 0xc7, 0x71, 0x5b, 0x64, 0x9b, 0x78, 0xc2, 0xa2, 0xfe, 0xab, 0x30, 0x10, 0x8d, 0x61, 0xea,
	0x27, 0x8c, 0x89, 0x00, 0x7e, 0x5b, 0x5c, 0x76, 0xe8, 0x36, 0x6c, 0x24, 0x6c, 0x1c, 0x5f, 0x2a,
	0xf5, 0x9d, 0x25, 0xf1, 0xb8, 0x0c, 0x21, 0x74, 0x13, 0xba, 0xb8, 0x95, 0x7f, 0xee, 0xf1, 0x3e,
	0x4f, 0xbc, 0x48, 0xd6, 0x30, 0xa5, 0xa4, 0x45, 0x91, 0x40, 0x94, 0x05, 0xae, 0x9b, 0x95, 0xd0,
	0x1e, 0x03, 0x2b, 0x8f, 0xe4, 0x5b, 0x3d, 0x67, 0x3d, 0x03, 0x2b, 0xef, 0x26, 0x44, 0xfb, 0x53,
	0x7b, 0x73, 0xcf, 0x51, 0x44, 0xf5, 0xbe, 0xab, 0x14, 0x33, 0xcc, 0xf1, 0x39, 0xf3, 0x2f, 0xde,
	0x55, 0xe1, 0xef, 0xc3, 0x7c, 0xbe, 0x42, 0xde, 0x15, 0xb5, 0x73, 0xe2, 0xdb, 0x1a, 0xa3, 0x75,
	0x30, 0x51, 0x22, 0xc1, 0x51, 0x4f, 0x88, 0x38, 0x96, 0x2d, 0xb0, 0xf4, 0xfb, 0x46, 0xc1, 0xef,
	0x7b, 0xff, 0xac, 0x40, 0xb7, 0x20, 0x61, 0xc2, 0x82, 0x90, 0xa7, 0x47, 0xc3, 0x61, 0xc2, 0x86,
	0x1e, 0x67, 0xdf, 0x43, 0xc7, 0x72, 0x1f, 0xe6, 0x95, 0x3b, 0xf4, 0xcf, 0xc2, 0x84, 0xc9, 0xf3,
	0xd4, 0xdc, 0xb6, 0x22, 0x7e, 0x26, 0x68, 0x02, 0xa4, 0x6f, 0x81, 0x12, 0x64, 0x48, 0x90, 0x22,
	0x4a, 0xd0, 0x3d, 0xb0, 0xd0, 0xba, 0x0a, 0x52, 0x47, 0x08, 0x20, 0x49, 0x02, 0x08, 0xd4, 0xc6,
	0xa1, 0x6c, 0x6b, 0x6a, 0xae, 0xf8, 0xec, 0xfd, 0xab, 0x56, 0xcc, 0xd8, 0xf2, 0x74, 0xff, 0x5b,
	0x67, 0x2a, 0x6c, 0xe5, 0x05, 0x81, 0xea, 0xb1, 0xf2, 0xad, 0x8e, 0x04, 0xad, 0xb8, 0x95, 0x04,
	0xb5, 0x4a, 0x5b, 0x49, 0x50, 0xb6, 0x95, 0x84, 0x40, 0x61, 0x2b, 0x09, 0xd8, 0x81, 0x8e, 0xde,
	0xca, 0x97, 0x7e, 0x80, 0x1d, 0x53, 0xcd, 0x5d, 0x50, 0x64, 0xe5, 0x1d, 0x02, 0xa8, 0xb7, 0xd3,
	0xc0, 0x8e, 0x04, 0x2a, 0xb2, 0x06, 0xde, 0x87, 0x79, 0xb9, 0xa5, 0x86, 0x11, 0x29, 0x17, 0x12,
	0x35, 0x68, 0x19, 0xea, 0xe3, 0x38, 0xe2, 0xe7, 0xf8, 0xce, 0x52, 0x73, 0xe5, 0xa0, 0xf7, 0x04,
	0x0c, 0xcc, 0xa4, 0x2d, 0x55, 0x2a, 0xc9, 0x1c, 0xb5, 0xa0, 0xa9, 0x13, 0x4b, 0x45, 0x0c, 0x74,
	0x4e, 0xab, 0xee, 0xfd, 0xa6, 0x0a, 0x96, 0x7a, 0x83, 0xc4, 0x49, 0x75, 0xa8, 0x78, 0x64, 0x8e,
	0x2e, 0x41, 0x47, 0x5b, 0x31, 0x60, 0x23, 0xc6, 0x59, 0x40, 0x7e, 0x58, 0x24, 0xca, 0x04, 0x11,
	0x90, 0x1f, 0x89, 0x94, 0x2a, 0x9f, 0x9f, 0x54, 0x33, 0x4a, 0x3e, 0xca, 0x49, 0x7a, 0xea, 0x8f,
	0x73, 0x92, 0x9e, 0xf8, 0x13, 0x91, 0xf1, 0x24, 0xe9, 0x17, 0x71, 0x18, 0xb1, 0x80, 0x1c, 0x89,
	0x6c, 0x2d, 0x29, 0x23, 0x76, 0xc6, 0xc9, 0xc7, 0x22, 0x35, 0x87, 0xd1, 0x65, 0xa8, 0x6a, 0x99,
	0xe7, 0xfb, 0x6c, 0x22, 0xa6, 0x7e, 0x82, 0x69, 0x1c, 0x33, 0xb0, 0xde, 0xe0, 0xd3, 0x9c, 0xa4,
	0x37, 0xf8, 0x0c, 0x13, 0x65, 0xf6, 0x96, 0x16, 0xa6, 0xa9, 0x58, 0x44, 0x73, 0x3f, 0x17, 0x13,
	0xf0, 0x6e, 0x9a, 0x91, 0x7e, 0xba, 0xf7, 0x87, 0x0a, 0x98, 0xa2, 0xd5, 0xd0, 0x8a, 0x98, 0x92,
	0x39, 0x91, 0xad, 0xd5, 0x93, 0x5f, 0x7f, 0x3a, 0x49, 0x59, 0x22, 0x90, 0xfb, 0x59, 0x43, 0x17,
	0x46, 0x67, 0x71, 0xb6, 0xc0, 0xff, 0xa1, 0x10, 0xa3, 0xd0, 0x4b, 0x33, 0x5d, 0xbc, 0x9f, 0x93,
	0xb4, 0xa8, 0x87, 0x58, 0xe1, 0xb0, 0xb4, 0x05, 0x01, 0x0b, 0x44, 0x0a, 0x1f, 0xcf, 0xfa, 0xa3,
	0x30, 0xe5, 0xe4, 0x59, 0xd6, 0x11, 0xea, 0xf9, 0xcf, 0x05, 0x45, 0x14, 0xaa, 0x8c, 0xf2, 0xc1,
	0xde, 0x3f, 0xaa, 0xd0, 0xc2, 0x56, 0x42, 0x8b, 0xc9, 0xa4, 0x98, 0xfa, 0xed, 0x33, 0x93, 0xe7,
	0x11, 0xa5, 0xb0, 0xa0, 0xde, 0x57, 0xfb, 0x97, 0x21, 0x7b, 0xc5, 0x02, 0xb2, 0xa3, 0x9a, 0x3d,
	0xa4, 0xa5, 0xcc, 0x4b, 0xfc, 0x73, 0x16, 0x90, 0x5d, 0xac, 0x82, 0x8a, 0x8a, 0x62, 0xf1, 0xd8,
	0xf7, 0x12, 0x4e, 0x1e, 0x8b, 0x2a, 0xa4, 0x19, 0xbe, 0xc8, 0xc1, 0x2c, 0x88, 0xa7, 0x9c, 0xec,
	0x09, 0x0d, 0x68, 0xfa, 0x64, 0x9a, 0xf8, 0xe7, 0x5e, 0xca, 0x02, 0xf2, 0x44, 0x98, 0x10, 0x1f,
	0x39, 0xfa, 0x09, 0xf3, 0x02, 0xf2, 0x9e, 0xb0, 0x41, 0x2a, 0xef, 0xcb, 0x03, 0xa6, 0xde, 0x5a,
	0x33, 0xf9, 0x9e, 0x8a, 0xc5, 0x55, 0x19, 0x2b, 0xd2, 0x0f, 0x69, 0x17, 0x56, 0xcb, 0xc5, 0x3f,
	0x3b, 0xfe, 0xb3, 0x37, 0xf0, 0xf4, 0xbc, 0xe7, 0x6f, 0xe0, 0x69, 0xad, 0x7f, 0x88, 0xde, 0x90,
	0x17, 0x87, 0x78, 0xca, 0xfb, 0xf1, 0x99, 0x0a, 0x2e, 0xf2, 0xd9, 0xde, 0x12, 0xc0, 0x37, 0x58,
	0x67, 0xb5, 0x52, 0x5f, 0x91, 0xb9, 0xbd, 0x7f, 0xd7, 0xa0, 0x75, 0x1c, 0x47, 0x97, 0xb1, 0x26,
	0xfa, 0x64, 0x4e, 0x18, 0x24, 0x7f, 0xe0, 0x8b, 0x44, 0x41, 0xdf, 0x84, 0xee, 0xf5, 0x42, 0x99,
	0x49, 0x65, 0x29, 0xdd, 0xe6, 0x7c, 0xe5, 0xef, 0x55, 0xa5, 0xc3, 0x9c, 0x81, 0x6e, 0x6f, 0x5c,
	0xc3, 0x73, 0x6f, 0x38, 0x64, 0x01, 0x69, 0x5c, 0xbb, 0x0e, 0x4c, 0x23, 0xc5, 0x6a, 0xe2, 0x75,
	0x40, 0xde, 0xae, 0xfa, 0x01, 0xd3, 0x3d, 0x21, 0x0b, 0xc8, 0x32, 0x1a, 0x50, 0x71, 0x0a, 0xf4,
	0x95, 0xf2, 0x39, 0x58, 0x44, 0x36, 0x65, 0x3b, 0x95, 0xbd, 0x41, 0x92, 0x7b, 0xe8, 0xfb, 0x57,
	0x1e, 0x18, 0xc9, 0xd6, 0x75, 0xf1, 0x66, 0x93, 0x30, 0x1a, 0x92, 0x6d, 0x7a, 0x07, 0xd6, 0x4a,
	0x0c, 0xfd, 0x7f, 0x00, 0x16, 0x90, 0xde, 0x35, 0xe6, 0x34, 0x92, 0xad, 0x14, 0x0b, 0xc8, 0xfd,
	0x6b, 0x07, 0xcb, 0x58, 0x0f, 0x44, 0xce, 0xd1, 0x32, 0xe4, 0x7e, 0x7d, 0xf5, 0xf2, 0x33, 0x61,
	0x51, 0x20, 0x64, 0xf8, 0x5a, 0x78, 0xbc, 0x6c, 0xb4, 0x32, 0x8f, 0x71, 0x0b, 0x34, 0xbd, 0xc2,
	0x69, 0x81, 0xa6, 0x3d, 0xe4, 0xe5, 0xde, 0x01, 0x58, 0x5f, 0xc9, 0x17, 0x7a, 0x6d, 0x6f, 0x71,
	0x87, 0x59, 0x87, 0x95, 0xe2, 0xb5, 0x2d, 0xcf, 0x02, 0xcf, 0xf7, 0x76, 0xa0, 0x75, 0x3a, 0x1d,
	0xbc, 0x48, 0xd8, 0x59, 0xf8, 0x5a, 0x64, 0xd5, 0x6f, 0x54, 0x8a, 0x9d, 0x13, 0xf7, 0xb8, 0x6f,
	0xd8, 0x20, 0x8d, 0xb1, 0xe5, 0xab, 0x0c, 0x1a, 0xf8, 0x8f, 0xd1, 0x67, 0xff, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x5a, 0xb4, 0x1f, 0x8b, 0xd4, 0x1e, 0x00, 0x00,
}
