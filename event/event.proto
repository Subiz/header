syntax = "proto2";

package event;

import "bitbucket.org/subiz/header/common/common.proto";
import "bitbucket.org/subiz/header/account/account.proto";
import "bitbucket.org/subiz/header/client/client.proto";
import "bitbucket.org/subiz/header/lang/lang.proto";

message User {
	optional string id = 1;
	optional UserType type  = 2;
}

enum UserType {
	NONE = 0;
  USER= 1;
	AGENT = 2;
	SYSTEM = 3;
}

message RawEventCreatedPayload {
	optional common.Context ctx = 1;
	optional string sub_id = 3;
	optional string topic = 4;
	optional string payload = 5; //json format
}

message UnsubscribeMessage {
	optional string topic = 3;
	optional string sub_id = 4;
}

enum EVENT {
	//Out_EventCreated = 0;
	Send_ = 1;
	ApiReply = 2;
	RawEventCreated = 3;  //
	Subscribe = 4; // subscription
	SubscribeReply = 6;
	Unsubscribe = 5; // subscription
	UnsubscribeReply = 7;
}

message RawEvents {
	repeated RawEvent events = 4;
}

message RawEvent {
	optional common.Context ctx = 1;
	optional string id = 3;
	optional string account_id = 4;
	optional string app_id = 5;
	optional string sender_id = 6;
	optional string sender_type = 7;

	optional int64 timestamp = 8;
	optional string type = 9;
	optional string channel_id = 10;
	repeated string topics = 11;
	//---


	optional string conversation_id = 15;

	// request
	optional int32 state = 16;
	optional string message_to = 17;
	optional string page_url = 18;
	optional string page_title = 19;
	optional string message = 20;
	optional string browser_language = 21;
	optional string language = 22;
	optional string device_type = 23;
	optional string user_id = 24;
	//optional string conversation_id = 25;

	// joined event
	//optional string conversation_id = 26;
	optional string joiner_id = 27;
	optional string joiner_type = 28;

	// left event
	optional string leaver_id = 29;
	//optional string conversation_id = 25;

	// message event
	//optional string conversation_id = 19;
	repeated Attachment attachments = 30;
	optional string text = 31;
	optional string format = 32;

	repeated string deliverieds = 33;
}



message Event {
	optional common.Context ctx = 1;
	optional string id = 2;
	optional account.Account account = 3;
	optional client.Client app = 4;
	//optional string access_token = 6;
	optional Sender sender = 8;
	optional int64 timestamp = 12; // responly
	optional string type = 13;
	optional Channel channel = 15;
	//optional string channel_id = 17;
	repeated Topic topics = 19;
	//===========================
	//extensions 20 to max;
	//repeated Attachment attachments = 20;
	//optional Message message = 21;
}


message Channel {
	optional string id = 1;
	optional string name = 2;
}

message Topic {
	optional string id = 1;
	optional string name = 2;
}

message Message {
	optional string value = 1;
	optional string format = 2;
}

message Action {
	optional string type = 2;

	// post back
	optional string title = 3;
	optional string payload = 4;
	optional string image_url = 5;

	// event button

  // url button
}

message GenericElementTemplate {
	optional string title = 2;
	optional string image_url = 3;
	optional string subtitle = 4;
	optional Action default_action = 5;
	repeated Action actions = 6;
}

message Attachment {
	optional string type = 12;
	// file
	optional string mimetype = 2;
	optional string link = 3;
	optional string preview = 4;
	optional string name = 5;
	optional string descrition = 6;
	optional string data = 7; // for custom data
	optional int32 size = 13; // byte

	// generic
	repeated GenericElementTemplate elements = 8;

	// preview
	optional string title = 9;
	optional string color = 10;
	optional string pretext = 11;

}

message Sender {
	optional common.Context ctx = 5;
	optional string id = 1;
	optional string type = 2;
	optional string name = 3;
	repeated string emails = 4;
	optional string phones = 6;
	optional string avatar_url = 7;
}

message Reply {
	optional common.Context ctx = 3;
	optional string event_id = 1;
	optional bytes state = 2;

	optional bool err = 10;
	optional string err_description = 12;
	optional lang.T err_code = 13;
	optional int32 err_class = 15;

	optional bytes payload = 7;
}

enum ActionType {
	url_button = 2;
	postback_button = 3;
	event_button = 4;
}

enum AttachmentType {
	file = 2;
	generic = 3;
	preview = 4;
}

enum EventType {
  conversation_started = 1;
	conversation_joined = 2;

	conversation_message = 3;
	conversation_left = 4;
	conversation_closed = 5;
	conversation_tagged = 6;
	conversation_untagged = 7;

	conversation_waiting = 8;
}

message Error {
	optional string error = 2;
	optional string request_id = 3;
	optional string description = 4;
}

enum SubscriberType {
	user = 0;
	channel = 1;
}

message Subscription { // raweventcreatedpayload
	reserved "target_partition";
	reserved 13;

	optional common.Context ctx = 1;
	optional string topic = 3;
	//optional string user_id = 4; // connectorid or userid

	//optional SubscribeScope scope = 5;
	//optional string account_id = 6;
	optional string sub_id = 7;

	//optional SubscriberType subscriber_type = 8;
	//optional string subscriber_id = 9;
	optional string target_topic = 10;
	optional string target_key = 11;
	//optional string target_partition = 13;
	// time to life in seconds
	optional int64 ttls = 12;

}

enum SubPrefix {
	Webhook = 0;
	Websocket = 1;
}