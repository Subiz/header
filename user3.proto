syntax = "proto3";

package user;

option go_package = "github.com/subiz/header/user";

import "common.proto";

message TotalConvoUpdateRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string user_id = 3;
	int32 total = 4;
}

message TotalOpenTicket {
	common.Context ctx = 1;
	string account_id = 2;
	string user_id = 3;
	int32 total = 4;
}

message AttributeData {
	string account_id = 2;
	string user_id = 3;
	string key = 4;

	// int64 created = 7;
	// int64 modified = 8;

	string text = 10;
	double number = 11;
	bool boolean = 12;
	string datetime = 13;
	repeated string list = 14;

	//string setter = 16;
	//string setter_type = 17;

	// to update
	enum Ops {
		upsert = 0; // override
		insert = 1; // only write if not existed
		update = 4; // only write if existed
		append = 6; // append to bottom
		remove = 7; // not used yet
		delete = 8; // not used yet
	}
	string action = 18;
}

message User {
	common.Context ctx = 1;
	string id = 3;
	string account_id = 4;
	repeated Trace traces = 11; // TODO: remove

	bool is_ban = 14;

	repeated AttributeData attributes = 18;

	repeated string segments = 19;
	string subiz_id = 25;

	repeated string aliases = 30;

	int32 par = 34;
	//  int32 modified_hour = 35;
	int64 modified = 36;
	int32 modified_week = 37;

	repeated Identification identifications = 39;
}

message Users {
	repeated User users = 1;
	repeated common.Error errors = 2;
}

message Campaign {
	string name = 2;
	string source = 3;
	string medium = 4;
	string term = 5;
	string content = 6;
}

message CountTotalRequest {
	common.Context ctx = 1;
	string account_id = 2;
}

message CountTotalResponse {
	double total_user = 2;
}

message CountResponse {
	repeated int32 data = 3;
}

message MergeRequest {
	common.Context ctx = 1;
	string account_id = 3;
	string destination_user_id = 5;
	string source_user_id = 4;
}

message CreateRequest {
	string challenge_id = 3;
	string answer = 4;
}

// TODO: remove
message Traces {
	repeated Trace traces = 3;
}

// TODO: replace this with user session
message Trace {
	string event_id = 3;
	string ip = 4;
	int32 location_id = 5; // remove

	string city_name = 8;            // filled
	string country_name = 9;         // filled
	string continent_code = 10;      // filled
	float latitude = 12;             // filled
	float longitude = 13;            // filled
	string postal_code = 14;         // filled

	string timezone = 16;

	string isp = 17;                 // filled
	string continent_name = 18;      // filled
	string country_code = 19;        // filled

	string platform = 20;

	string device_type = 21;         // filled
	enum DeviceType {
		unknown = 0;
		mobile = 1;
		tablet = 2;
		desktop = 3;
	}

	string browser_name = 22;        // filled
	string language = 23;
	string user_agent = 24;
	string screen_resolution = 25;

	string ga_client_id = 26;
	repeated string ga_tracking_ids = 27;
	enum AdsNetwork {
		google_adwords = 0;
	}
	string ads_network = 28;

	repeated Campaign campaigns = 29;
	int64 created = 30;
	int64 tracked = 31;

	string referrer = 32;
	enum Source {
		direct = 0;
		referring = 1;
		organic = 2;
		social = 3;
		advertising = 4;
	}
	string source = 33;
}

message UserSearchResult {
	common.Context ctx = 1;
	string account_id = 2;
	int64 total = 3;
	repeated User users = 4;
	string anchor = 5;
	repeated int32 unreads = 6; // only used when search my users
	map<string, int32> unread_counts = 7;
}

message UnpickRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string user_id = 3;
	string segmentation_id = 5;
}

message PickRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string user_id = 3;
	string agent_id = 4;
	string segmentation_id = 5;
	int64 added = 7;
	int64 updated = 8;
}

message CountSegmentationUserByAttributeRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string attribute_key = 3;
	string segmentation_id = 4;
	int32 from = 5; // deprecated
	int32 to = 6; // deprecated
	string range = 8;
	enum Range {
		hour = 0;
		day = 1;
	}
	int32 from_hour = 9;
	int32 to_hour = 10;
}

message Visitor {
	common.Context ctx = 1;
	string account_id = 3;
	User user = 4;
	int64 pinged = 5;
	string page_url = 6;
	int64 page_viewed = 7;
	string page_title = 8;
}

message Visitors {
	common.Context ctx = 1;
	repeated Visitor visitors = 2;
}

message LastView {
	string account_id = 3;
	string user_id = 4;
	string url = 5;
	string ua = 6;
	string ip = 7;
	int64 created = 8;
	string event_id = 9;
	string title = 10;
}

message SubscribeTopic {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string topics = 4;
}

message MuteRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string user_id = 4;
	string topic = 5;
	bool mute = 6; // true, false
}

message SubscribeUser {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string user_ids = 4;
}

message ReadTopicRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string topic = 3;
	string user_id = 4;
	string agent_id = 5;
	int64 read = 6; // read time in milisecond
}

message SubscribeRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	repeated string topics = 4;
}

message AddToMyRequest {
	common.Context ctx = 1;
	string user_id = 3;
	repeated string agent_ids = 5;
	string account_id = 2; // used within user service only
}

message DeleteAttrRequest {
	common.Context ctx = 1;
	string key = 2;
}

enum AttributeType {
	text = 0;
	number = 1;
	boolean = 2;
	datetime = 3;
	list = 4;
}

enum AttributeKind {
	system = 0;
	default = 1;
	custom = 2;
}

message AttributeDefinition {
	common.Context ctx = 1;
	string account_id = 2;
	string name = 3;
	string description = 4;
	string type = 5;
	repeated string list_items = 6;
	string key = 7;
	string kind = 8;
	int64 updated = 9;
}

message AttributeDefinitions {
	common.Context ctx = 1;
	repeated AttributeDefinition attributes = 2;
}

message AddToMyList {
	common.Context ctx = 1;
	string agent_id = 2;
	string user_id = 3;
	string account_id = 5;
}

message UserCreateResult {
	string id = 3;
	string mask = 5;
}

message Identification {
	common.Context ctx = 1;
	string user_id = 3;
	string account_id = 4;
	string alias = 5;
	string value = 6;

	string channel = 9;
	string integration_id = 10;
	string source = 11;

	bool trusted = 12;
	int64 created = 13;

	repeated string user_ids = 14;
}

message Note {
	common.Context ctx = 1;
	string account_id = 2;
	string id = 3;

	string creator_id = 5;
	string text = 6;
	int64 created = 7;
	int64 updated = 8;

	string target_id = 9; // deprecated
	string target_type = 10; // deprecated

	repeated NoteLink links = 14; // generated by our service
}

message NoteLink {
	string id = 1;
	enum Type {
		conversation = 0; // link
		ticket = 1;
		deal = 2;
		user = 3; // target
	}
	string type = 2;
}

message Notes {
	common.Context ctx = 1;
	repeated Note notes = 3;
	string anchor = 4;
}

message ListNotesRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string user_id = 3;
	string target_id = 4;
	int32 limit = 5;
	string anchor = 6;
	string keyword = 7;

	repeated NoteLink links = 8;
}

message DeleteNoteRequest {
	string account_id = 2;
	string target_id = 3;
	string id = 4;
}

message GetNoteRequest {
	string account_id = 2;
	string target_id = 3;
	string id = 4;
}

// TODO move params to common
message IntParams {
	int64 eq = 2;
	int64 neq = 3;
	int64 gt = 4;
	int64 gte = 5;
	int64 lt = 6;
	int64 lte = 7;
}

message IdParams {
	string id = 2;
	repeated string ids = 3;
}

message Params {
	repeated string args = 2;
}

message Location {
	string isp = 3;                 // filled
	string continent_name = 4;      // filled
	string country_code = 5;        // filled

	string city_name = 6;            // filled
	string country_name = 7;         // filled
	string continent_code = 8;      // filled
	float latitude = 9;             // filled
	float longitude = 10;            // filled
	string postal_code = 11;         // filled
}

message Page {
	string id = 2;
	string name = 3;
	string url = 4;
}

message UserAction {
	string id = 2;
	string user_id = 3;
	int64 created = 4;
	string type = 5;
	string source = 6; // from user session
	Location location = 7; // from user session
	Page page = 8; // from event
	string content = 9;
}

message UserInfo {
	string id = 2;
	int64 updated = 3;
	User user = 4;
	Page viewing = 5;
	string source = 6;
	Location location = 7;
	int64 view_count = 8;
	int64 duration = 9;
	int64 latest_event_created = 10;
}

message UserInfoParams {
	string signature = 2;

	int32 limit = 3;
	int32 offset = 4;
	string order_by = 5;

	IdParams source = 6;

	IdParams page_url = 8;
	IntParams view_count = 9;
	IntParams duration = 10;

	IdParams city_name = 11;
	IdParams country_code = 12;
}

message UserInfoData {
	repeated UserInfo data = 2;
}

message UserMetric {
	string account_id = 2;
	int64 active_user_num = 3;
}

message SourceMetric {
	string account_id = 2;
	string source = 3; // direct, referring, organic,social, advertising
	int64 active_user_num = 4;
}

message LocationMetric {
	string account_id = 2;
	Location location = 3;
	int64 active_user_num = 4;
}

message PageMetric {
	string account_id = 2;
	Page page = 3;
	int64 active_user_num = 4;
}

message UserReport {
	string account_id = 2;
	UserMetric total_user = 3;
	repeated SourceMetric top_source = 4;
	repeated LocationMetric top_location = 5;
	repeated PageMetric top_page = 6;
}
