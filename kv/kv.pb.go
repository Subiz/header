// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kv/kv.proto

package kv

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Key struct {
	Partition            string   `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_5993384bbd56d931, []int{0}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Key) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Value struct {
	Partition            string   `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Bytes                []byte   `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Ttl                  int64    `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_5993384bbd56d931, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Value) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Value) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *Value) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Value) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type Bool struct {
	Value                bool     `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bool) Reset()         { *m = Bool{} }
func (m *Bool) String() string { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()    {}
func (*Bool) Descriptor() ([]byte, []int) {
	return fileDescriptor_5993384bbd56d931, []int{2}
}

func (m *Bool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bool.Unmarshal(m, b)
}
func (m *Bool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bool.Marshal(b, m, deterministic)
}
func (m *Bool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bool.Merge(m, src)
}
func (m *Bool) XXX_Size() int {
	return xxx_messageInfo_Bool.Size(m)
}
func (m *Bool) XXX_DiscardUnknown() {
	xxx_messageInfo_Bool.DiscardUnknown(m)
}

var xxx_messageInfo_Bool proto.InternalMessageInfo

func (m *Bool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func init() {
	proto.RegisterType((*Key)(nil), "kv.Key")
	proto.RegisterType((*Value)(nil), "kv.Value")
	proto.RegisterType((*Bool)(nil), "kv.Bool")
}

func init() { proto.RegisterFile("kv/kv.proto", fileDescriptor_5993384bbd56d931) }

var fileDescriptor_5993384bbd56d931 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xbf, 0x4f, 0xbc, 0x40,
	0x10, 0xc5, 0x03, 0x0b, 0xf7, 0x3d, 0xe6, 0x7b, 0x85, 0x59, 0x2d, 0x56, 0xbc, 0x82, 0x50, 0x61,
	0x4c, 0x20, 0xd1, 0xf8, 0x0f, 0xd8, 0x68, 0x42, 0x63, 0x30, 0xb9, 0x1e, 0xce, 0x09, 0x47, 0xf8,
	0xb1, 0x27, 0x0c, 0x9b, 0x60, 0xe7, 0x7f, 0x6e, 0x76, 0x21, 0x62, 0x6b, 0xc5, 0x7b, 0x9f, 0x79,
	0x8f, 0xd9, 0x0c, 0xfc, 0xaf, 0x55, 0x52, 0xab, 0xf8, 0xdc, 0x4b, 0x92, 0xdc, 0xae, 0x95, 0x7f,
	0x57, 0x56, 0x74, 0x1a, 0x8b, 0xf8, 0x28, 0xdb, 0x64, 0x18, 0x8b, 0xea, 0x33, 0x39, 0x61, 0xfe,
	0x8e, 0x7d, 0x72, 0x94, 0x6d, 0x2b, 0xbb, 0xe5, 0x33, 0x17, 0xc2, 0x47, 0x60, 0x29, 0x4e, 0x7c,
	0x0f, 0xde, 0x39, 0xef, 0xa9, 0xa2, 0x4a, 0x76, 0xc2, 0x0e, 0xac, 0xc8, 0xcb, 0x56, 0xc0, 0x2f,
	0x80, 0xd5, 0x38, 0x09, 0x66, 0xb8, 0x96, 0xe1, 0x08, 0xee, 0x21, 0x6f, 0x46, 0xfc, 0x6b, 0x91,
	0x5f, 0x81, 0x5b, 0x4c, 0x84, 0x83, 0x70, 0x02, 0x2b, 0xda, 0x65, 0xb3, 0xd1, 0x54, 0xe9, 0xdf,
	0x09, 0xd7, 0x24, 0x67, 0xa3, 0xdb, 0x44, 0x8d, 0xd8, 0x04, 0x56, 0xc4, 0x32, 0x2d, 0xc3, 0x3d,
	0x38, 0x4f, 0x52, 0x36, 0x6b, 0x5e, 0x6f, 0xdc, 0x2e, 0xf9, 0xfb, 0x2f, 0x0b, 0xec, 0xf4, 0xc0,
	0x6f, 0x80, 0xbd, 0x21, 0x71, 0x2f, 0xae, 0x55, 0x6c, 0x1e, 0xe9, 0xaf, 0x92, 0x5f, 0x03, 0x7b,
	0x46, 0xe2, 0xff, 0x34, 0x49, 0x71, 0xfa, 0x3d, 0x12, 0xc0, 0x5e, 0xf2, 0x61, 0x1d, 0x6d, 0xb5,
	0x30, 0xeb, 0x6e, 0xc1, 0x79, 0xad, 0xba, 0x92, 0x5f, 0xc6, 0xcb, 0xed, 0xb4, 0xcb, 0xf0, 0x63,
	0xc4, 0x81, 0xfc, 0xdd, 0x0f, 0x94, 0x5d, 0x59, 0x6c, 0xcc, 0x59, 0x1f, 0xbe, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x8f, 0x05, 0xc4, 0xa7, 0x96, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	Set(ctx context.Context, in *Value, opts ...grpc.CallOption) (*Value, error)
	Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Value, error)
	Has(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Bool, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type kVClient struct {
	cc *grpc.ClientConn
}

func NewKVClient(cc *grpc.ClientConn) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) Set(ctx context.Context, in *Value, opts ...grpc.CallOption) (*Value, error) {
	out := new(Value)
	err := c.cc.Invoke(ctx, "/kv.KV/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Value, error) {
	out := new(Value)
	err := c.cc.Invoke(ctx, "/kv.KV/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Has(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/kv.KV/Has", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/kv.KV/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
type KVServer interface {
	Set(context.Context, *Value) (*Value, error)
	Get(context.Context, *Key) (*Value, error)
	Has(context.Context, *Key) (*Bool, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	s.RegisterService(&_KV_serviceDesc, srv)
}

func _KV_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Set(ctx, req.(*Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Get(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Has_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Has(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/Has",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Has(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kv.KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _KV_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _KV_Get_Handler,
		},
		{
			MethodName: "Has",
			Handler:    _KV_Has_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _KV_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv/kv.proto",
}
