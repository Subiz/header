// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dashboard/dashboard.proto

/*
Package dashboard is a generated protocol buffer package.

It is generated from these files:
	dashboard/dashboard.proto

It has these top-level messages:
	DashboardAgent
	DashboardAccount
	AccessLog
	SessionCookie
	Global
*/
package dashboard

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "git.subiz.net/header/common"
import account "git.subiz.net/header/account"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_DashboardVersionUpdated          Event = 0
	Event_DashboardLanguageUpdated         Event = 5
	Event_DashboardLanguageUpdateRequested Event = 7
)

var Event_name = map[int32]string{
	0: "DashboardVersionUpdated",
	5: "DashboardLanguageUpdated",
	7: "DashboardLanguageUpdateRequested",
}
var Event_value = map[string]int32{
	"DashboardVersionUpdated":          0,
	"DashboardLanguageUpdated":         5,
	"DashboardLanguageUpdateRequested": 7,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AccessLog_Action int32

const (
	AccessLog_login         AccessLog_Action = 0
	AccessLog_refresh_token AccessLog_Action = 1
	AccessLog_logout        AccessLog_Action = 2
)

var AccessLog_Action_name = map[int32]string{
	0: "login",
	1: "refresh_token",
	2: "logout",
}
var AccessLog_Action_value = map[string]int32{
	"login":         0,
	"refresh_token": 1,
	"logout":        2,
}

func (x AccessLog_Action) String() string {
	return proto.EnumName(AccessLog_Action_name, int32(x))
}
func (AccessLog_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type DashboardAgent struct {
	AccountId          string           `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                 string           `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Account            *account.Account `protobuf:"bytes,4,opt,name=account" json:"account,omitempty"`
	Agent              *account.Agent   `protobuf:"bytes,5,opt,name=agent" json:"agent,omitempty"`
	TourGuideWebShowed int64            `protobuf:"varint,6,opt,name=tour_guide_web_showed,json=tourGuideWebShowed" json:"tour_guide_web_showed,omitempty"`
	RefreshToken       string           `protobuf:"bytes,7,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
	AccessToken        string           `protobuf:"bytes,8,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	LanguageUrl        string           `protobuf:"bytes,9,opt,name=language_url,json=languageUrl" json:"language_url,omitempty"`
}

func (m *DashboardAgent) Reset()                    { *m = DashboardAgent{} }
func (m *DashboardAgent) String() string            { return proto.CompactTextString(m) }
func (*DashboardAgent) ProtoMessage()               {}
func (*DashboardAgent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DashboardAgent) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *DashboardAgent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DashboardAgent) GetAccount() *account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *DashboardAgent) GetAgent() *account.Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *DashboardAgent) GetTourGuideWebShowed() int64 {
	if m != nil {
		return m.TourGuideWebShowed
	}
	return 0
}

func (m *DashboardAgent) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *DashboardAgent) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *DashboardAgent) GetLanguageUrl() string {
	if m != nil {
		return m.LanguageUrl
	}
	return ""
}

type DashboardAccount struct {
	Id      string           `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Account *account.Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
}

func (m *DashboardAccount) Reset()                    { *m = DashboardAccount{} }
func (m *DashboardAccount) String() string            { return proto.CompactTextString(m) }
func (*DashboardAccount) ProtoMessage()               {}
func (*DashboardAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DashboardAccount) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DashboardAccount) GetAccount() *account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type AccessLog struct {
	Id            string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId     string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId       string `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AcToken       string `protobuf:"bytes,5,opt,name=ac_token,json=acToken" json:"ac_token,omitempty"`
	RfToken       string `protobuf:"bytes,6,opt,name=rf_token,json=rfToken" json:"rf_token,omitempty"`
	Ip            string `protobuf:"bytes,7,opt,name=ip" json:"ip,omitempty"`
	LocationId    int32  `protobuf:"varint,8,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	CityName      string `protobuf:"bytes,9,opt,name=city_name,json=cityName" json:"city_name,omitempty"`
	CountryName   string `protobuf:"bytes,10,opt,name=country_name,json=countryName" json:"country_name,omitempty"`
	CountryCode   string `protobuf:"bytes,11,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	ContinentCode string `protobuf:"bytes,12,opt,name=continent_code,json=continentCode" json:"continent_code,omitempty"`
	ContinentName string `protobuf:"bytes,13,opt,name=continent_name,json=continentName" json:"continent_name,omitempty"`
	// optional string coutry_code = 14;
	Latitude   float32 `protobuf:"fixed32,15,opt,name=latitude" json:"latitude,omitempty"`
	Longitude  float32 `protobuf:"fixed32,16,opt,name=longitude" json:"longitude,omitempty"`
	PostalCode string  `protobuf:"bytes,17,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Timezone   string  `protobuf:"bytes,18,opt,name=timezone" json:"timezone,omitempty"`
	Isp        string  `protobuf:"bytes,19,opt,name=isp" json:"isp,omitempty"`
	UserAgent  string  `protobuf:"bytes,20,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	Created    int64   `protobuf:"varint,22,opt,name=created" json:"created,omitempty"`
	Day        int32   `protobuf:"varint,23,opt,name=day" json:"day,omitempty"`
	Action     string  `protobuf:"bytes,24,opt,name=action" json:"action,omitempty"`
}

func (m *AccessLog) Reset()                    { *m = AccessLog{} }
func (m *AccessLog) String() string            { return proto.CompactTextString(m) }
func (*AccessLog) ProtoMessage()               {}
func (*AccessLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccessLog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccessLog) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AccessLog) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *AccessLog) GetAcToken() string {
	if m != nil {
		return m.AcToken
	}
	return ""
}

func (m *AccessLog) GetRfToken() string {
	if m != nil {
		return m.RfToken
	}
	return ""
}

func (m *AccessLog) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *AccessLog) GetLocationId() int32 {
	if m != nil {
		return m.LocationId
	}
	return 0
}

func (m *AccessLog) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *AccessLog) GetCountryName() string {
	if m != nil {
		return m.CountryName
	}
	return ""
}

func (m *AccessLog) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *AccessLog) GetContinentCode() string {
	if m != nil {
		return m.ContinentCode
	}
	return ""
}

func (m *AccessLog) GetContinentName() string {
	if m != nil {
		return m.ContinentName
	}
	return ""
}

func (m *AccessLog) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *AccessLog) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *AccessLog) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *AccessLog) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *AccessLog) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func (m *AccessLog) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *AccessLog) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *AccessLog) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *AccessLog) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

type SessionCookie struct {
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
	ExpiredAt    int64  `protobuf:"varint,4,opt,name=expired_at,json=expiredAt" json:"expired_at,omitempty"`
	IssuedAt     int64  `protobuf:"varint,5,opt,name=issued_at,json=issuedAt" json:"issued_at,omitempty"`
	Type         string `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	RememberMe   bool   `protobuf:"varint,8,opt,name=remember_me,json=rememberMe" json:"remember_me,omitempty"`
}

func (m *SessionCookie) Reset()                    { *m = SessionCookie{} }
func (m *SessionCookie) String() string            { return proto.CompactTextString(m) }
func (*SessionCookie) ProtoMessage()               {}
func (*SessionCookie) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SessionCookie) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *SessionCookie) GetExpiredAt() int64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (m *SessionCookie) GetIssuedAt() int64 {
	if m != nil {
		return m.IssuedAt
	}
	return 0
}

func (m *SessionCookie) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SessionCookie) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SessionCookie) GetRememberMe() bool {
	if m != nil {
		return m.RememberMe
	}
	return false
}

// global setting. eg: dashboard_4/4234098234
type Global struct {
	Ctx  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Name string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Data string          `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Pk   string          `protobuf:"bytes,4,opt,name=pk" json:"pk,omitempty"`
}

func (m *Global) Reset()                    { *m = Global{} }
func (m *Global) String() string            { return proto.CompactTextString(m) }
func (*Global) ProtoMessage()               {}
func (*Global) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Global) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Global) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Global) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Global) GetPk() string {
	if m != nil {
		return m.Pk
	}
	return ""
}

func init() {
	proto.RegisterType((*DashboardAgent)(nil), "dashboard.DashboardAgent")
	proto.RegisterType((*DashboardAccount)(nil), "dashboard.DashboardAccount")
	proto.RegisterType((*AccessLog)(nil), "dashboard.AccessLog")
	proto.RegisterType((*SessionCookie)(nil), "dashboard.SessionCookie")
	proto.RegisterType((*Global)(nil), "dashboard.Global")
	proto.RegisterEnum("dashboard.Event", Event_name, Event_value)
	proto.RegisterEnum("dashboard.AccessLog_Action", AccessLog_Action_name, AccessLog_Action_value)
}

func init() { proto.RegisterFile("dashboard/dashboard.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 776 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xae, 0xa5, 0xc8, 0x96, 0x4e, 0x12, 0x57, 0xe5, 0xba, 0x96, 0x71, 0x5b, 0xcc, 0xf5, 0x3a,
	0xc0, 0xc8, 0x85, 0x83, 0x75, 0x4f, 0x60, 0x64, 0x43, 0x51, 0xa0, 0xeb, 0x85, 0xba, 0x6e, 0x97,
	0x02, 0x2d, 0x9e, 0xc8, 0x84, 0x25, 0x51, 0xa3, 0xa8, 0x35, 0xe9, 0x3b, 0xec, 0x59, 0xf6, 0x00,
	0x7b, 0xb9, 0x81, 0x3f, 0x72, 0x50, 0x27, 0x43, 0xaf, 0x74, 0xf8, 0x7d, 0x9f, 0x78, 0xc8, 0xef,
	0x9c, 0x43, 0x38, 0xe3, 0xac, 0xdb, 0x6e, 0x24, 0x53, 0xfc, 0x62, 0x1f, 0xad, 0x5a, 0x25, 0xb5,
	0x24, 0xc9, 0x1e, 0x98, 0x2d, 0x4b, 0xa1, 0x57, 0x5d, 0xbf, 0x11, 0x9f, 0x57, 0x0d, 0xea, 0x8b,
	0x2d, 0x32, 0x8e, 0xea, 0xa2, 0x90, 0x75, 0x2d, 0x1b, 0xff, 0x71, 0x3f, 0xcd, 0xce, 0xef, 0x55,
	0xb2, 0xa2, 0x90, 0x7d, 0xa3, 0x87, 0xaf, 0xd3, 0x2e, 0xfe, 0x09, 0x60, 0xfa, 0xf3, 0x90, 0x63,
	0x5d, 0x62, 0xa3, 0xc9, 0x0b, 0x00, 0xaf, 0xc9, 0x05, 0xa7, 0xc1, 0x7c, 0xb4, 0x4c, 0xb2, 0xc4,
	0x23, 0x6f, 0x39, 0x99, 0x42, 0x20, 0x38, 0x0d, 0x2d, 0x1c, 0x08, 0x4e, 0xce, 0x61, 0xe2, 0x49,
	0x7a, 0x34, 0x1f, 0x2d, 0x8f, 0x5f, 0xa7, 0xab, 0x21, 0xc5, 0xda, 0x7d, 0xb3, 0x41, 0x40, 0x5e,
	0x41, 0xc4, 0x4c, 0x0e, 0x1a, 0x59, 0xe5, 0xf4, 0x56, 0x69, 0xd0, 0xcc, 0x91, 0xe4, 0x47, 0xf8,
	0x56, 0xcb, 0x5e, 0xe5, 0x65, 0x2f, 0x38, 0xe6, 0x9f, 0x70, 0x93, 0x77, 0x5b, 0xf9, 0x09, 0x39,
	0x1d, 0xcf, 0x47, 0xcb, 0x30, 0x23, 0x86, 0x7c, 0x63, 0xb8, 0x3f, 0x70, 0xf3, 0xc1, 0x32, 0xe4,
	0x7b, 0x38, 0x55, 0x78, 0xa5, 0xb0, 0xdb, 0xe6, 0x5a, 0xee, 0xb0, 0xa1, 0x13, 0x7b, 0xbe, 0x13,
	0x0f, 0xfe, 0x66, 0x30, 0xf2, 0x12, 0x4e, 0x58, 0x51, 0x60, 0xd7, 0x79, 0x4d, 0x6c, 0x35, 0xc7,
	0x0e, 0xdb, 0x4b, 0x2a, 0xd6, 0x94, 0x3d, 0x2b, 0x31, 0xef, 0x55, 0x45, 0x13, 0x27, 0x19, 0xb0,
	0x8f, 0xaa, 0x5a, 0xbc, 0x87, 0xf4, 0xd6, 0x30, 0x7f, 0x2f, 0xe7, 0x49, 0x70, 0x9f, 0x27, 0xe1,
	0x57, 0x3c, 0x59, 0xfc, 0x1d, 0x41, 0xb2, 0xb6, 0x47, 0x78, 0x27, 0xcb, 0x3b, 0x3b, 0x7d, 0x59,
	0x8c, 0xf0, 0xb0, 0x18, 0x67, 0x10, 0x5b, 0xcf, 0x0c, 0x79, 0x64, 0xc9, 0x89, 0x5d, 0x7b, 0xaa,
	0xf0, 0x37, 0x8d, 0x3c, 0x55, 0xb8, 0x5b, 0x9e, 0x41, 0xac, 0xae, 0x3c, 0x35, 0x76, 0x94, 0xba,
	0x72, 0x94, 0xc9, 0xdf, 0x7a, 0xf7, 0x02, 0xd1, 0x92, 0xef, 0xe0, 0xb8, 0x92, 0x05, 0xd3, 0x42,
	0x36, 0x26, 0x87, 0xb1, 0x2c, 0xca, 0x60, 0x80, 0xde, 0x72, 0xf2, 0x0c, 0x92, 0x42, 0xe8, 0x9b,
	0xbc, 0x61, 0x35, 0x7a, 0xbb, 0x62, 0x03, 0xbc, 0x67, 0x35, 0x1a, 0x3b, 0xed, 0x49, 0x95, 0xe7,
	0xc1, 0xd9, 0xe9, 0xb1, 0x43, 0x49, 0x21, 0x39, 0xd2, 0xe3, 0x2f, 0x24, 0x97, 0x92, 0x23, 0xf9,
	0x01, 0xa6, 0x85, 0x6c, 0xb4, 0x68, 0xcc, 0x45, 0xad, 0xe8, 0xc4, 0x8a, 0x4e, 0xf7, 0xe8, 0x5d,
	0x99, 0x4d, 0x77, 0x7a, 0x20, 0xb3, 0x09, 0x67, 0x10, 0x57, 0x4c, 0x0b, 0xdd, 0x73, 0xa4, 0x0f,
	0xe7, 0xa3, 0x65, 0x90, 0xed, 0xd7, 0xe4, 0x39, 0x24, 0x95, 0x6c, 0x4a, 0x47, 0xa6, 0x96, 0xbc,
	0x05, 0x8c, 0x17, 0xad, 0xec, 0x34, 0xab, 0xdc, 0x21, 0x1e, 0xd9, 0xdd, 0xc1, 0x41, 0xf6, 0x04,
	0x33, 0x88, 0xb5, 0xa8, 0xf1, 0xb3, 0x6c, 0x90, 0x12, 0x67, 0xc5, 0xb0, 0x26, 0x29, 0x84, 0xa2,
	0x6b, 0xe9, 0x37, 0x16, 0x36, 0xa1, 0x29, 0x6d, 0xdf, 0xa1, 0xca, 0xdd, 0x44, 0x3c, 0x76, 0xa5,
	0x35, 0x88, 0x1b, 0x43, 0x0a, 0x93, 0x42, 0x21, 0xd3, 0xc8, 0xe9, 0x13, 0xdb, 0xf7, 0xc3, 0xd2,
	0x6c, 0xc5, 0xd9, 0x0d, 0x7d, 0x6a, 0x6b, 0x61, 0x42, 0xf2, 0x04, 0xc6, 0xac, 0x30, 0x05, 0xa1,
	0xd4, 0x6e, 0xe3, 0x57, 0x8b, 0xd7, 0x30, 0x5e, 0xdb, 0x88, 0x24, 0x10, 0x55, 0xb2, 0x14, 0x4d,
	0xfa, 0x80, 0x3c, 0x3a, 0x98, 0x95, 0x74, 0x44, 0x00, 0xc6, 0x95, 0x2c, 0x65, 0xaf, 0xd3, 0x60,
	0xf1, 0xef, 0x08, 0x4e, 0x3f, 0x60, 0xd7, 0x09, 0xd9, 0x5c, 0x4a, 0xb9, 0x13, 0x78, 0x77, 0xb8,
	0xc2, 0x7b, 0x86, 0xeb, 0x05, 0x00, 0x5e, 0xb7, 0x42, 0x21, 0xcf, 0x99, 0x7b, 0x09, 0xc2, 0x2c,
	0xf1, 0xc8, 0x5a, 0x9b, 0x36, 0x11, 0x5d, 0xd7, 0x3b, 0x36, 0xb2, 0x6c, 0xec, 0x80, 0xb5, 0x26,
	0x04, 0x8e, 0xf4, 0x4d, 0x8b, 0xbe, 0x17, 0x6d, 0x4c, 0x1e, 0x43, 0x84, 0x35, 0x13, 0x95, 0xef,
	0x45, 0xb7, 0x30, 0x25, 0x50, 0x58, 0x63, 0xbd, 0x41, 0x95, 0xd7, 0x68, 0xdb, 0x31, 0xce, 0x60,
	0x80, 0x7e, 0xc5, 0x45, 0x01, 0xe3, 0x37, 0x95, 0xdc, 0xb0, 0x8a, 0xbc, 0x84, 0xb0, 0xd0, 0xd7,
	0x74, 0x64, 0xe7, 0xef, 0xe1, 0xca, 0xbf, 0x90, 0x97, 0xb2, 0xd1, 0x78, 0xad, 0x33, 0xc3, 0x99,
	0xbc, 0xb6, 0x4f, 0xdc, 0xb8, 0xd9, 0xd8, 0x60, 0x9c, 0x69, 0xe6, 0xef, 0x68, 0x63, 0x33, 0x14,
	0xed, 0xce, 0xcf, 0x57, 0xd0, 0xee, 0xce, 0xb7, 0x10, 0xfd, 0xf2, 0x97, 0xa9, 0xd1, 0x33, 0x78,
	0xba, 0x7f, 0x0b, 0x7e, 0x47, 0x65, 0x3c, 0xfb, 0xd8, 0x72, 0x53, 0xa4, 0xf4, 0x01, 0x79, 0x0e,
	0x74, 0x4f, 0xbe, 0x1b, 0x1e, 0x10, 0xcf, 0x46, 0xe4, 0x15, 0xcc, 0xff, 0x87, 0xcd, 0xf0, 0xcf,
	0x1e, 0x3b, 0xa3, 0x9a, 0x6c, 0xc6, 0xf6, 0x95, 0xfe, 0xe9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x6a, 0x90, 0xbe, 0x18, 0x23, 0x06, 0x00, 0x00,
}
