// Code generated by protoc-gen-go. DO NOT EDIT.
// source: noti5/noti5.proto

/*
Package noti5 is a generated protocol buffer package.

It is generated from these files:
	noti5/noti5.proto

It has these top-level messages:
	Setting
*/
package noti5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_new_message      Type = 0
	Type_new_conversation Type = 1
	Type_nothing          Type = 2
)

var Type_name = map[int32]string{
	0: "new_message",
	1: "new_conversation",
	2: "nothing",
}
var Type_value = map[string]int32{
	"new_message":      0,
	"new_conversation": 1,
	"nothing":          2,
}

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}
func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (x *Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_value, data, "Type")
	if err != nil {
		return err
	}
	*x = Type(value)
	return nil
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Setting struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	WebType          *string         `protobuf:"bytes,4,opt,name=web_type,json=webType" json:"web_type,omitempty"`
	MobileType       *string         `protobuf:"bytes,5,opt,name=mobile_type,json=mobileType" json:"mobile_type,omitempty"`
	EmailType        *string         `protobuf:"bytes,6,opt,name=email_type,json=emailType" json:"email_type,omitempty"`
	EmailAfter       *int32          `protobuf:"varint,7,opt,name=email_after,json=emailAfter" json:"email_after,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Setting) Reset()                    { *m = Setting{} }
func (m *Setting) String() string            { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()               {}
func (*Setting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Setting) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Setting) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Setting) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *Setting) GetWebType() string {
	if m != nil && m.WebType != nil {
		return *m.WebType
	}
	return ""
}

func (m *Setting) GetMobileType() string {
	if m != nil && m.MobileType != nil {
		return *m.MobileType
	}
	return ""
}

func (m *Setting) GetEmailType() string {
	if m != nil && m.EmailType != nil {
		return *m.EmailType
	}
	return ""
}

func (m *Setting) GetEmailAfter() int32 {
	if m != nil && m.EmailAfter != nil {
		return *m.EmailAfter
	}
	return 0
}

func init() {
	proto.RegisterType((*Setting)(nil), "noti5.Setting")
	proto.RegisterEnum("noti5.Type", Type_name, Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Noti5Service service

type Noti5ServiceClient interface {
	ReadNotificationSetting(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*Setting, error)
	UpdateNotificationSetting(ctx context.Context, in *Setting, opts ...grpc.CallOption) (*common.Empty, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type noti5ServiceClient struct {
	cc *grpc.ClientConn
}

func NewNoti5ServiceClient(cc *grpc.ClientConn) Noti5ServiceClient {
	return &noti5ServiceClient{cc}
}

func (c *noti5ServiceClient) ReadNotificationSetting(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*Setting, error) {
	out := new(Setting)
	err := grpc.Invoke(ctx, "/noti5.Noti5Service/ReadNotificationSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noti5ServiceClient) UpdateNotificationSetting(ctx context.Context, in *Setting, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := grpc.Invoke(ctx, "/noti5.Noti5Service/UpdateNotificationSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noti5ServiceClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := grpc.Invoke(ctx, "/noti5.Noti5Service/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Noti5Service service

type Noti5ServiceServer interface {
	ReadNotificationSetting(context.Context, *common.Empty) (*Setting, error)
	UpdateNotificationSetting(context.Context, *Setting) (*common.Empty, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterNoti5ServiceServer(s *grpc.Server, srv Noti5ServiceServer) {
	s.RegisterService(&_Noti5Service_serviceDesc, srv)
}

func _Noti5Service_ReadNotificationSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Noti5ServiceServer).ReadNotificationSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noti5.Noti5Service/ReadNotificationSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Noti5ServiceServer).ReadNotificationSetting(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Noti5Service_UpdateNotificationSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Setting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Noti5ServiceServer).UpdateNotificationSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noti5.Noti5Service/UpdateNotificationSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Noti5ServiceServer).UpdateNotificationSetting(ctx, req.(*Setting))
	}
	return interceptor(ctx, in, info, handler)
}

func _Noti5Service_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Noti5ServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noti5.Noti5Service/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Noti5ServiceServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Noti5Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "noti5.Noti5Service",
	HandlerType: (*Noti5ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadNotificationSetting",
			Handler:    _Noti5Service_ReadNotificationSetting_Handler,
		},
		{
			MethodName: "UpdateNotificationSetting",
			Handler:    _Noti5Service_UpdateNotificationSetting_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Noti5Service_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "noti5/noti5.proto",
}

func init() { proto.RegisterFile("noti5/noti5.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x86, 0x4d, 0x3f, 0x8c, 0x3d, 0xa9, 0x36, 0x8e, 0x82, 0x69, 0xa0, 0x58, 0xbd, 0xaa, 0x5e,
	0x24, 0x50, 0x10, 0xa4, 0x77, 0x22, 0x5e, 0x78, 0x23, 0x92, 0xea, 0x75, 0x99, 0x4c, 0x4e, 0xd3,
	0x61, 0x9b, 0x99, 0x6c, 0x72, 0xd2, 0x8f, 0xfd, 0x53, 0xfb, 0x9f, 0xf6, 0x97, 0x2c, 0x99, 0x69,
	0x16, 0x76, 0xd9, 0x9b, 0x84, 0xf3, 0x3c, 0xef, 0x3b, 0x03, 0x67, 0xe0, 0xad, 0xd2, 0x24, 0xbf,
	0xc5, 0xe6, 0x1b, 0x95, 0x95, 0x26, 0xcd, 0x86, 0x66, 0x08, 0xa3, 0x54, 0x52, 0xda, 0x88, 0x2b,
	0xa4, 0x48, 0x57, 0x79, 0x5c, 0x37, 0xa9, 0xbc, 0x89, 0x77, 0xc8, 0x33, 0xac, 0x62, 0xa1, 0x8b,
	0x42, 0xab, 0xcb, 0xcf, 0xd6, 0x3e, 0xdf, 0x39, 0xe0, 0xae, 0x91, 0x48, 0xaa, 0x9c, 0x7d, 0x82,
	0xbe, 0xa0, 0x53, 0xe0, 0xcc, 0x9d, 0x85, 0xb7, 0x9c, 0x44, 0x97, 0xdc, 0x4f, 0xad, 0x08, 0x4f,
	0x94, 0xb4, 0x8e, 0xcd, 0x00, 0xb8, 0x10, 0xba, 0x51, 0xb4, 0x91, 0x59, 0xd0, 0x9b, 0x3b, 0x8b,
	0x51, 0x32, 0xba, 0x90, 0xdf, 0x19, 0x9b, 0xc2, 0x2b, 0x9e, 0xa3, 0x95, 0x7d, 0x23, 0x5d, 0x33,
	0x5b, 0x75, 0xc4, 0x74, 0x43, 0xe7, 0x12, 0x83, 0x81, 0x55, 0x47, 0x4c, 0xff, 0x9d, 0x4b, 0x64,
	0x1f, 0xc1, 0x2b, 0x74, 0x2a, 0xf7, 0x68, 0xed, 0xd0, 0x58, 0xb0, 0xc8, 0x04, 0x66, 0x00, 0x58,
	0x70, 0xb9, 0xb7, 0xfe, 0xa5, 0xbd, 0xd5, 0x90, 0xae, 0x6f, 0x35, 0xdf, 0x12, 0x56, 0x81, 0x3b,
	0x77, 0x16, 0xc3, 0xc4, 0x36, 0x7e, 0xb4, 0xe4, 0xeb, 0x0a, 0x06, 0x26, 0x38, 0x01, 0x4f, 0xe1,
	0x71, 0x53, 0x60, 0x5d, 0xf3, 0x1c, 0xfd, 0x17, 0xec, 0x3d, 0xf8, 0x2d, 0x10, 0x5a, 0x1d, 0xb0,
	0xaa, 0x39, 0x49, 0xad, 0x7c, 0x87, 0x79, 0xe0, 0x2a, 0x4d, 0x3b, 0xa9, 0x72, 0xbf, 0xb7, 0xbc,
	0x75, 0x60, 0xfc, 0xa7, 0x5d, 0xed, 0x1a, 0xab, 0x83, 0x14, 0xc8, 0xbe, 0xc3, 0x87, 0x04, 0x79,
	0xd6, 0xb2, 0xad, 0x14, 0xa6, 0xd3, 0x2d, 0xf0, 0x75, 0xb7, 0xb3, 0x5f, 0x45, 0x49, 0xe7, 0xf0,
	0x4d, 0x64, 0x1f, 0xa8, 0xd3, 0x2b, 0x98, 0xfe, 0x2f, 0x33, 0x4e, 0xf8, 0x5c, 0xf7, 0x49, 0x38,
	0x7c, 0x7c, 0x16, 0xfb, 0x02, 0x83, 0xbf, 0x6d, 0xec, 0x5d, 0x87, 0xdb, 0x29, 0xc1, 0xeb, 0x06,
	0x6b, 0x0a, 0xc7, 0x0f, 0x50, 0xab, 0xfc, 0x3e, 0x00, 0x00, 0xff, 0xff, 0x24, 0x76, 0xd7, 0x4a,
	0x1d, 0x02, 0x00, 0x00,
}
