// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AttributeType int32

const (
	AttributeType_text     AttributeType = 0
	AttributeType_number   AttributeType = 1
	AttributeType_boolean  AttributeType = 2
	AttributeType_datetime AttributeType = 3
	AttributeType_list     AttributeType = 4
)

var AttributeType_name = map[int32]string{
	0: "text",
	1: "number",
	2: "boolean",
	3: "datetime",
	4: "list",
}

var AttributeType_value = map[string]int32{
	"text":     0,
	"number":   1,
	"boolean":  2,
	"datetime": 3,
	"list":     4,
}

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return proto.EnumName(AttributeType_name, int32(x))
}

func (x *AttributeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AttributeType_value, data, "AttributeType")
	if err != nil {
		return err
	}
	*x = AttributeType(value)
	return nil
}

func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

type AttributeKind int32

const (
	AttributeKind_system  AttributeKind = 0
	AttributeKind_default AttributeKind = 1
	AttributeKind_custom  AttributeKind = 2
)

var AttributeKind_name = map[int32]string{
	0: "system",
	1: "default",
	2: "custom",
}

var AttributeKind_value = map[string]int32{
	"system":  0,
	"default": 1,
	"custom":  2,
}

func (x AttributeKind) Enum() *AttributeKind {
	p := new(AttributeKind)
	*p = x
	return p
}

func (x AttributeKind) String() string {
	return proto.EnumName(AttributeKind_name, int32(x))
}

func (x *AttributeKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AttributeKind_value, data, "AttributeKind")
	if err != nil {
		return err
	}
	*x = AttributeKind(value)
	return nil
}

func (AttributeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{1}
}

type Event int32

const (
	Event_UserReadRequested                  Event = 0
	Event_UserUpdateRequested                Event = 2
	Event_UserCreateRequested                Event = 3
	Event_UserSearchRequested                Event = 4
	Event_UserEventCreateRequested           Event = 5
	Event_UserEventSearchRequested           Event = 7
	Event_UserTopicSearchRequested           Event = 6
	Event_UserSegmentationCreateRequested    Event = 10
	Event_UserSegmentationUpdateRequested    Event = 11
	Event_UserSegmentationDeleteRequested    Event = 12
	Event_UserSegmentationListRequested      Event = 13
	Event_UserSegmentationReadRequested      Event = 14
	Event_UserAddToMyListRequested           Event = 20
	Event_UserRemoveFromMyListRequested      Event = 21
	Event_UserEventTopicSubscribeRequested   Event = 35
	Event_UserEventTopicUnsubscribeRequested Event = 36
	Event_UserReadTopicRequested             Event = 41
	Event_UserSubizId                        Event = 42
	Event_UserPresenceReadRequested          Event = 44
	Event_UserPreviewingReadRequested        Event = 46
	Event_UserListTopRequested               Event = 47
	Event_UserAutomationUpsertRequested      Event = 50
	Event_UserAutomationDeleteRequested      Event = 51
	Event_UserAutomationListRequested        Event = 52
	Event_UserAutomationReadRequested        Event = 53
	Event_AutomationAgentNotificationFired   Event = 54
	Event_AutomationConversationMessageFired Event = 55
	Event_UserSessionUpdateRequested         Event = 65
	Event_UserSessionCreateRequested         Event = 66
	Event_UserSessionReadRequested           Event = 67
	Event_SegmentationLoop                   Event = 68
	Event_AutomationSynced                   Event = 102
	Event_AutomationFired                    Event = 103
	Event_UserRequested                      Event = 100
	Event_UserCreated                        Event = 70
	Event_UserAttributeAdded                 Event = 71
	Event_UserUpdated                        Event = 72
	Event_UserSynced                         Event = 101
	Event_UserUpserted                       Event = 105
	Event_UserV3Synced                       Event = 106
	Event_UserJob                            Event = 199
	Event_UserResolvedJob                    Event = 200
	Event_UserResolvedJob2                   Event = 198
	Event_UserResolvedEventCreated           Event = 201
	Event_UserAliasAdded                     Event = 202
	Event_UserAliasDeleted                   Event = 203
	Event_UserEventCreated                   Event = 204
	Event_UserContentViewed                  Event = 205
	Event_UserMessageSent                    Event = 206
	Event_UserAggregated                     Event = 207
	Event_UserTopicJob                       Event = 208
	Event_UserEventTopicPublished            Event = 209
	Event_UserNotifyMyUserRequested          Event = 210
	Event_UserSegmentPickRequested           Event = 211
	Event_UserSegmentUnpickRequested         Event = 212
	Event_UserAggregateSegmentAttrCount      Event = 214
	Event_UserAggregateUpdateInteracted      Event = 215
	// UserAggregateSegmentCount = 216;
	Event_UserSegmentAggregated                 Event = 217
	Event_AutomationBlockUserFired              Event = 218
	Event_AutomationUpdateUserAttributeFired    Event = 219
	Event_AutomationMergeUsersFired             Event = 220
	Event_AutomationUserNotificationFired       Event = 221
	Event_AutomationUserWebhookFired            Event = 222
	Event_AutomationUserNoteFired               Event = 223
	Event_AutomationCreateConversationFired     Event = 224
	Event_AutomationConversationMessage2Fired   Event = 225
	Event_AutomationConversationWebhookFired    Event = 226
	Event_AutomationAddAgentToConversationFired Event = 227
	Event_AutomationCreateTicketFired           Event = 228
	Event_AutomationConversationTagFired        Event = 229
	// AutomationAgentNotificationFired = 54;
	Event_AutomationAddUserToSegmentationFired Event = 231
	Event_UserTotalConvoUpdated                Event = 232
	Event_UserTotalOpenTicketUpdated           Event = 233
	Event_AutomationCreditAggregated           Event = 235
	Event_AutomationCreditCountAggregate       Event = 236
)

var Event_name = map[int32]string{
	0:   "UserReadRequested",
	2:   "UserUpdateRequested",
	3:   "UserCreateRequested",
	4:   "UserSearchRequested",
	5:   "UserEventCreateRequested",
	7:   "UserEventSearchRequested",
	6:   "UserTopicSearchRequested",
	10:  "UserSegmentationCreateRequested",
	11:  "UserSegmentationUpdateRequested",
	12:  "UserSegmentationDeleteRequested",
	13:  "UserSegmentationListRequested",
	14:  "UserSegmentationReadRequested",
	20:  "UserAddToMyListRequested",
	21:  "UserRemoveFromMyListRequested",
	35:  "UserEventTopicSubscribeRequested",
	36:  "UserEventTopicUnsubscribeRequested",
	41:  "UserReadTopicRequested",
	42:  "UserSubizId",
	44:  "UserPresenceReadRequested",
	46:  "UserPreviewingReadRequested",
	47:  "UserListTopRequested",
	50:  "UserAutomationUpsertRequested",
	51:  "UserAutomationDeleteRequested",
	52:  "UserAutomationListRequested",
	53:  "UserAutomationReadRequested",
	54:  "AutomationAgentNotificationFired",
	55:  "AutomationConversationMessageFired",
	65:  "UserSessionUpdateRequested",
	66:  "UserSessionCreateRequested",
	67:  "UserSessionReadRequested",
	68:  "SegmentationLoop",
	102: "AutomationSynced",
	103: "AutomationFired",
	100: "UserRequested",
	70:  "UserCreated",
	71:  "UserAttributeAdded",
	72:  "UserUpdated",
	101: "UserSynced",
	105: "UserUpserted",
	106: "UserV3Synced",
	199: "UserJob",
	200: "UserResolvedJob",
	198: "UserResolvedJob2",
	201: "UserResolvedEventCreated",
	202: "UserAliasAdded",
	203: "UserAliasDeleted",
	204: "UserEventCreated",
	205: "UserContentViewed",
	206: "UserMessageSent",
	207: "UserAggregated",
	208: "UserTopicJob",
	209: "UserEventTopicPublished",
	210: "UserNotifyMyUserRequested",
	211: "UserSegmentPickRequested",
	212: "UserSegmentUnpickRequested",
	214: "UserAggregateSegmentAttrCount",
	215: "UserAggregateUpdateInteracted",
	217: "UserSegmentAggregated",
	218: "AutomationBlockUserFired",
	219: "AutomationUpdateUserAttributeFired",
	220: "AutomationMergeUsersFired",
	221: "AutomationUserNotificationFired",
	222: "AutomationUserWebhookFired",
	223: "AutomationUserNoteFired",
	224: "AutomationCreateConversationFired",
	225: "AutomationConversationMessage2Fired",
	226: "AutomationConversationWebhookFired",
	227: "AutomationAddAgentToConversationFired",
	228: "AutomationCreateTicketFired",
	229: "AutomationConversationTagFired",
	231: "AutomationAddUserToSegmentationFired",
	232: "UserTotalConvoUpdated",
	233: "UserTotalOpenTicketUpdated",
	235: "AutomationCreditAggregated",
	236: "AutomationCreditCountAggregate",
}

var Event_value = map[string]int32{
	"UserReadRequested":                     0,
	"UserUpdateRequested":                   2,
	"UserCreateRequested":                   3,
	"UserSearchRequested":                   4,
	"UserEventCreateRequested":              5,
	"UserEventSearchRequested":              7,
	"UserTopicSearchRequested":              6,
	"UserSegmentationCreateRequested":       10,
	"UserSegmentationUpdateRequested":       11,
	"UserSegmentationDeleteRequested":       12,
	"UserSegmentationListRequested":         13,
	"UserSegmentationReadRequested":         14,
	"UserAddToMyListRequested":              20,
	"UserRemoveFromMyListRequested":         21,
	"UserEventTopicSubscribeRequested":      35,
	"UserEventTopicUnsubscribeRequested":    36,
	"UserReadTopicRequested":                41,
	"UserSubizId":                           42,
	"UserPresenceReadRequested":             44,
	"UserPreviewingReadRequested":           46,
	"UserListTopRequested":                  47,
	"UserAutomationUpsertRequested":         50,
	"UserAutomationDeleteRequested":         51,
	"UserAutomationListRequested":           52,
	"UserAutomationReadRequested":           53,
	"AutomationAgentNotificationFired":      54,
	"AutomationConversationMessageFired":    55,
	"UserSessionUpdateRequested":            65,
	"UserSessionCreateRequested":            66,
	"UserSessionReadRequested":              67,
	"SegmentationLoop":                      68,
	"AutomationSynced":                      102,
	"AutomationFired":                       103,
	"UserRequested":                         100,
	"UserCreated":                           70,
	"UserAttributeAdded":                    71,
	"UserUpdated":                           72,
	"UserSynced":                            101,
	"UserUpserted":                          105,
	"UserV3Synced":                          106,
	"UserJob":                               199,
	"UserResolvedJob":                       200,
	"UserResolvedJob2":                      198,
	"UserResolvedEventCreated":              201,
	"UserAliasAdded":                        202,
	"UserAliasDeleted":                      203,
	"UserEventCreated":                      204,
	"UserContentViewed":                     205,
	"UserMessageSent":                       206,
	"UserAggregated":                        207,
	"UserTopicJob":                          208,
	"UserEventTopicPublished":               209,
	"UserNotifyMyUserRequested":             210,
	"UserSegmentPickRequested":              211,
	"UserSegmentUnpickRequested":            212,
	"UserAggregateSegmentAttrCount":         214,
	"UserAggregateUpdateInteracted":         215,
	"UserSegmentAggregated":                 217,
	"AutomationBlockUserFired":              218,
	"AutomationUpdateUserAttributeFired":    219,
	"AutomationMergeUsersFired":             220,
	"AutomationUserNotificationFired":       221,
	"AutomationUserWebhookFired":            222,
	"AutomationUserNoteFired":               223,
	"AutomationCreateConversationFired":     224,
	"AutomationConversationMessage2Fired":   225,
	"AutomationConversationWebhookFired":    226,
	"AutomationAddAgentToConversationFired": 227,
	"AutomationCreateTicketFired":           228,
	"AutomationConversationTagFired":        229,
	"AutomationAddUserToSegmentationFired":  231,
	"UserTotalConvoUpdated":                 232,
	"UserTotalOpenTicketUpdated":            233,
	"AutomationCreditAggregated":            235,
	"AutomationCreditCountAggregate":        236,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{2}
}

type JoinOperator int32

const (
	JoinOperator_none JoinOperator = 0
	JoinOperator_and  JoinOperator = 1
	JoinOperator_or   JoinOperator = 2
)

var JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}

var JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x JoinOperator) Enum() *JoinOperator {
	p := new(JoinOperator)
	*p = x
	return p
}

func (x JoinOperator) String() string {
	return proto.EnumName(JoinOperator_name, int32(x))
}

func (x *JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JoinOperator_value, data, "JoinOperator")
	if err != nil {
		return err
	}
	*x = JoinOperator(value)
	return nil
}

func (JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{3}
}

type ConditionType int32

const (
	ConditionType_attribute ConditionType = 0
	ConditionType_event     ConditionType = 1
)

var ConditionType_name = map[int32]string{
	0: "attribute",
	1: "event",
}

var ConditionType_value = map[string]int32{
	"attribute": 0,
	"event":     1,
}

func (x ConditionType) Enum() *ConditionType {
	p := new(ConditionType)
	*p = x
	return p
}

func (x ConditionType) String() string {
	return proto.EnumName(ConditionType_name, int32(x))
}

func (x *ConditionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConditionType_value, data, "ConditionType")
	if err != nil {
		return err
	}
	*x = ConditionType(value)
	return nil
}

func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{4}
}

type Segmentation_State int32

const (
	Segmentation_active   Segmentation_State = 0
	Segmentation_inactive Segmentation_State = 1
)

var Segmentation_State_name = map[int32]string{
	0: "active",
	1: "inactive",
}

var Segmentation_State_value = map[string]int32{
	"active":   0,
	"inactive": 1,
}

func (x Segmentation_State) Enum() *Segmentation_State {
	p := new(Segmentation_State)
	*p = x
	return p
}

func (x Segmentation_State) String() string {
	return proto.EnumName(Segmentation_State_name, int32(x))
}

func (x *Segmentation_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Segmentation_State_value, data, "Segmentation_State")
	if err != nil {
		return err
	}
	*x = Segmentation_State(value)
	return nil
}

func (Segmentation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{16, 0}
}

type Segmentation_Scope int32

const (
	Segmentation_agent   Segmentation_Scope = 0
	Segmentation_account Segmentation_Scope = 1
)

var Segmentation_Scope_name = map[int32]string{
	0: "agent",
	1: "account",
}

var Segmentation_Scope_value = map[string]int32{
	"agent":   0,
	"account": 1,
}

func (x Segmentation_Scope) Enum() *Segmentation_Scope {
	p := new(Segmentation_Scope)
	*p = x
	return p
}

func (x Segmentation_Scope) String() string {
	return proto.EnumName(Segmentation_Scope_name, int32(x))
}

func (x *Segmentation_Scope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Segmentation_Scope_value, data, "Segmentation_Scope")
	if err != nil {
		return err
	}
	*x = Segmentation_Scope(value)
	return nil
}

func (Segmentation_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{16, 1}
}

type Condition_JoinOperator int32

const (
	Condition_none Condition_JoinOperator = 0
	Condition_and  Condition_JoinOperator = 1
	Condition_or   Condition_JoinOperator = 2
)

var Condition_JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}

var Condition_JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x Condition_JoinOperator) Enum() *Condition_JoinOperator {
	p := new(Condition_JoinOperator)
	*p = x
	return p
}

func (x Condition_JoinOperator) String() string {
	return proto.EnumName(Condition_JoinOperator_name, int32(x))
}

func (x *Condition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Condition_JoinOperator_value, data, "Condition_JoinOperator")
	if err != nil {
		return err
	}
	*x = Condition_JoinOperator(value)
	return nil
}

func (Condition_JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{17, 0}
}

type SCondition_EventTime int32

const (
	SCondition_none    SCondition_EventTime = 0
	SCondition_current SCondition_EventTime = 1
	SCondition_latest  SCondition_EventTime = 2
	SCondition_past    SCondition_EventTime = 3
)

var SCondition_EventTime_name = map[int32]string{
	0: "none",
	1: "current",
	2: "latest",
	3: "past",
}

var SCondition_EventTime_value = map[string]int32{
	"none":    0,
	"current": 1,
	"latest":  2,
	"past":    3,
}

func (x SCondition_EventTime) Enum() *SCondition_EventTime {
	p := new(SCondition_EventTime)
	*p = x
	return p
}

func (x SCondition_EventTime) String() string {
	return proto.EnumName(SCondition_EventTime_name, int32(x))
}

func (x *SCondition_EventTime) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SCondition_EventTime_value, data, "SCondition_EventTime")
	if err != nil {
		return err
	}
	*x = SCondition_EventTime(value)
	return nil
}

func (SCondition_EventTime) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{26, 0}
}

type SCondition_JoinOperator int32

const (
	SCondition_and SCondition_JoinOperator = 0
	SCondition_or  SCondition_JoinOperator = 1
)

var SCondition_JoinOperator_name = map[int32]string{
	0: "and",
	1: "or",
}

var SCondition_JoinOperator_value = map[string]int32{
	"and": 0,
	"or":  1,
}

func (x SCondition_JoinOperator) Enum() *SCondition_JoinOperator {
	p := new(SCondition_JoinOperator)
	*p = x
	return p
}

func (x SCondition_JoinOperator) String() string {
	return proto.EnumName(SCondition_JoinOperator_name, int32(x))
}

func (x *SCondition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SCondition_JoinOperator_value, data, "SCondition_JoinOperator")
	if err != nil {
		return err
	}
	*x = SCondition_JoinOperator(value)
	return nil
}

func (SCondition_JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{26, 1}
}

type Note_CreatorType int32

const (
	Note_agent  Note_CreatorType = 0
	Note_system Note_CreatorType = 1
)

var Note_CreatorType_name = map[int32]string{
	0: "agent",
	1: "system",
}

var Note_CreatorType_value = map[string]int32{
	"agent":  0,
	"system": 1,
}

func (x Note_CreatorType) Enum() *Note_CreatorType {
	p := new(Note_CreatorType)
	*p = x
	return p
}

func (x Note_CreatorType) String() string {
	return proto.EnumName(Note_CreatorType_name, int32(x))
}

func (x *Note_CreatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_CreatorType_value, data, "Note_CreatorType")
	if err != nil {
		return err
	}
	*x = Note_CreatorType(value)
	return nil
}

func (Note_CreatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{29, 0}
}

type Note_Type int32

const (
	Note_conversation Note_Type = 0
	Note_ticket       Note_Type = 1
	Note_deal         Note_Type = 2
	Note_user         Note_Type = 3
)

var Note_Type_name = map[int32]string{
	0: "conversation",
	1: "ticket",
	2: "deal",
	3: "user",
}

var Note_Type_value = map[string]int32{
	"conversation": 0,
	"ticket":       1,
	"deal":         2,
	"user":         3,
}

func (x Note_Type) Enum() *Note_Type {
	p := new(Note_Type)
	*p = x
	return p
}

func (x Note_Type) String() string {
	return proto.EnumName(Note_Type_name, int32(x))
}

func (x *Note_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_Type_value, data, "Note_Type")
	if err != nil {
		return err
	}
	*x = Note_Type(value)
	return nil
}

func (Note_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{29, 1}
}

type Note_Format int32

const (
	Note_plaintext Note_Format = 0
	Note_markdown  Note_Format = 1
	Note_html      Note_Format = 2
)

var Note_Format_name = map[int32]string{
	0: "plaintext",
	1: "markdown",
	2: "html",
}

var Note_Format_value = map[string]int32{
	"plaintext": 0,
	"markdown":  1,
	"html":      2,
}

func (x Note_Format) Enum() *Note_Format {
	p := new(Note_Format)
	*p = x
	return p
}

func (x Note_Format) String() string {
	return proto.EnumName(Note_Format_name, int32(x))
}

func (x *Note_Format) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_Format_value, data, "Note_Format")
	if err != nil {
		return err
	}
	*x = Note_Format(value)
	return nil
}

func (Note_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{29, 2}
}

type AddToMyRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentIds             []string        `protobuf:"bytes,5,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddToMyRequest) Reset()         { *m = AddToMyRequest{} }
func (m *AddToMyRequest) String() string { return proto.CompactTextString(m) }
func (*AddToMyRequest) ProtoMessage()    {}
func (*AddToMyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

func (m *AddToMyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddToMyRequest.Unmarshal(m, b)
}
func (m *AddToMyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddToMyRequest.Marshal(b, m, deterministic)
}
func (m *AddToMyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddToMyRequest.Merge(m, src)
}
func (m *AddToMyRequest) XXX_Size() int {
	return xxx_messageInfo_AddToMyRequest.Size(m)
}
func (m *AddToMyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddToMyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddToMyRequest proto.InternalMessageInfo

func (m *AddToMyRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AddToMyRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AddToMyRequest) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *AddToMyRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type MyAgents struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentIds             []string        `protobuf:"bytes,5,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	Updated              *int64          `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MyAgents) Reset()         { *m = MyAgents{} }
func (m *MyAgents) String() string { return proto.CompactTextString(m) }
func (*MyAgents) ProtoMessage()    {}
func (*MyAgents) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{1}
}

func (m *MyAgents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyAgents.Unmarshal(m, b)
}
func (m *MyAgents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyAgents.Marshal(b, m, deterministic)
}
func (m *MyAgents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyAgents.Merge(m, src)
}
func (m *MyAgents) XXX_Size() int {
	return xxx_messageInfo_MyAgents.Size(m)
}
func (m *MyAgents) XXX_DiscardUnknown() {
	xxx_messageInfo_MyAgents.DiscardUnknown(m)
}

var xxx_messageInfo_MyAgents proto.InternalMessageInfo

func (m *MyAgents) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *MyAgents) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *MyAgents) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *MyAgents) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *MyAgents) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type UserCreateResult struct {
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Mask                 *string  `protobuf:"bytes,5,opt,name=mask" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCreateResult) Reset()         { *m = UserCreateResult{} }
func (m *UserCreateResult) String() string { return proto.CompactTextString(m) }
func (*UserCreateResult) ProtoMessage()    {}
func (*UserCreateResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{2}
}

func (m *UserCreateResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateResult.Unmarshal(m, b)
}
func (m *UserCreateResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateResult.Marshal(b, m, deterministic)
}
func (m *UserCreateResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateResult.Merge(m, src)
}
func (m *UserCreateResult) XXX_Size() int {
	return xxx_messageInfo_UserCreateResult.Size(m)
}
func (m *UserCreateResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateResult.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateResult proto.InternalMessageInfo

func (m *UserCreateResult) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *UserCreateResult) GetMask() string {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return ""
}

type AttributeDefinition struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          *string         `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Type                 *string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ListItems            []string        `protobuf:"bytes,6,rep,name=list_items,json=listItems" json:"list_items,omitempty"`
	Key                  *string         `protobuf:"bytes,7,opt,name=key" json:"key,omitempty"`
	Kind                 *string         `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	Updated              *int64          `protobuf:"varint,9,opt,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AttributeDefinition) Reset()         { *m = AttributeDefinition{} }
func (m *AttributeDefinition) String() string { return proto.CompactTextString(m) }
func (*AttributeDefinition) ProtoMessage()    {}
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{3}
}

func (m *AttributeDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeDefinition.Unmarshal(m, b)
}
func (m *AttributeDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeDefinition.Marshal(b, m, deterministic)
}
func (m *AttributeDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeDefinition.Merge(m, src)
}
func (m *AttributeDefinition) XXX_Size() int {
	return xxx_messageInfo_AttributeDefinition.Size(m)
}
func (m *AttributeDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeDefinition proto.InternalMessageInfo

func (m *AttributeDefinition) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AttributeDefinition) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AttributeDefinition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AttributeDefinition) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *AttributeDefinition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *AttributeDefinition) GetListItems() []string {
	if m != nil {
		return m.ListItems
	}
	return nil
}

func (m *AttributeDefinition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AttributeDefinition) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *AttributeDefinition) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type AttributeDefinitions struct {
	Ctx                  *common.Context        `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Attributes           []*AttributeDefinition `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AttributeDefinitions) Reset()         { *m = AttributeDefinitions{} }
func (m *AttributeDefinitions) String() string { return proto.CompactTextString(m) }
func (*AttributeDefinitions) ProtoMessage()    {}
func (*AttributeDefinitions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{4}
}

func (m *AttributeDefinitions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeDefinitions.Unmarshal(m, b)
}
func (m *AttributeDefinitions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeDefinitions.Marshal(b, m, deterministic)
}
func (m *AttributeDefinitions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeDefinitions.Merge(m, src)
}
func (m *AttributeDefinitions) XXX_Size() int {
	return xxx_messageInfo_AttributeDefinitions.Size(m)
}
func (m *AttributeDefinitions) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeDefinitions.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeDefinitions proto.InternalMessageInfo

func (m *AttributeDefinitions) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AttributeDefinitions) GetAttributes() []*AttributeDefinition {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type SessionTracking struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Started              *int64   `protobuf:"varint,4,opt,name=started" json:"started,omitempty"`
	Tracked              *int64   `protobuf:"varint,6,opt,name=tracked" json:"tracked,omitempty"`
	Total                *int32   `protobuf:"varint,7,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionTracking) Reset()         { *m = SessionTracking{} }
func (m *SessionTracking) String() string { return proto.CompactTextString(m) }
func (*SessionTracking) ProtoMessage()    {}
func (*SessionTracking) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{5}
}

func (m *SessionTracking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionTracking.Unmarshal(m, b)
}
func (m *SessionTracking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionTracking.Marshal(b, m, deterministic)
}
func (m *SessionTracking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionTracking.Merge(m, src)
}
func (m *SessionTracking) XXX_Size() int {
	return xxx_messageInfo_SessionTracking.Size(m)
}
func (m *SessionTracking) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionTracking.DiscardUnknown(m)
}

var xxx_messageInfo_SessionTracking proto.InternalMessageInfo

func (m *SessionTracking) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SessionTracking) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *SessionTracking) GetStarted() int64 {
	if m != nil && m.Started != nil {
		return *m.Started
	}
	return 0
}

func (m *SessionTracking) GetTracked() int64 {
	if m != nil && m.Tracked != nil {
		return *m.Tracked
	}
	return 0
}

func (m *SessionTracking) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

type Topic struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Topic                *string         `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	Type                 *string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Updated              *int64          `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Unread               *int32          `protobuf:"varint,9,opt,name=unread" json:"unread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{6}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Topic) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Topic) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Topic) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Topic) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Topic) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type UnreadTopic struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Topic                *string         `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	AgentId              *string         `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId               *string         `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Type                 *string         `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	Updated              *int64          `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Unread               *int32          `protobuf:"varint,9,opt,name=unread" json:"unread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnreadTopic) Reset()         { *m = UnreadTopic{} }
func (m *UnreadTopic) String() string { return proto.CompactTextString(m) }
func (*UnreadTopic) ProtoMessage()    {}
func (*UnreadTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{7}
}

func (m *UnreadTopic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnreadTopic.Unmarshal(m, b)
}
func (m *UnreadTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnreadTopic.Marshal(b, m, deterministic)
}
func (m *UnreadTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnreadTopic.Merge(m, src)
}
func (m *UnreadTopic) XXX_Size() int {
	return xxx_messageInfo_UnreadTopic.Size(m)
}
func (m *UnreadTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_UnreadTopic.DiscardUnknown(m)
}

var xxx_messageInfo_UnreadTopic proto.InternalMessageInfo

func (m *UnreadTopic) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UnreadTopic) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *UnreadTopic) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *UnreadTopic) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UnreadTopic) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UnreadTopic) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *UnreadTopic) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type ReadTopicRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Topic                *string         `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	UserId               *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,5,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReadTopicRequest) Reset()         { *m = ReadTopicRequest{} }
func (m *ReadTopicRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTopicRequest) ProtoMessage()    {}
func (*ReadTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{8}
}

func (m *ReadTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTopicRequest.Unmarshal(m, b)
}
func (m *ReadTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTopicRequest.Marshal(b, m, deterministic)
}
func (m *ReadTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTopicRequest.Merge(m, src)
}
func (m *ReadTopicRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTopicRequest.Size(m)
}
func (m *ReadTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTopicRequest proto.InternalMessageInfo

func (m *ReadTopicRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ReadTopicRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ReadTopicRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *ReadTopicRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ReadTopicRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type SubscribeRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AgentId              *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Topics               []string        `protobuf:"bytes,4,rep,name=topics" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{9}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubscribeRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *SubscribeRequest) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type AggregateUpdateInteracted struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Interacted           *int64          `protobuf:"varint,5,opt,name=interacted" json:"interacted,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AggregateUpdateInteracted) Reset()         { *m = AggregateUpdateInteracted{} }
func (m *AggregateUpdateInteracted) String() string { return proto.CompactTextString(m) }
func (*AggregateUpdateInteracted) ProtoMessage()    {}
func (*AggregateUpdateInteracted) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{10}
}

func (m *AggregateUpdateInteracted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateUpdateInteracted.Unmarshal(m, b)
}
func (m *AggregateUpdateInteracted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateUpdateInteracted.Marshal(b, m, deterministic)
}
func (m *AggregateUpdateInteracted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateUpdateInteracted.Merge(m, src)
}
func (m *AggregateUpdateInteracted) XXX_Size() int {
	return xxx_messageInfo_AggregateUpdateInteracted.Size(m)
}
func (m *AggregateUpdateInteracted) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateUpdateInteracted.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateUpdateInteracted proto.InternalMessageInfo

func (m *AggregateUpdateInteracted) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AggregateUpdateInteracted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AggregateUpdateInteracted) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AggregateUpdateInteracted) GetInteracted() int64 {
	if m != nil && m.Interacted != nil {
		return *m.Interacted
	}
	return 0
}

func (m *AggregateUpdateInteracted) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type AggregateSegmentAttrCount struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Min                  *int64          `protobuf:"varint,3,opt,name=min" json:"min,omitempty"`
	Count                *int64          `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	SegmentationId       *string         `protobuf:"bytes,7,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Attribute            *string         `protobuf:"bytes,8,opt,name=attribute" json:"attribute,omitempty"`
	Hour                 *int64          `protobuf:"varint,9,opt,name=hour" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AggregateSegmentAttrCount) Reset()         { *m = AggregateSegmentAttrCount{} }
func (m *AggregateSegmentAttrCount) String() string { return proto.CompactTextString(m) }
func (*AggregateSegmentAttrCount) ProtoMessage()    {}
func (*AggregateSegmentAttrCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{11}
}

func (m *AggregateSegmentAttrCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateSegmentAttrCount.Unmarshal(m, b)
}
func (m *AggregateSegmentAttrCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateSegmentAttrCount.Marshal(b, m, deterministic)
}
func (m *AggregateSegmentAttrCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateSegmentAttrCount.Merge(m, src)
}
func (m *AggregateSegmentAttrCount) XXX_Size() int {
	return xxx_messageInfo_AggregateSegmentAttrCount.Size(m)
}
func (m *AggregateSegmentAttrCount) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateSegmentAttrCount.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateSegmentAttrCount proto.InternalMessageInfo

func (m *AggregateSegmentAttrCount) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AggregateSegmentAttrCount) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetMin() int64 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetAttribute() string {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetHour() int64 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

type SubizIDRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	SubizId              *string         `protobuf:"bytes,2,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubizIDRequest) Reset()         { *m = SubizIDRequest{} }
func (m *SubizIDRequest) String() string { return proto.CompactTextString(m) }
func (*SubizIDRequest) ProtoMessage()    {}
func (*SubizIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{12}
}

func (m *SubizIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubizIDRequest.Unmarshal(m, b)
}
func (m *SubizIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubizIDRequest.Marshal(b, m, deterministic)
}
func (m *SubizIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubizIDRequest.Merge(m, src)
}
func (m *SubizIDRequest) XXX_Size() int {
	return xxx_messageInfo_SubizIDRequest.Size(m)
}
func (m *SubizIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubizIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubizIDRequest proto.InternalMessageInfo

func (m *SubizIDRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubizIDRequest) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *SubizIDRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type MaskResponse struct {
	SubizId              *string  `protobuf:"bytes,2,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	AccountId            *string  `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Mask                 *string  `protobuf:"bytes,5,opt,name=mask" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaskResponse) Reset()         { *m = MaskResponse{} }
func (m *MaskResponse) String() string { return proto.CompactTextString(m) }
func (*MaskResponse) ProtoMessage()    {}
func (*MaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{13}
}

func (m *MaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaskResponse.Unmarshal(m, b)
}
func (m *MaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaskResponse.Marshal(b, m, deterministic)
}
func (m *MaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaskResponse.Merge(m, src)
}
func (m *MaskResponse) XXX_Size() int {
	return xxx_messageInfo_MaskResponse.Size(m)
}
func (m *MaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaskResponse proto.InternalMessageInfo

func (m *MaskResponse) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *MaskResponse) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *MaskResponse) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *MaskResponse) GetMask() string {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return ""
}

type SubizIDResponse struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	SubizId              *string         `protobuf:"bytes,2,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubizIDResponse) Reset()         { *m = SubizIDResponse{} }
func (m *SubizIDResponse) String() string { return proto.CompactTextString(m) }
func (*SubizIDResponse) ProtoMessage()    {}
func (*SubizIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{14}
}

func (m *SubizIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubizIDResponse.Unmarshal(m, b)
}
func (m *SubizIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubizIDResponse.Marshal(b, m, deterministic)
}
func (m *SubizIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubizIDResponse.Merge(m, src)
}
func (m *SubizIDResponse) XXX_Size() int {
	return xxx_messageInfo_SubizIDResponse.Size(m)
}
func (m *SubizIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubizIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubizIDResponse proto.InternalMessageInfo

func (m *SubizIDResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubizIDResponse) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *SubizIDResponse) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SubizIDResponse) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type Segmentations struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Segmentations        []*Segmentation `protobuf:"bytes,3,rep,name=segmentations" json:"segmentations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Segmentations) Reset()         { *m = Segmentations{} }
func (m *Segmentations) String() string { return proto.CompactTextString(m) }
func (*Segmentations) ProtoMessage()    {}
func (*Segmentations) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{15}
}

func (m *Segmentations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segmentations.Unmarshal(m, b)
}
func (m *Segmentations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segmentations.Marshal(b, m, deterministic)
}
func (m *Segmentations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segmentations.Merge(m, src)
}
func (m *Segmentations) XXX_Size() int {
	return xxx_messageInfo_Segmentations.Size(m)
}
func (m *Segmentations) XXX_DiscardUnknown() {
	xxx_messageInfo_Segmentations.DiscardUnknown(m)
}

var xxx_messageInfo_Segmentations proto.InternalMessageInfo

func (m *Segmentations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentations) GetSegmentations() []*Segmentation {
	if m != nil {
		return m.Segmentations
	}
	return nil
}

type Segmentation struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          *string         `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	UserCount            *int64          `protobuf:"varint,4,opt,name=user_count,json=userCount" json:"user_count,omitempty"`
	StartedFrom          *int64          `protobuf:"varint,7,opt,name=started_from,json=startedFrom" json:"started_from,omitempty"`
	Created              *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,10,opt,name=modified" json:"modified,omitempty"`
	State                *string         `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Conditions           []*SCondition   `protobuf:"bytes,19,rep,name=conditions" json:"conditions,omitempty"`
	Creator              *string         `protobuf:"bytes,20,opt,name=creator" json:"creator,omitempty"`
	Scope                *string         `protobuf:"bytes,21,opt,name=scope" json:"scope,omitempty"`
	IsSystem             *bool           `protobuf:"varint,22,opt,name=is_system,json=isSystem" json:"is_system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Segmentation) Reset()         { *m = Segmentation{} }
func (m *Segmentation) String() string { return proto.CompactTextString(m) }
func (*Segmentation) ProtoMessage()    {}
func (*Segmentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{16}
}

func (m *Segmentation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segmentation.Unmarshal(m, b)
}
func (m *Segmentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segmentation.Marshal(b, m, deterministic)
}
func (m *Segmentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segmentation.Merge(m, src)
}
func (m *Segmentation) XXX_Size() int {
	return xxx_messageInfo_Segmentation.Size(m)
}
func (m *Segmentation) XXX_DiscardUnknown() {
	xxx_messageInfo_Segmentation.DiscardUnknown(m)
}

var xxx_messageInfo_Segmentation proto.InternalMessageInfo

func (m *Segmentation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Segmentation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Segmentation) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Segmentation) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Segmentation) GetUserCount() int64 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *Segmentation) GetStartedFrom() int64 {
	if m != nil && m.StartedFrom != nil {
		return *m.StartedFrom
	}
	return 0
}

func (m *Segmentation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Segmentation) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Segmentation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Segmentation) GetConditions() []*SCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Segmentation) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *Segmentation) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *Segmentation) GetIsSystem() bool {
	if m != nil && m.IsSystem != nil {
		return *m.IsSystem
	}
	return false
}

type Condition struct {
	Join                 *string  `protobuf:"bytes,1,opt,name=join" json:"join,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value                *string  `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Id                   *string  `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{17}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Condition) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type IndexEvent struct {
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId            *string  `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Created              *int64   `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Category             *string  `protobuf:"bytes,7,opt,name=category" json:"category,omitempty"`
	Topics               []string `protobuf:"bytes,8,rep,name=topics" json:"topics,omitempty"`
	Object               *string  `protobuf:"bytes,9,opt,name=object" json:"object,omitempty"`
	Text                 *string  `protobuf:"bytes,10,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexEvent) Reset()         { *m = IndexEvent{} }
func (m *IndexEvent) String() string { return proto.CompactTextString(m) }
func (*IndexEvent) ProtoMessage()    {}
func (*IndexEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{18}
}

func (m *IndexEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexEvent.Unmarshal(m, b)
}
func (m *IndexEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexEvent.Marshal(b, m, deterministic)
}
func (m *IndexEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexEvent.Merge(m, src)
}
func (m *IndexEvent) XXX_Size() int {
	return xxx_messageInfo_IndexEvent.Size(m)
}
func (m *IndexEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexEvent.DiscardUnknown(m)
}

var xxx_messageInfo_IndexEvent proto.InternalMessageInfo

func (m *IndexEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *IndexEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *IndexEvent) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *IndexEvent) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *IndexEvent) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *IndexEvent) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *IndexEvent) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *IndexEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type ListTopicsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,5,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	Limit                *int32          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Unread               *bool           `protobuf:"varint,8,opt,name=unread" json:"unread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListTopicsRequest) Reset()         { *m = ListTopicsRequest{} }
func (m *ListTopicsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTopicsRequest) ProtoMessage()    {}
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{19}
}

func (m *ListTopicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTopicsRequest.Unmarshal(m, b)
}
func (m *ListTopicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTopicsRequest.Marshal(b, m, deterministic)
}
func (m *ListTopicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTopicsRequest.Merge(m, src)
}
func (m *ListTopicsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTopicsRequest.Size(m)
}
func (m *ListTopicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTopicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTopicsRequest proto.InternalMessageInfo

func (m *ListTopicsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListTopicsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListTopicsRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListTopicsRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ListTopicsRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListTopicsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListTopicsRequest) GetUnread() bool {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return false
}

type ListTopicsResult struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Topics               []*Topic        `protobuf:"bytes,3,rep,name=topics" json:"topics,omitempty"`
	Anchor               *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListTopicsResult) Reset()         { *m = ListTopicsResult{} }
func (m *ListTopicsResult) String() string { return proto.CompactTextString(m) }
func (*ListTopicsResult) ProtoMessage()    {}
func (*ListTopicsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{20}
}

func (m *ListTopicsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTopicsResult.Unmarshal(m, b)
}
func (m *ListTopicsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTopicsResult.Marshal(b, m, deterministic)
}
func (m *ListTopicsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTopicsResult.Merge(m, src)
}
func (m *ListTopicsResult) XXX_Size() int {
	return xxx_messageInfo_ListTopicsResult.Size(m)
}
func (m *ListTopicsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTopicsResult.DiscardUnknown(m)
}

var xxx_messageInfo_ListTopicsResult proto.InternalMessageInfo

func (m *ListTopicsResult) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListTopicsResult) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *ListTopicsResult) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type ListNewsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	StartTime            *int64          `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Limit                *string         `protobuf:"bytes,7,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListNewsRequest) Reset()         { *m = ListNewsRequest{} }
func (m *ListNewsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNewsRequest) ProtoMessage()    {}
func (*ListNewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{21}
}

func (m *ListNewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNewsRequest.Unmarshal(m, b)
}
func (m *ListNewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNewsRequest.Marshal(b, m, deterministic)
}
func (m *ListNewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNewsRequest.Merge(m, src)
}
func (m *ListNewsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNewsRequest.Size(m)
}
func (m *ListNewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNewsRequest proto.InternalMessageInfo

func (m *ListNewsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListNewsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListNewsRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListNewsRequest) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ListNewsRequest) GetLimit() string {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return ""
}

type AddToMyList struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AgentId              *string         `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddToMyList) Reset()         { *m = AddToMyList{} }
func (m *AddToMyList) String() string { return proto.CompactTextString(m) }
func (*AddToMyList) ProtoMessage()    {}
func (*AddToMyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{22}
}

func (m *AddToMyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddToMyList.Unmarshal(m, b)
}
func (m *AddToMyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddToMyList.Marshal(b, m, deterministic)
}
func (m *AddToMyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddToMyList.Merge(m, src)
}
func (m *AddToMyList) XXX_Size() int {
	return xxx_messageInfo_AddToMyList.Size(m)
}
func (m *AddToMyList) XXX_DiscardUnknown() {
	xxx_messageInfo_AddToMyList.DiscardUnknown(m)
}

var xxx_messageInfo_AddToMyList proto.InternalMessageInfo

func (m *AddToMyList) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AddToMyList) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AddToMyList) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AddToMyList) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type DeleteAttrRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Key                  *string         `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteAttrRequest) Reset()         { *m = DeleteAttrRequest{} }
func (m *DeleteAttrRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAttrRequest) ProtoMessage()    {}
func (*DeleteAttrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{23}
}

func (m *DeleteAttrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttrRequest.Unmarshal(m, b)
}
func (m *DeleteAttrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttrRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAttrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttrRequest.Merge(m, src)
}
func (m *DeleteAttrRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAttrRequest.Size(m)
}
func (m *DeleteAttrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttrRequest proto.InternalMessageInfo

func (m *DeleteAttrRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *DeleteAttrRequest) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type SegmentIndex struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string  `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Year                 *int32   `protobuf:"varint,4,opt,name=year" json:"year,omitempty"`
	Day                  *int32   `protobuf:"varint,5,opt,name=day" json:"day,omitempty"`
	Hour                 *int32   `protobuf:"varint,6,opt,name=hour" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentIndex) Reset()         { *m = SegmentIndex{} }
func (m *SegmentIndex) String() string { return proto.CompactTextString(m) }
func (*SegmentIndex) ProtoMessage()    {}
func (*SegmentIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{24}
}

func (m *SegmentIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIndex.Unmarshal(m, b)
}
func (m *SegmentIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIndex.Marshal(b, m, deterministic)
}
func (m *SegmentIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIndex.Merge(m, src)
}
func (m *SegmentIndex) XXX_Size() int {
	return xxx_messageInfo_SegmentIndex.Size(m)
}
func (m *SegmentIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIndex.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIndex proto.InternalMessageInfo

func (m *SegmentIndex) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SegmentIndex) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *SegmentIndex) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *SegmentIndex) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SegmentIndex) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

type SegmentUser struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string  `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Day                  *int32   `protobuf:"varint,4,opt,name=day" json:"day,omitempty"`
	Hour                 *int32   `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	UserId               *string  `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Activated            *int64   `protobuf:"varint,7,opt,name=activated" json:"activated,omitempty"`
	PickedBy             *string  `protobuf:"bytes,8,opt,name=picked_by,json=pickedBy" json:"picked_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentUser) Reset()         { *m = SegmentUser{} }
func (m *SegmentUser) String() string { return proto.CompactTextString(m) }
func (*SegmentUser) ProtoMessage()    {}
func (*SegmentUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{25}
}

func (m *SegmentUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentUser.Unmarshal(m, b)
}
func (m *SegmentUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentUser.Marshal(b, m, deterministic)
}
func (m *SegmentUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentUser.Merge(m, src)
}
func (m *SegmentUser) XXX_Size() int {
	return xxx_messageInfo_SegmentUser.Size(m)
}
func (m *SegmentUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentUser.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentUser proto.InternalMessageInfo

func (m *SegmentUser) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SegmentUser) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *SegmentUser) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SegmentUser) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

func (m *SegmentUser) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *SegmentUser) GetActivated() int64 {
	if m != nil && m.Activated != nil {
		return *m.Activated
	}
	return 0
}

func (m *SegmentUser) GetPickedBy() string {
	if m != nil && m.PickedBy != nil {
		return *m.PickedBy
	}
	return ""
}

// can be
// {id, join, event_time, conditions} (grouped event condition)
// {id, join, conditions} (grouped condition)
// {id, key, operator, value} (user condition || simple event condition)
type SCondition struct {
	Id                   *string       `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Key                  *string       `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Operator             *string       `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	Value                *string       `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	Join                 *string       `protobuf:"bytes,7,opt,name=join" json:"join,omitempty"`
	EventTypeTime        *string       `protobuf:"bytes,8,opt,name=event_type_time,json=eventTypeTime" json:"event_type_time,omitempty"`
	EventType            *string       `protobuf:"bytes,10,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Conditions           []*SCondition `protobuf:"bytes,9,rep,name=conditions" json:"conditions,omitempty"`
	Priority             *int32        `protobuf:"varint,12,opt,name=priority" json:"priority,omitempty"`
	EventExisted         *bool         `protobuf:"varint,13,opt,name=event_existed,json=eventExisted" json:"event_existed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SCondition) Reset()         { *m = SCondition{} }
func (m *SCondition) String() string { return proto.CompactTextString(m) }
func (*SCondition) ProtoMessage()    {}
func (*SCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{26}
}

func (m *SCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCondition.Unmarshal(m, b)
}
func (m *SCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCondition.Marshal(b, m, deterministic)
}
func (m *SCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCondition.Merge(m, src)
}
func (m *SCondition) XXX_Size() int {
	return xxx_messageInfo_SCondition.Size(m)
}
func (m *SCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_SCondition.DiscardUnknown(m)
}

var xxx_messageInfo_SCondition proto.InternalMessageInfo

func (m *SCondition) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *SCondition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *SCondition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *SCondition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *SCondition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *SCondition) GetEventTypeTime() string {
	if m != nil && m.EventTypeTime != nil {
		return *m.EventTypeTime
	}
	return ""
}

func (m *SCondition) GetEventType() string {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return ""
}

func (m *SCondition) GetConditions() []*SCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *SCondition) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *SCondition) GetEventExisted() bool {
	if m != nil && m.EventExisted != nil {
		return *m.EventExisted
	}
	return false
}

type PublishSubscribed struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Topic                *string         `protobuf:"bytes,5,opt,name=topic" json:"topic,omitempty"`
	EventId              *string         `protobuf:"bytes,6,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	By                   *string         `protobuf:"bytes,8,opt,name=by" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PublishSubscribed) Reset()         { *m = PublishSubscribed{} }
func (m *PublishSubscribed) String() string { return proto.CompactTextString(m) }
func (*PublishSubscribed) ProtoMessage()    {}
func (*PublishSubscribed) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{27}
}

func (m *PublishSubscribed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishSubscribed.Unmarshal(m, b)
}
func (m *PublishSubscribed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishSubscribed.Marshal(b, m, deterministic)
}
func (m *PublishSubscribed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishSubscribed.Merge(m, src)
}
func (m *PublishSubscribed) XXX_Size() int {
	return xxx_messageInfo_PublishSubscribed.Size(m)
}
func (m *PublishSubscribed) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishSubscribed.DiscardUnknown(m)
}

var xxx_messageInfo_PublishSubscribed proto.InternalMessageInfo

func (m *PublishSubscribed) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PublishSubscribed) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PublishSubscribed) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *PublishSubscribed) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *PublishSubscribed) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *PublishSubscribed) GetBy() string {
	if m != nil && m.By != nil {
		return *m.By
	}
	return ""
}

type PublishSubscribedReply struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentIds             []string        `protobuf:"bytes,3,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	UserId               *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Topic                *string         `protobuf:"bytes,5,opt,name=topic" json:"topic,omitempty"`
	EventId              *string         `protobuf:"bytes,6,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	By                   *string         `protobuf:"bytes,8,opt,name=by" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PublishSubscribedReply) Reset()         { *m = PublishSubscribedReply{} }
func (m *PublishSubscribedReply) String() string { return proto.CompactTextString(m) }
func (*PublishSubscribedReply) ProtoMessage()    {}
func (*PublishSubscribedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{28}
}

func (m *PublishSubscribedReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishSubscribedReply.Unmarshal(m, b)
}
func (m *PublishSubscribedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishSubscribedReply.Marshal(b, m, deterministic)
}
func (m *PublishSubscribedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishSubscribedReply.Merge(m, src)
}
func (m *PublishSubscribedReply) XXX_Size() int {
	return xxx_messageInfo_PublishSubscribedReply.Size(m)
}
func (m *PublishSubscribedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishSubscribedReply.DiscardUnknown(m)
}

var xxx_messageInfo_PublishSubscribedReply proto.InternalMessageInfo

func (m *PublishSubscribedReply) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PublishSubscribedReply) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PublishSubscribedReply) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *PublishSubscribedReply) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *PublishSubscribedReply) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *PublishSubscribedReply) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *PublishSubscribedReply) GetBy() string {
	if m != nil && m.By != nil {
		return *m.By
	}
	return ""
}

type Note struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// optional string user_id = 4;
	CreatorId            *string     `protobuf:"bytes,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Text                 *string     `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
	Created              *int64      `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	CreatorType          *string     `protobuf:"bytes,8,opt,name=creator_type,json=creatorType" json:"creator_type,omitempty"`
	TargetId             *string     `protobuf:"bytes,9,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	TargetType           *string     `protobuf:"bytes,10,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	LinkId               *string     `protobuf:"bytes,11,opt,name=link_id,json=linkId" json:"link_id,omitempty"`
	LinkType             *string     `protobuf:"bytes,12,opt,name=link_type,json=linkType" json:"link_type,omitempty"`
	Format               *string     `protobuf:"bytes,13,opt,name=format" json:"format,omitempty"`
	Links                []*NoteLink `protobuf:"bytes,14,rep,name=links" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{29}
}

func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (m *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(m, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Note) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Note) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Note) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Note) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Note) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Note) GetCreatorType() string {
	if m != nil && m.CreatorType != nil {
		return *m.CreatorType
	}
	return ""
}

func (m *Note) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *Note) GetTargetType() string {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return ""
}

func (m *Note) GetLinkId() string {
	if m != nil && m.LinkId != nil {
		return *m.LinkId
	}
	return ""
}

func (m *Note) GetLinkType() string {
	if m != nil && m.LinkType != nil {
		return *m.LinkType
	}
	return ""
}

func (m *Note) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *Note) GetLinks() []*NoteLink {
	if m != nil {
		return m.Links
	}
	return nil
}

type NoteLink struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 *string  `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoteLink) Reset()         { *m = NoteLink{} }
func (m *NoteLink) String() string { return proto.CompactTextString(m) }
func (*NoteLink) ProtoMessage()    {}
func (*NoteLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{30}
}

func (m *NoteLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoteLink.Unmarshal(m, b)
}
func (m *NoteLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoteLink.Marshal(b, m, deterministic)
}
func (m *NoteLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoteLink.Merge(m, src)
}
func (m *NoteLink) XXX_Size() int {
	return xxx_messageInfo_NoteLink.Size(m)
}
func (m *NoteLink) XXX_DiscardUnknown() {
	xxx_messageInfo_NoteLink.DiscardUnknown(m)
}

var xxx_messageInfo_NoteLink proto.InternalMessageInfo

func (m *NoteLink) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *NoteLink) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type Notes struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Notes                []*Note         `protobuf:"bytes,3,rep,name=notes" json:"notes,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Notes) Reset()         { *m = Notes{} }
func (m *Notes) String() string { return proto.CompactTextString(m) }
func (*Notes) ProtoMessage()    {}
func (*Notes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{31}
}

func (m *Notes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notes.Unmarshal(m, b)
}
func (m *Notes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notes.Marshal(b, m, deterministic)
}
func (m *Notes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notes.Merge(m, src)
}
func (m *Notes) XXX_Size() int {
	return xxx_messageInfo_Notes.Size(m)
}
func (m *Notes) XXX_DiscardUnknown() {
	xxx_messageInfo_Notes.DiscardUnknown(m)
}

var xxx_messageInfo_Notes proto.InternalMessageInfo

func (m *Notes) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Notes) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Notes) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type ListNotesRequest struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// optional string user_id = 3;
	TargetId             *string  `protobuf:"bytes,4,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Limit                *int32   `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string  `protobuf:"bytes,6,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNotesRequest) Reset()         { *m = ListNotesRequest{} }
func (m *ListNotesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNotesRequest) ProtoMessage()    {}
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{32}
}

func (m *ListNotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotesRequest.Unmarshal(m, b)
}
func (m *ListNotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotesRequest.Marshal(b, m, deterministic)
}
func (m *ListNotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotesRequest.Merge(m, src)
}
func (m *ListNotesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNotesRequest.Size(m)
}
func (m *ListNotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotesRequest proto.InternalMessageInfo

func (m *ListNotesRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListNotesRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListNotesRequest) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *ListNotesRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListNotesRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type DeleteNoteRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TargetId             *string  `protobuf:"bytes,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Id                   *string  `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNoteRequest) Reset()         { *m = DeleteNoteRequest{} }
func (m *DeleteNoteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNoteRequest) ProtoMessage()    {}
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{33}
}

func (m *DeleteNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNoteRequest.Unmarshal(m, b)
}
func (m *DeleteNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNoteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNoteRequest.Merge(m, src)
}
func (m *DeleteNoteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNoteRequest.Size(m)
}
func (m *DeleteNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNoteRequest proto.InternalMessageInfo

func (m *DeleteNoteRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *DeleteNoteRequest) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *DeleteNoteRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("user.AttributeType", AttributeType_name, AttributeType_value)
	proto.RegisterEnum("user.AttributeKind", AttributeKind_name, AttributeKind_value)
	proto.RegisterEnum("user.Event", Event_name, Event_value)
	proto.RegisterEnum("user.JoinOperator", JoinOperator_name, JoinOperator_value)
	proto.RegisterEnum("user.ConditionType", ConditionType_name, ConditionType_value)
	proto.RegisterEnum("user.Segmentation_State", Segmentation_State_name, Segmentation_State_value)
	proto.RegisterEnum("user.Segmentation_Scope", Segmentation_Scope_name, Segmentation_Scope_value)
	proto.RegisterEnum("user.Condition_JoinOperator", Condition_JoinOperator_name, Condition_JoinOperator_value)
	proto.RegisterEnum("user.SCondition_EventTime", SCondition_EventTime_name, SCondition_EventTime_value)
	proto.RegisterEnum("user.SCondition_JoinOperator", SCondition_JoinOperator_name, SCondition_JoinOperator_value)
	proto.RegisterEnum("user.Note_CreatorType", Note_CreatorType_name, Note_CreatorType_value)
	proto.RegisterEnum("user.Note_Type", Note_Type_name, Note_Type_value)
	proto.RegisterEnum("user.Note_Format", Note_Format_name, Note_Format_value)
	proto.RegisterType((*AddToMyRequest)(nil), "user.AddToMyRequest")
	proto.RegisterType((*MyAgents)(nil), "user.MyAgents")
	proto.RegisterType((*UserCreateResult)(nil), "user.UserCreateResult")
	proto.RegisterType((*AttributeDefinition)(nil), "user.AttributeDefinition")
	proto.RegisterType((*AttributeDefinitions)(nil), "user.AttributeDefinitions")
	proto.RegisterType((*SessionTracking)(nil), "user.SessionTracking")
	proto.RegisterType((*Topic)(nil), "user.Topic")
	proto.RegisterType((*UnreadTopic)(nil), "user.UnreadTopic")
	proto.RegisterType((*ReadTopicRequest)(nil), "user.ReadTopicRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "user.SubscribeRequest")
	proto.RegisterType((*AggregateUpdateInteracted)(nil), "user.AggregateUpdateInteracted")
	proto.RegisterType((*AggregateSegmentAttrCount)(nil), "user.AggregateSegmentAttrCount")
	proto.RegisterType((*SubizIDRequest)(nil), "user.SubizIDRequest")
	proto.RegisterType((*MaskResponse)(nil), "user.MaskResponse")
	proto.RegisterType((*SubizIDResponse)(nil), "user.SubizIDResponse")
	proto.RegisterType((*Segmentations)(nil), "user.Segmentations")
	proto.RegisterType((*Segmentation)(nil), "user.Segmentation")
	proto.RegisterType((*Condition)(nil), "user.Condition")
	proto.RegisterType((*IndexEvent)(nil), "user.IndexEvent")
	proto.RegisterType((*ListTopicsRequest)(nil), "user.ListTopicsRequest")
	proto.RegisterType((*ListTopicsResult)(nil), "user.ListTopicsResult")
	proto.RegisterType((*ListNewsRequest)(nil), "user.ListNewsRequest")
	proto.RegisterType((*AddToMyList)(nil), "user.AddToMyList")
	proto.RegisterType((*DeleteAttrRequest)(nil), "user.DeleteAttrRequest")
	proto.RegisterType((*SegmentIndex)(nil), "user.SegmentIndex")
	proto.RegisterType((*SegmentUser)(nil), "user.SegmentUser")
	proto.RegisterType((*SCondition)(nil), "user.SCondition")
	proto.RegisterType((*PublishSubscribed)(nil), "user.PublishSubscribed")
	proto.RegisterType((*PublishSubscribedReply)(nil), "user.PublishSubscribedReply")
	proto.RegisterType((*Note)(nil), "user.Note")
	proto.RegisterType((*NoteLink)(nil), "user.NoteLink")
	proto.RegisterType((*Notes)(nil), "user.Notes")
	proto.RegisterType((*ListNotesRequest)(nil), "user.ListNotesRequest")
	proto.RegisterType((*DeleteNoteRequest)(nil), "user.DeleteNoteRequest")
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_ed89022014131a74) }

var fileDescriptor_ed89022014131a74 = []byte{
	// 2716 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x19, 0x4b, 0x73, 0x1c, 0x47,
	0xd9, 0xbd, 0xbb, 0xb3, 0x8f, 0x6f, 0xf5, 0x18, 0xb5, 0x65, 0x79, 0x2c, 0x47, 0x96, 0x3c, 0x36,
	0x89, 0x2c, 0x28, 0x9b, 0x72, 0x42, 0x08, 0x47, 0x45, 0x8e, 0x89, 0x42, 0x9c, 0xa4, 0x46, 0x72,
	0x38, 0xaa, 0x66, 0x67, 0x5a, 0xab, 0x8e, 0x76, 0x67, 0x96, 0x99, 0x5e, 0xd9, 0xcb, 0x89, 0x2a,
	0x0e, 0x40, 0x71, 0xa1, 0x8a, 0x2b, 0x05, 0xc5, 0x81, 0x33, 0xfc, 0x04, 0x8a, 0x03, 0x6f, 0x12,
	0x02, 0x14, 0x14, 0xef, 0x77, 0x05, 0x0a, 0x7e, 0x01, 0x27, 0xaa, 0xbf, 0xee, 0x99, 0xe9, 0x99,
	0x95, 0x12, 0xd9, 0x28, 0x5c, 0xa4, 0xf9, 0x1e, 0xd3, 0xdf, 0xfb, 0xd1, 0xb3, 0x30, 0x3f, 0x4e,
	0x59, 0x72, 0x4b, 0xfe, 0xb9, 0x39, 0x4a, 0x62, 0x11, 0xd3, 0x86, 0x7c, 0x5e, 0xfe, 0x60, 0x9f,
	0x8b, 0x83, 0x71, 0xef, 0x66, 0x10, 0x0f, 0x6f, 0xa5, 0xe3, 0x1e, 0xff, 0xf4, 0xad, 0x03, 0xe6,
	0x87, 0x2c, 0xb9, 0x15, 0xc4, 0xc3, 0x61, 0x1c, 0xe9, 0x7f, 0xea, 0x15, 0xf7, 0xf3, 0x04, 0xe6,
	0x36, 0xc3, 0x70, 0x37, 0xbe, 0x37, 0xf1, 0xd8, 0xa7, 0xc6, 0x2c, 0x15, 0xf4, 0x2a, 0xd4, 0x03,
	0xf1, 0xd0, 0x21, 0x6b, 0x64, 0xbd, 0x7b, 0x7b, 0xfe, 0xa6, 0x66, 0xdf, 0x8a, 0x23, 0xc1, 0x1e,
	0x0a, 0x4f, 0xd2, 0xe8, 0x45, 0x68, 0x49, 0x51, 0x7b, 0x3c, 0x74, 0xea, 0x6b, 0x64, 0xbd, 0xe3,
	0x35, 0x25, 0xb8, 0x1d, 0xd2, 0xcb, 0xd0, 0xf1, 0xfb, 0x2c, 0x12, 0x7b, 0x3c, 0x4c, 0x1d, 0x6b,
	0xad, 0xbe, 0xde, 0xf1, 0xda, 0x88, 0xd8, 0x0e, 0x53, 0xba, 0x02, 0xe0, 0x07, 0x41, 0x3c, 0x46,
	0xb2, 0x53, 0xc3, 0x17, 0x3b, 0x1a, 0xb3, 0x1d, 0xba, 0x5f, 0x21, 0xd0, 0xbe, 0x37, 0xd9, 0x94,
	0xdc, 0xe9, 0x69, 0x94, 0x78, 0xf7, 0xe3, 0x1e, 0x53, 0x47, 0x07, 0x5a, 0xe3, 0x51, 0xe8, 0x0b,
	0x16, 0x3a, 0xcd, 0x35, 0xb2, 0x5e, 0xf7, 0x32, 0xd0, 0x7d, 0x16, 0xec, 0xfb, 0x29, 0x4b, 0xb6,
	0x12, 0xe6, 0x0b, 0xe6, 0xb1, 0x74, 0x3c, 0x10, 0x74, 0x0e, 0x6a, 0xf9, 0xf1, 0x35, 0x1e, 0x52,
	0x0a, 0x8d, 0xa1, 0x9f, 0x1e, 0x3a, 0x16, 0x62, 0xf0, 0xd9, 0xfd, 0x4c, 0x0d, 0xce, 0x6f, 0x0a,
	0x91, 0xf0, 0xde, 0x58, 0xb0, 0x3b, 0x6c, 0x9f, 0x47, 0x5c, 0xf0, 0x38, 0x3a, 0x03, 0x0b, 0x29,
	0x34, 0x22, 0x7f, 0xc8, 0xb4, 0x7c, 0x7c, 0xa6, 0x6b, 0xd0, 0x0d, 0x59, 0x1a, 0x24, 0x7c, 0x24,
	0x85, 0x38, 0x0d, 0x24, 0x99, 0x28, 0xf9, 0x96, 0x98, 0x8c, 0x58, 0xa6, 0xa3, 0x7c, 0x96, 0x82,
	0x06, 0x3c, 0x15, 0x7b, 0x5c, 0xb0, 0x61, 0xea, 0x34, 0xd1, 0x27, 0x1d, 0x89, 0xd9, 0x96, 0x08,
	0x6a, 0x43, 0xfd, 0x90, 0x4d, 0x9c, 0x16, 0xbe, 0x21, 0x1f, 0xe5, 0x21, 0x87, 0x3c, 0x0a, 0x9d,
	0xb6, 0x3a, 0x44, 0x3e, 0x9b, 0xae, 0xeb, 0x94, 0x5d, 0x27, 0x60, 0xf1, 0x18, 0x0f, 0x9c, 0x2a,
	0xc8, 0x1f, 0x03, 0xf0, 0xb3, 0x57, 0x53, 0xa7, 0xb6, 0x56, 0x5f, 0xef, 0xde, 0xbe, 0x74, 0x13,
	0x73, 0xfe, 0x98, 0x23, 0x3d, 0x83, 0xd9, 0xfd, 0x32, 0x81, 0xf9, 0x1d, 0x96, 0xa6, 0x3c, 0x8e,
	0x76, 0x13, 0x3f, 0x38, 0xe4, 0x51, 0xff, 0xb1, 0x73, 0xc6, 0x81, 0x56, 0x2a, 0xfc, 0x44, 0xda,
	0xd6, 0x50, 0xb6, 0x69, 0x50, 0x52, 0x84, 0x3c, 0xbd, 0x48, 0x18, 0x0d, 0xd2, 0x45, 0xb0, 0x44,
	0x2c, 0xfc, 0x01, 0xfa, 0xcd, 0xf2, 0x14, 0xe0, 0x7e, 0x83, 0x80, 0xb5, 0x1b, 0x8f, 0x78, 0x70,
	0x06, 0x09, 0x80, 0x12, 0x46, 0x3c, 0xd0, 0xca, 0x2a, 0xe0, 0xd8, 0x00, 0x1b, 0xb1, 0x69, 0x97,
	0x62, 0x43, 0x97, 0xa0, 0x39, 0x8e, 0x12, 0xe6, 0xab, 0xa0, 0x59, 0x9e, 0x86, 0xdc, 0x6f, 0x13,
	0xe8, 0xde, 0xc7, 0xc7, 0x53, 0x6b, 0x7b, 0xbc, 0x3a, 0x97, 0xa0, 0x9d, 0x95, 0x9b, 0x4e, 0xc7,
	0x96, 0xae, 0x36, 0xd3, 0xdd, 0x56, 0xc9, 0xdd, 0x99, 0x09, 0xcd, 0xff, 0xc9, 0x84, 0xaf, 0x12,
	0xb0, 0xbd, 0xcc, 0x80, 0x47, 0xe8, 0x6e, 0x8f, 0xe5, 0x75, 0xc3, 0x96, 0x46, 0xc9, 0x16, 0xd3,
	0x7e, 0xab, 0x64, 0xbf, 0x7b, 0x00, 0xf6, 0xce, 0xb8, 0x27, 0x4b, 0xb3, 0xc7, 0x1e, 0x41, 0x3f,
	0xf3, 0xc4, 0x7a, 0xd9, 0xa3, 0x4b, 0xd0, 0x44, 0x75, 0x52, 0xa7, 0x81, 0x45, 0xac, 0x21, 0xf7,
	0x5b, 0x04, 0x2e, 0x6d, 0xf6, 0xfb, 0x09, 0xeb, 0xfb, 0x82, 0xdd, 0x47, 0xbf, 0x6d, 0x47, 0x82,
	0x25, 0x7e, 0x20, 0x1d, 0xf8, 0x3e, 0x36, 0xdb, 0x2b, 0x00, 0x3c, 0x17, 0x84, 0xf6, 0xd7, 0x3d,
	0x03, 0x23, 0xa3, 0x1a, 0x60, 0x47, 0xcd, 0xcb, 0x47, 0x83, 0xee, 0x7f, 0x4c, 0x95, 0x77, 0x58,
	0x7f, 0xc8, 0x22, 0x21, 0x4b, 0x7e, 0x4b, 0x8a, 0x3c, 0x03, 0x95, 0x6d, 0xa8, 0x0f, 0x79, 0x84,
	0xea, 0xd6, 0x3d, 0xf9, 0x28, 0x03, 0x8b, 0x44, 0xad, 0xa6, 0x02, 0x4e, 0xd6, 0x90, 0x3e, 0x05,
	0xf3, 0xa9, 0xd2, 0xcb, 0x97, 0xcd, 0x47, 0x4a, 0x51, 0x2d, 0x72, 0xce, 0x44, 0x6f, 0x87, 0xf4,
	0x09, 0xe8, 0xe4, 0x7d, 0x49, 0xb7, 0xcc, 0x02, 0x21, 0x93, 0xfd, 0x20, 0x1e, 0x27, 0xba, 0x69,
	0xe2, 0xb3, 0x3b, 0x84, 0xb9, 0x1d, 0x39, 0xba, 0xb7, 0xef, 0x3c, 0x5a, 0x5e, 0xe0, 0xbc, 0x2f,
	0xcc, 0x6d, 0x21, 0xbc, 0x1d, 0x56, 0x7c, 0x51, 0xaf, 0x8e, 0xde, 0x31, 0xcc, 0xdc, 0xf3, 0xd3,
	0x43, 0x8f, 0xa5, 0xa3, 0x38, 0x4a, 0xd9, 0xe3, 0x9f, 0x74, 0x72, 0x19, 0x1c, 0x37, 0x1a, 0x3f,
	0x27, 0x3b, 0x74, 0x66, 0xa6, 0x16, 0xfd, 0x7e, 0xda, 0x79, 0xa2, 0x76, 0xee, 0x00, 0x66, 0x77,
	0x8c, 0x98, 0x9d, 0x6a, 0x34, 0x3d, 0x07, 0xb3, 0x66, 0x9c, 0x53, 0xa7, 0x8e, 0xd3, 0x89, 0xaa,
	0xe9, 0x64, 0x1e, 0xe7, 0x95, 0x19, 0xdd, 0x77, 0xea, 0x30, 0x63, 0xd2, 0xcf, 0x20, 0x9b, 0xd5,
	0x26, 0x62, 0x99, 0x9b, 0xc8, 0x7b, 0xed, 0x06, 0xdd, 0xe9, 0xdd, 0x60, 0x05, 0x00, 0xfd, 0xa3,
	0xca, 0x40, 0x4d, 0xba, 0x8e, 0xc4, 0x64, 0x45, 0x37, 0xa3, 0xc7, 0xde, 0xde, 0x7e, 0x12, 0x0f,
	0x31, 0xdb, 0xeb, 0x5e, 0x57, 0xe3, 0xee, 0x26, 0xf1, 0xd0, 0xac, 0x96, 0x4e, 0xb9, 0x5a, 0x96,
	0xa1, 0x3d, 0x8c, 0x43, 0xbe, 0xcf, 0x59, 0xe8, 0x00, 0x92, 0x72, 0x58, 0x56, 0x5e, 0x2a, 0x7c,
	0xc1, 0x9c, 0x19, 0xd5, 0x52, 0x11, 0xa0, 0x1f, 0x06, 0x08, 0xe2, 0x28, 0x54, 0xcb, 0x82, 0x73,
	0x1e, 0xbd, 0x6b, 0x6b, 0xef, 0x6e, 0x65, 0x04, 0xcf, 0xe0, 0xc9, 0xa5, 0xc7, 0x89, 0xb3, 0xa8,
	0x12, 0x43, 0x83, 0x28, 0x21, 0x88, 0x47, 0xcc, 0xb9, 0xa0, 0x25, 0x48, 0x40, 0xae, 0x82, 0x3c,
	0xdd, 0x4b, 0x27, 0xa9, 0x60, 0x43, 0x67, 0x69, 0x8d, 0xac, 0xb7, 0xbd, 0x36, 0x4f, 0x77, 0x10,
	0x76, 0xaf, 0x82, 0xb5, 0x83, 0x7a, 0x00, 0x34, 0xfd, 0x40, 0xf0, 0x23, 0x66, 0x9f, 0xa3, 0x33,
	0xd0, 0xe6, 0x91, 0x86, 0x88, 0xbb, 0x0a, 0xd6, 0x0e, 0x1e, 0xd4, 0x01, 0x0b, 0x5b, 0xb0, 0x7d,
	0x8e, 0x76, 0xa1, 0xa5, 0xc3, 0x62, 0x13, 0x39, 0x82, 0x3a, 0xb9, 0xaa, 0x32, 0x28, 0x6f, 0xc4,
	0x3c, 0xc2, 0x38, 0x77, 0x3c, 0x7c, 0xce, 0x76, 0xab, 0x5a, 0xb1, 0x5b, 0x2d, 0x43, 0x3b, 0x1e,
	0xb1, 0x04, 0xad, 0x50, 0xe1, 0xcb, 0x61, 0x69, 0xc6, 0x91, 0x3f, 0x18, 0x33, 0x9d, 0xbe, 0x0a,
	0xd0, 0xc1, 0x6f, 0x66, 0xc1, 0x77, 0x6f, 0xc0, 0xcc, 0x4b, 0x31, 0x8f, 0x5e, 0xcd, 0xde, 0x6a,
	0x43, 0x23, 0x8a, 0x23, 0xa9, 0x7e, 0x0b, 0xea, 0x7e, 0x14, 0xda, 0x84, 0x36, 0xa1, 0x16, 0x27,
	0x76, 0xcd, 0x7d, 0x93, 0x00, 0x6c, 0x47, 0x21, 0x7b, 0xf8, 0xc2, 0x11, 0x8b, 0xa6, 0x17, 0xda,
	0x72, 0xd6, 0x35, 0xde, 0xa5, 0x9e, 0xac, 0xea, 0xbe, 0x74, 0x42, 0xd3, 0x5c, 0x86, 0x76, 0xe0,
	0x0b, 0xd6, 0x8f, 0x93, 0x6c, 0xa1, 0xcc, 0x61, 0x63, 0x7a, 0xb5, 0xcd, 0xe9, 0x25, 0xf1, 0x71,
	0xef, 0x0d, 0x16, 0x08, 0xcc, 0xa9, 0x8e, 0xa7, 0x21, 0x5c, 0x13, 0xd8, 0x43, 0x81, 0xe9, 0x24,
	0xd7, 0x04, 0xf6, 0x50, 0xb8, 0x6f, 0x11, 0x58, 0x78, 0x99, 0xa7, 0x02, 0x87, 0x7e, 0x7a, 0x76,
	0x53, 0xff, 0xc4, 0x09, 0x77, 0xf2, 0x7c, 0x97, 0x7a, 0xfb, 0x51, 0x70, 0x10, 0x27, 0x59, 0xb7,
	0x51, 0x90, 0x8c, 0xe2, 0x80, 0x0f, 0xb9, 0xc8, 0x36, 0x43, 0x04, 0x8c, 0x35, 0xa6, 0x8d, 0x99,
	0x98, 0xad, 0x31, 0x09, 0xd8, 0xa6, 0x41, 0x78, 0xf1, 0x38, 0x85, 0x3d, 0xd7, 0x72, 0x67, 0xaa,
	0xbe, 0xd4, 0x55, 0x95, 0xa3, 0x96, 0x21, 0xc3, 0xb3, 0x5a, 0x43, 0xcb, 0xd4, 0xd0, 0xfd, 0x3a,
	0x81, 0x79, 0x29, 0xf4, 0x15, 0xf6, 0xe0, 0xff, 0xe1, 0xc3, 0x15, 0x00, 0x6c, 0x22, 0x7b, 0x82,
	0x0f, 0x59, 0xd6, 0x77, 0x10, 0xb3, 0xcb, 0x87, 0xac, 0xec, 0xaf, 0x8e, 0xf6, 0x97, 0xfb, 0x59,
	0x02, 0x5d, 0x7d, 0x75, 0x95, 0xaa, 0x3e, 0xea, 0xe6, 0x54, 0x3b, 0x71, 0x17, 0x9d, 0xd2, 0xcd,
	0xb0, 0xc9, 0xaa, 0x8e, 0xce, 0x17, 0x61, 0xe1, 0x0e, 0x1b, 0x30, 0xc1, 0xe4, 0x6e, 0xf2, 0x08,
	0xae, 0x9a, 0xaa, 0x7b, 0xf7, 0x4b, 0x24, 0x9f, 0x0a, 0x58, 0x91, 0xef, 0xe5, 0xcd, 0x63, 0xd6,
	0x8f, 0xfa, 0xb1, 0xeb, 0x07, 0x85, 0xc6, 0x84, 0xf9, 0x2a, 0x09, 0x2d, 0x0f, 0x9f, 0xa5, 0xf8,
	0xd0, 0x9f, 0xa0, 0x39, 0x96, 0x27, 0x1f, 0xf3, 0x35, 0xa4, 0xa9, 0xb8, 0x70, 0x0d, 0x79, 0x8b,
	0x40, 0x57, 0xab, 0x24, 0xef, 0xbe, 0x67, 0xa6, 0x91, 0x96, 0xde, 0x98, 0x96, 0x6e, 0x15, 0xd2,
	0xcd, 0x90, 0x34, 0x4b, 0x21, 0x91, 0xfb, 0x94, 0x6c, 0xc1, 0xd8, 0x5f, 0xd4, 0x10, 0x2a, 0x10,
	0xb2, 0xa9, 0x8f, 0xb8, 0xbc, 0x81, 0xed, 0xf5, 0x26, 0x7a, 0xdb, 0x6a, 0x2b, 0xc4, 0xf3, 0x13,
	0xf7, 0x0b, 0x75, 0x80, 0x62, 0x78, 0x4c, 0xf5, 0x3b, 0x1d, 0x95, 0xc6, 0xf1, 0xdd, 0xd8, 0x3a,
	0xa9, 0x1b, 0x37, 0xcd, 0x6e, 0x9c, 0x75, 0xf9, 0x96, 0xd1, 0xe5, 0x9f, 0x84, 0x79, 0x26, 0x1b,
	0xec, 0x9e, 0xbc, 0xca, 0xa8, 0x2c, 0x57, 0x9a, 0xcd, 0x22, 0x7a, 0x77, 0x32, 0x62, 0x98, 0xe9,
	0x2b, 0x00, 0x05, 0x9f, 0xee, 0x6b, 0x9d, 0x9c, 0xa5, 0x32, 0x11, 0x3b, 0xa7, 0x98, 0x88, 0xcb,
	0xd0, 0x1e, 0x25, 0x3c, 0x4e, 0xb8, 0x98, 0xe0, 0x70, 0xb5, 0xbc, 0x1c, 0xa6, 0xd7, 0x40, 0x49,
	0xdf, 0x63, 0x0f, 0x79, 0x2a, 0x5d, 0x39, 0x8b, 0x7d, 0x67, 0x06, 0x91, 0x2f, 0x28, 0x9c, 0xfb,
	0x1c, 0x74, 0x70, 0x34, 0xa0, 0x7a, 0xc5, 0x20, 0xe9, 0x42, 0x2b, 0x18, 0x27, 0x89, 0x1c, 0x79,
	0x44, 0x0e, 0xc8, 0x81, 0x2f, 0x58, 0x2a, 0xec, 0x9a, 0x64, 0x19, 0xf9, 0xa9, 0xb0, 0xeb, 0xee,
	0x6a, 0x65, 0x0a, 0xe9, 0xd9, 0x73, 0x4e, 0xcf, 0x1e, 0xe2, 0x7e, 0x93, 0xc0, 0xc2, 0x6b, 0xe3,
	0xde, 0x80, 0xa7, 0x07, 0xf9, 0x35, 0xe8, 0x8c, 0x2f, 0x23, 0xe5, 0x1d, 0x34, 0xbf, 0xb9, 0x59,
	0x95, 0x0b, 0xaa, 0x72, 0x43, 0x9e, 0x67, 0x2d, 0x84, 0xd5, 0x56, 0x95, 0xe7, 0x50, 0xad, 0x37,
	0x71, 0xdf, 0x26, 0xb0, 0x34, 0xa5, 0xb1, 0xc7, 0x46, 0x83, 0xc9, 0x19, 0xa8, 0x5d, 0xfa, 0x2e,
	0x55, 0xaf, 0x7c, 0x97, 0x7a, 0xff, 0x6c, 0xfa, 0x62, 0x03, 0x1a, 0xaf, 0xc4, 0x82, 0x9d, 0xd9,
	0x12, 0x5a, 0xda, 0x1e, 0xf4, 0xfe, 0x65, 0xb4, 0x4e, 0x8d, 0xd1, 0xb7, 0x7c, 0x39, 0xbe, 0x9b,
	0xc5, 0xf8, 0x36, 0x17, 0x87, 0x56, 0x79, 0x71, 0xb8, 0x0a, 0x33, 0xd9, 0x61, 0x58, 0x1c, 0xca,
	0x82, 0xae, 0xc6, 0x61, 0x79, 0x5c, 0x86, 0x8e, 0xf0, 0x93, 0x3e, 0x43, 0xed, 0xd4, 0xaa, 0xd0,
	0x56, 0x88, 0xed, 0x90, 0xae, 0x42, 0x57, 0x13, 0x8d, 0xda, 0x02, 0x85, 0xc2, 0xb7, 0x2f, 0x42,
	0x6b, 0xc0, 0xa3, 0x43, 0xf9, 0xae, 0x5a, 0x8d, 0x9b, 0x12, 0x54, 0x81, 0x41, 0x02, 0xbe, 0xa7,
	0x36, 0xd4, 0xb6, 0x44, 0xe0, 0x5b, 0x4b, 0xd0, 0xdc, 0x8f, 0x93, 0xa1, 0x2f, 0xb0, 0x7a, 0x3a,
	0x9e, 0x86, 0xe8, 0x75, 0x39, 0xb3, 0xa2, 0xc3, 0xd4, 0x99, 0xc3, 0x2a, 0x9d, 0x53, 0x55, 0x2a,
	0x1d, 0xfd, 0x32, 0x8f, 0x0e, 0x3d, 0x45, 0x74, 0xaf, 0x43, 0x77, 0xcb, 0x30, 0xc0, 0x58, 0x23,
	0x01, 0x9a, 0x6a, 0x2f, 0xb5, 0x89, 0xfb, 0x1c, 0x34, 0x90, 0x6c, 0xc3, 0x4c, 0x10, 0x47, 0x47,
	0x2c, 0x49, 0xb1, 0x91, 0x2a, 0x2e, 0x21, 0x5b, 0x9b, 0xac, 0xc2, 0x36, 0x34, 0x42, 0xe6, 0x0f,
	0x54, 0x0d, 0x4a, 0x69, 0x76, 0xdd, 0xbd, 0x05, 0xcd, 0xbb, 0x4a, 0x9f, 0x59, 0xe8, 0x8c, 0x06,
	0x3e, 0xc7, 0x60, 0xaa, 0x3d, 0x76, 0xe8, 0x27, 0x87, 0x61, 0xfc, 0x20, 0x52, 0xaf, 0x1e, 0x88,
	0xe1, 0xc0, 0xae, 0xb9, 0x37, 0xa1, 0x9d, 0xe9, 0xa8, 0xc3, 0x49, 0xcc, 0x3b, 0x05, 0xba, 0xa0,
	0x56, 0x7c, 0x95, 0x71, 0x43, 0xb0, 0x24, 0xff, 0xa9, 0x2e, 0x4c, 0x6b, 0x60, 0x45, 0x92, 0x57,
	0x2f, 0x24, 0x50, 0xb8, 0xc4, 0x53, 0x84, 0x93, 0x16, 0x26, 0xf7, 0x6b, 0x44, 0xed, 0x40, 0x28,
	0xea, 0xec, 0xf6, 0x91, 0x52, 0xbe, 0x34, 0x2a, 0xf9, 0x92, 0x2f, 0x1d, 0x56, 0x65, 0x49, 0xd3,
	0x1a, 0x36, 0x4b, 0x1a, 0xee, 0x65, 0x6b, 0x00, 0x9a, 0xa3, 0x35, 0x7c, 0x14, 0xf1, 0xf5, 0x8a,
	0x78, 0xe5, 0xfc, 0x46, 0xe6, 0xfc, 0x8d, 0x97, 0x60, 0x36, 0xff, 0xe0, 0x89, 0xc9, 0xd0, 0x56,
	0xd5, 0xa3, 0x92, 0x20, 0x1a, 0x0f, 0x7b, 0x2c, 0xb1, 0x89, 0xec, 0xcb, 0xbd, 0x38, 0x1e, 0x30,
	0x3f, 0xb2, 0x6b, 0x32, 0xc8, 0xa1, 0x2f, 0x98, 0x1c, 0x37, 0x76, 0x5d, 0xbe, 0x30, 0xe0, 0xa9,
	0xb0, 0x1b, 0x1b, 0xcf, 0x18, 0x67, 0x7d, 0x82, 0x47, 0xa1, 0x91, 0x6c, 0xd8, 0xd9, 0x43, 0xb6,
	0xef, 0x8f, 0x07, 0xba, 0xb3, 0x07, 0xe3, 0x54, 0xc4, 0x43, 0xbb, 0xb6, 0xf1, 0x9d, 0x05, 0xb0,
	0xd4, 0x2d, 0xe1, 0x02, 0x2c, 0xc8, 0x75, 0xc0, 0x63, 0x7e, 0xa8, 0x4d, 0x65, 0xb2, 0xaf, 0x5f,
	0x84, 0xf3, 0x12, 0xad, 0x3e, 0x2f, 0x15, 0x84, 0x5a, 0x46, 0xc8, 0x3e, 0x9d, 0x67, 0x84, 0x7a,
	0x46, 0xd8, 0x61, 0x7e, 0x12, 0x1c, 0x14, 0x84, 0x06, 0x7d, 0x02, 0x1c, 0x49, 0x40, 0x71, 0xd5,
	0xd7, 0xac, 0x12, 0xb5, 0xfa, 0x6e, 0x2b, 0xa3, 0xe2, 0xa2, 0x5b, 0xa5, 0x36, 0xe9, 0x35, 0x58,
	0x55, 0x22, 0x8b, 0x85, 0xa4, 0x2a, 0x00, 0x8e, 0x63, 0xaa, 0x5a, 0xd5, 0x3d, 0x8e, 0x49, 0xa5,
	0x40, 0xc1, 0x34, 0x43, 0xaf, 0xc2, 0x4a, 0x95, 0x49, 0x26, 0x72, 0xc1, 0x32, 0x7b, 0x1c, 0x4b,
	0xd9, 0xb3, 0x73, 0x99, 0x49, 0xc6, 0xb6, 0x5b, 0x50, 0x17, 0xb3, 0x03, 0x3c, 0x36, 0x8c, 0x8f,
	0x98, 0xbc, 0x85, 0x57, 0x59, 0x2e, 0xd0, 0xeb, 0xb0, 0x96, 0x7b, 0x4c, 0x39, 0xa6, 0xf2, 0xdd,
	0x91, 0x85, 0xf6, 0x35, 0xfa, 0x24, 0xb8, 0x65, 0xae, 0xfb, 0x51, 0x3a, 0xcd, 0x77, 0x9d, 0x2e,
	0xc3, 0x52, 0x16, 0x7f, 0xf3, 0xdb, 0x2a, 0x0b, 0xed, 0x1b, 0x74, 0x1e, 0xba, 0x68, 0x8d, 0xfa,
	0x20, 0x63, 0x6f, 0xd0, 0x15, 0xb8, 0x24, 0x11, 0xaf, 0x25, 0x2c, 0x65, 0x51, 0xc0, 0xca, 0xa6,
	0x7d, 0x88, 0xae, 0xc2, 0x65, 0x4d, 0x3e, 0xe2, 0xec, 0x01, 0x8f, 0xfa, 0x65, 0x86, 0x9b, 0xd4,
	0x81, 0x45, 0xc9, 0xa0, 0xaf, 0x40, 0x05, 0xe5, 0x56, 0x66, 0xf7, 0xe6, 0x58, 0xc4, 0x43, 0x1d,
	0xa3, 0x94, 0x25, 0x86, 0xdd, 0xb7, 0xa7, 0x59, 0xaa, 0x11, 0x7a, 0x3a, 0x53, 0xa0, 0x60, 0x29,
	0xfb, 0xee, 0x99, 0x69, 0x86, 0xb2, 0x86, 0x1f, 0x91, 0xce, 0x2d, 0x88, 0xf8, 0xfb, 0xd5, 0x2b,
	0xb1, 0xe0, 0xfb, 0x3c, 0x40, 0xc4, 0x5d, 0x9e, 0xb0, 0xd0, 0x7e, 0x56, 0x3a, 0xb7, 0xe0, 0xda,
	0x32, 0xda, 0xf8, 0x3d, 0x96, 0xa6, 0x7e, 0x9f, 0x29, 0xbe, 0x8f, 0xd2, 0x2b, 0xb0, 0xac, 0xd2,
	0x01, 0x7f, 0xb9, 0xa8, 0xa6, 0xdd, 0x66, 0x85, 0x5e, 0xcd, 0xdd, 0xe7, 0xb3, 0x5c, 0xd1, 0xf4,
	0xb2, 0xae, 0x5b, 0x74, 0x11, 0xec, 0x52, 0x2e, 0xc6, 0xf1, 0xc8, 0xbe, 0x23, 0xb1, 0x85, 0x6e,
	0x3b, 0x93, 0x28, 0x60, 0xa1, 0xbd, 0x4f, 0xcf, 0xc3, 0x7c, 0x81, 0x55, 0xea, 0xf5, 0xe9, 0x02,
	0xcc, 0xaa, 0xd8, 0x67, 0x67, 0x86, 0x59, 0xc8, 0x95, 0x2a, 0xa1, 0x7d, 0x97, 0x2e, 0x01, 0x45,
	0x8f, 0x65, 0x3d, 0x66, 0x33, 0x0c, 0x59, 0x68, 0x7f, 0x3c, 0x63, 0x54, 0x36, 0x85, 0xf6, 0x8b,
	0x74, 0x0e, 0x00, 0x75, 0x55, 0x12, 0x71, 0xc0, 0x29, 0x06, 0x19, 0x47, 0x16, 0xda, 0x3c, 0xc3,
	0xbc, 0xfe, 0xb4, 0xe6, 0x79, 0x83, 0xce, 0x40, 0x4b, 0x62, 0x5e, 0x8a, 0x7b, 0xf6, 0xf7, 0x08,
	0x5d, 0x84, 0x79, 0xa5, 0x4e, 0x1a, 0x0f, 0x8e, 0x58, 0x28, 0xb1, 0xdf, 0x27, 0xf4, 0x82, 0xfa,
	0xad, 0xce, 0xc0, 0xde, 0xb6, 0xbf, 0x4b, 0xe8, 0x8a, 0x72, 0x4d, 0x86, 0x36, 0xba, 0x4b, 0x68,
	0xff, 0x80, 0xd0, 0xf3, 0x30, 0x87, 0x6a, 0x0f, 0xb8, 0x9f, 0x2a, 0x95, 0x7f, 0x98, 0x1f, 0x85,
	0x48, 0x95, 0x3c, 0xa1, 0xfd, 0xa3, 0x1c, 0x5d, 0x3a, 0xe2, 0xc7, 0x84, 0x2e, 0xa9, 0xce, 0x88,
	0x43, 0x28, 0x12, 0xaf, 0x73, 0xf6, 0x80, 0x85, 0xf6, 0x4f, 0x72, 0x35, 0x75, 0xa8, 0x77, 0xe4,
	0x88, 0x7f, 0xb3, 0x10, 0x98, 0x7d, 0xe5, 0x0e, 0xed, 0xb7, 0x08, 0x5d, 0x50, 0x16, 0x63, 0x61,
	0x49, 0x73, 0x7e, 0x4a, 0xe8, 0x13, 0x70, 0xb1, 0x5c, 0x97, 0x7a, 0x07, 0x65, 0xa1, 0xfd, 0x36,
	0xa1, 0x57, 0x54, 0x81, 0x61, 0xce, 0x4d, 0xee, 0x4d, 0xca, 0xd1, 0xf9, 0x59, 0x6e, 0xb5, 0x0e,
	0xfb, 0x6b, 0x3c, 0x38, 0x2c, 0xc8, 0x3f, 0x27, 0x74, 0x35, 0xcb, 0x27, 0x75, 0xcd, 0x8b, 0x46,
	0x25, 0x86, 0x5f, 0x10, 0xea, 0xea, 0x1a, 0x3a, 0xe9, 0x5b, 0xbc, 0xfd, 0xcb, 0x69, 0x9e, 0xea,
	0x4f, 0x0c, 0xf6, 0xaf, 0x08, 0x5d, 0x86, 0x0b, 0x86, 0x20, 0xc3, 0xe8, 0x5f, 0xa3, 0x8e, 0x45,
	0xaa, 0x3d, 0x3f, 0x88, 0x83, 0x43, 0xc9, 0xaa, 0x72, 0xee, 0x37, 0x84, 0x3e, 0x65, 0xd6, 0x8e,
	0x3a, 0xbb, 0x94, 0x60, 0x8a, 0xf1, 0xb7, 0xe8, 0x8b, 0x82, 0xf1, 0x1e, 0x4b, 0xfa, 0xc8, 0x97,
	0x2a, 0xfa, 0xef, 0x08, 0xbd, 0x0e, 0xab, 0xc6, 0x41, 0x99, 0xd7, 0x4a, 0x95, 0xfa, 0x7b, 0x74,
	0x49, 0x99, 0xeb, 0x93, 0xac, 0x77, 0x10, 0xc7, 0x87, 0x8a, 0xe1, 0x0f, 0x18, 0x90, 0xa9, 0x63,
	0xb4, 0x12, 0x7f, 0x24, 0xf4, 0x49, 0xb8, 0x6a, 0x54, 0x3a, 0x26, 0x87, 0x59, 0xef, 0x8a, 0xef,
	0x4f, 0x84, 0xae, 0xc3, 0xb5, 0x77, 0xed, 0x08, 0xb7, 0x15, 0xe7, 0x9f, 0x2b, 0xf6, 0x9b, 0x9c,
	0x25, 0xc5, 0xfe, 0x42, 0xe8, 0x06, 0x7c, 0xc0, 0x68, 0x45, 0x61, 0x88, 0xdd, 0x68, 0x37, 0x9e,
	0x16, 0xff, 0x57, 0x42, 0xd7, 0xe0, 0x72, 0x55, 0xcd, 0x5d, 0xdc, 0x25, 0x15, 0xc7, 0xdf, 0x08,
	0xbd, 0x06, 0x57, 0x8e, 0x17, 0xbb, 0xeb, 0xf7, 0x15, 0xd3, 0xdf, 0x09, 0xbd, 0x01, 0xd7, 0x4b,
	0x22, 0x55, 0xf2, 0x9a, 0x4d, 0x46, 0xb1, 0xbe, 0x93, 0x67, 0xc0, 0x6e, 0x2c, 0xfc, 0x81, 0x3c,
	0x2e, 0xce, 0x3a, 0xc1, 0x3f, 0xf2, 0x34, 0x44, 0xda, 0xab, 0x23, 0x16, 0x29, 0x55, 0x32, 0x86,
	0x7f, 0x56, 0x82, 0xb2, 0x95, 0xb0, 0x90, 0x9b, 0x39, 0xf4, 0xaf, 0xaa, 0xb6, 0xc8, 0x80, 0xf9,
	0x99, 0x73, 0xd9, 0xff, 0x26, 0x1b, 0xa7, 0xff, 0x34, 0xba, 0x71, 0x03, 0x66, 0xf3, 0x3b, 0x35,
	0x6e, 0x5c, 0xb3, 0xc6, 0xcf, 0x38, 0xf6, 0x39, 0xb9, 0xac, 0xe3, 0x9d, 0xca, 0x26, 0xff, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x99, 0x13, 0x31, 0x0e, 0x8a, 0x21, 0x00, 0x00,
}
