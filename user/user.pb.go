// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user/user.proto

It has these top-level messages:
	AllType
	UserCreateResult
	User
	Users
	Location
	Device
	Trace
	MergeRequest
	GreetingRequest
	CreateRequest
	Topic
	ReadTopicRequest
	Segmentations
	Segmentation
	SegmentCondition
	Condition
	UserSearchResult
	UserSearchRequest
	IndexEvent
	ListTopicsRequest
	ListTopicsResult
	ListNewsRequest
	AddToMyList
	ConnectorField
	CustomeField
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_UserReadRequested                Event = 0
	Event_UserUpdateRequested              Event = 2
	Event_UserCreateRequested              Event = 3
	Event_UserSearchRequested              Event = 4
	Event_UserEventCreateRequested         Event = 5
	Event_UserEventSearchRequested         Event = 7
	Event_UserTopicSearchRequested         Event = 6
	Event_UserSegmentationCreateRequested  Event = 10
	Event_UserSegmentationUpdateRequested  Event = 11
	Event_UserSegmentationDeleteRequested  Event = 12
	Event_UserSegmentationListRequested    Event = 13
	Event_UserSegmentationReadRequested    Event = 14
	Event_UserAddToMyListRequest           Event = 20
	Event_UserEventCreateRequest           Event = 30
	Event_UserEventTopicSubscribeRequest   Event = 35
	Event_UserEventTopicUnsubscribeRequest Event = 36
	Event_UserReadTopicRequested           Event = 41
)

var Event_name = map[int32]string{
	0:  "UserReadRequested",
	2:  "UserUpdateRequested",
	3:  "UserCreateRequested",
	4:  "UserSearchRequested",
	5:  "UserEventCreateRequested",
	7:  "UserEventSearchRequested",
	6:  "UserTopicSearchRequested",
	10: "UserSegmentationCreateRequested",
	11: "UserSegmentationUpdateRequested",
	12: "UserSegmentationDeleteRequested",
	13: "UserSegmentationListRequested",
	14: "UserSegmentationReadRequested",
	20: "UserAddToMyListRequest",
	30: "UserEventCreateRequest",
	35: "UserEventTopicSubscribeRequest",
	36: "UserEventTopicUnsubscribeRequest",
	41: "UserReadTopicRequested",
}
var Event_value = map[string]int32{
	"UserReadRequested":                0,
	"UserUpdateRequested":              2,
	"UserCreateRequested":              3,
	"UserSearchRequested":              4,
	"UserEventCreateRequested":         5,
	"UserEventSearchRequested":         7,
	"UserTopicSearchRequested":         6,
	"UserSegmentationCreateRequested":  10,
	"UserSegmentationUpdateRequested":  11,
	"UserSegmentationDeleteRequested":  12,
	"UserSegmentationListRequested":    13,
	"UserSegmentationReadRequested":    14,
	"UserAddToMyListRequest":           20,
	"UserEventCreateRequest":           30,
	"UserEventTopicSubscribeRequest":   35,
	"UserEventTopicUnsubscribeRequest": 36,
	"UserReadTopicRequested":           41,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SegmentCondition_Operator int32

const (
	SegmentCondition_and SegmentCondition_Operator = 0
	SegmentCondition_or  SegmentCondition_Operator = 1
)

var SegmentCondition_Operator_name = map[int32]string{
	0: "and",
	1: "or",
}
var SegmentCondition_Operator_value = map[string]int32{
	"and": 0,
	"or":  1,
}

func (x SegmentCondition_Operator) Enum() *SegmentCondition_Operator {
	p := new(SegmentCondition_Operator)
	*p = x
	return p
}
func (x SegmentCondition_Operator) String() string {
	return proto.EnumName(SegmentCondition_Operator_name, int32(x))
}
func (x *SegmentCondition_Operator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SegmentCondition_Operator_value, data, "SegmentCondition_Operator")
	if err != nil {
		return err
	}
	*x = SegmentCondition_Operator(value)
	return nil
}
func (SegmentCondition_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

type Condition_JoinOperator int32

const (
	Condition_none Condition_JoinOperator = 0
	Condition_and  Condition_JoinOperator = 1
	Condition_or   Condition_JoinOperator = 2
)

var Condition_JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}
var Condition_JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x Condition_JoinOperator) Enum() *Condition_JoinOperator {
	p := new(Condition_JoinOperator)
	*p = x
	return p
}
func (x Condition_JoinOperator) String() string {
	return proto.EnumName(Condition_JoinOperator_name, int32(x))
}
func (x *Condition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Condition_JoinOperator_value, data, "Condition_JoinOperator")
	if err != nil {
		return err
	}
	*x = Condition_JoinOperator(value)
	return nil
}
func (Condition_JoinOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 0} }

type AllType struct {
	User              *User              `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Cr                *CreateRequest     `protobuf:"bytes,3,opt,name=cr" json:"cr,omitempty"`
	Connectorfield    *ConnectorField    `protobuf:"bytes,4,opt,name=connectorfield" json:"connectorfield,omitempty"`
	Customefield      *CustomeField      `protobuf:"bytes,5,opt,name=customefield" json:"customefield,omitempty"`
	Ucr               *UserCreateResult  `protobuf:"bytes,6,opt,name=ucr" json:"ucr,omitempty"`
	Rpr               *ReadTopicRequest  `protobuf:"bytes,8,opt,name=rpr" json:"rpr,omitempty"`
	Usersearchrequest *UserSearchRequest `protobuf:"bytes,9,opt,name=usersearchrequest" json:"usersearchrequest,omitempty"`
	Usersearchresult  *UserSearchResult  `protobuf:"bytes,10,opt,name=usersearchresult" json:"usersearchresult,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *AllType) Reset()                    { *m = AllType{} }
func (m *AllType) String() string            { return proto.CompactTextString(m) }
func (*AllType) ProtoMessage()               {}
func (*AllType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AllType) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AllType) GetCr() *CreateRequest {
	if m != nil {
		return m.Cr
	}
	return nil
}

func (m *AllType) GetConnectorfield() *ConnectorField {
	if m != nil {
		return m.Connectorfield
	}
	return nil
}

func (m *AllType) GetCustomefield() *CustomeField {
	if m != nil {
		return m.Customefield
	}
	return nil
}

func (m *AllType) GetUcr() *UserCreateResult {
	if m != nil {
		return m.Ucr
	}
	return nil
}

func (m *AllType) GetRpr() *ReadTopicRequest {
	if m != nil {
		return m.Rpr
	}
	return nil
}

func (m *AllType) GetUsersearchrequest() *UserSearchRequest {
	if m != nil {
		return m.Usersearchrequest
	}
	return nil
}

func (m *AllType) GetUsersearchresult() *UserSearchResult {
	if m != nil {
		return m.Usersearchresult
	}
	return nil
}

type UserCreateResult struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Mask             *string `protobuf:"bytes,5,opt,name=mask" json:"mask,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserCreateResult) Reset()                    { *m = UserCreateResult{} }
func (m *UserCreateResult) String() string            { return proto.CompactTextString(m) }
func (*UserCreateResult) ProtoMessage()               {}
func (*UserCreateResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserCreateResult) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserCreateResult) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *UserCreateResult) GetMask() string {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return ""
}

type User struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Fullname  *string         `protobuf:"bytes,5,opt,name=fullname" json:"fullname,omitempty"`
	Phones    []string        `protobuf:"bytes,7,rep,name=phones" json:"phones,omitempty"`
	Emails    []string        `protobuf:"bytes,10,rep,name=emails" json:"emails,omitempty"`
	Traces    []*Trace        `protobuf:"bytes,11,rep,name=traces" json:"traces,omitempty"`
	// 	repeated string alias = 12;
	Devices          []*Device `protobuf:"bytes,13,rep,name=devices" json:"devices,omitempty"`
	IsBan            *bool     `protobuf:"varint,14,opt,name=is_ban,json=isBan" json:"is_ban,omitempty"`
	AvatarUrl        *string   `protobuf:"bytes,15,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Segments         []string  `protobuf:"bytes,19,rep,name=segments" json:"segments,omitempty"`
	Labels           []string  `protobuf:"bytes,20,rep,name=labels" json:"labels,omitempty"`
	Unsubscribed     *bool     `protobuf:"varint,21,opt,name=unsubscribed" json:"unsubscribed,omitempty"`
	MarkedSpam       *bool     `protobuf:"varint,22,opt,name=marked_spam,json=markedSpam" json:"marked_spam,omitempty"`
	HardBounced      *bool     `protobuf:"varint,23,opt,name=hard_bounced,json=hardBounced" json:"hard_bounced,omitempty"`
	TotalSessions    *int32    `protobuf:"varint,24,opt,name=total_sessions,json=totalSessions" json:"total_sessions,omitempty"`
	SubizId          *string   `protobuf:"bytes,25,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	Timezone         *string   `protobuf:"bytes,26,opt,name=timezone" json:"timezone,omitempty"`
	CountryCode      *string   `protobuf:"bytes,27,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Country          *string   `protobuf:"bytes,29,opt,name=country" json:"country,omitempty"`
	City             *string   `protobuf:"bytes,32,opt,name=city" json:"city,omitempty"`
	Language         *string   `protobuf:"bytes,28,opt,name=language" json:"language,omitempty"`
	Aliases          []string  `protobuf:"bytes,30,rep,name=aliases" json:"aliases,omitempty"`
	LastSeen         *int64    `protobuf:"varint,31,opt,name=last_seen,json=lastSeen" json:"last_seen,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *User) GetFullname() string {
	if m != nil && m.Fullname != nil {
		return *m.Fullname
	}
	return ""
}

func (m *User) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *User) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *User) GetTraces() []*Trace {
	if m != nil {
		return m.Traces
	}
	return nil
}

func (m *User) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *User) GetIsBan() bool {
	if m != nil && m.IsBan != nil {
		return *m.IsBan
	}
	return false
}

func (m *User) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *User) GetSegments() []string {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *User) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *User) GetUnsubscribed() bool {
	if m != nil && m.Unsubscribed != nil {
		return *m.Unsubscribed
	}
	return false
}

func (m *User) GetMarkedSpam() bool {
	if m != nil && m.MarkedSpam != nil {
		return *m.MarkedSpam
	}
	return false
}

func (m *User) GetHardBounced() bool {
	if m != nil && m.HardBounced != nil {
		return *m.HardBounced
	}
	return false
}

func (m *User) GetTotalSessions() int32 {
	if m != nil && m.TotalSessions != nil {
		return *m.TotalSessions
	}
	return 0
}

func (m *User) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *User) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *User) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *User) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *User) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *User) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *User) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *User) GetLastSeen() int64 {
	if m != nil && m.LastSeen != nil {
		return *m.LastSeen
	}
	return 0
}

type Users struct {
	Users            []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Location struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Device struct {
	Id               *int32  `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	UseragentId      *int32  `protobuf:"varint,4,opt,name=useragent_id,json=useragentId" json:"useragent_id,omitempty"`
	Useragent        *string `protobuf:"bytes,5,opt,name=useragent" json:"useragent,omitempty"`
	Resolution       *string `protobuf:"bytes,6,opt,name=resolution" json:"resolution,omitempty"`
	LanguageId       *int32  `protobuf:"varint,7,opt,name=language_id,json=languageId" json:"language_id,omitempty"`
	Language         *string `protobuf:"bytes,8,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Device) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Device) GetUseragentId() int32 {
	if m != nil && m.UseragentId != nil {
		return *m.UseragentId
	}
	return 0
}

func (m *Device) GetUseragent() string {
	if m != nil && m.Useragent != nil {
		return *m.Useragent
	}
	return ""
}

func (m *Device) GetResolution() string {
	if m != nil && m.Resolution != nil {
		return *m.Resolution
	}
	return ""
}

func (m *Device) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return 0
}

func (m *Device) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type Trace struct {
	Id               *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Ip               *string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	LocationId       *int32  `protobuf:"varint,5,opt,name=location_id,json=locationId" json:"location_id,omitempty"`
	Location         *string `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	CityCode         *string `protobuf:"bytes,7,opt,name=city_code,json=cityCode" json:"city_code,omitempty"`
	CityName         *string `protobuf:"bytes,8,opt,name=city_name,json=cityName" json:"city_name,omitempty"`
	CountryName      *string `protobuf:"bytes,9,opt,name=country_name,json=countryName" json:"country_name,omitempty"`
	ContinentCode    *string `protobuf:"bytes,10,opt,name=continent_code,json=continentCode" json:"continent_code,omitempty"`
	CoutryCode       *string `protobuf:"bytes,11,opt,name=coutry_code,json=coutryCode" json:"coutry_code,omitempty"`
	Latitue          *int32  `protobuf:"varint,12,opt,name=latitue" json:"latitue,omitempty"`
	Longitude        *int32  `protobuf:"varint,13,opt,name=longitude" json:"longitude,omitempty"`
	PostalCode       *string `protobuf:"bytes,14,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	RegionName       *string `protobuf:"bytes,15,opt,name=region_name,json=regionName" json:"region_name,omitempty"`
	Timezone         *string `protobuf:"bytes,16,opt,name=timezone" json:"timezone,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Trace) Reset()                    { *m = Trace{} }
func (m *Trace) String() string            { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()               {}
func (*Trace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Trace) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Trace) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Trace) GetLocationId() int32 {
	if m != nil && m.LocationId != nil {
		return *m.LocationId
	}
	return 0
}

func (m *Trace) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *Trace) GetCityCode() string {
	if m != nil && m.CityCode != nil {
		return *m.CityCode
	}
	return ""
}

func (m *Trace) GetCityName() string {
	if m != nil && m.CityName != nil {
		return *m.CityName
	}
	return ""
}

func (m *Trace) GetCountryName() string {
	if m != nil && m.CountryName != nil {
		return *m.CountryName
	}
	return ""
}

func (m *Trace) GetContinentCode() string {
	if m != nil && m.ContinentCode != nil {
		return *m.ContinentCode
	}
	return ""
}

func (m *Trace) GetCoutryCode() string {
	if m != nil && m.CoutryCode != nil {
		return *m.CoutryCode
	}
	return ""
}

func (m *Trace) GetLatitue() int32 {
	if m != nil && m.Latitue != nil {
		return *m.Latitue
	}
	return 0
}

func (m *Trace) GetLongitude() int32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *Trace) GetPostalCode() string {
	if m != nil && m.PostalCode != nil {
		return *m.PostalCode
	}
	return ""
}

func (m *Trace) GetRegionName() string {
	if m != nil && m.RegionName != nil {
		return *m.RegionName
	}
	return ""
}

func (m *Trace) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

type MergeRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string         `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	RecentId         *string         `protobuf:"bytes,4,opt,name=recent_id,json=recentId" json:"recent_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *MergeRequest) Reset()                    { *m = MergeRequest{} }
func (m *MergeRequest) String() string            { return proto.CompactTextString(m) }
func (*MergeRequest) ProtoMessage()               {}
func (*MergeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MergeRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *MergeRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *MergeRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MergeRequest) GetRecentId() string {
	if m != nil && m.RecentId != nil {
		return *m.RecentId
	}
	return ""
}

type GreetingRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Useragent        *string         `protobuf:"bytes,6,opt,name=useragent" json:"useragent,omitempty"`
	UserId           *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Uuid             *string         `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GreetingRequest) Reset()                    { *m = GreetingRequest{} }
func (m *GreetingRequest) String() string            { return proto.CompactTextString(m) }
func (*GreetingRequest) ProtoMessage()               {}
func (*GreetingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GreetingRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *GreetingRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *GreetingRequest) GetUseragent() string {
	if m != nil && m.Useragent != nil {
		return *m.Useragent
	}
	return ""
}

func (m *GreetingRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *GreetingRequest) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

type CreateRequest struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChallengeId      *string `protobuf:"bytes,3,opt,name=challenge_id,json=challengeId" json:"challenge_id,omitempty"`
	Answer           *string `protobuf:"bytes,4,opt,name=answer" json:"answer,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CreateRequest) GetChallengeId() string {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return ""
}

func (m *CreateRequest) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

type Topic struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Topic     *string         `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	Type      *string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Updated   *int64          `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	// optional int32 total_events = 4;
	Unread           *int32 `protobuf:"varint,9,opt,name=unread" json:"unread,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Topic) Reset()                    { *m = Topic{} }
func (m *Topic) String() string            { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()               {}
func (*Topic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Topic) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Topic) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Topic) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Topic) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Topic) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Topic) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type ReadTopicRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Topic            *string         `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	UserId           *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,5,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ReadTopicRequest) Reset()                    { *m = ReadTopicRequest{} }
func (m *ReadTopicRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTopicRequest) ProtoMessage()               {}
func (*ReadTopicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReadTopicRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ReadTopicRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ReadTopicRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *ReadTopicRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ReadTopicRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type Segmentations struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Segmentations    []*Segmentation `protobuf:"bytes,3,rep,name=segmentations" json:"segmentations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Segmentations) Reset()                    { *m = Segmentations{} }
func (m *Segmentations) String() string            { return proto.CompactTextString(m) }
func (*Segmentations) ProtoMessage()               {}
func (*Segmentations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Segmentations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentations) GetSegmentations() []*Segmentation {
	if m != nil {
		return m.Segmentations
	}
	return nil
}

type Segmentation struct {
	Ctx         *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId   *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id          *string         `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	Name        *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description *string         `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	UserCount   *int64          `protobuf:"varint,4,opt,name=user_count,json=userCount" json:"user_count,omitempty"`
	Conditions  []*Condition    `protobuf:"bytes,6,rep,name=conditions" json:"conditions,omitempty"`
	// repeated SegmentCondition query = 5; // suffix annotation
	// a * b + (c + d) * e  ==>  + * a b * + c d e
	Ran              *int64 `protobuf:"varint,8,opt,name=ran" json:"ran,omitempty"`
	Created          *int64 `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Modified         *int64 `protobuf:"varint,10,opt,name=modified" json:"modified,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Segmentation) Reset()                    { *m = Segmentation{} }
func (m *Segmentation) String() string            { return proto.CompactTextString(m) }
func (*Segmentation) ProtoMessage()               {}
func (*Segmentation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Segmentation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Segmentation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Segmentation) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Segmentation) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Segmentation) GetUserCount() int64 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *Segmentation) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Segmentation) GetRan() int64 {
	if m != nil && m.Ran != nil {
		return *m.Ran
	}
	return 0
}

func (m *Segmentation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Segmentation) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

type SegmentCondition struct {
	Op               *string `protobuf:"bytes,2,opt,name=op" json:"op,omitempty"`
	IsOp             *bool   `protobuf:"varint,3,opt,name=is_op,json=isOp" json:"is_op,omitempty"`
	Key              *string `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Operator         *string `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	Value            *string `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SegmentCondition) Reset()                    { *m = SegmentCondition{} }
func (m *SegmentCondition) String() string            { return proto.CompactTextString(m) }
func (*SegmentCondition) ProtoMessage()               {}
func (*SegmentCondition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SegmentCondition) GetOp() string {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return ""
}

func (m *SegmentCondition) GetIsOp() bool {
	if m != nil && m.IsOp != nil {
		return *m.IsOp
	}
	return false
}

func (m *SegmentCondition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *SegmentCondition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *SegmentCondition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Condition struct {
	Join             *string `protobuf:"bytes,1,opt,name=join" json:"join,omitempty"`
	Key              *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator         *string `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value            *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Condition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type UserSearchResult struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Total            *int64          `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Users            []*User         `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Anchor           *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	Unreads          []int32         `protobuf:"varint,6,rep,name=unreads" json:"unreads,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *UserSearchResult) Reset()                    { *m = UserSearchResult{} }
func (m *UserSearchResult) String() string            { return proto.CompactTextString(m) }
func (*UserSearchResult) ProtoMessage()               {}
func (*UserSearchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *UserSearchResult) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UserSearchResult) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserSearchResult) GetTotal() int64 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *UserSearchResult) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UserSearchResult) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *UserSearchResult) GetUnreads() []int32 {
	if m != nil {
		return m.Unreads
	}
	return nil
}

type UserSearchRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId   *string         `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Query            *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Anchor           *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	Limit            *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	AgentId          *string         `protobuf:"bytes,8,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Unread           *bool           `protobuf:"varint,9,opt,name=unread" json:"unread,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *UserSearchRequest) Reset()                    { *m = UserSearchRequest{} }
func (m *UserSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*UserSearchRequest) ProtoMessage()               {}
func (*UserSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UserSearchRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UserSearchRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserSearchRequest) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *UserSearchRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *UserSearchRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *UserSearchRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *UserSearchRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *UserSearchRequest) GetUnread() bool {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return false
}

type IndexEvent struct {
	Id               *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId        *string  `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId           *string  `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Created          *int64   `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Category         *string  `protobuf:"bytes,7,opt,name=category" json:"category,omitempty"`
	Topics           []string `protobuf:"bytes,8,rep,name=topics" json:"topics,omitempty"`
	Object           *string  `protobuf:"bytes,9,opt,name=object" json:"object,omitempty"`
	Text             *string  `protobuf:"bytes,10,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IndexEvent) Reset()                    { *m = IndexEvent{} }
func (m *IndexEvent) String() string            { return proto.CompactTextString(m) }
func (*IndexEvent) ProtoMessage()               {}
func (*IndexEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *IndexEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *IndexEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *IndexEvent) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *IndexEvent) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *IndexEvent) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *IndexEvent) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *IndexEvent) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *IndexEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type ListTopicsRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId           *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,5,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Anchor           *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	Limit            *int32          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Unread           *bool           `protobuf:"varint,8,opt,name=unread" json:"unread,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListTopicsRequest) Reset()                    { *m = ListTopicsRequest{} }
func (m *ListTopicsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTopicsRequest) ProtoMessage()               {}
func (*ListTopicsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ListTopicsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListTopicsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListTopicsRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListTopicsRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ListTopicsRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListTopicsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListTopicsRequest) GetUnread() bool {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return false
}

type ListTopicsResult struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Topics           []*Topic        `protobuf:"bytes,3,rep,name=topics" json:"topics,omitempty"`
	Anchor           *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListTopicsResult) Reset()                    { *m = ListTopicsResult{} }
func (m *ListTopicsResult) String() string            { return proto.CompactTextString(m) }
func (*ListTopicsResult) ProtoMessage()               {}
func (*ListTopicsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListTopicsResult) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListTopicsResult) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *ListTopicsResult) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type ListNewsRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId           *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	StartTime        *int64          `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Limit            *string         `protobuf:"bytes,7,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListNewsRequest) Reset()                    { *m = ListNewsRequest{} }
func (m *ListNewsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListNewsRequest) ProtoMessage()               {}
func (*ListNewsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ListNewsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListNewsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListNewsRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListNewsRequest) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ListNewsRequest) GetLimit() string {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return ""
}

type AddToMyList struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AgentId          *string         `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId           *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AddToMyList) Reset()                    { *m = AddToMyList{} }
func (m *AddToMyList) String() string            { return proto.CompactTextString(m) }
func (*AddToMyList) ProtoMessage()               {}
func (*AddToMyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *AddToMyList) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AddToMyList) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AddToMyList) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type ConnectorField struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId           *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	IntegrationId    *string         `protobuf:"bytes,5,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	Values           []string        `protobuf:"bytes,6,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ConnectorField) Reset()                    { *m = ConnectorField{} }
func (m *ConnectorField) String() string            { return proto.CompactTextString(m) }
func (*ConnectorField) ProtoMessage()               {}
func (*ConnectorField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ConnectorField) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ConnectorField) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ConnectorField) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ConnectorField) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *ConnectorField) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type CustomeField struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId           *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FieldId          *string         `protobuf:"bytes,5,opt,name=field_id,json=fieldId" json:"field_id,omitempty"`
	Value            *string         `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CustomeField) Reset()                    { *m = CustomeField{} }
func (m *CustomeField) String() string            { return proto.CompactTextString(m) }
func (*CustomeField) ProtoMessage()               {}
func (*CustomeField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CustomeField) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CustomeField) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CustomeField) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *CustomeField) GetFieldId() string {
	if m != nil && m.FieldId != nil {
		return *m.FieldId
	}
	return ""
}

func (m *CustomeField) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*AllType)(nil), "user.AllType")
	proto.RegisterType((*UserCreateResult)(nil), "user.UserCreateResult")
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*Users)(nil), "user.Users")
	proto.RegisterType((*Location)(nil), "user.Location")
	proto.RegisterType((*Device)(nil), "user.Device")
	proto.RegisterType((*Trace)(nil), "user.Trace")
	proto.RegisterType((*MergeRequest)(nil), "user.MergeRequest")
	proto.RegisterType((*GreetingRequest)(nil), "user.GreetingRequest")
	proto.RegisterType((*CreateRequest)(nil), "user.CreateRequest")
	proto.RegisterType((*Topic)(nil), "user.Topic")
	proto.RegisterType((*ReadTopicRequest)(nil), "user.ReadTopicRequest")
	proto.RegisterType((*Segmentations)(nil), "user.Segmentations")
	proto.RegisterType((*Segmentation)(nil), "user.Segmentation")
	proto.RegisterType((*SegmentCondition)(nil), "user.SegmentCondition")
	proto.RegisterType((*Condition)(nil), "user.Condition")
	proto.RegisterType((*UserSearchResult)(nil), "user.UserSearchResult")
	proto.RegisterType((*UserSearchRequest)(nil), "user.UserSearchRequest")
	proto.RegisterType((*IndexEvent)(nil), "user.IndexEvent")
	proto.RegisterType((*ListTopicsRequest)(nil), "user.ListTopicsRequest")
	proto.RegisterType((*ListTopicsResult)(nil), "user.ListTopicsResult")
	proto.RegisterType((*ListNewsRequest)(nil), "user.ListNewsRequest")
	proto.RegisterType((*AddToMyList)(nil), "user.AddToMyList")
	proto.RegisterType((*ConnectorField)(nil), "user.ConnectorField")
	proto.RegisterType((*CustomeField)(nil), "user.CustomeField")
	proto.RegisterEnum("user.Event", Event_name, Event_value)
	proto.RegisterEnum("user.SegmentCondition_Operator", SegmentCondition_Operator_name, SegmentCondition_Operator_value)
	proto.RegisterEnum("user.Condition_JoinOperator", Condition_JoinOperator_name, Condition_JoinOperator_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MyServer service

type MyServerClient interface {
	Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error)
}

type myServerClient struct {
	cc *grpc.ClientConn
}

func NewMyServerClient(cc *grpc.ClientConn) MyServerClient {
	return &myServerClient{cc}
}

func (c *myServerClient) Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error) {
	out := new(AllType)
	err := grpc.Invoke(ctx, "/user.MyServer/Do", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MyServer service

type MyServerServer interface {
	Do(context.Context, *AllType) (*AllType, error)
}

func RegisterMyServerServer(s *grpc.Server, srv MyServerServer) {
	s.RegisterService(&_MyServer_serviceDesc, srv)
}

func _MyServer_Do_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServerServer).Do(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.MyServer/Do",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServerServer).Do(ctx, req.(*AllType))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.MyServer",
	HandlerType: (*MyServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Do",
			Handler:    _MyServer_Do_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1901 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x73, 0xdc, 0x48,
	0x15, 0x8f, 0x46, 0xa3, 0xf9, 0x78, 0x33, 0x63, 0x4f, 0x3a, 0x4e, 0xa2, 0x38, 0x89, 0x33, 0x91,
	0x13, 0x70, 0x38, 0xd8, 0x54, 0x0e, 0x14, 0x07, 0x2e, 0x9b, 0x64, 0xa1, 0x4c, 0x6d, 0x76, 0xab,
	0x64, 0xfb, 0x3c, 0xd5, 0x96, 0x3a, 0x63, 0x6d, 0x34, 0x6a, 0x6d, 0x77, 0xcb, 0x1b, 0x6f, 0x15,
	0xff, 0x02, 0x47, 0x8a, 0xe2, 0x00, 0x45, 0x51, 0x5c, 0x38, 0x70, 0xe4, 0xc8, 0x8d, 0x2b, 0xfc,
	0x35, 0xdc, 0xa9, 0x7e, 0xdd, 0xad, 0x91, 0xc6, 0x36, 0x64, 0x29, 0xef, 0x5e, 0xec, 0x7e, 0x1f,
	0xdd, 0xef, 0xfb, 0xd7, 0x3d, 0x82, 0xcd, 0x4a, 0x32, 0x71, 0xa0, 0xff, 0xec, 0x97, 0x82, 0x2b,
	0x4e, 0xba, 0x7a, 0xbd, 0xbd, 0x7f, 0x9a, 0xa9, 0xd3, 0x2a, 0x79, 0xcf, 0xd4, 0x3e, 0x17, 0x8b,
	0x03, 0x59, 0x9d, 0x66, 0xdf, 0x1c, 0x9c, 0x31, 0x9a, 0x32, 0x71, 0x90, 0xf0, 0xe5, 0x92, 0x17,
	0xf6, 0x9f, 0xd9, 0x15, 0xfd, 0xc9, 0x87, 0xfe, 0x27, 0x79, 0x7e, 0x7c, 0x51, 0x32, 0xb2, 0x03,
	0x78, 0x46, 0xd8, 0x99, 0x79, 0x7b, 0xa3, 0x97, 0xb0, 0x8f, 0x87, 0x9f, 0x48, 0x26, 0x62, 0xe4,
	0x93, 0x5d, 0xe8, 0x24, 0x22, 0xf4, 0x51, 0x7a, 0xc7, 0x48, 0x5f, 0x0b, 0x46, 0x15, 0x8b, 0xd9,
	0x57, 0x15, 0x93, 0x2a, 0xee, 0x24, 0x82, 0xfc, 0x0c, 0x36, 0x12, 0x5e, 0x14, 0x2c, 0x51, 0x5c,
	0xbc, 0xcb, 0x58, 0x9e, 0x86, 0x5d, 0xdc, 0xb0, 0x65, 0x37, 0x38, 0xd9, 0xcf, 0xb5, 0x2c, 0x5e,
	0xd3, 0x25, 0x3f, 0x81, 0x71, 0x52, 0x49, 0xc5, 0x97, 0xcc, 0xec, 0x0d, 0x70, 0x2f, 0xb1, 0x7b,
	0x8d, 0xc4, 0xec, 0x6c, 0xe9, 0x91, 0x3d, 0xf0, 0xab, 0x44, 0x84, 0x3d, 0x54, 0xbf, 0xb7, 0xf2,
	0xdc, 0xf9, 0x27, 0xab, 0x5c, 0xc5, 0x5a, 0x45, 0x6b, 0x8a, 0x52, 0x84, 0x83, 0xa6, 0x66, 0xcc,
	0x68, 0x7a, 0xcc, 0xcb, 0x2c, 0x71, 0x81, 0x68, 0x15, 0xf2, 0x29, 0xdc, 0xd6, 0x52, 0xc9, 0xa8,
	0x48, 0xce, 0x84, 0x91, 0x84, 0x43, 0xdc, 0x77, 0x7f, 0x65, 0xe1, 0x08, 0xc5, 0x6e, 0xe3, 0xe5,
	0x1d, 0xe4, 0x15, 0x4c, 0x9b, 0x4c, 0xed, 0x49, 0x08, 0xeb, 0x7e, 0xba, 0x53, 0xd0, 0xcf, 0x4b,
	0xfa, 0xd1, 0x09, 0x4c, 0xd7, 0xa3, 0x21, 0x8f, 0x01, 0x68, 0x92, 0xf0, 0xaa, 0x50, 0xf3, 0x2c,
	0xc5, 0x9a, 0x0d, 0xe3, 0xa1, 0xe5, 0x1c, 0xa6, 0x64, 0x03, 0x3a, 0x59, 0x8a, 0xc5, 0x1a, 0xc6,
	0x9d, 0x2c, 0x25, 0x04, 0xba, 0x4b, 0x2a, 0xdf, 0x63, 0x46, 0x87, 0x31, 0xae, 0xa3, 0x7f, 0x04,
	0xd0, 0xd5, 0xe7, 0x92, 0xa7, 0xe0, 0x27, 0xea, 0x43, 0xe8, 0xa1, 0x5b, 0x9b, 0xfb, 0xb6, 0x43,
	0x5e, 0xf3, 0x42, 0xb1, 0x0f, 0x2a, 0xd6, 0xb2, 0x4b, 0xe7, 0xb5, 0xcd, 0x77, 0xd7, 0xcd, 0x6f,
	0xc3, 0xe0, 0x5d, 0x95, 0xe7, 0x05, 0x5d, 0x32, 0x6b, 0xb2, 0xa6, 0xc9, 0x3d, 0xe8, 0x95, 0x67,
	0xbc, 0x60, 0x32, 0xec, 0xcf, 0xfc, 0xbd, 0x61, 0x6c, 0x29, 0xcd, 0x67, 0x4b, 0x9a, 0xe5, 0x32,
	0x04, 0xc3, 0x37, 0x14, 0xd9, 0x85, 0x9e, 0x12, 0x34, 0x61, 0x32, 0x1c, 0xcd, 0xfc, 0xbd, 0xd1,
	0xcb, 0x91, 0xc9, 0xdb, 0xb1, 0xe6, 0xc5, 0x56, 0x44, 0x7e, 0x00, 0xfd, 0x94, 0x9d, 0x67, 0x5a,
	0x6b, 0x82, 0x5a, 0x63, 0xa3, 0xf5, 0x06, 0x99, 0xb1, 0x13, 0x92, 0xbb, 0xd0, 0xcb, 0xe4, 0xfc,
	0x94, 0x16, 0xe1, 0xc6, 0xcc, 0xdb, 0x1b, 0xc4, 0x41, 0x26, 0x5f, 0xd1, 0x02, 0xc3, 0x39, 0xa7,
	0x8a, 0x8a, 0x79, 0x25, 0xf2, 0x70, 0xd3, 0x86, 0x83, 0x9c, 0x13, 0x91, 0xeb, 0x70, 0x24, 0x5b,
	0x2c, 0x59, 0xa1, 0x64, 0x78, 0x07, 0x9d, 0xab, 0x69, 0xed, 0x76, 0x4e, 0x4f, 0x59, 0x2e, 0xc3,
	0x2d, 0xe3, 0xb6, 0xa1, 0x48, 0x04, 0xe3, 0xaa, 0x90, 0xd5, 0xa9, 0x4c, 0x44, 0x76, 0xca, 0xd2,
	0xf0, 0x2e, 0xda, 0x6b, 0xf1, 0xc8, 0x13, 0x18, 0x2d, 0xa9, 0x78, 0xcf, 0xd2, 0xb9, 0x2c, 0xe9,
	0x32, 0xbc, 0x87, 0x2a, 0x60, 0x58, 0x47, 0x25, 0x5d, 0x92, 0xa7, 0x30, 0x3e, 0xa3, 0x22, 0x9d,
	0x9f, 0xf2, 0xaa, 0x48, 0x58, 0x1a, 0xde, 0x47, 0x8d, 0x91, 0xe6, 0xbd, 0x32, 0x2c, 0xf2, 0x1c,
	0x36, 0x14, 0x57, 0x34, 0x9f, 0x4b, 0x26, 0x65, 0xc6, 0x0b, 0x19, 0x86, 0x33, 0x6f, 0x2f, 0x88,
	0x27, 0xc8, 0x3d, 0xb2, 0x4c, 0xf2, 0x00, 0x06, 0x88, 0x06, 0xba, 0x5c, 0x0f, 0x30, 0xbe, 0x3e,
	0xd2, 0xa6, 0x58, 0x2a, 0x5b, 0xb2, 0x6f, 0x78, 0xc1, 0xc2, 0x6d, 0x53, 0x2c, 0x47, 0x6b, 0x07,
	0xb0, 0xa6, 0xe2, 0x62, 0x9e, 0xf0, 0x94, 0x85, 0x0f, 0x51, 0x3e, 0xb2, 0xbc, 0xd7, 0x3c, 0x65,
	0x24, 0x84, 0xbe, 0x25, 0xc3, 0xc7, 0xe6, 0x60, 0x4b, 0xea, 0xa6, 0x4b, 0x32, 0x75, 0x11, 0xce,
	0x4c, 0xd3, 0xe9, 0xb5, 0x36, 0x96, 0xd3, 0x62, 0x51, 0xd1, 0x05, 0x0b, 0x1f, 0x19, 0x63, 0x8e,
	0xd6, 0x27, 0xd1, 0x3c, 0xa3, 0x92, 0xc9, 0x70, 0x07, 0x73, 0xe9, 0x48, 0xf2, 0x10, 0x86, 0x39,
	0x95, 0x6a, 0x2e, 0x19, 0x2b, 0xc2, 0x27, 0x33, 0x6f, 0xcf, 0xd7, 0xdb, 0xa4, 0x3a, 0x62, 0xac,
	0x88, 0x5e, 0x40, 0xa0, 0xdb, 0x58, 0x92, 0x19, 0x04, 0x38, 0x3b, 0xa1, 0x87, 0x2d, 0xd0, 0x84,
	0x30, 0x23, 0x88, 0x00, 0x06, 0x9f, 0xf1, 0x84, 0xaa, 0x8c, 0x17, 0xd1, 0xdf, 0x3c, 0xe8, 0x99,
	0xf6, 0x68, 0x74, 0x77, 0x80, 0xdd, 0xfd, 0x14, 0xc6, 0x5a, 0x9f, 0x2e, 0xd8, 0xaa, 0xbf, 0x83,
	0x78, 0x54, 0xf3, 0x0e, 0x53, 0xf2, 0x08, 0x86, 0x35, 0x69, 0x5b, 0x7c, 0xc5, 0x20, 0x3b, 0x00,
	0x82, 0x49, 0x9e, 0x57, 0xda, 0x12, 0xe2, 0xd2, 0x30, 0x6e, 0x70, 0x74, 0xe1, 0x5d, 0xd4, 0xfa,
	0xfc, 0x3e, 0x9e, 0x0f, 0x8e, 0x65, 0x6a, 0x52, 0xa7, 0x69, 0xd0, 0x4e, 0x53, 0xf4, 0x07, 0x1f,
	0x02, 0xec, 0xfe, 0x4b, 0x53, 0xa9, 0xe9, 0xd2, 0x4e, 0x63, 0x27, 0x2b, 0xd1, 0x8c, 0x0d, 0x57,
	0x9b, 0x09, 0xac, 0x19, 0xcb, 0xb2, 0x66, 0x2c, 0x65, 0xbd, 0xac, 0x69, 0x9d, 0x73, 0x5d, 0x31,
	0x53, 0xf7, 0xbe, 0x11, 0x6a, 0x06, 0x16, 0xdd, 0x09, 0x71, 0xc2, 0x07, 0x2b, 0xe1, 0xe7, 0x7a,
	0xc2, 0x1b, 0x4d, 0x83, 0xf2, 0x61, 0xab, 0x69, 0x50, 0xe5, 0x39, 0xde, 0x13, 0x2a, 0x2b, 0x74,
	0x86, 0xd1, 0x02, 0xa0, 0xd2, 0xa4, 0xe6, 0xa2, 0x99, 0x27, 0xa0, 0x77, 0xd5, 0xdd, 0x37, 0x32,
	0x89, 0x34, 0x2c, 0xd7, 0x7c, 0x39, 0x55, 0x99, 0xaa, 0x58, 0x38, 0xc6, 0xe8, 0x1c, 0xa9, 0x0b,
	0x94, 0xf3, 0x62, 0x91, 0xa9, 0x2a, 0x65, 0xe1, 0x04, 0x65, 0x2b, 0x86, 0x3e, 0xb8, 0xe4, 0x52,
	0x8f, 0x0d, 0x1e, 0xbc, 0x61, 0x0e, 0x36, 0x2c, 0x67, 0x59, 0xb0, 0x85, 0x4e, 0x1c, 0x86, 0xb0,
	0xe9, 0x4a, 0xa8, 0x59, 0x18, 0x41, 0x73, 0x6a, 0xa6, 0xed, 0xa9, 0x89, 0x7e, 0x05, 0xe3, 0xb7,
	0x4c, 0x2c, 0xdc, 0xcd, 0xf8, 0x31, 0x00, 0xdb, 0x06, 0x54, 0xff, 0x6a, 0x3c, 0x0f, 0xea, 0x4a,
	0x3f, 0x84, 0xa1, 0x60, 0x09, 0x6b, 0xc2, 0xef, 0xc0, 0x30, 0x0e, 0xd3, 0xe8, 0xf7, 0x1e, 0x6c,
	0xfe, 0x42, 0x30, 0xa6, 0xb2, 0x62, 0xf1, 0x7f, 0xbb, 0x10, 0xac, 0xbb, 0xd0, 0xea, 0xf8, 0xde,
	0x7a, 0xc7, 0xdf, 0x87, 0xbe, 0x26, 0x56, 0xce, 0xf7, 0x34, 0x79, 0x88, 0x37, 0x4f, 0x55, 0xd5,
	0x4e, 0xe2, 0x3a, 0xca, 0x60, 0xd2, 0x7a, 0x3a, 0xfc, 0xaf, 0xdb, 0x4c, 0x37, 0xd4, 0x19, 0xcd,
	0x73, 0x56, 0x98, 0x79, 0xf1, 0x6d, 0x43, 0x39, 0xde, 0x61, 0xaa, 0x61, 0x98, 0x16, 0xf2, 0x6b,
	0x26, 0xac, 0x21, 0x4b, 0x45, 0x7f, 0xf6, 0x20, 0xc0, 0xcb, 0xfd, 0xdb, 0x67, 0xe0, 0x92, 0x1b,
	0x5b, 0x10, 0x28, 0x7d, 0x94, 0xb5, 0x6f, 0x08, 0x1d, 0xa0, 0xba, 0x28, 0xdd, 0x3d, 0x87, 0x6b,
	0xdd, 0x96, 0x55, 0x99, 0x52, 0xc5, 0x52, 0x1c, 0x0e, 0x3f, 0x76, 0xa4, 0xf6, 0xb3, 0x2a, 0x04,
	0xa3, 0x29, 0x4e, 0x45, 0x10, 0x5b, 0x4a, 0xd7, 0x6c, 0xba, 0xfe, 0x10, 0xf9, 0xce, 0x5c, 0x6e,
	0x14, 0xab, 0xdb, 0x2a, 0xd6, 0x03, 0x18, 0xd4, 0xa0, 0x67, 0xe2, 0xe9, 0x5b, 0xc0, 0x8b, 0x72,
	0x98, 0x1c, 0x99, 0x3b, 0x0f, 0xe1, 0x41, 0x7e, 0x8c, 0x73, 0x3f, 0x85, 0x89, 0x6c, 0xee, 0x09,
	0x7d, 0x04, 0x66, 0xfb, 0xa0, 0x6b, 0x1e, 0x17, 0xb7, 0x15, 0xa3, 0xbf, 0x76, 0x60, 0xdc, 0x94,
	0xdf, 0x40, 0x2a, 0xd6, 0x47, 0x88, 0x40, 0x17, 0x47, 0xdb, 0x64, 0x06, 0xd7, 0x64, 0x06, 0xa3,
	0x94, 0xe9, 0xdb, 0xb9, 0x44, 0x48, 0x34, 0x78, 0xd3, 0x64, 0x69, 0x23, 0x98, 0x3a, 0x3c, 0x15,
	0xb3, 0xe7, 0x9b, 0x31, 0x78, 0xad, 0x19, 0xe4, 0x00, 0x20, 0xe1, 0x45, 0x9a, 0x99, 0x70, 0x7b,
	0x18, 0xee, 0x66, 0xfd, 0xf6, 0x35, 0xfc, 0xb8, 0xa1, 0x42, 0xa6, 0xe0, 0x0b, 0x5a, 0xd8, 0x2e,
	0xd1, 0x4b, 0xbc, 0x4f, 0x71, 0x38, 0x4c, 0x8b, 0xf8, 0xb1, 0x23, 0x35, 0xe4, 0x2c, 0x79, 0x9a,
	0xbd, 0xcb, 0x58, 0x8a, 0x70, 0xe9, 0xc7, 0x35, 0x1d, 0xfd, 0xd6, 0x83, 0xa9, 0x4d, 0x58, 0x6d,
	0x48, 0x87, 0xcc, 0x4b, 0x9b, 0x89, 0x0e, 0x2f, 0xc9, 0x1d, 0x08, 0x32, 0x39, 0xe7, 0x25, 0xc6,
	0x3c, 0x88, 0xbb, 0x99, 0xfc, 0xa2, 0xd4, 0x1e, 0xbc, 0x67, 0x17, 0xb6, 0x11, 0xf4, 0x52, 0xdb,
	0xe1, 0x25, 0x13, 0x54, 0x71, 0xe1, 0x5e, 0x6f, 0x8e, 0xd6, 0x0d, 0x75, 0x4e, 0xf3, 0x8a, 0x59,
	0x04, 0x30, 0x44, 0xf4, 0x10, 0x06, 0x5f, 0x38, 0x8d, 0x3e, 0xf8, 0xb4, 0x48, 0xa7, 0xb7, 0x48,
	0x0f, 0x3a, 0x5c, 0x4c, 0xbd, 0xe8, 0xd7, 0x1e, 0x0c, 0x57, 0x3e, 0x11, 0xe8, 0x7e, 0xc9, 0xb3,
	0x02, 0x2b, 0x39, 0x8c, 0x71, 0xed, 0x5c, 0xe8, 0x5c, 0xed, 0x82, 0x7f, 0x9d, 0x0b, 0xdd, 0xa6,
	0x0b, 0x2f, 0x60, 0xfc, 0x4b, 0x9e, 0x15, 0xb5, 0x1b, 0x03, 0xe8, 0x16, 0xbc, 0x60, 0xd3, 0x5b,
	0xce, 0x21, 0xcf, 0x3a, 0xd4, 0x89, 0xfe, 0xee, 0x99, 0x07, 0x75, 0xf3, 0xd9, 0x7d, 0x53, 0xb3,
	0xa6, 0x68, 0x8e, 0x0e, 0xfb, 0xb1, 0x21, 0x56, 0x8f, 0x92, 0xee, 0x35, 0x8f, 0x12, 0x03, 0x5d,
	0xc9, 0x59, 0x9d, 0x6c, 0x4b, 0x21, 0x88, 0x20, 0x38, 0x98, 0x46, 0x0a, 0x62, 0x47, 0x46, 0xff,
	0xf6, 0xe0, 0xf6, 0xa5, 0x5f, 0x1f, 0x37, 0x10, 0xc1, 0x0f, 0x61, 0xb3, 0x39, 0x86, 0x2b, 0xa8,
	0xdd, 0x68, 0xb2, 0x4d, 0xa8, 0x5f, 0x55, 0x4c, 0xb8, 0xae, 0x31, 0xc4, 0xb5, 0x81, 0x6c, 0x41,
	0x90, 0x67, 0xcb, 0xcc, 0xdc, 0x1a, 0x41, 0x6c, 0x88, 0x16, 0xd6, 0x0c, 0x5a, 0x58, 0xb3, 0x06,
	0x92, 0x83, 0x1a, 0x24, 0xff, 0xe9, 0x01, 0x1c, 0x16, 0x29, 0xfb, 0xf0, 0xe9, 0xb9, 0xbe, 0x73,
	0xbe, 0xe5, 0x8f, 0x92, 0x06, 0xea, 0x05, 0x2d, 0xd4, 0x6b, 0x4c, 0x5c, 0xef, 0xd2, 0xc4, 0x25,
	0x54, 0xb1, 0x05, 0x17, 0x17, 0xf5, 0x13, 0xc8, 0xd2, 0xda, 0x49, 0x44, 0x53, 0x19, 0x0e, 0xcc,
	0xc3, 0xdf, 0x50, 0x9a, 0xcf, 0x4f, 0xbf, 0x64, 0x89, 0xb2, 0xef, 0x1e, 0x4b, 0xe1, 0x3d, 0xc1,
	0x3e, 0x28, 0xfb, 0xd0, 0xc1, 0x75, 0xf4, 0x2f, 0x0f, 0x6e, 0x7f, 0x96, 0x49, 0x85, 0xa8, 0x2f,
	0x6f, 0xae, 0x90, 0xd7, 0xde, 0xc6, 0xd7, 0x03, 0x7c, 0xa3, 0x7a, 0xdd, 0xab, 0xab, 0xd7, 0x6f,
	0x56, 0x6f, 0x55, 0xa2, 0x41, 0xab, 0x44, 0x02, 0xa6, 0xcd, 0x80, 0x3e, 0x76, 0xb4, 0x76, 0xeb,
	0x64, 0xfa, 0xad, 0x1f, 0x79, 0x78, 0x1b, 0x36, 0x32, 0x7b, 0x55, 0x7f, 0x45, 0x7f, 0xf4, 0x60,
	0x53, 0x1b, 0xfd, 0x9c, 0x7d, 0xfd, 0x7d, 0xe4, 0xf0, 0x31, 0x80, 0x54, 0x54, 0xa8, 0xb9, 0x7e,
	0xef, 0xb9, 0x2b, 0x00, 0x39, 0xc7, 0xd9, 0x92, 0xb5, 0xf3, 0x35, 0xb4, 0xf9, 0x8a, 0x52, 0x18,
	0x7d, 0x92, 0xa6, 0xc7, 0xfc, 0xed, 0x85, 0xf6, 0xf4, 0x63, 0xdc, 0x6b, 0x96, 0xaa, 0xd3, 0x2e,
	0xd5, 0x75, 0xae, 0x45, 0x7f, 0xf1, 0x60, 0xa3, 0xfd, 0x8d, 0xe5, 0xbb, 0x4c, 0xc4, 0x73, 0xd8,
	0xc8, 0x0a, 0xc5, 0x16, 0xa2, 0xf5, 0x0b, 0x63, 0x18, 0x4f, 0x1a, 0x5c, 0xd3, 0x58, 0x08, 0xd1,
	0x06, 0xc6, 0x86, 0xb1, 0xa5, 0xa2, 0xdf, 0x79, 0x30, 0x6e, 0x7e, 0xd4, 0xb9, 0x81, 0x67, 0xf2,
	0x7f, 0x7b, 0xd8, 0xe0, 0xa7, 0xa2, 0x46, 0xdf, 0x23, 0x6d, 0xb0, 0xec, 0xf2, 0x8d, 0xf6, 0xa3,
	0xdf, 0x74, 0x21, 0x30, 0x28, 0x73, 0xd7, 0x60, 0xad, 0x7e, 0x9c, 0xd9, 0xe6, 0x62, 0xfa, 0x76,
	0xbb, 0x0f, 0x77, 0x34, 0xfb, 0x04, 0xdf, 0x75, 0x2b, 0x41, 0xc7, 0x09, 0x5a, 0x0f, 0x5c, 0x96,
	0x4e, 0x7d, 0x27, 0x68, 0x81, 0x36, 0x4b, 0xa7, 0x5d, 0xf2, 0x08, 0x42, 0x2d, 0x40, 0x73, 0xeb,
	0xdb, 0x82, 0x96, 0x74, 0x7d, 0x6f, 0xdf, 0x49, 0x71, 0x50, 0xd6, 0xa5, 0x3d, 0xb2, 0x0b, 0x4f,
	0x8c, 0xc9, 0x15, 0x7a, 0xaf, 0x1b, 0x80, 0xab, 0x94, 0xd6, 0xa3, 0x1a, 0x5d, 0xa5, 0xf4, 0x86,
	0xe5, 0xac, 0xa9, 0x34, 0x26, 0x4f, 0xe1, 0xf1, 0xba, 0x92, 0xee, 0xf6, 0x95, 0xca, 0xe4, 0x2a,
	0x95, 0x76, 0x66, 0x37, 0xc8, 0x36, 0xdc, 0xd3, 0x2a, 0x8d, 0x71, 0xb1, 0xd2, 0xe9, 0x96, 0x93,
	0x5d, 0x4e, 0xd5, 0x74, 0x87, 0x44, 0xb0, 0x53, 0xcb, 0x4c, 0x3e, 0xdc, 0x97, 0x16, 0xa7, 0xb3,
	0x4b, 0x9e, 0xc1, 0xac, 0xad, 0x73, 0xb2, 0xfa, 0x1e, 0xe3, 0xb4, 0x9e, 0x39, 0x2b, 0xeb, 0xef,
	0x71, 0x96, 0x4e, 0x5f, 0xbc, 0xfc, 0x31, 0x0c, 0xde, 0x5e, 0x1c, 0x31, 0x71, 0xce, 0x04, 0x79,
	0x06, 0x9d, 0x37, 0x9c, 0x4c, 0x0c, 0x56, 0xd9, 0xef, 0xa8, 0xdb, 0x6d, 0x32, 0xba, 0xf5, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x9a, 0x86, 0x9a, 0xac, 0x15, 0x00, 0x00,
}
