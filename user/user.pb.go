// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JoinOperator int32

const (
	JoinOperator_none JoinOperator = 0
	JoinOperator_and  JoinOperator = 1
	JoinOperator_or   JoinOperator = 2
)

var JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}

var JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x JoinOperator) Enum() *JoinOperator {
	p := new(JoinOperator)
	*p = x
	return p
}

func (x JoinOperator) String() string {
	return proto.EnumName(JoinOperator_name, int32(x))
}

func (x *JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JoinOperator_value, data, "JoinOperator")
	if err != nil {
		return err
	}
	*x = JoinOperator(value)
	return nil
}

func (JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

type ConditionType int32

const (
	ConditionType_attribute ConditionType = 0
	ConditionType_event     ConditionType = 1
)

var ConditionType_name = map[int32]string{
	0: "attribute",
	1: "event",
}

var ConditionType_value = map[string]int32{
	"attribute": 0,
	"event":     1,
}

func (x ConditionType) Enum() *ConditionType {
	p := new(ConditionType)
	*p = x
	return p
}

func (x ConditionType) String() string {
	return proto.EnumName(ConditionType_name, int32(x))
}

func (x *ConditionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConditionType_value, data, "ConditionType")
	if err != nil {
		return err
	}
	*x = ConditionType(value)
	return nil
}

func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

type Segmentation_State int32

const (
	Segmentation_active   Segmentation_State = 0
	Segmentation_inactive Segmentation_State = 1
)

var Segmentation_State_name = map[int32]string{
	0: "active",
	1: "inactive",
}

var Segmentation_State_value = map[string]int32{
	"active":   0,
	"inactive": 1,
}

func (x Segmentation_State) Enum() *Segmentation_State {
	p := new(Segmentation_State)
	*p = x
	return p
}

func (x Segmentation_State) String() string {
	return proto.EnumName(Segmentation_State_name, int32(x))
}

func (x *Segmentation_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Segmentation_State_value, data, "Segmentation_State")
	if err != nil {
		return err
	}
	*x = Segmentation_State(value)
	return nil
}

func (Segmentation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6, 0}
}

type Segmentation_Scope int32

const (
	Segmentation_agent   Segmentation_Scope = 0
	Segmentation_account Segmentation_Scope = 1
)

var Segmentation_Scope_name = map[int32]string{
	0: "agent",
	1: "account",
}

var Segmentation_Scope_value = map[string]int32{
	"agent":   0,
	"account": 1,
}

func (x Segmentation_Scope) Enum() *Segmentation_Scope {
	p := new(Segmentation_Scope)
	*p = x
	return p
}

func (x Segmentation_Scope) String() string {
	return proto.EnumName(Segmentation_Scope_name, int32(x))
}

func (x *Segmentation_Scope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Segmentation_Scope_value, data, "Segmentation_Scope")
	if err != nil {
		return err
	}
	*x = Segmentation_Scope(value)
	return nil
}

func (Segmentation_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6, 1}
}

type Condition_JoinOperator int32

const (
	Condition_none Condition_JoinOperator = 0
	Condition_and  Condition_JoinOperator = 1
	Condition_or   Condition_JoinOperator = 2
)

var Condition_JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}

var Condition_JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x Condition_JoinOperator) Enum() *Condition_JoinOperator {
	p := new(Condition_JoinOperator)
	*p = x
	return p
}

func (x Condition_JoinOperator) String() string {
	return proto.EnumName(Condition_JoinOperator_name, int32(x))
}

func (x *Condition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Condition_JoinOperator_value, data, "Condition_JoinOperator")
	if err != nil {
		return err
	}
	*x = Condition_JoinOperator(value)
	return nil
}

func (Condition_JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7, 0}
}

type SCondition_EventTime int32

const (
	SCondition_none    SCondition_EventTime = 0
	SCondition_current SCondition_EventTime = 1
	SCondition_latest  SCondition_EventTime = 2
	SCondition_past    SCondition_EventTime = 3
)

var SCondition_EventTime_name = map[int32]string{
	0: "none",
	1: "current",
	2: "latest",
	3: "past",
}

var SCondition_EventTime_value = map[string]int32{
	"none":    0,
	"current": 1,
	"latest":  2,
	"past":    3,
}

func (x SCondition_EventTime) Enum() *SCondition_EventTime {
	p := new(SCondition_EventTime)
	*p = x
	return p
}

func (x SCondition_EventTime) String() string {
	return proto.EnumName(SCondition_EventTime_name, int32(x))
}

func (x *SCondition_EventTime) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SCondition_EventTime_value, data, "SCondition_EventTime")
	if err != nil {
		return err
	}
	*x = SCondition_EventTime(value)
	return nil
}

func (SCondition_EventTime) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11, 0}
}

type SCondition_JoinOperator int32

const (
	SCondition_and SCondition_JoinOperator = 0
	SCondition_or  SCondition_JoinOperator = 1
)

var SCondition_JoinOperator_name = map[int32]string{
	0: "and",
	1: "or",
}

var SCondition_JoinOperator_value = map[string]int32{
	"and": 0,
	"or":  1,
}

func (x SCondition_JoinOperator) Enum() *SCondition_JoinOperator {
	p := new(SCondition_JoinOperator)
	*p = x
	return p
}

func (x SCondition_JoinOperator) String() string {
	return proto.EnumName(SCondition_JoinOperator_name, int32(x))
}

func (x *SCondition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SCondition_JoinOperator_value, data, "SCondition_JoinOperator")
	if err != nil {
		return err
	}
	*x = SCondition_JoinOperator(value)
	return nil
}

func (SCondition_JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11, 1}
}

type SCondition_Function int32

const (
	SCondition_minute_of_day SCondition_Function = 0
	SCondition_hour_of_day   SCondition_Function = 1
	SCondition_day_of_week   SCondition_Function = 2
	SCondition_day_ago       SCondition_Function = 3
)

var SCondition_Function_name = map[int32]string{
	0: "minute_of_day",
	1: "hour_of_day",
	2: "day_of_week",
	3: "day_ago",
}

var SCondition_Function_value = map[string]int32{
	"minute_of_day": 0,
	"hour_of_day":   1,
	"day_of_week":   2,
	"day_ago":       3,
}

func (x SCondition_Function) Enum() *SCondition_Function {
	p := new(SCondition_Function)
	*p = x
	return p
}

func (x SCondition_Function) String() string {
	return proto.EnumName(SCondition_Function_name, int32(x))
}

func (x *SCondition_Function) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SCondition_Function_value, data, "SCondition_Function")
	if err != nil {
		return err
	}
	*x = SCondition_Function(value)
	return nil
}

func (SCondition_Function) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11, 2}
}

type Note_CreatorType int32

const (
	Note_agent  Note_CreatorType = 0
	Note_system Note_CreatorType = 1
)

var Note_CreatorType_name = map[int32]string{
	0: "agent",
	1: "system",
}

var Note_CreatorType_value = map[string]int32{
	"agent":  0,
	"system": 1,
}

func (x Note_CreatorType) Enum() *Note_CreatorType {
	p := new(Note_CreatorType)
	*p = x
	return p
}

func (x Note_CreatorType) String() string {
	return proto.EnumName(Note_CreatorType_name, int32(x))
}

func (x *Note_CreatorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_CreatorType_value, data, "Note_CreatorType")
	if err != nil {
		return err
	}
	*x = Note_CreatorType(value)
	return nil
}

func (Note_CreatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12, 0}
}

type Note_Type int32

const (
	Note_conversation Note_Type = 0
	Note_ticket       Note_Type = 1
	Note_deal         Note_Type = 2
	Note_user         Note_Type = 3
)

var Note_Type_name = map[int32]string{
	0: "conversation",
	1: "ticket",
	2: "deal",
	3: "user",
}

var Note_Type_value = map[string]int32{
	"conversation": 0,
	"ticket":       1,
	"deal":         2,
	"user":         3,
}

func (x Note_Type) Enum() *Note_Type {
	p := new(Note_Type)
	*p = x
	return p
}

func (x Note_Type) String() string {
	return proto.EnumName(Note_Type_name, int32(x))
}

func (x *Note_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_Type_value, data, "Note_Type")
	if err != nil {
		return err
	}
	*x = Note_Type(value)
	return nil
}

func (Note_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12, 1}
}

type Note_Format int32

const (
	Note_plaintext Note_Format = 0
	Note_markdown  Note_Format = 1
	Note_html      Note_Format = 2
)

var Note_Format_name = map[int32]string{
	0: "plaintext",
	1: "markdown",
	2: "html",
}

var Note_Format_value = map[string]int32{
	"plaintext": 0,
	"markdown":  1,
	"html":      2,
}

func (x Note_Format) Enum() *Note_Format {
	p := new(Note_Format)
	*p = x
	return p
}

func (x Note_Format) String() string {
	return proto.EnumName(Note_Format_name, int32(x))
}

func (x *Note_Format) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Note_Format_value, data, "Note_Format")
	if err != nil {
		return err
	}
	*x = Note_Format(value)
	return nil
}

func (Note_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12, 2}
}

type SessionTracking struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Started              *int64   `protobuf:"varint,4,opt,name=started" json:"started,omitempty"`
	Tracked              *int64   `protobuf:"varint,6,opt,name=tracked" json:"tracked,omitempty"`
	Total                *int32   `protobuf:"varint,7,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionTracking) Reset()         { *m = SessionTracking{} }
func (m *SessionTracking) String() string { return proto.CompactTextString(m) }
func (*SessionTracking) ProtoMessage()    {}
func (*SessionTracking) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *SessionTracking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionTracking.Unmarshal(m, b)
}
func (m *SessionTracking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionTracking.Marshal(b, m, deterministic)
}
func (m *SessionTracking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionTracking.Merge(m, src)
}
func (m *SessionTracking) XXX_Size() int {
	return xxx_messageInfo_SessionTracking.Size(m)
}
func (m *SessionTracking) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionTracking.DiscardUnknown(m)
}

var xxx_messageInfo_SessionTracking proto.InternalMessageInfo

func (m *SessionTracking) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SessionTracking) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *SessionTracking) GetStarted() int64 {
	if m != nil && m.Started != nil {
		return *m.Started
	}
	return 0
}

func (m *SessionTracking) GetTracked() int64 {
	if m != nil && m.Tracked != nil {
		return *m.Tracked
	}
	return 0
}

func (m *SessionTracking) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

type AggregateUpdateInteracted struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Interacted           *int64          `protobuf:"varint,5,opt,name=interacted" json:"interacted,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AggregateUpdateInteracted) Reset()         { *m = AggregateUpdateInteracted{} }
func (m *AggregateUpdateInteracted) String() string { return proto.CompactTextString(m) }
func (*AggregateUpdateInteracted) ProtoMessage()    {}
func (*AggregateUpdateInteracted) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *AggregateUpdateInteracted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateUpdateInteracted.Unmarshal(m, b)
}
func (m *AggregateUpdateInteracted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateUpdateInteracted.Marshal(b, m, deterministic)
}
func (m *AggregateUpdateInteracted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateUpdateInteracted.Merge(m, src)
}
func (m *AggregateUpdateInteracted) XXX_Size() int {
	return xxx_messageInfo_AggregateUpdateInteracted.Size(m)
}
func (m *AggregateUpdateInteracted) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateUpdateInteracted.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateUpdateInteracted proto.InternalMessageInfo

func (m *AggregateUpdateInteracted) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AggregateUpdateInteracted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AggregateUpdateInteracted) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AggregateUpdateInteracted) GetInteracted() int64 {
	if m != nil && m.Interacted != nil {
		return *m.Interacted
	}
	return 0
}

func (m *AggregateUpdateInteracted) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type AggregateSegmentAttrCount struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Min                  *int64          `protobuf:"varint,3,opt,name=min" json:"min,omitempty"`
	Count                *int64          `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	SegmentationId       *string         `protobuf:"bytes,7,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Attribute            *string         `protobuf:"bytes,8,opt,name=attribute" json:"attribute,omitempty"`
	Hour                 *int64          `protobuf:"varint,9,opt,name=hour" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AggregateSegmentAttrCount) Reset()         { *m = AggregateSegmentAttrCount{} }
func (m *AggregateSegmentAttrCount) String() string { return proto.CompactTextString(m) }
func (*AggregateSegmentAttrCount) ProtoMessage()    {}
func (*AggregateSegmentAttrCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *AggregateSegmentAttrCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateSegmentAttrCount.Unmarshal(m, b)
}
func (m *AggregateSegmentAttrCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateSegmentAttrCount.Marshal(b, m, deterministic)
}
func (m *AggregateSegmentAttrCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateSegmentAttrCount.Merge(m, src)
}
func (m *AggregateSegmentAttrCount) XXX_Size() int {
	return xxx_messageInfo_AggregateSegmentAttrCount.Size(m)
}
func (m *AggregateSegmentAttrCount) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateSegmentAttrCount.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateSegmentAttrCount proto.InternalMessageInfo

func (m *AggregateSegmentAttrCount) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AggregateSegmentAttrCount) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetMin() int64 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *AggregateSegmentAttrCount) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetAttribute() string {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return ""
}

func (m *AggregateSegmentAttrCount) GetHour() int64 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

type SubizIDRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	SubizId              *string         `protobuf:"bytes,2,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubizIDRequest) Reset()         { *m = SubizIDRequest{} }
func (m *SubizIDRequest) String() string { return proto.CompactTextString(m) }
func (*SubizIDRequest) ProtoMessage()    {}
func (*SubizIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *SubizIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubizIDRequest.Unmarshal(m, b)
}
func (m *SubizIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubizIDRequest.Marshal(b, m, deterministic)
}
func (m *SubizIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubizIDRequest.Merge(m, src)
}
func (m *SubizIDRequest) XXX_Size() int {
	return xxx_messageInfo_SubizIDRequest.Size(m)
}
func (m *SubizIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubizIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubizIDRequest proto.InternalMessageInfo

func (m *SubizIDRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubizIDRequest) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *SubizIDRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type SubizIDResponse struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	SubizId              *string         `protobuf:"bytes,2,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubizIDResponse) Reset()         { *m = SubizIDResponse{} }
func (m *SubizIDResponse) String() string { return proto.CompactTextString(m) }
func (*SubizIDResponse) ProtoMessage()    {}
func (*SubizIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *SubizIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubizIDResponse.Unmarshal(m, b)
}
func (m *SubizIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubizIDResponse.Marshal(b, m, deterministic)
}
func (m *SubizIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubizIDResponse.Merge(m, src)
}
func (m *SubizIDResponse) XXX_Size() int {
	return xxx_messageInfo_SubizIDResponse.Size(m)
}
func (m *SubizIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubizIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubizIDResponse proto.InternalMessageInfo

func (m *SubizIDResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SubizIDResponse) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *SubizIDResponse) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SubizIDResponse) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type Segmentations struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Segmentations        []*Segmentation `protobuf:"bytes,3,rep,name=segmentations" json:"segmentations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Segmentations) Reset()         { *m = Segmentations{} }
func (m *Segmentations) String() string { return proto.CompactTextString(m) }
func (*Segmentations) ProtoMessage()    {}
func (*Segmentations) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *Segmentations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segmentations.Unmarshal(m, b)
}
func (m *Segmentations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segmentations.Marshal(b, m, deterministic)
}
func (m *Segmentations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segmentations.Merge(m, src)
}
func (m *Segmentations) XXX_Size() int {
	return xxx_messageInfo_Segmentations.Size(m)
}
func (m *Segmentations) XXX_DiscardUnknown() {
	xxx_messageInfo_Segmentations.DiscardUnknown(m)
}

var xxx_messageInfo_Segmentations proto.InternalMessageInfo

func (m *Segmentations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentations) GetSegmentations() []*Segmentation {
	if m != nil {
		return m.Segmentations
	}
	return nil
}

type Segmentation struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          *string         `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	UserCount            *int64          `protobuf:"varint,4,opt,name=user_count,json=userCount" json:"user_count,omitempty"`
	StartedFrom          *int64          `protobuf:"varint,7,opt,name=started_from,json=startedFrom" json:"started_from,omitempty"`
	Created              *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,10,opt,name=modified" json:"modified,omitempty"`
	State                *string         `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Conditions           []*SCondition   `protobuf:"bytes,19,rep,name=conditions" json:"conditions,omitempty"`
	Creator              *string         `protobuf:"bytes,20,opt,name=creator" json:"creator,omitempty"`
	Scope                *string         `protobuf:"bytes,21,opt,name=scope" json:"scope,omitempty"`
	IsSystem             *bool           `protobuf:"varint,22,opt,name=is_system,json=isSystem" json:"is_system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Segmentation) Reset()         { *m = Segmentation{} }
func (m *Segmentation) String() string { return proto.CompactTextString(m) }
func (*Segmentation) ProtoMessage()    {}
func (*Segmentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *Segmentation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segmentation.Unmarshal(m, b)
}
func (m *Segmentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segmentation.Marshal(b, m, deterministic)
}
func (m *Segmentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segmentation.Merge(m, src)
}
func (m *Segmentation) XXX_Size() int {
	return xxx_messageInfo_Segmentation.Size(m)
}
func (m *Segmentation) XXX_DiscardUnknown() {
	xxx_messageInfo_Segmentation.DiscardUnknown(m)
}

var xxx_messageInfo_Segmentation proto.InternalMessageInfo

func (m *Segmentation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Segmentation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Segmentation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Segmentation) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Segmentation) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Segmentation) GetUserCount() int64 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *Segmentation) GetStartedFrom() int64 {
	if m != nil && m.StartedFrom != nil {
		return *m.StartedFrom
	}
	return 0
}

func (m *Segmentation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Segmentation) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Segmentation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Segmentation) GetConditions() []*SCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Segmentation) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *Segmentation) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *Segmentation) GetIsSystem() bool {
	if m != nil && m.IsSystem != nil {
		return *m.IsSystem
	}
	return false
}

type Condition struct {
	Join                 *string  `protobuf:"bytes,1,opt,name=join" json:"join,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value                *string  `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Id                   *string  `protobuf:"bytes,6,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Condition) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type IndexEvent struct {
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId            *string  `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Created              *int64   `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Category             *string  `protobuf:"bytes,7,opt,name=category" json:"category,omitempty"`
	Topics               []string `protobuf:"bytes,8,rep,name=topics" json:"topics,omitempty"`
	Object               *string  `protobuf:"bytes,9,opt,name=object" json:"object,omitempty"`
	Text                 *string  `protobuf:"bytes,10,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexEvent) Reset()         { *m = IndexEvent{} }
func (m *IndexEvent) String() string { return proto.CompactTextString(m) }
func (*IndexEvent) ProtoMessage()    {}
func (*IndexEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *IndexEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexEvent.Unmarshal(m, b)
}
func (m *IndexEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexEvent.Marshal(b, m, deterministic)
}
func (m *IndexEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexEvent.Merge(m, src)
}
func (m *IndexEvent) XXX_Size() int {
	return xxx_messageInfo_IndexEvent.Size(m)
}
func (m *IndexEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexEvent.DiscardUnknown(m)
}

var xxx_messageInfo_IndexEvent proto.InternalMessageInfo

func (m *IndexEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *IndexEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *IndexEvent) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *IndexEvent) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *IndexEvent) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *IndexEvent) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *IndexEvent) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *IndexEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type SegmentIndex struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string  `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Year                 *int32   `protobuf:"varint,4,opt,name=year" json:"year,omitempty"`
	Day                  *int32   `protobuf:"varint,5,opt,name=day" json:"day,omitempty"`
	Hour                 *int32   `protobuf:"varint,6,opt,name=hour" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentIndex) Reset()         { *m = SegmentIndex{} }
func (m *SegmentIndex) String() string { return proto.CompactTextString(m) }
func (*SegmentIndex) ProtoMessage()    {}
func (*SegmentIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *SegmentIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIndex.Unmarshal(m, b)
}
func (m *SegmentIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIndex.Marshal(b, m, deterministic)
}
func (m *SegmentIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIndex.Merge(m, src)
}
func (m *SegmentIndex) XXX_Size() int {
	return xxx_messageInfo_SegmentIndex.Size(m)
}
func (m *SegmentIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIndex.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIndex proto.InternalMessageInfo

func (m *SegmentIndex) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SegmentIndex) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *SegmentIndex) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *SegmentIndex) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SegmentIndex) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

type SegmentUser struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string  `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Day                  *int32   `protobuf:"varint,4,opt,name=day" json:"day,omitempty"`
	Hour                 *int32   `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	UserId               *string  `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Activated            *int64   `protobuf:"varint,7,opt,name=activated" json:"activated,omitempty"`
	PickedBy             *string  `protobuf:"bytes,8,opt,name=picked_by,json=pickedBy" json:"picked_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentUser) Reset()         { *m = SegmentUser{} }
func (m *SegmentUser) String() string { return proto.CompactTextString(m) }
func (*SegmentUser) ProtoMessage()    {}
func (*SegmentUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *SegmentUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentUser.Unmarshal(m, b)
}
func (m *SegmentUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentUser.Marshal(b, m, deterministic)
}
func (m *SegmentUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentUser.Merge(m, src)
}
func (m *SegmentUser) XXX_Size() int {
	return xxx_messageInfo_SegmentUser.Size(m)
}
func (m *SegmentUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentUser.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentUser proto.InternalMessageInfo

func (m *SegmentUser) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SegmentUser) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *SegmentUser) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SegmentUser) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

func (m *SegmentUser) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *SegmentUser) GetActivated() int64 {
	if m != nil && m.Activated != nil {
		return *m.Activated
	}
	return 0
}

func (m *SegmentUser) GetPickedBy() string {
	if m != nil && m.PickedBy != nil {
		return *m.PickedBy
	}
	return ""
}

// can be
// {id, join, event_time, conditions} (grouped event condition)
// {id, join, conditions} (grouped condition)
// {id, key, operator, value} (user condition || simple event condition)
type SCondition struct {
	Id                   *string       `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Key                  *string       `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Operator             *string       `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
	Value                *string       `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	Join                 *string       `protobuf:"bytes,7,opt,name=join" json:"join,omitempty"`
	EventTypeTime        *string       `protobuf:"bytes,8,opt,name=event_type_time,json=eventTypeTime" json:"event_type_time,omitempty"`
	EventType            *string       `protobuf:"bytes,10,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Conditions           []*SCondition `protobuf:"bytes,9,rep,name=conditions" json:"conditions,omitempty"`
	Priority             *int32        `protobuf:"varint,12,opt,name=priority" json:"priority,omitempty"`
	EventExisted         *bool         `protobuf:"varint,13,opt,name=event_existed,json=eventExisted" json:"event_existed,omitempty"`
	Function             *string       `protobuf:"bytes,14,opt,name=function" json:"function,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SCondition) Reset()         { *m = SCondition{} }
func (m *SCondition) String() string { return proto.CompactTextString(m) }
func (*SCondition) ProtoMessage()    {}
func (*SCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11}
}

func (m *SCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCondition.Unmarshal(m, b)
}
func (m *SCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCondition.Marshal(b, m, deterministic)
}
func (m *SCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCondition.Merge(m, src)
}
func (m *SCondition) XXX_Size() int {
	return xxx_messageInfo_SCondition.Size(m)
}
func (m *SCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_SCondition.DiscardUnknown(m)
}

var xxx_messageInfo_SCondition proto.InternalMessageInfo

func (m *SCondition) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *SCondition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *SCondition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *SCondition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *SCondition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *SCondition) GetEventTypeTime() string {
	if m != nil && m.EventTypeTime != nil {
		return *m.EventTypeTime
	}
	return ""
}

func (m *SCondition) GetEventType() string {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return ""
}

func (m *SCondition) GetConditions() []*SCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *SCondition) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *SCondition) GetEventExisted() bool {
	if m != nil && m.EventExisted != nil {
		return *m.EventExisted
	}
	return false
}

func (m *SCondition) GetFunction() string {
	if m != nil && m.Function != nil {
		return *m.Function
	}
	return ""
}

type Note struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// optional string user_id = 4;
	CreatorId            *string     `protobuf:"bytes,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Text                 *string     `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
	Created              *int64      `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	CreatorType          *string     `protobuf:"bytes,8,opt,name=creator_type,json=creatorType" json:"creator_type,omitempty"`
	TargetId             *string     `protobuf:"bytes,9,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	TargetType           *string     `protobuf:"bytes,10,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	LinkId               *string     `protobuf:"bytes,11,opt,name=link_id,json=linkId" json:"link_id,omitempty"`
	LinkType             *string     `protobuf:"bytes,12,opt,name=link_type,json=linkType" json:"link_type,omitempty"`
	Format               *string     `protobuf:"bytes,13,opt,name=format" json:"format,omitempty"`
	Links                []*NoteLink `protobuf:"bytes,14,rep,name=links" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12}
}

func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (m *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(m, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Note) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Note) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Note) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Note) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Note) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Note) GetCreatorType() string {
	if m != nil && m.CreatorType != nil {
		return *m.CreatorType
	}
	return ""
}

func (m *Note) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *Note) GetTargetType() string {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return ""
}

func (m *Note) GetLinkId() string {
	if m != nil && m.LinkId != nil {
		return *m.LinkId
	}
	return ""
}

func (m *Note) GetLinkType() string {
	if m != nil && m.LinkType != nil {
		return *m.LinkType
	}
	return ""
}

func (m *Note) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *Note) GetLinks() []*NoteLink {
	if m != nil {
		return m.Links
	}
	return nil
}

type NoteLink struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 *string  `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoteLink) Reset()         { *m = NoteLink{} }
func (m *NoteLink) String() string { return proto.CompactTextString(m) }
func (*NoteLink) ProtoMessage()    {}
func (*NoteLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{13}
}

func (m *NoteLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoteLink.Unmarshal(m, b)
}
func (m *NoteLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoteLink.Marshal(b, m, deterministic)
}
func (m *NoteLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoteLink.Merge(m, src)
}
func (m *NoteLink) XXX_Size() int {
	return xxx_messageInfo_NoteLink.Size(m)
}
func (m *NoteLink) XXX_DiscardUnknown() {
	xxx_messageInfo_NoteLink.DiscardUnknown(m)
}

var xxx_messageInfo_NoteLink proto.InternalMessageInfo

func (m *NoteLink) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *NoteLink) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type Notes struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Notes                []*Note         `protobuf:"bytes,3,rep,name=notes" json:"notes,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Notes) Reset()         { *m = Notes{} }
func (m *Notes) String() string { return proto.CompactTextString(m) }
func (*Notes) ProtoMessage()    {}
func (*Notes) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{14}
}

func (m *Notes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notes.Unmarshal(m, b)
}
func (m *Notes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notes.Marshal(b, m, deterministic)
}
func (m *Notes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notes.Merge(m, src)
}
func (m *Notes) XXX_Size() int {
	return xxx_messageInfo_Notes.Size(m)
}
func (m *Notes) XXX_DiscardUnknown() {
	xxx_messageInfo_Notes.DiscardUnknown(m)
}

var xxx_messageInfo_Notes proto.InternalMessageInfo

func (m *Notes) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Notes) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Notes) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type ListNotesRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TargetId             *string         `protobuf:"bytes,4,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Limit                *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string         `protobuf:"bytes,6,opt,name=anchor" json:"anchor,omitempty"`
	Keyword              *string         `protobuf:"bytes,7,opt,name=keyword" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListNotesRequest) Reset()         { *m = ListNotesRequest{} }
func (m *ListNotesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNotesRequest) ProtoMessage()    {}
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{15}
}

func (m *ListNotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotesRequest.Unmarshal(m, b)
}
func (m *ListNotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotesRequest.Marshal(b, m, deterministic)
}
func (m *ListNotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotesRequest.Merge(m, src)
}
func (m *ListNotesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNotesRequest.Size(m)
}
func (m *ListNotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotesRequest proto.InternalMessageInfo

func (m *ListNotesRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListNotesRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListNotesRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListNotesRequest) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *ListNotesRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListNotesRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListNotesRequest) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

type DeleteNoteRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TargetId             *string  `protobuf:"bytes,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Id                   *string  `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNoteRequest) Reset()         { *m = DeleteNoteRequest{} }
func (m *DeleteNoteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNoteRequest) ProtoMessage()    {}
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{16}
}

func (m *DeleteNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNoteRequest.Unmarshal(m, b)
}
func (m *DeleteNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNoteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNoteRequest.Merge(m, src)
}
func (m *DeleteNoteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNoteRequest.Size(m)
}
func (m *DeleteNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNoteRequest proto.InternalMessageInfo

func (m *DeleteNoteRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *DeleteNoteRequest) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *DeleteNoteRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type GetNoteRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TargetId             *string  `protobuf:"bytes,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Id                   *string  `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNoteRequest) Reset()         { *m = GetNoteRequest{} }
func (m *GetNoteRequest) String() string { return proto.CompactTextString(m) }
func (*GetNoteRequest) ProtoMessage()    {}
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{17}
}

func (m *GetNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNoteRequest.Unmarshal(m, b)
}
func (m *GetNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNoteRequest.Marshal(b, m, deterministic)
}
func (m *GetNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNoteRequest.Merge(m, src)
}
func (m *GetNoteRequest) XXX_Size() int {
	return xxx_messageInfo_GetNoteRequest.Size(m)
}
func (m *GetNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNoteRequest proto.InternalMessageInfo

func (m *GetNoteRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *GetNoteRequest) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *GetNoteRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type UserExportRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string         `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Query                *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Condition            *SCondition     `protobuf:"bytes,10,opt,name=condition" json:"condition,omitempty"`
	AgentId              *string         `protobuf:"bytes,11,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Emails               []string        `protobuf:"bytes,12,rep,name=emails" json:"emails,omitempty"`
	AttributeKeys        []string        `protobuf:"bytes,13,rep,name=attribute_keys,json=attributeKeys" json:"attribute_keys,omitempty"`
	EmailSubject         *string         `protobuf:"bytes,14,opt,name=email_subject,json=emailSubject" json:"email_subject,omitempty"`
	LanguageCode         *string         `protobuf:"bytes,15,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	Ids                  []string        `protobuf:"bytes,16,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserExportRequest) Reset()         { *m = UserExportRequest{} }
func (m *UserExportRequest) String() string { return proto.CompactTextString(m) }
func (*UserExportRequest) ProtoMessage()    {}
func (*UserExportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{18}
}

func (m *UserExportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExportRequest.Unmarshal(m, b)
}
func (m *UserExportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExportRequest.Marshal(b, m, deterministic)
}
func (m *UserExportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExportRequest.Merge(m, src)
}
func (m *UserExportRequest) XXX_Size() int {
	return xxx_messageInfo_UserExportRequest.Size(m)
}
func (m *UserExportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserExportRequest proto.InternalMessageInfo

func (m *UserExportRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UserExportRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserExportRequest) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *UserExportRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *UserExportRequest) GetCondition() *SCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *UserExportRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *UserExportRequest) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *UserExportRequest) GetAttributeKeys() []string {
	if m != nil {
		return m.AttributeKeys
	}
	return nil
}

func (m *UserExportRequest) GetEmailSubject() string {
	if m != nil && m.EmailSubject != nil {
		return *m.EmailSubject
	}
	return ""
}

func (m *UserExportRequest) GetLanguageCode() string {
	if m != nil && m.LanguageCode != nil {
		return *m.LanguageCode
	}
	return ""
}

func (m *UserExportRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type UserSearchRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SegmentationId       *string         `protobuf:"bytes,3,opt,name=segmentation_id,json=segmentationId" json:"segmentation_id,omitempty"`
	Query                *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Anchor               *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	Limit                *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	AgentId              *string         `protobuf:"bytes,8,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Unread               *bool           `protobuf:"varint,9,opt,name=unread" json:"unread,omitempty"`
	Condition            *SCondition     `protobuf:"bytes,10,opt,name=condition" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserSearchRequest) Reset()         { *m = UserSearchRequest{} }
func (m *UserSearchRequest) String() string { return proto.CompactTextString(m) }
func (*UserSearchRequest) ProtoMessage()    {}
func (*UserSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{19}
}

func (m *UserSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSearchRequest.Unmarshal(m, b)
}
func (m *UserSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSearchRequest.Marshal(b, m, deterministic)
}
func (m *UserSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSearchRequest.Merge(m, src)
}
func (m *UserSearchRequest) XXX_Size() int {
	return xxx_messageInfo_UserSearchRequest.Size(m)
}
func (m *UserSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserSearchRequest proto.InternalMessageInfo

func (m *UserSearchRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *UserSearchRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserSearchRequest) GetSegmentationId() string {
	if m != nil && m.SegmentationId != nil {
		return *m.SegmentationId
	}
	return ""
}

func (m *UserSearchRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *UserSearchRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *UserSearchRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *UserSearchRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *UserSearchRequest) GetUnread() bool {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return false
}

func (m *UserSearchRequest) GetCondition() *SCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type ESNote struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	CreatorId            *string         `protobuf:"bytes,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Text                 *string         `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
	Created              *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	TargetId             *string         `protobuf:"bytes,9,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	TargetType           *string         `protobuf:"bytes,10,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	Format               *string         `protobuf:"bytes,13,opt,name=format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ESNote) Reset()         { *m = ESNote{} }
func (m *ESNote) String() string { return proto.CompactTextString(m) }
func (*ESNote) ProtoMessage()    {}
func (*ESNote) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{20}
}

func (m *ESNote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESNote.Unmarshal(m, b)
}
func (m *ESNote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESNote.Marshal(b, m, deterministic)
}
func (m *ESNote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESNote.Merge(m, src)
}
func (m *ESNote) XXX_Size() int {
	return xxx_messageInfo_ESNote.Size(m)
}
func (m *ESNote) XXX_DiscardUnknown() {
	xxx_messageInfo_ESNote.DiscardUnknown(m)
}

var xxx_messageInfo_ESNote proto.InternalMessageInfo

func (m *ESNote) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ESNote) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ESNote) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ESNote) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *ESNote) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *ESNote) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *ESNote) GetTargetId() string {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return ""
}

func (m *ESNote) GetTargetType() string {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return ""
}

func (m *ESNote) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

type SearchNoteRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Keyword              *string         `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	FromSec              *int64          `protobuf:"varint,5,opt,name=from_sec,json=fromSec" json:"from_sec,omitempty"`
	ToSec                *int64          `protobuf:"varint,6,opt,name=to_sec,json=toSec" json:"to_sec,omitempty"`
	Limit                *int64          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string         `protobuf:"bytes,8,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchNoteRequest) Reset()         { *m = SearchNoteRequest{} }
func (m *SearchNoteRequest) String() string { return proto.CompactTextString(m) }
func (*SearchNoteRequest) ProtoMessage()    {}
func (*SearchNoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{21}
}

func (m *SearchNoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNoteRequest.Unmarshal(m, b)
}
func (m *SearchNoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNoteRequest.Marshal(b, m, deterministic)
}
func (m *SearchNoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNoteRequest.Merge(m, src)
}
func (m *SearchNoteRequest) XXX_Size() int {
	return xxx_messageInfo_SearchNoteRequest.Size(m)
}
func (m *SearchNoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNoteRequest proto.InternalMessageInfo

func (m *SearchNoteRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SearchNoteRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SearchNoteRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *SearchNoteRequest) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *SearchNoteRequest) GetFromSec() int64 {
	if m != nil && m.FromSec != nil {
		return *m.FromSec
	}
	return 0
}

func (m *SearchNoteRequest) GetToSec() int64 {
	if m != nil && m.ToSec != nil {
		return *m.ToSec
	}
	return 0
}

func (m *SearchNoteRequest) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *SearchNoteRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type SearchNoteResponse struct {
	Total                *int64    `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Result               []*ESNote `protobuf:"bytes,3,rep,name=result" json:"result,omitempty"`
	Anchor               *string   `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchNoteResponse) Reset()         { *m = SearchNoteResponse{} }
func (m *SearchNoteResponse) String() string { return proto.CompactTextString(m) }
func (*SearchNoteResponse) ProtoMessage()    {}
func (*SearchNoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{22}
}

func (m *SearchNoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNoteResponse.Unmarshal(m, b)
}
func (m *SearchNoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNoteResponse.Marshal(b, m, deterministic)
}
func (m *SearchNoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNoteResponse.Merge(m, src)
}
func (m *SearchNoteResponse) XXX_Size() int {
	return xxx_messageInfo_SearchNoteResponse.Size(m)
}
func (m *SearchNoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNoteResponse proto.InternalMessageInfo

func (m *SearchNoteResponse) GetTotal() int64 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *SearchNoteResponse) GetResult() []*ESNote {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SearchNoteResponse) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func init() {
	proto.RegisterEnum("user.JoinOperator", JoinOperator_name, JoinOperator_value)
	proto.RegisterEnum("user.ConditionType", ConditionType_name, ConditionType_value)
	proto.RegisterEnum("user.Segmentation_State", Segmentation_State_name, Segmentation_State_value)
	proto.RegisterEnum("user.Segmentation_Scope", Segmentation_Scope_name, Segmentation_Scope_value)
	proto.RegisterEnum("user.Condition_JoinOperator", Condition_JoinOperator_name, Condition_JoinOperator_value)
	proto.RegisterEnum("user.SCondition_EventTime", SCondition_EventTime_name, SCondition_EventTime_value)
	proto.RegisterEnum("user.SCondition_JoinOperator", SCondition_JoinOperator_name, SCondition_JoinOperator_value)
	proto.RegisterEnum("user.SCondition_Function", SCondition_Function_name, SCondition_Function_value)
	proto.RegisterEnum("user.Note_CreatorType", Note_CreatorType_name, Note_CreatorType_value)
	proto.RegisterEnum("user.Note_Type", Note_Type_name, Note_Type_value)
	proto.RegisterEnum("user.Note_Format", Note_Format_name, Note_Format_value)
	proto.RegisterType((*SessionTracking)(nil), "user.SessionTracking")
	proto.RegisterType((*AggregateUpdateInteracted)(nil), "user.AggregateUpdateInteracted")
	proto.RegisterType((*AggregateSegmentAttrCount)(nil), "user.AggregateSegmentAttrCount")
	proto.RegisterType((*SubizIDRequest)(nil), "user.SubizIDRequest")
	proto.RegisterType((*SubizIDResponse)(nil), "user.SubizIDResponse")
	proto.RegisterType((*Segmentations)(nil), "user.Segmentations")
	proto.RegisterType((*Segmentation)(nil), "user.Segmentation")
	proto.RegisterType((*Condition)(nil), "user.Condition")
	proto.RegisterType((*IndexEvent)(nil), "user.IndexEvent")
	proto.RegisterType((*SegmentIndex)(nil), "user.SegmentIndex")
	proto.RegisterType((*SegmentUser)(nil), "user.SegmentUser")
	proto.RegisterType((*SCondition)(nil), "user.SCondition")
	proto.RegisterType((*Note)(nil), "user.Note")
	proto.RegisterType((*NoteLink)(nil), "user.NoteLink")
	proto.RegisterType((*Notes)(nil), "user.Notes")
	proto.RegisterType((*ListNotesRequest)(nil), "user.ListNotesRequest")
	proto.RegisterType((*DeleteNoteRequest)(nil), "user.DeleteNoteRequest")
	proto.RegisterType((*GetNoteRequest)(nil), "user.GetNoteRequest")
	proto.RegisterType((*UserExportRequest)(nil), "user.UserExportRequest")
	proto.RegisterType((*UserSearchRequest)(nil), "user.UserSearchRequest")
	proto.RegisterType((*ESNote)(nil), "user.ESNote")
	proto.RegisterType((*SearchNoteRequest)(nil), "user.SearchNoteRequest")
	proto.RegisterType((*SearchNoteResponse)(nil), "user.SearchNoteResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 1727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x8f, 0xdb, 0xc6,
	0x15, 0x5f, 0x8a, 0x22, 0x45, 0x3e, 0x49, 0xbb, 0x34, 0xeb, 0x38, 0x8c, 0x93, 0xc6, 0x32, 0xeb,
	0xb6, 0x9b, 0x1c, 0xd6, 0x45, 0x4e, 0xbe, 0x26, 0x1b, 0xbb, 0x50, 0x6b, 0xb4, 0x00, 0xe5, 0x5c,
	0x8a, 0x02, 0xc2, 0x2c, 0x39, 0xab, 0x9d, 0x48, 0xe4, 0x28, 0xc3, 0x91, 0xbd, 0xea, 0x17, 0xe8,
	0xa1, 0x97, 0x02, 0xbd, 0xf7, 0xd6, 0x7b, 0x3f, 0x49, 0x0b, 0xf4, 0x4b, 0x14, 0xe8, 0xb5, 0xb7,
	0x00, 0x05, 0x8a, 0xf7, 0x66, 0x48, 0x51, 0x6b, 0x6f, 0xb3, 0x49, 0x36, 0x40, 0x73, 0x9b, 0xf7,
	0xde, 0xcc, 0xbc, 0x7f, 0xbf, 0xf7, 0xde, 0x90, 0x00, 0x9b, 0x9a, 0xab, 0x93, 0xb5, 0x92, 0x5a,
	0xc6, 0x7d, 0x5c, 0xdf, 0x1f, 0xe5, 0xb2, 0x2c, 0x65, 0x65, 0x78, 0xe9, 0x9f, 0x1c, 0x38, 0x9a,
	0xf1, 0xba, 0x16, 0xb2, 0x7a, 0xa1, 0x58, 0xbe, 0x14, 0xd5, 0x22, 0xfe, 0x21, 0x00, 0xcb, 0x73,
	0xb9, 0xa9, 0xf4, 0x5c, 0x14, 0x49, 0x6f, 0xe2, 0x1c, 0x87, 0x59, 0x68, 0x39, 0xd3, 0x22, 0x7e,
	0x1b, 0x06, 0x78, 0x11, 0xca, 0x5c, 0x92, 0xf9, 0x48, 0x4e, 0x8b, 0x38, 0x81, 0x41, 0xad, 0x99,
	0xd2, 0xbc, 0x48, 0xfa, 0x13, 0xe7, 0xd8, 0xcd, 0x1a, 0x12, 0x25, 0x1a, 0x6f, 0xe7, 0x45, 0xe2,
	0x1b, 0x89, 0x25, 0xe3, 0xbb, 0xe0, 0x69, 0xa9, 0xd9, 0x2a, 0x19, 0x4c, 0x9c, 0x63, 0x2f, 0x33,
	0x44, 0xfa, 0x57, 0x07, 0xde, 0xf9, 0x78, 0xb1, 0x50, 0x7c, 0xc1, 0x34, 0xff, 0x6c, 0x5d, 0x30,
	0xcd, 0xa7, 0x95, 0xe6, 0x8a, 0xe5, 0x78, 0xdb, 0x43, 0x70, 0x73, 0x7d, 0x99, 0x38, 0x13, 0xe7,
	0x78, 0xf8, 0xd1, 0xd1, 0x89, 0xf5, 0xe7, 0x54, 0x56, 0x9a, 0x5f, 0xea, 0x0c, 0x65, 0xdf, 0xd8,
	0x85, 0xf7, 0x01, 0x44, 0xab, 0x28, 0xf1, 0xc8, 0xd6, 0x0e, 0x07, 0x1d, 0xc9, 0x15, 0x67, 0x7a,
	0xe7, 0x88, 0x25, 0xd3, 0x2f, 0xbb, 0x26, 0xcf, 0xf8, 0xa2, 0xe4, 0x95, 0xfe, 0x58, 0x6b, 0x75,
	0x8a, 0x2a, 0x6f, 0xc1, 0xe4, 0x08, 0xdc, 0x52, 0x54, 0x64, 0xae, 0x9b, 0xe1, 0x12, 0x43, 0x47,
	0x42, 0x6b, 0xa6, 0x21, 0xae, 0xb7, 0x30, 0xfe, 0x29, 0x1c, 0xd5, 0xc6, 0x2e, 0xa6, 0x85, 0xac,
	0x50, 0xcb, 0x80, 0xb4, 0x1c, 0x76, 0xd9, 0xd3, 0x22, 0x7e, 0x0f, 0x42, 0xa6, 0xb5, 0x12, 0x67,
	0x1b, 0xcd, 0x93, 0xc0, 0x1a, 0xd2, 0x30, 0xe2, 0x18, 0xfa, 0x17, 0x72, 0xa3, 0x92, 0x90, 0x6e,
	0xa7, 0x75, 0x5a, 0xc2, 0xe1, 0x6c, 0x73, 0x26, 0x7e, 0x37, 0xfd, 0x34, 0xe3, 0x5f, 0x6c, 0x78,
	0x7d, 0x23, 0x87, 0xdf, 0x81, 0xa0, 0xc6, 0x43, 0x3b, 0x77, 0x07, 0x44, 0x4f, 0x8b, 0x2b, 0xb1,
	0x70, 0xaf, 0xc4, 0x22, 0xfd, 0x3d, 0x82, 0xb6, 0xd1, 0x57, 0xaf, 0x65, 0x55, 0xf3, 0xef, 0x54,
	0x61, 0x17, 0x2f, 0xfd, 0x2e, 0x5e, 0xd2, 0x15, 0x8c, 0x67, 0x9d, 0xe0, 0xd5, 0x37, 0x31, 0xe3,
	0x09, 0x8c, 0xbb, 0x01, 0xaf, 0x13, 0x77, 0xe2, 0x1e, 0x0f, 0x3f, 0x8a, 0x4f, 0xa8, 0x54, 0xbb,
	0xd7, 0x65, 0xfb, 0x1b, 0xd3, 0x7f, 0xba, 0x30, 0xea, 0xca, 0x6f, 0x01, 0x56, 0x87, 0xd0, 0x13,
	0x06, 0xe8, 0x61, 0xd6, 0x13, 0x05, 0x66, 0xb7, 0x62, 0x25, 0xb7, 0x21, 0xa0, 0x75, 0x3c, 0x81,
	0x61, 0xc1, 0xeb, 0x5c, 0x89, 0x35, 0x2a, 0x4d, 0x86, 0x24, 0xea, 0xb2, 0x50, 0x09, 0xc5, 0xc7,
	0xe0, 0xd1, 0x14, 0x7f, 0x88, 0x9c, 0x06, 0xfd, 0x23, 0xdb, 0x09, 0xe6, 0xe7, 0x4a, 0x96, 0x04,
	0x3b, 0x37, 0x1b, 0x5a, 0xde, 0x33, 0x25, 0xcb, 0x2e, 0x6c, 0xc3, 0x7d, 0xd8, 0xde, 0x87, 0xa0,
	0x94, 0x85, 0x38, 0x17, 0xbc, 0x48, 0x80, 0x44, 0x2d, 0x8d, 0x25, 0x50, 0x6b, 0xa6, 0x79, 0x32,
	0x22, 0x9b, 0x0c, 0x11, 0xff, 0x0c, 0x20, 0x97, 0x55, 0x21, 0x4c, 0x74, 0x7f, 0x40, 0xd1, 0x8d,
	0x6c, 0x74, 0x4f, 0x1b, 0x41, 0xd6, 0xd9, 0xd3, 0x6a, 0x97, 0x2a, 0xb9, 0x6b, 0x80, 0x61, 0x49,
	0xd2, 0x90, 0xcb, 0x35, 0x4f, 0xde, 0xb2, 0x1a, 0x90, 0x88, 0xdf, 0x85, 0x50, 0xd4, 0xf3, 0x7a,
	0x5b, 0x6b, 0x5e, 0x26, 0xf7, 0x26, 0xce, 0x71, 0x90, 0x05, 0xa2, 0x9e, 0x11, 0x9d, 0x3e, 0x04,
	0x6f, 0x46, 0x76, 0x00, 0xf8, 0x2c, 0xd7, 0xe2, 0x25, 0x8f, 0x0e, 0xe2, 0x11, 0x04, 0xa2, 0xb2,
	0x94, 0x93, 0x3e, 0x00, 0x6f, 0x46, 0x17, 0x85, 0xe0, 0xb1, 0x05, 0xaf, 0x74, 0x74, 0x10, 0x0f,
	0x61, 0x60, 0xd3, 0x12, 0x39, 0xe9, 0x9f, 0x1d, 0x08, 0x5b, 0x53, 0x31, 0x29, 0x9f, 0x4b, 0x51,
	0x51, 0x9e, 0xc3, 0x8c, 0xd6, 0xd8, 0x0f, 0x96, 0x7c, 0x6b, 0x13, 0x8a, 0x4b, 0x0c, 0x94, 0x5c,
	0x73, 0x45, 0x5e, 0x98, 0xf4, 0xb5, 0x34, 0xba, 0xf1, 0x92, 0xad, 0x36, 0xdc, 0xc2, 0xd7, 0x10,
	0x36, 0xf9, 0x7e, 0x93, 0xfc, 0xf4, 0x03, 0x18, 0xfd, 0x42, 0x8a, 0xea, 0xd7, 0xcd, 0xa9, 0x00,
	0xfa, 0x95, 0xac, 0xd0, 0xfc, 0x01, 0xb8, 0xac, 0x2a, 0x22, 0x27, 0xf6, 0xa1, 0x27, 0x55, 0xd4,
	0x4b, 0xff, 0xe6, 0x00, 0x4c, 0xab, 0x82, 0x5f, 0x3e, 0x7d, 0xc9, 0x2b, 0x6d, 0x6f, 0x72, 0x5b,
	0x18, 0xed, 0xa3, 0xae, 0xff, 0x3f, 0xea, 0xc9, 0xbb, 0x3a, 0x42, 0xae, 0xe9, 0x5e, 0xf7, 0x21,
	0xc8, 0x99, 0xe6, 0x0b, 0xa9, 0xb6, 0xb6, 0x6d, 0xb5, 0x74, 0x7c, 0x0f, 0x7c, 0x2d, 0xd7, 0x22,
	0xaf, 0x93, 0x60, 0xe2, 0xe2, 0x6d, 0x86, 0x42, 0xbe, 0x3c, 0xfb, 0x9c, 0xe7, 0x9a, 0x30, 0x15,
	0x66, 0x96, 0xc2, 0x78, 0x62, 0x81, 0x10, 0x9c, 0xc2, 0x8c, 0xd6, 0xe9, 0x1f, 0x9d, 0xb6, 0xb6,
	0xc8, 0xaf, 0xaf, 0x2a, 0x9c, 0x37, 0x74, 0x53, 0xf7, 0x8d, 0xdd, 0x34, 0x86, 0xfe, 0x96, 0x33,
	0x45, 0x41, 0xf0, 0x32, 0x5a, 0x63, 0xf2, 0x0a, 0xb6, 0x25, 0xdf, 0xbd, 0x0c, 0x97, 0x6d, 0x57,
	0xf5, 0xcd, 0x2e, 0xea, 0xaa, 0x7f, 0x77, 0x60, 0x68, 0x4d, 0xfa, 0xac, 0xe6, 0xea, 0xd6, 0x2c,
	0xb2, 0xda, 0xfb, 0xaf, 0x6b, 0xf7, 0x76, 0xda, 0xbb, 0x39, 0xf2, 0xf7, 0x72, 0x84, 0xe3, 0x01,
	0x81, 0x4c, 0x59, 0x32, 0xa5, 0xbc, 0x63, 0x60, 0x69, 0xac, 0x05, 0x8e, 0xf6, 0xf9, 0xd9, 0xd6,
	0x0e, 0x8f, 0xc0, 0x30, 0x3e, 0xd9, 0xa6, 0xff, 0x76, 0x01, 0x76, 0x25, 0xf8, 0x1a, 0x6a, 0x2c,
	0xa6, 0xfb, 0x6f, 0xc6, 0xb4, 0x77, 0x1d, 0xa6, 0xfd, 0x2e, 0xa6, 0x9b, 0x5a, 0x19, 0x74, 0x6a,
	0xe5, 0x27, 0x70, 0xc4, 0x11, 0xa6, 0x73, 0xbd, 0x5d, 0xf3, 0xb9, 0x16, 0x65, 0x33, 0xd6, 0xc6,
	0xc4, 0x7e, 0xb1, 0x5d, 0xf3, 0x17, 0xa2, 0xe4, 0x18, 0xe0, 0xdd, 0x3e, 0x8b, 0x8e, 0xb0, 0xdd,
	0x72, 0xa5, 0xaf, 0x84, 0x37, 0xe8, 0x2b, 0xf7, 0x21, 0x58, 0x2b, 0x21, 0x95, 0xd0, 0x5b, 0x6a,
	0x51, 0x5e, 0xd6, 0xd2, 0xf1, 0x8f, 0xc0, 0x68, 0x9f, 0xf3, 0x4b, 0x51, 0x63, 0x28, 0xc7, 0xd4,
	0x47, 0x46, 0xc4, 0x7c, 0x6a, 0x78, 0x78, 0xc1, 0xf9, 0xa6, 0xca, 0xa9, 0xef, 0x1e, 0x1a, 0xff,
	0x1b, 0x3a, 0x7d, 0x02, 0x21, 0x15, 0x1f, 0x99, 0xbe, 0x2b, 0xd5, 0x21, 0x0c, 0xf2, 0x8d, 0x52,
	0xd8, 0x54, 0x1c, 0x6c, 0x41, 0x2b, 0xa6, 0x79, 0xad, 0xa3, 0x1e, 0x6e, 0x59, 0xb3, 0x5a, 0x47,
	0x6e, 0xfa, 0xe0, 0x4a, 0x9d, 0xdb, 0xea, 0x3e, 0xb0, 0xd5, 0xed, 0xa4, 0xcf, 0x21, 0x78, 0x66,
	0xd5, 0xc4, 0x77, 0x60, 0x5c, 0x8a, 0x6a, 0xa3, 0xf9, 0x5c, 0x9e, 0xcf, 0x0b, 0xb6, 0x8d, 0x0e,
	0xe2, 0x23, 0x18, 0x22, 0x44, 0x1a, 0x86, 0x83, 0x8c, 0x82, 0x6d, 0x91, 0x7e, 0xc5, 0xf9, 0x32,
	0xea, 0xa1, 0x11, 0xc8, 0x60, 0x0b, 0x19, 0xb9, 0xe9, 0x1f, 0xfa, 0xd0, 0xff, 0x95, 0xd4, 0xfc,
	0xd6, 0xc6, 0xd5, 0x5e, 0x9f, 0xb1, 0x9d, 0x7a, 0xd7, 0x4b, 0x42, 0xcb, 0x31, 0xb5, 0x47, 0x85,
	0xee, 0xef, 0x0a, 0xbd, 0xdb, 0x62, 0x06, 0xfb, 0x2d, 0xe6, 0x21, 0x8c, 0x9a, 0xcb, 0x08, 0x00,
	0x06, 0x23, 0x43, 0xcb, 0x23, 0x08, 0xbc, 0x0b, 0xa1, 0x66, 0x6a, 0xc1, 0xc9, 0x3a, 0xd3, 0x54,
	0x02, 0xc3, 0x98, 0x16, 0xf1, 0x03, 0x18, 0x5a, 0x61, 0x07, 0x3f, 0x60, 0x58, 0x74, 0xfa, 0x6d,
	0x18, 0xac, 0x44, 0xb5, 0xc4, 0xb3, 0x66, 0x88, 0xfa, 0x48, 0x4e, 0xa9, 0x68, 0x48, 0x40, 0xe7,
	0xcc, 0x2c, 0x0b, 0x90, 0x41, 0xa7, 0xee, 0x81, 0x7f, 0x2e, 0x55, 0xc9, 0x34, 0x21, 0x24, 0xcc,
	0x2c, 0x15, 0x3f, 0x02, 0x0f, 0xf7, 0xd4, 0xc9, 0x21, 0x21, 0xf1, 0xd0, 0x20, 0x11, 0x03, 0xfd,
	0x5c, 0x54, 0xcb, 0xcc, 0x08, 0xd3, 0x47, 0x30, 0x3c, 0xed, 0x38, 0xd0, 0x19, 0x38, 0x00, 0xbe,
	0x99, 0x60, 0x91, 0x93, 0x3e, 0x81, 0x3e, 0x89, 0x23, 0x18, 0xe5, 0xb2, 0x7a, 0xc9, 0x55, 0x4d,
	0xcd, 0xc2, 0xec, 0xd2, 0x58, 0xbe, 0x88, 0xa6, 0x00, 0xfa, 0x05, 0x67, 0x2b, 0x83, 0x25, 0xd4,
	0x16, 0xb9, 0xe9, 0x63, 0xf0, 0x9f, 0x19, 0x7b, 0xc6, 0x10, 0xae, 0x57, 0x4c, 0x50, 0x32, 0xcd,
	0xc4, 0x2b, 0x99, 0x5a, 0x16, 0xf2, 0x55, 0x65, 0x8e, 0x5e, 0xe8, 0x72, 0x15, 0xf5, 0xd2, 0x13,
	0x08, 0x1a, 0x1b, 0x6d, 0x3a, 0x9d, 0xee, 0xeb, 0x83, 0x42, 0xd0, 0xb3, 0xf9, 0xda, 0xae, 0x79,
	0x5a, 0x80, 0x87, 0xfb, 0x6f, 0xf4, 0xb4, 0x9a, 0x80, 0x57, 0xe1, 0x5e, 0xfb, 0xa4, 0x82, 0x5d,
	0x48, 0x32, 0x23, 0xc0, 0x60, 0xb2, 0x2a, 0xbf, 0x90, 0xaa, 0x79, 0xc8, 0x19, 0x2a, 0xfd, 0x87,
	0x03, 0xd1, 0x73, 0x51, 0x6b, 0x52, 0xf5, 0x35, 0x1e, 0xb1, 0xdf, 0xf4, 0x43, 0x63, 0x0f, 0x48,
	0xfd, 0x2b, 0x40, 0xba, 0x8b, 0x99, 0x2d, 0x85, 0xb6, 0xfd, 0xd8, 0x10, 0x1d, 0xd3, 0xfd, 0xae,
	0xe9, 0x08, 0xe8, 0x25, 0xdf, 0xbe, 0x92, 0xaa, 0x79, 0xcf, 0x37, 0x64, 0x3a, 0x87, 0x3b, 0x9f,
	0xf2, 0x15, 0xd7, 0x9c, 0x22, 0x60, 0x9d, 0xfa, 0x0a, 0x8b, 0xf7, 0x0c, 0x73, 0xaf, 0x18, 0x66,
	0xf2, 0xd5, 0x6f, 0x1f, 0x0c, 0xbf, 0x85, 0xc3, 0x9f, 0x73, 0xfd, 0x5d, 0xdd, 0xfe, 0x65, 0x0f,
	0xee, 0xe0, 0xe0, 0x7b, 0x7a, 0xb9, 0x96, 0x4a, 0xdf, 0x5e, 0x52, 0x6e, 0x3c, 0x28, 0xef, 0x82,
	0xf7, 0xc5, 0x86, 0xab, 0x66, 0x22, 0x19, 0x22, 0x3e, 0x81, 0xb0, 0x6d, 0xf1, 0x54, 0xe4, 0x6f,
	0x9a, 0x02, 0xbb, 0x2d, 0xf8, 0xd9, 0x41, 0x25, 0xb7, 0x2b, 0xfb, 0x01, 0xd1, 0xd3, 0x02, 0x53,
	0xca, 0x4b, 0x26, 0x56, 0x75, 0x32, 0x32, 0x0f, 0x17, 0x43, 0xc5, 0x3f, 0x86, 0xc3, 0xf6, 0x83,
	0x6b, 0xbe, 0xe4, 0xdb, 0x3a, 0x19, 0x93, 0x7c, 0xdc, 0x72, 0x7f, 0xc9, 0xb7, 0x35, 0x8d, 0x10,
	0x3c, 0x30, 0xaf, 0x37, 0xe6, 0x99, 0x63, 0x46, 0xc4, 0x88, 0x98, 0x33, 0xc3, 0xc3, 0x4d, 0x2b,
	0x56, 0x2d, 0x36, 0x6c, 0xc1, 0xe7, 0xb9, 0x2c, 0x78, 0x72, 0x64, 0x36, 0x35, 0xcc, 0x53, 0x59,
	0x60, 0xdd, 0xbb, 0xa2, 0xa8, 0x93, 0x88, 0xb4, 0xe0, 0x32, 0xfd, 0x8b, 0x0d, 0xfe, 0x8c, 0x33,
	0x95, 0x5f, 0xfc, 0xdf, 0x04, 0x7f, 0x57, 0x04, 0xde, 0x5e, 0x11, 0xb4, 0x25, 0xe3, 0x77, 0x4b,
	0xa6, 0x1b, 0xfa, 0xe0, 0xb5, 0xd0, 0x6f, 0x2a, 0xc5, 0x99, 0x69, 0xe3, 0x41, 0x66, 0xa9, 0xaf,
	0x9b, 0xdd, 0xf4, 0x3f, 0x0e, 0xf8, 0x4f, 0x67, 0xdf, 0x87, 0xf1, 0xf6, 0xed, 0x66, 0xd7, 0x35,
	0x53, 0x28, 0xfd, 0x97, 0x03, 0x77, 0x0c, 0x46, 0xba, 0x6d, 0xe0, 0xdb, 0x87, 0xa2, 0x9b, 0x3a,
	0x77, 0x3f, 0x75, 0x9d, 0x86, 0xd7, 0xdf, 0x6b, 0x78, 0x78, 0x08, 0x3f, 0x30, 0xe7, 0x35, 0xcf,
	0xed, 0x5f, 0x91, 0x01, 0xd2, 0x33, 0x9e, 0xc7, 0x6f, 0xe1, 0x37, 0x02, 0x09, 0xcc, 0x87, 0x85,
	0xa7, 0x25, 0xb2, 0x5b, 0xdc, 0x98, 0x60, 0xbd, 0xd6, 0x6a, 0x83, 0xbd, 0x29, 0x71, 0x01, 0x71,
	0xd7, 0x57, 0xfb, 0xeb, 0xa1, 0xfd, 0x87, 0xd5, 0x6b, 0x6e, 0xd6, 0x6c, 0x15, 0x3f, 0x02, 0x5f,
	0xf1, 0x7a, 0xb3, 0xd2, 0x76, 0x18, 0x8d, 0x0c, 0x8a, 0x0c, 0x56, 0x32, 0x2b, 0xbb, 0x6e, 0x1e,
	0x7d, 0x78, 0xf3, 0x4f, 0xb1, 0x0f, 0x3f, 0x80, 0x71, 0x8b, 0x4c, 0x4a, 0xd5, 0xb8, 0xf3, 0xff,
	0x26, 0x3a, 0xc0, 0x91, 0x4f, 0x6f, 0xca, 0xc8, 0xf9, 0xe4, 0xfd, 0xdf, 0xbc, 0xb7, 0x10, 0xfa,
	0x62, 0x73, 0x86, 0x19, 0x79, 0x4c, 0x3f, 0x3f, 0x1e, 0x5f, 0x70, 0x56, 0x70, 0xf5, 0x18, 0x8d,
	0xfb, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x57, 0x46, 0x84, 0x2e, 0x14, 0x00, 0x00,
}
