// +build ignore

// TEMPORARY AUTOGENERATED FILE: easyjson bootstapping code to launch
// the actual generator.

package main

import (
  "fmt"
  "os"

  "github.com/mailru/easyjson/gen"

  pkg "github.com/subiz/header/user"
)

func main() {
  g := gen.NewGenerator("user3.pb_easyjson.go")
  g.SetPkg("user", "github.com/subiz/header/user")
  g.Add(pkg.EasyJSON_exporter_Alias(nil))
  g.Add(pkg.EasyJSON_exporter_AttributeData(nil))
  g.Add(pkg.EasyJSON_exporter_AutomationCredit(nil))
  g.Add(pkg.EasyJSON_exporter_AutomationCreditsAggregate(nil))
  g.Add(pkg.EasyJSON_exporter_Campaign(nil))
  g.Add(pkg.EasyJSON_exporter_CountResponse(nil))
  g.Add(pkg.EasyJSON_exporter_CountSegmentationUserByAttributeRequest(nil))
  g.Add(pkg.EasyJSON_exporter_CountTotalRequest(nil))
  g.Add(pkg.EasyJSON_exporter_CountTotalResponse(nil))
  g.Add(pkg.EasyJSON_exporter_CreateRequest(nil))
  g.Add(pkg.EasyJSON_exporter_LastView(nil))
  g.Add(pkg.EasyJSON_exporter_MergeRequest(nil))
  g.Add(pkg.EasyJSON_exporter_MyUser(nil))
  g.Add(pkg.EasyJSON_exporter_PickRequest(nil))
  g.Add(pkg.EasyJSON_exporter_Presence(nil))
  g.Add(pkg.EasyJSON_exporter_Presences(nil))
  g.Add(pkg.EasyJSON_exporter_TotalConvoUpdateRequest(nil))
  g.Add(pkg.EasyJSON_exporter_TotalOpenTicket(nil))
  g.Add(pkg.EasyJSON_exporter_Trace(nil))
  g.Add(pkg.EasyJSON_exporter_Traces(nil))
  g.Add(pkg.EasyJSON_exporter_UnpickRequest(nil))
  g.Add(pkg.EasyJSON_exporter_User(nil))
  g.Add(pkg.EasyJSON_exporter_UserSearchRequest(nil))
  g.Add(pkg.EasyJSON_exporter_UserSearchResult(nil))
  g.Add(pkg.EasyJSON_exporter_Users(nil))
  g.Add(pkg.EasyJSON_exporter_Visitor(nil))
  g.Add(pkg.EasyJSON_exporter_Visitors(nil))
  g.Add(pkg.EasyJSON_exporter_automationCreditMgrClient(nil))
  g.Add(pkg.EasyJSON_exporter_userMgrClient(nil))
  g.Add(pkg.EasyJSON_exporter_visitorMgrClient(nil))
  if err := g.Run(os.Stdout); err != nil {
    fmt.Fprintln(os.Stderr, err)
    os.Exit(1)
  }
}
