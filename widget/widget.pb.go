// Code generated by protoc-gen-go. DO NOT EDIT.
// source: widget/widget.proto

/*
Package widget is a generated protocol buffer package.

It is generated from these files:
	widget/widget.proto

It has these top-level messages:
	Theme
	Sound
	WidgetSetting
	WidgetUserSetting
*/
package widget

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import account "bitbucket.org/subiz/header/account"
import common "bitbucket.org/subiz/header/common"
import user "bitbucket.org/subiz/header/user"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_WidgetUserSettingReadRequested   Event = 0
	Event_WidgetUserSettingUpdateRequested Event = 1
	Event_WidgetSettingReadRequested       Event = 2
	Event_WidgetSettingUpdateRequested     Event = 3
)

var Event_name = map[int32]string{
	0: "WidgetUserSettingReadRequested",
	1: "WidgetUserSettingUpdateRequested",
	2: "WidgetSettingReadRequested",
	3: "WidgetSettingUpdateRequested",
}
var Event_value = map[string]int32{
	"WidgetUserSettingReadRequested":   0,
	"WidgetUserSettingUpdateRequested": 1,
	"WidgetSettingReadRequested":       2,
	"WidgetSettingUpdateRequested":     3,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Theme_ButtonPosition int32

const (
	Theme_left  Theme_ButtonPosition = 0
	Theme_right Theme_ButtonPosition = 1
)

var Theme_ButtonPosition_name = map[int32]string{
	0: "left",
	1: "right",
}
var Theme_ButtonPosition_value = map[string]int32{
	"left":  0,
	"right": 1,
}

func (x Theme_ButtonPosition) Enum() *Theme_ButtonPosition {
	p := new(Theme_ButtonPosition)
	*p = x
	return p
}
func (x Theme_ButtonPosition) String() string {
	return proto.EnumName(Theme_ButtonPosition_name, int32(x))
}
func (x *Theme_ButtonPosition) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Theme_ButtonPosition_value, data, "Theme_ButtonPosition")
	if err != nil {
		return err
	}
	*x = Theme_ButtonPosition(value)
	return nil
}
func (Theme_ButtonPosition) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Theme_WindowMode int32

const (
	Theme_mini Theme_WindowMode = 0
	Theme_full Theme_WindowMode = 1
)

var Theme_WindowMode_name = map[int32]string{
	0: "mini",
	1: "full",
}
var Theme_WindowMode_value = map[string]int32{
	"mini": 0,
	"full": 1,
}

func (x Theme_WindowMode) Enum() *Theme_WindowMode {
	p := new(Theme_WindowMode)
	*p = x
	return p
}
func (x Theme_WindowMode) String() string {
	return proto.EnumName(Theme_WindowMode_name, int32(x))
}
func (x *Theme_WindowMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Theme_WindowMode_value, data, "Theme_WindowMode")
	if err != nil {
		return err
	}
	*x = Theme_WindowMode(value)
	return nil
}
func (Theme_WindowMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Theme struct {
	BackgroundColor  *string `protobuf:"bytes,7,opt,name=background_color,json=backgroundColor" json:"background_color,omitempty"`
	CustomCss        *string `protobuf:"bytes,8,opt,name=custom_css,json=customCss" json:"custom_css,omitempty"`
	ButtonPosition   *string `protobuf:"bytes,3,opt,name=button_position,json=buttonPosition" json:"button_position,omitempty"`
	ButtonStyle      *string `protobuf:"bytes,4,opt,name=button_style,json=buttonStyle" json:"button_style,omitempty"`
	WindowMode       *string `protobuf:"bytes,5,opt,name=window_mode,json=windowMode" json:"window_mode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Theme) Reset()                    { *m = Theme{} }
func (m *Theme) String() string            { return proto.CompactTextString(m) }
func (*Theme) ProtoMessage()               {}
func (*Theme) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Theme) GetBackgroundColor() string {
	if m != nil && m.BackgroundColor != nil {
		return *m.BackgroundColor
	}
	return ""
}

func (m *Theme) GetCustomCss() string {
	if m != nil && m.CustomCss != nil {
		return *m.CustomCss
	}
	return ""
}

func (m *Theme) GetButtonPosition() string {
	if m != nil && m.ButtonPosition != nil {
		return *m.ButtonPosition
	}
	return ""
}

func (m *Theme) GetButtonStyle() string {
	if m != nil && m.ButtonStyle != nil {
		return *m.ButtonStyle
	}
	return ""
}

func (m *Theme) GetWindowMode() string {
	if m != nil && m.WindowMode != nil {
		return *m.WindowMode
	}
	return ""
}

type Sound struct {
	Enabled           *bool   `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	NewConversation   *string `protobuf:"bytes,3,opt,name=new_conversation,json=newConversation" json:"new_conversation,omitempty"`
	FileCreate        *string `protobuf:"bytes,4,opt,name=file_create,json=fileCreate" json:"file_create,omitempty"`
	NewMessage        *string `protobuf:"bytes,5,opt,name=new_message,json=newMessage" json:"new_message,omitempty"`
	MessageSendFailed *string `protobuf:"bytes,6,opt,name=message_send_failed,json=messageSendFailed" json:"message_send_failed,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *Sound) Reset()                    { *m = Sound{} }
func (m *Sound) String() string            { return proto.CompactTextString(m) }
func (*Sound) ProtoMessage()               {}
func (*Sound) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Sound) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Sound) GetNewConversation() string {
	if m != nil && m.NewConversation != nil {
		return *m.NewConversation
	}
	return ""
}

func (m *Sound) GetFileCreate() string {
	if m != nil && m.FileCreate != nil {
		return *m.FileCreate
	}
	return ""
}

func (m *Sound) GetNewMessage() string {
	if m != nil && m.NewMessage != nil {
		return *m.NewMessage
	}
	return ""
}

func (m *Sound) GetMessageSendFailed() string {
	if m != nil && m.MessageSendFailed != nil {
		return *m.MessageSendFailed
	}
	return ""
}

type WidgetSetting struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Sound            *Sound          `protobuf:"bytes,4,opt,name=sound" json:"sound,omitempty"`
	Language         *string         `protobuf:"bytes,5,opt,name=language" json:"language,omitempty"`
	WelcomeMessage   *string         `protobuf:"bytes,6,opt,name=welcome_message,json=welcomeMessage" json:"welcome_message,omitempty"`
	Theme            *Theme          `protobuf:"bytes,7,opt,name=theme" json:"theme,omitempty"`
	Replytime        *int32          `protobuf:"varint,9,opt,name=replytime" json:"replytime,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *WidgetSetting) Reset()                    { *m = WidgetSetting{} }
func (m *WidgetSetting) String() string            { return proto.CompactTextString(m) }
func (*WidgetSetting) ProtoMessage()               {}
func (*WidgetSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WidgetSetting) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *WidgetSetting) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *WidgetSetting) GetSound() *Sound {
	if m != nil {
		return m.Sound
	}
	return nil
}

func (m *WidgetSetting) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *WidgetSetting) GetWelcomeMessage() string {
	if m != nil && m.WelcomeMessage != nil {
		return *m.WelcomeMessage
	}
	return ""
}

func (m *WidgetSetting) GetTheme() *Theme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *WidgetSetting) GetReplytime() int32 {
	if m != nil && m.Replytime != nil {
		return *m.Replytime
	}
	return 0
}

type WidgetUserSetting struct {
	Ctx                 *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Account             *account.Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	AccountId           *string          `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	User                *user.User       `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	UserId              *string          `protobuf:"bytes,7,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	SoundEnabled        *string          `protobuf:"bytes,5,opt,name=sound_enabled,json=soundEnabled" json:"sound_enabled,omitempty"`
	Language            *string          `protobuf:"bytes,6,opt,name=language" json:"language,omitempty"`
	SendTranscript      *bool            `protobuf:"varint,8,opt,name=send_transcript,json=sendTranscript" json:"send_transcript,omitempty"`
	AccountSetting      *WidgetSetting   `protobuf:"bytes,9,opt,name=account_setting,json=accountSetting" json:"account_setting,omitempty"`
	DesktopNotification *bool            `protobuf:"varint,10,opt,name=desktop_notification,json=desktopNotification" json:"desktop_notification,omitempty"`
	XXX_unrecognized    []byte           `json:"-"`
}

func (m *WidgetUserSetting) Reset()                    { *m = WidgetUserSetting{} }
func (m *WidgetUserSetting) String() string            { return proto.CompactTextString(m) }
func (*WidgetUserSetting) ProtoMessage()               {}
func (*WidgetUserSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *WidgetUserSetting) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *WidgetUserSetting) GetAccount() *account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *WidgetUserSetting) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *WidgetUserSetting) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *WidgetUserSetting) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *WidgetUserSetting) GetSoundEnabled() string {
	if m != nil && m.SoundEnabled != nil {
		return *m.SoundEnabled
	}
	return ""
}

func (m *WidgetUserSetting) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *WidgetUserSetting) GetSendTranscript() bool {
	if m != nil && m.SendTranscript != nil {
		return *m.SendTranscript
	}
	return false
}

func (m *WidgetUserSetting) GetAccountSetting() *WidgetSetting {
	if m != nil {
		return m.AccountSetting
	}
	return nil
}

func (m *WidgetUserSetting) GetDesktopNotification() bool {
	if m != nil && m.DesktopNotification != nil {
		return *m.DesktopNotification
	}
	return false
}

func init() {
	proto.RegisterType((*Theme)(nil), "widget.Theme")
	proto.RegisterType((*Sound)(nil), "widget.Sound")
	proto.RegisterType((*WidgetSetting)(nil), "widget.WidgetSetting")
	proto.RegisterType((*WidgetUserSetting)(nil), "widget.WidgetUserSetting")
	proto.RegisterEnum("widget.Event", Event_name, Event_value)
	proto.RegisterEnum("widget.Theme_ButtonPosition", Theme_ButtonPosition_name, Theme_ButtonPosition_value)
	proto.RegisterEnum("widget.Theme_WindowMode", Theme_WindowMode_name, Theme_WindowMode_value)
}

func init() { proto.RegisterFile("widget/widget.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x5b, 0x6e, 0xdb, 0x38,
	0x14, 0x8d, 0xe2, 0xc8, 0x8f, 0xeb, 0xc4, 0x76, 0x98, 0x19, 0x8c, 0x60, 0x64, 0x32, 0x8e, 0x33,
	0x83, 0xf1, 0xe4, 0x43, 0x9e, 0x7a, 0x01, 0x05, 0x5a, 0x23, 0x05, 0xfa, 0x91, 0xa2, 0x90, 0x13,
	0xe4, 0x53, 0x90, 0xa5, 0x6b, 0x87, 0x88, 0x44, 0xba, 0x22, 0x15, 0x27, 0xdd, 0x40, 0x17, 0xd0,
	0x8f, 0xee, 0xa6, 0x4b, 0x2b, 0x0a, 0x3e, 0xe4, 0x47, 0x03, 0xa4, 0xe8, 0x8f, 0x69, 0x9e, 0x7b,
	0x48, 0xdd, 0x73, 0x78, 0x2e, 0x1c, 0x2d, 0x69, 0x32, 0x47, 0x39, 0x34, 0x8b, 0xbf, 0xc8, 0xb9,
	0xe4, 0xa4, 0x6a, 0x76, 0xdd, 0xff, 0xa7, 0x54, 0x4e, 0x8b, 0xf8, 0x0e, 0xa5, 0xcf, 0xf3, 0xf9,
	0x50, 0x14, 0x53, 0xfa, 0x71, 0x78, 0x8b, 0x51, 0x82, 0xf9, 0x30, 0x8a, 0x63, 0x5e, 0x30, 0x59,
	0xae, 0xe6, 0x64, 0xd7, 0x7f, 0xe6, 0x44, 0xcc, 0xb3, 0x8c, 0x33, 0xbb, 0x58, 0xfe, 0xf9, 0x33,
	0xfc, 0x42, 0xd8, 0x1f, 0xc3, 0xed, 0x7f, 0xda, 0x05, 0xf7, 0xea, 0x16, 0x33, 0x24, 0xff, 0x41,
	0x67, 0x1a, 0xc5, 0x77, 0xf3, 0x9c, 0x17, 0x2c, 0x09, 0x63, 0x9e, 0xf2, 0xdc, 0xab, 0xf5, 0x9c,
	0x41, 0x23, 0x68, 0xaf, 0xf1, 0xb1, 0x82, 0xc9, 0x9f, 0x00, 0x71, 0x21, 0x24, 0xcf, 0xc2, 0x58,
	0x08, 0xaf, 0xae, 0x49, 0x0d, 0x83, 0x8c, 0x85, 0x20, 0xff, 0x42, 0x7b, 0x5a, 0x48, 0xc9, 0x59,
	0xb8, 0xe0, 0x82, 0x4a, 0xca, 0x99, 0x57, 0xd1, 0x9c, 0x96, 0x81, 0xdf, 0x5b, 0x94, 0x9c, 0xc2,
	0xbe, 0x25, 0x0a, 0xf9, 0x98, 0xa2, 0xb7, 0xa7, 0x59, 0x4d, 0x83, 0x4d, 0x14, 0x44, 0xfe, 0x82,
	0xe6, 0x92, 0xb2, 0x84, 0x2f, 0xc3, 0x8c, 0x27, 0xe8, 0xb9, 0x9a, 0x01, 0x06, 0xba, 0xe4, 0x09,
	0xf6, 0xff, 0x81, 0xd6, 0xeb, 0xed, 0x5b, 0xeb, 0xb0, 0x97, 0xe2, 0x4c, 0x76, 0x76, 0x48, 0x03,
	0xdc, 0x9c, 0xce, 0x6f, 0x65, 0xc7, 0xe9, 0xf7, 0x00, 0x6e, 0x56, 0x87, 0x14, 0x25, 0xa3, 0x8c,
	0x76, 0x76, 0xd4, 0xbf, 0x59, 0x91, 0xa6, 0x1d, 0xa7, 0xff, 0xd5, 0x01, 0x77, 0xa2, 0x34, 0x12,
	0x0f, 0x6a, 0xc8, 0xa2, 0x69, 0x8a, 0x89, 0xb7, 0xdb, 0x73, 0x06, 0xf5, 0xa0, 0xdc, 0x2a, 0x8f,
	0x18, 0x2e, 0xc3, 0x98, 0xb3, 0x7b, 0xcc, 0x45, 0xb4, 0x21, 0xad, 0xcd, 0x70, 0x39, 0xde, 0x80,
	0x55, 0xe3, 0x33, 0x9a, 0x62, 0x18, 0xe7, 0x18, 0xc9, 0x52, 0x1a, 0x28, 0x68, 0xac, 0x11, 0x45,
	0x50, 0x77, 0x65, 0x28, 0x44, 0x34, 0x5f, 0x29, 0x63, 0xb8, 0xbc, 0x34, 0x08, 0xf1, 0xe1, 0xc8,
	0x16, 0x43, 0x81, 0x2c, 0x09, 0x67, 0x11, 0x55, 0x2d, 0x55, 0x35, 0xf1, 0xd0, 0x96, 0x26, 0xc8,
	0x92, 0x37, 0xba, 0xd0, 0xff, 0xe6, 0xc0, 0xc1, 0x8d, 0xce, 0xd8, 0x04, 0xa5, 0xa4, 0x6c, 0x4e,
	0x4e, 0xa1, 0x12, 0xcb, 0x07, 0xcf, 0xe9, 0x39, 0x83, 0xe6, 0xa8, 0xed, 0xdb, 0x90, 0x8c, 0x39,
	0x93, 0xf8, 0x20, 0x03, 0x55, 0x53, 0x4f, 0x69, 0xc3, 0x16, 0x52, 0x23, 0xb7, 0x11, 0x34, 0x2c,
	0xf2, 0x36, 0x21, 0x67, 0xe0, 0x0a, 0xe5, 0x89, 0xee, 0xbf, 0x39, 0x3a, 0xf0, 0x6d, 0xa4, 0xb5,
	0x51, 0x81, 0xa9, 0x91, 0x2e, 0xd4, 0xd3, 0x88, 0xcd, 0x8b, 0xb5, 0x8c, 0xd5, 0x5e, 0x65, 0x61,
	0x89, 0x69, 0xcc, 0x33, 0x5c, 0x29, 0x35, 0x02, 0x5a, 0x16, 0x2e, 0xd5, 0x9e, 0x81, 0x2b, 0x55,
	0x0e, 0x75, 0xe6, 0x36, 0xbe, 0xa4, 0xc3, 0x19, 0x98, 0x1a, 0x39, 0x86, 0x46, 0x8e, 0x8b, 0xf4,
	0x51, 0xd2, 0x0c, 0xbd, 0x46, 0xcf, 0x19, 0xb8, 0xc1, 0x1a, 0xe8, 0x7f, 0xa9, 0xc0, 0xa1, 0x31,
	0xe0, 0x5a, 0x60, 0xfe, 0x0b, 0x26, 0x9c, 0x43, 0xcd, 0x4a, 0xd6, 0xaf, 0xd9, 0x1c, 0x75, 0xfc,
	0x72, 0x02, 0x5f, 0x99, 0x35, 0x28, 0x09, 0x3f, 0x33, 0xec, 0x04, 0xf6, 0xd4, 0x74, 0x59, 0xbf,
	0xc0, 0xd7, 0xa3, 0xa6, 0xda, 0x09, 0x34, 0x4e, 0xfe, 0x80, 0x9a, 0x5a, 0xd5, 0x59, 0x33, 0x5c,
	0x55, 0xb5, 0xd5, 0x4e, 0x1f, 0x68, 0x37, 0xc3, 0x32, 0x7a, 0xc6, 0xc9, 0x7d, 0x0d, 0x5e, 0xd8,
	0xfc, 0x6d, 0x3a, 0x5d, 0x7d, 0xea, 0xb4, 0x8e, 0x89, 0xcc, 0x23, 0x26, 0xe2, 0x9c, 0x2e, 0xa4,
	0x9e, 0xcc, 0x7a, 0xd0, 0x52, 0xf0, 0xd5, 0x0a, 0x25, 0x2f, 0xa1, 0x5d, 0x2a, 0x10, 0xc6, 0x23,
	0x6d, 0x65, 0x73, 0xf4, 0x7b, 0xe9, 0xf9, 0x56, 0x8a, 0x82, 0x96, 0x65, 0x97, 0x86, 0xbe, 0x80,
	0xdf, 0x12, 0x14, 0x77, 0x92, 0x2f, 0x42, 0xc6, 0x25, 0x9d, 0xd1, 0xd8, 0x0c, 0x02, 0xe8, 0xaf,
	0x1d, 0xd9, 0xda, 0xbb, 0x8d, 0xd2, 0xf9, 0x67, 0x07, 0xdc, 0x8b, 0x7b, 0x64, 0x92, 0xf4, 0xe1,
	0xe4, 0xc9, 0x13, 0x05, 0x18, 0x25, 0x01, 0x7e, 0x28, 0x50, 0x48, 0x4c, 0x3a, 0x3b, 0xe4, 0x6f,
	0xe8, 0x3d, 0xe1, 0x5c, 0x2f, 0x92, 0x48, 0xe2, 0x9a, 0xe5, 0x90, 0x13, 0xe8, 0x6e, 0xf7, 0xb9,
	0x75, 0xcb, 0x2e, 0xe9, 0xc1, 0xf1, 0x56, 0xfd, 0xc7, 0x1b, 0x2a, 0xdf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x91, 0xc8, 0xfe, 0xfe, 0xa7, 0x05, 0x00, 0x00,
}
