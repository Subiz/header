// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import (
	fmt "fmt"
	common "git.subiz.net/header/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScryptChallenge struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId *string         `protobuf:"bytes,9,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	N         *int32          `protobuf:"varint,3,opt,name=N" json:"N,omitempty"`
	P         *int32          `protobuf:"varint,4,opt,name=P" json:"P,omitempty"`
	R         *int32          `protobuf:"varint,5,opt,name=r" json:"r,omitempty"`
	Salt      *string         `protobuf:"bytes,6,opt,name=salt" json:"salt,omitempty"`
	Hash      *string         `protobuf:"bytes,8,opt,name=hash" json:"hash,omitempty"`
	Domain    *int32          `protobuf:"varint,14,opt,name=domain" json:"domain,omitempty"`
	Dklen     *int32          `protobuf:"varint,15,opt,name=dklen" json:"dklen,omitempty"`
	// only for subiz use
	Answer               *string  `protobuf:"bytes,10,opt,name=answer" json:"answer,omitempty"`
	Created              *int64   `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScryptChallenge) Reset()         { *m = ScryptChallenge{} }
func (m *ScryptChallenge) String() string { return proto.CompactTextString(m) }
func (*ScryptChallenge) ProtoMessage()    {}
func (*ScryptChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

func (m *ScryptChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScryptChallenge.Unmarshal(m, b)
}
func (m *ScryptChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScryptChallenge.Marshal(b, m, deterministic)
}
func (m *ScryptChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScryptChallenge.Merge(m, src)
}
func (m *ScryptChallenge) XXX_Size() int {
	return xxx_messageInfo_ScryptChallenge.Size(m)
}
func (m *ScryptChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_ScryptChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_ScryptChallenge proto.InternalMessageInfo

func (m *ScryptChallenge) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ScryptChallenge) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ScryptChallenge) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ScryptChallenge) GetN() int32 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *ScryptChallenge) GetP() int32 {
	if m != nil && m.P != nil {
		return *m.P
	}
	return 0
}

func (m *ScryptChallenge) GetR() int32 {
	if m != nil && m.R != nil {
		return *m.R
	}
	return 0
}

func (m *ScryptChallenge) GetSalt() string {
	if m != nil && m.Salt != nil {
		return *m.Salt
	}
	return ""
}

func (m *ScryptChallenge) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

func (m *ScryptChallenge) GetDomain() int32 {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return 0
}

func (m *ScryptChallenge) GetDklen() int32 {
	if m != nil && m.Dklen != nil {
		return *m.Dklen
	}
	return 0
}

func (m *ScryptChallenge) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *ScryptChallenge) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type Apikey struct {
	Secret               *string  `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
	AccountId            *string  `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ClientId             *string  `protobuf:"bytes,5,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType           *string  `protobuf:"bytes,6,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	IsInternal           *bool    `protobuf:"varint,7,opt,name=is_internal,json=isInternal" json:"is_internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Apikey) Reset()         { *m = Apikey{} }
func (m *Apikey) String() string { return proto.CompactTextString(m) }
func (*Apikey) ProtoMessage()    {}
func (*Apikey) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{1}
}

func (m *Apikey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Apikey.Unmarshal(m, b)
}
func (m *Apikey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Apikey.Marshal(b, m, deterministic)
}
func (m *Apikey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Apikey.Merge(m, src)
}
func (m *Apikey) XXX_Size() int {
	return xxx_messageInfo_Apikey.Size(m)
}
func (m *Apikey) XXX_DiscardUnknown() {
	xxx_messageInfo_Apikey.DiscardUnknown(m)
}

var xxx_messageInfo_Apikey proto.InternalMessageInfo

func (m *Apikey) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Apikey) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Apikey) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Apikey) GetClientType() string {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ""
}

func (m *Apikey) GetIsInternal() bool {
	if m != nil && m.IsInternal != nil {
		return *m.IsInternal
	}
	return false
}

func init() {
	proto.RegisterType((*ScryptChallenge)(nil), "api.ScryptChallenge")
	proto.RegisterType((*Apikey)(nil), "api.Apikey")
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_1b40cafcd4234784) }

var fileDescriptor_1b40cafcd4234784 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcd, 0xaa, 0xdb, 0x30,
	0x10, 0x85, 0x91, 0x1d, 0x27, 0xf1, 0xa4, 0x4d, 0x40, 0x94, 0x22, 0x5a, 0x4a, 0xdd, 0xac, 0xbc,
	0x72, 0xa0, 0x6f, 0x50, 0xb2, 0xca, 0x26, 0x04, 0xb7, 0xfb, 0xa0, 0x4a, 0x43, 0x2c, 0xe2, 0xc8,
	0x42, 0x56, 0x68, 0xdc, 0xf7, 0xb8, 0xdb, 0xfb, 0xac, 0x17, 0xfd, 0xdc, 0x4d, 0x56, 0xd6, 0xf7,
	0x9d, 0x33, 0x86, 0x19, 0xf8, 0xc8, 0x8d, 0xda, 0x71, 0xa3, 0x1a, 0x63, 0x07, 0x37, 0xd0, 0x9c,
	0x1b, 0xf5, 0xa5, 0xbe, 0x28, 0xd7, 0x8c, 0xf7, 0xbf, 0xea, 0x7f, 0xa3, 0xd1, 0xed, 0x3a, 0xe4,
	0x12, 0xed, 0x4e, 0x0c, 0xb7, 0xdb, 0xa0, 0xd3, 0x27, 0xd6, 0xb7, 0x2f, 0x19, 0x6c, 0x7e, 0x0b,
	0x3b, 0x19, 0xb7, 0xef, 0x78, 0xdf, 0xa3, 0xbe, 0x20, 0xfd, 0x01, 0xb9, 0x70, 0x0f, 0x46, 0x2a,
	0x52, 0xaf, 0x7e, 0x6e, 0x9a, 0xd4, 0xdf, 0x0f, 0xda, 0xe1, 0xc3, 0xb5, 0x3e, 0xa3, 0xdf, 0x00,
	0xb8, 0x10, 0xc3, 0x5d, 0xbb, 0xb3, 0x92, 0xac, 0xac, 0x48, 0x5d, 0xb6, 0x65, 0x32, 0x07, 0x49,
	0xd7, 0x90, 0x29, 0xc9, 0xb2, 0xa0, 0x33, 0x25, 0xe9, 0x07, 0x20, 0x47, 0x96, 0x57, 0xa4, 0x2e,
	0x5a, 0x72, 0xf4, 0x74, 0x62, 0xb3, 0x48, 0x27, 0x4f, 0x96, 0x15, 0x91, 0x2c, 0xa5, 0x30, 0x1b,
	0x79, 0xef, 0xd8, 0x3c, 0xcc, 0x86, 0xb7, 0x77, 0x1d, 0x1f, 0x3b, 0xb6, 0x8c, 0xce, 0xbf, 0xe9,
	0x67, 0x98, 0xcb, 0xe1, 0xc6, 0x95, 0x66, 0xeb, 0x30, 0x9a, 0x88, 0x7e, 0x82, 0x42, 0x5e, 0x7b,
	0xd4, 0x6c, 0x13, 0x74, 0x04, 0xdf, 0xe6, 0x7a, 0xfc, 0x87, 0x96, 0x41, 0xf8, 0x47, 0x22, 0xca,
	0x60, 0x21, 0x2c, 0x72, 0x87, 0x92, 0xad, 0x2a, 0x52, 0xe7, 0xed, 0x3b, 0x6e, 0x5f, 0x09, 0xcc,
	0x7f, 0x19, 0x75, 0xc5, 0xc9, 0x0f, 0x8f, 0x28, 0x2c, 0xba, 0xb0, 0x41, 0xd9, 0x26, 0x7a, 0xba,
	0xc1, 0xec, 0xf9, 0x06, 0x5f, 0xa1, 0x14, 0xbd, 0xc2, 0x98, 0x16, 0x21, 0x5d, 0x46, 0x71, 0x90,
	0xf4, 0x3b, 0xac, 0x52, 0xe8, 0x26, 0x83, 0x69, 0x5b, 0x88, 0xea, 0xcf, 0x64, 0xd0, 0x17, 0xd4,
	0x78, 0x56, 0xda, 0xa1, 0xd5, 0xbc, 0x67, 0x8b, 0x8a, 0xd4, 0xcb, 0x16, 0xd4, 0x78, 0x48, 0xe6,
	0x2d, 0x00, 0x00, 0xff, 0xff, 0x32, 0xe1, 0xad, 0xed, 0xf7, 0x01, 0x00, 0x00,
}
