// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_ApiWhiteListSynced     Event = 0
	Event_BlacklistDomainCreated Event = 12
	Event_BannedUserCreated      Event = 13
	Event_BlacklistIpCreated     Event = 14
	Event_WhitelistUrlCreated    Event = 15
	Event_BlacklistDomainDeleted Event = 16
	Event_BannedUserDeleted      Event = 17
	Event_BlacklistIpDeleted     Event = 18
	Event_WhitelistUrlDeleted    Event = 19
)

var Event_name = map[int32]string{
	0:  "ApiWhiteListSynced",
	12: "BlacklistDomainCreated",
	13: "BannedUserCreated",
	14: "BlacklistIpCreated",
	15: "WhitelistUrlCreated",
	16: "BlacklistDomainDeleted",
	17: "BannedUserDeleted",
	18: "BlacklistIpDeleted",
	19: "WhitelistUrlDeleted",
}

var Event_value = map[string]int32{
	"ApiWhiteListSynced":     0,
	"BlacklistDomainCreated": 12,
	"BannedUserCreated":      13,
	"BlacklistIpCreated":     14,
	"WhitelistUrlCreated":    15,
	"BlacklistDomainDeleted": 16,
	"BannedUserDeleted":      17,
	"BlacklistIpDeleted":     18,
	"WhitelistUrlDeleted":    19,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

type WhitelistUrl struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Url                  string          `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Created              int64           `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	By                   string          `protobuf:"bytes,6,opt,name=by,proto3" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WhitelistUrl) Reset()         { *m = WhitelistUrl{} }
func (m *WhitelistUrl) String() string { return proto.CompactTextString(m) }
func (*WhitelistUrl) ProtoMessage()    {}
func (*WhitelistUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{0}
}

func (m *WhitelistUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhitelistUrl.Unmarshal(m, b)
}
func (m *WhitelistUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhitelistUrl.Marshal(b, m, deterministic)
}
func (m *WhitelistUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistUrl.Merge(m, src)
}
func (m *WhitelistUrl) XXX_Size() int {
	return xxx_messageInfo_WhitelistUrl.Size(m)
}
func (m *WhitelistUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistUrl.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistUrl proto.InternalMessageInfo

func (m *WhitelistUrl) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *WhitelistUrl) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *WhitelistUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *WhitelistUrl) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *WhitelistUrl) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

type BlacklistDomain struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Domain               string          `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Created              int64           `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	By                   string          `protobuf:"bytes,6,opt,name=by,proto3" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BlacklistDomain) Reset()         { *m = BlacklistDomain{} }
func (m *BlacklistDomain) String() string { return proto.CompactTextString(m) }
func (*BlacklistDomain) ProtoMessage()    {}
func (*BlacklistDomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{1}
}

func (m *BlacklistDomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlacklistDomain.Unmarshal(m, b)
}
func (m *BlacklistDomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlacklistDomain.Marshal(b, m, deterministic)
}
func (m *BlacklistDomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlacklistDomain.Merge(m, src)
}
func (m *BlacklistDomain) XXX_Size() int {
	return xxx_messageInfo_BlacklistDomain.Size(m)
}
func (m *BlacklistDomain) XXX_DiscardUnknown() {
	xxx_messageInfo_BlacklistDomain.DiscardUnknown(m)
}

var xxx_messageInfo_BlacklistDomain proto.InternalMessageInfo

func (m *BlacklistDomain) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *BlacklistDomain) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BlacklistDomain) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *BlacklistDomain) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *BlacklistDomain) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

type BlacklistIP struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Ip                   string          `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Created              int64           `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	By                   string          `protobuf:"bytes,6,opt,name=by,proto3" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BlacklistIP) Reset()         { *m = BlacklistIP{} }
func (m *BlacklistIP) String() string { return proto.CompactTextString(m) }
func (*BlacklistIP) ProtoMessage()    {}
func (*BlacklistIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{2}
}

func (m *BlacklistIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlacklistIP.Unmarshal(m, b)
}
func (m *BlacklistIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlacklistIP.Marshal(b, m, deterministic)
}
func (m *BlacklistIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlacklistIP.Merge(m, src)
}
func (m *BlacklistIP) XXX_Size() int {
	return xxx_messageInfo_BlacklistIP.Size(m)
}
func (m *BlacklistIP) XXX_DiscardUnknown() {
	xxx_messageInfo_BlacklistIP.DiscardUnknown(m)
}

var xxx_messageInfo_BlacklistIP proto.InternalMessageInfo

func (m *BlacklistIP) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *BlacklistIP) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BlacklistIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BlacklistIP) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *BlacklistIP) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

type BannedUser struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId            string          `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId               string          `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Created              int64           `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	By                   string          `protobuf:"bytes,6,opt,name=by,proto3" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BannedUser) Reset()         { *m = BannedUser{} }
func (m *BannedUser) String() string { return proto.CompactTextString(m) }
func (*BannedUser) ProtoMessage()    {}
func (*BannedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{3}
}

func (m *BannedUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BannedUser.Unmarshal(m, b)
}
func (m *BannedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BannedUser.Marshal(b, m, deterministic)
}
func (m *BannedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BannedUser.Merge(m, src)
}
func (m *BannedUser) XXX_Size() int {
	return xxx_messageInfo_BannedUser.Size(m)
}
func (m *BannedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_BannedUser.DiscardUnknown(m)
}

var xxx_messageInfo_BannedUser proto.InternalMessageInfo

func (m *BannedUser) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *BannedUser) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BannedUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *BannedUser) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *BannedUser) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

type ScryptChallenge struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	AccountId string          `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Id        string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	N         int32           `protobuf:"varint,3,opt,name=N,proto3" json:"N,omitempty"`
	P         int32           `protobuf:"varint,4,opt,name=P,proto3" json:"P,omitempty"`
	R         int32           `protobuf:"varint,5,opt,name=r,proto3" json:"r,omitempty"`
	Salt      string          `protobuf:"bytes,6,opt,name=salt,proto3" json:"salt,omitempty"`
	Hash      string          `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
	Domain    int32           `protobuf:"varint,14,opt,name=domain,proto3" json:"domain,omitempty"`
	Dklen     int32           `protobuf:"varint,15,opt,name=dklen,proto3" json:"dklen,omitempty"`
	// only for subiz use
	Answer               string   `protobuf:"bytes,10,opt,name=answer,proto3" json:"answer,omitempty"`
	Created              int64    `protobuf:"varint,11,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScryptChallenge) Reset()         { *m = ScryptChallenge{} }
func (m *ScryptChallenge) String() string { return proto.CompactTextString(m) }
func (*ScryptChallenge) ProtoMessage()    {}
func (*ScryptChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{4}
}

func (m *ScryptChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScryptChallenge.Unmarshal(m, b)
}
func (m *ScryptChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScryptChallenge.Marshal(b, m, deterministic)
}
func (m *ScryptChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScryptChallenge.Merge(m, src)
}
func (m *ScryptChallenge) XXX_Size() int {
	return xxx_messageInfo_ScryptChallenge.Size(m)
}
func (m *ScryptChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_ScryptChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_ScryptChallenge proto.InternalMessageInfo

func (m *ScryptChallenge) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ScryptChallenge) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ScryptChallenge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScryptChallenge) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *ScryptChallenge) GetP() int32 {
	if m != nil {
		return m.P
	}
	return 0
}

func (m *ScryptChallenge) GetR() int32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *ScryptChallenge) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *ScryptChallenge) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ScryptChallenge) GetDomain() int32 {
	if m != nil {
		return m.Domain
	}
	return 0
}

func (m *ScryptChallenge) GetDklen() int32 {
	if m != nil {
		return m.Dklen
	}
	return 0
}

func (m *ScryptChallenge) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *ScryptChallenge) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type Apikey struct {
	Secret               string   `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	AccountId            string   `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ClientId             string   `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientType           string   `protobuf:"bytes,6,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	IsInternal           bool     `protobuf:"varint,7,opt,name=is_internal,json=isInternal,proto3" json:"is_internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Apikey) Reset()         { *m = Apikey{} }
func (m *Apikey) String() string { return proto.CompactTextString(m) }
func (*Apikey) ProtoMessage()    {}
func (*Apikey) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b40cafcd4234784, []int{5}
}

func (m *Apikey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Apikey.Unmarshal(m, b)
}
func (m *Apikey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Apikey.Marshal(b, m, deterministic)
}
func (m *Apikey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Apikey.Merge(m, src)
}
func (m *Apikey) XXX_Size() int {
	return xxx_messageInfo_Apikey.Size(m)
}
func (m *Apikey) XXX_DiscardUnknown() {
	xxx_messageInfo_Apikey.DiscardUnknown(m)
}

var xxx_messageInfo_Apikey proto.InternalMessageInfo

func (m *Apikey) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Apikey) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Apikey) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Apikey) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *Apikey) GetIsInternal() bool {
	if m != nil {
		return m.IsInternal
	}
	return false
}

func init() {
	proto.RegisterEnum("api.Event", Event_name, Event_value)
	proto.RegisterType((*WhitelistUrl)(nil), "api.WhitelistUrl")
	proto.RegisterType((*BlacklistDomain)(nil), "api.BlacklistDomain")
	proto.RegisterType((*BlacklistIP)(nil), "api.BlacklistIP")
	proto.RegisterType((*BannedUser)(nil), "api.BannedUser")
	proto.RegisterType((*ScryptChallenge)(nil), "api.ScryptChallenge")
	proto.RegisterType((*Apikey)(nil), "api.Apikey")
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_1b40cafcd4234784) }

var fileDescriptor_1b40cafcd4234784 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x18, 0xc5, 0xe9, 0xd2, 0xad, 0x5f, 0xb7, 0xb6, 0xf3, 0x60, 0x8b, 0x86, 0x10, 0x65, 0x57, 0x15,
	0x48, 0xad, 0x04, 0x4f, 0xb0, 0x75, 0x5c, 0x54, 0x42, 0x53, 0x95, 0x31, 0x71, 0x39, 0xb9, 0xf1,
	0xa7, 0xc5, 0x6a, 0xea, 0x58, 0x8e, 0x0b, 0x0b, 0x6f, 0x80, 0xc4, 0x0d, 0x17, 0xdc, 0xf2, 0x7a,
	0xbc, 0x06, 0xb2, 0xe3, 0xb0, 0xae, 0xda, 0x4d, 0xa5, 0x5e, 0xc5, 0xe7, 0x9c, 0xcf, 0xf9, 0x8e,
	0x8f, 0x7f, 0xe0, 0x80, 0x29, 0x31, 0x62, 0x4a, 0x0c, 0x95, 0xce, 0x4d, 0x4e, 0x1b, 0x4c, 0x89,
	0xd3, 0x77, 0x77, 0xc2, 0xa4, 0xcb, 0xd9, 0x30, 0xc9, 0x17, 0xa3, 0x62, 0x39, 0x13, 0xdf, 0x47,
	0x29, 0x32, 0x8e, 0x7a, 0x94, 0xe4, 0x8b, 0x45, 0x2e, 0xfd, 0xa7, 0x9a, 0x71, 0xf6, 0x93, 0xc0,
	0xfe, 0x97, 0x54, 0x18, 0xcc, 0x44, 0x61, 0x6e, 0x74, 0x46, 0xdf, 0x40, 0x23, 0x31, 0xf7, 0x11,
	0xe9, 0x93, 0x41, 0xfb, 0x7d, 0x77, 0xe8, 0x8b, 0xc7, 0xb9, 0x34, 0x78, 0x6f, 0x62, 0xab, 0xd1,
	0x57, 0x00, 0x2c, 0x49, 0xf2, 0xa5, 0x34, 0xb7, 0x82, 0x47, 0x8d, 0x3e, 0x19, 0xb4, 0xe2, 0x96,
	0x67, 0x26, 0x9c, 0xf6, 0xa0, 0xb1, 0xd4, 0x59, 0xb4, 0xe3, 0x78, 0x3b, 0xa4, 0x11, 0xec, 0x26,
	0x1a, 0x99, 0x41, 0x1e, 0x85, 0x7d, 0x32, 0x68, 0xc4, 0x35, 0xa4, 0x1d, 0x08, 0x66, 0x65, 0xd4,
	0x74, 0xa5, 0xc1, 0xac, 0x3c, 0xfb, 0x4d, 0xa0, 0x7b, 0x91, 0xb1, 0x64, 0x6e, 0xed, 0x5c, 0xe6,
	0x0b, 0x26, 0xe4, 0x16, 0x1c, 0x1d, 0x43, 0x93, 0xbb, 0x7f, 0x79, 0x53, 0x1e, 0x6d, 0xe0, 0xeb,
	0x07, 0x81, 0xf6, 0x7f, 0x5f, 0x93, 0xe9, 0x16, 0x3c, 0x75, 0x20, 0x10, 0xca, 0xfb, 0x09, 0x84,
	0xda, 0xc0, 0xcb, 0x2f, 0x02, 0x70, 0xc1, 0xa4, 0x44, 0x7e, 0x53, 0xa0, 0xde, 0x82, 0x95, 0x13,
	0xd8, 0x5d, 0x16, 0xa8, 0xad, 0xe6, 0xf3, 0xb1, 0x70, 0xc2, 0x37, 0xd9, 0xb7, 0x00, 0xba, 0xd7,
	0x89, 0x2e, 0x95, 0x19, 0xa7, 0x2c, 0xcb, 0x50, 0xde, 0xe1, 0xe6, 0xc6, 0x5a, 0x4f, 0x65, 0xc4,
	0xa3, 0xc0, 0x67, 0xc4, 0xe9, 0x3e, 0x90, 0x2b, 0x67, 0x3f, 0x8c, 0xc9, 0x95, 0x45, 0x53, 0x67,
	0x38, 0x8c, 0xc9, 0xd4, 0x22, 0xed, 0x5c, 0x86, 0x31, 0xd1, 0x94, 0xc2, 0x4e, 0xc1, 0x32, 0xe3,
	0x1d, 0xba, 0xb1, 0xe5, 0x52, 0x56, 0xa4, 0xd1, 0x5e, 0xc5, 0xd9, 0xf1, 0xca, 0xc9, 0xe8, 0xb8,
	0xa9, 0xf5, 0xc9, 0x78, 0x0e, 0x21, 0x9f, 0x67, 0x28, 0xa3, 0xae, 0xa3, 0x2b, 0x60, 0xab, 0x99,
	0x2c, 0xbe, 0xa1, 0x8e, 0xa0, 0xca, 0xa9, 0x42, 0xab, 0x39, 0xb5, 0x1f, 0xe5, 0x74, 0xf6, 0x87,
	0x40, 0xf3, 0x5c, 0x89, 0x39, 0x96, 0x76, 0x72, 0x81, 0x89, 0x46, 0xe3, 0x37, 0xc0, 0xa3, 0xb5,
	0x0c, 0x76, 0xd6, 0x33, 0x78, 0x09, 0xad, 0x24, 0x13, 0x58, 0xa9, 0xa1, 0x53, 0xf7, 0x2a, 0x62,
	0xc2, 0xe9, 0x6b, 0x68, 0x7b, 0xd1, 0x94, 0x0a, 0xfd, 0x6a, 0xa1, 0xa2, 0x3e, 0x97, 0x0a, 0x6d,
	0x81, 0x28, 0x6e, 0x85, 0x34, 0xa8, 0x25, 0xcb, 0xa2, 0xdd, 0x3e, 0x19, 0xec, 0xc5, 0x20, 0x8a,
	0x89, 0x67, 0xde, 0xfe, 0x25, 0x10, 0x7e, 0xfc, 0x8a, 0xd2, 0xd0, 0x63, 0xa0, 0xe7, 0x4a, 0xb8,
	0xb7, 0xe0, 0x93, 0x28, 0xcc, 0x75, 0x29, 0x13, 0xe4, 0xbd, 0x67, 0xf4, 0x14, 0x8e, 0xd7, 0x6e,
	0xe4, 0xb8, 0x5a, 0x5c, 0x6f, 0x9f, 0xbe, 0x80, 0xc3, 0x87, 0x93, 0x58, 0xd3, 0x07, 0xf6, 0x57,
	0x0f, 0x97, 0x45, 0xd5, 0x7c, 0x87, 0x9e, 0xc0, 0xd1, 0xea, 0x5b, 0x53, 0x0b, 0xdd, 0x27, 0x7a,
	0x5c, 0x62, 0x86, 0x56, 0xeb, 0x3d, 0xee, 0x51, 0xd3, 0x87, 0x6b, 0x3d, 0x6a, 0x9e, 0xae, 0xf7,
	0xa8, 0x85, 0xa3, 0x59, 0xd3, 0x3d, 0x78, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x82,
	0xc2, 0x63, 0x33, 0x05, 0x00, 0x00,
}
