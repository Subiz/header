syntax = "proto2";

package client;

import "github.com/subiz/header/common/common.proto";
import "github.com/subiz/header/auth/auth.proto";

message AllType {
	optional Clients client = 2;
}

message Clients {
	optional common.Context ctx = 1;
	repeated Client clients = 2;
}

message Client {
	optional common.Context ctx = 1;
	optional string id = 3;
	// secre used to authorize client with oauth2 server
	optional string secret = 4;
	// LogoUrl is url to logo of the client, should be 256x256 and lessthan 256KB
	optional string logo_url = 5;
	optional string account_id = 6;
	// IsVerified will be true if client is verified by the authority
	optional bool is_verified = 8;
	optional int64 verified = 9;
	// List of URLs which client must register for oauth redirection
	optional string redirect_url = 10;
	optional string type = 11;
	enum Type {
		app = 0;
		connector = 1;
		bot = 3;
	}
	optional string name = 12;
	// Version number of the client.
	optional string version = 14;
	optional bool is_enabled = 15;
	optional int64 created = 17;
	optional int64 modified = 18;
	optional string webhook_url = 20;
	repeated string events = 19; // subscribed event

	// for connector only
	optional string channel_type = 21;
	enum ChannelType {
		subiz = 0;
		email = 1;
		facebook = 2;
		viber = 3;
	}

	optional string availability_url = 22;
	optional string ping_url = 23;

	optional bool is_internal = 24;
}

enum Event {
	ClientCreateRequested = 20;
	ClientUpdateRequested = 21;
	ClientDeleteRequested = 22;
	ClientReadRequested = 23;
	ClientListRequested = 24;

	ClientUpserted = 25;
	ClientDeleted = 26;

	//ConnectorAuthorized = 13; // conversation send to auth to send ClientAuthorized
	ClientAuthorized = 12; // auth send to webhook to update webhook
	ClientRequested = 30;
	ClientSynced = 31;
	ConnectorAuthorized = 13; // conversation send to auth to send ClientAuthorized
}

message Authorization {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string issuer = 3;
	optional auth.Type kind = 4;
	// optional auth.Method method = 5;
	optional string client_id = 7;
	//optional auth.Type kind = 8;
	// optional string client_account_id = 10;
	repeated string scopes = 9;
	optional string integration_id = 11;
	optional auth.Permission perm = 12;
}
