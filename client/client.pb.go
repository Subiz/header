// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client/client.proto

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	client/client.proto

It has these top-level messages:
	Clients
	Connector
	Client
*/
package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_ClientCreateRequested Event = 20
	Event_ClientUpdateRequested Event = 21
	Event_ClientDeleteRequested Event = 22
	Event_ClientReadRequested   Event = 23
	Event_ClientListRequested   Event = 24
	Event_ClientUpserted        Event = 25
	Event_ClientDeleted         Event = 26
)

var Event_name = map[int32]string{
	20: "ClientCreateRequested",
	21: "ClientUpdateRequested",
	22: "ClientDeleteRequested",
	23: "ClientReadRequested",
	24: "ClientListRequested",
	25: "ClientUpserted",
	26: "ClientDeleted",
}
var Event_value = map[string]int32{
	"ClientCreateRequested": 20,
	"ClientUpdateRequested": 21,
	"ClientDeleteRequested": 22,
	"ClientReadRequested":   23,
	"ClientListRequested":   24,
	"ClientUpserted":        25,
	"ClientDeleted":         26,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Clients struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Clients          []*Client       `protobuf:"bytes,2,rep,name=clients" json:"clients,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Clients) Reset()                    { *m = Clients{} }
func (m *Clients) String() string            { return proto.CompactTextString(m) }
func (*Clients) ProtoMessage()               {}
func (*Clients) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Clients) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Clients) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type Connector struct {
	// 128 bit string identification of the client.
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// secre used to authorize client with oauth2 server
	Secret *string `protobuf:"bytes,4,opt,name=secret" json:"secret,omitempty"`
	// LogoUrl is url to logo of the client, should be 256x256 and lessthan 256KB
	LogoUrl   *string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	AccountId *string `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// IsVerified will be true if client is verified by the authority
	IsVerified *bool `protobuf:"varint,8,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	// List of URLs which client must register for oauth redirection
	RedirectUrl *string `protobuf:"bytes,9,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	Type        *string `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`
	Name        *string `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	// Version number of the client.
	Version          *string `protobuf:"bytes,14,opt,name=version" json:"version,omitempty"`
	IsEnabled        *bool   `protobuf:"varint,15,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Created          *int64  `protobuf:"varint,17,opt,name=created" json:"created,omitempty"`
	Modified         *int64  `protobuf:"varint,18,opt,name=modified" json:"modified,omitempty"`
	ChannelType      *string `protobuf:"bytes,20,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	ChannelName      *string `protobuf:"bytes,21,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Connector) Reset()                    { *m = Connector{} }
func (m *Connector) String() string            { return proto.CompactTextString(m) }
func (*Connector) ProtoMessage()               {}
func (*Connector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Connector) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Connector) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Connector) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Connector) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Connector) GetIsVerified() bool {
	if m != nil && m.IsVerified != nil {
		return *m.IsVerified
	}
	return false
}

func (m *Connector) GetRedirectUrl() string {
	if m != nil && m.RedirectUrl != nil {
		return *m.RedirectUrl
	}
	return ""
}

func (m *Connector) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Connector) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Connector) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Connector) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return false
}

func (m *Connector) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Connector) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Connector) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

func (m *Connector) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

type Client struct {
	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	// 128 bit string identification of the client.
	Id *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// secre used to authorize client with oauth2 server
	Secret *string `protobuf:"bytes,4,opt,name=secret" json:"secret,omitempty"`
	// LogoUrl is url to logo of the client, should be 256x256 and lessthan 256KB
	LogoUrl   *string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	AccountId *string `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// IsVerified will be true if client is verified by the authority
	IsVerified *bool `protobuf:"varint,8,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	// List of URLs which client must register for oauth redirection
	RedirectUrl *string `protobuf:"bytes,9,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	Type        *string `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`
	Name        *string `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	// Version number of the client.
	Version          *string `protobuf:"bytes,14,opt,name=version" json:"version,omitempty"`
	IsEnabled        *bool   `protobuf:"varint,15,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Created          *int64  `protobuf:"varint,17,opt,name=created" json:"created,omitempty"`
	Modified         *int64  `protobuf:"varint,18,opt,name=modified" json:"modified,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Client) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Client) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Client) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Client) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Client) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Client) GetIsVerified() bool {
	if m != nil && m.IsVerified != nil {
		return *m.IsVerified
	}
	return false
}

func (m *Client) GetRedirectUrl() string {
	if m != nil && m.RedirectUrl != nil {
		return *m.RedirectUrl
	}
	return ""
}

func (m *Client) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Client) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Client) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Client) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return false
}

func (m *Client) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Client) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func init() {
	proto.RegisterType((*Clients)(nil), "client.Clients")
	proto.RegisterType((*Connector)(nil), "client.Connector")
	proto.RegisterType((*Client)(nil), "client.Client")
	proto.RegisterEnum("client.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("client/client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x93, 0x41, 0x6e, 0xdb, 0x30,
	0x10, 0x45, 0x21, 0x3b, 0xb1, 0xad, 0x51, 0xea, 0x24, 0x4c, 0x9c, 0xd0, 0x06, 0x8a, 0x2a, 0x5e,
	0x09, 0x5d, 0xc8, 0x40, 0xae, 0xe0, 0x66, 0x51, 0xa0, 0xe8, 0x42, 0x68, 0xb2, 0x15, 0x64, 0x72,
	0x9a, 0x10, 0x95, 0x48, 0x97, 0xa4, 0x8c, 0xb4, 0x87, 0xe8, 0x5d, 0x7a, 0xab, 0x1e, 0xa3, 0x20,
	0x29, 0x57, 0xce, 0xae, 0xe8, 0xba, 0x2b, 0xf1, 0xff, 0xc7, 0x99, 0xf9, 0xe0, 0x40, 0x70, 0xc1,
	0x6a, 0x81, 0xd2, 0xae, 0xc2, 0x27, 0xdf, 0x6a, 0x65, 0x15, 0x19, 0x05, 0xb5, 0xc8, 0x37, 0xc2,
	0x6e, 0x5a, 0xf6, 0x05, 0x6d, 0xae, 0xf4, 0xe3, 0xca, 0xb4, 0x1b, 0xf1, 0x7d, 0xf5, 0x84, 0x15,
	0x47, 0xbd, 0x62, 0xaa, 0x69, 0x94, 0xec, 0x3e, 0xa1, 0x6e, 0xf9, 0x00, 0xe3, 0xb5, 0xaf, 0x34,
	0xe4, 0x06, 0x86, 0xcc, 0x3e, 0xd3, 0x28, 0x8d, 0xb2, 0xe4, 0xf6, 0x34, 0xef, 0xae, 0xad, 0x95,
	0xb4, 0xf8, 0x6c, 0x0b, 0xc7, 0x48, 0x06, 0xe3, 0x30, 0xc7, 0xd0, 0x41, 0x3a, 0xcc, 0x92, 0xdb,
	0x69, 0xde, 0xa5, 0x08, 0x4d, 0x8a, 0x3d, 0x5e, 0xfe, 0x18, 0x42, 0xbc, 0x56, 0x52, 0x22, 0xb3,
	0x4a, 0x93, 0x29, 0x0c, 0x04, 0xa7, 0xc3, 0x34, 0xca, 0xe2, 0x62, 0x20, 0x38, 0xb9, 0x82, 0x91,
	0x41, 0xa6, 0xd1, 0xd2, 0x23, 0xef, 0x75, 0x8a, 0xcc, 0x61, 0x52, 0xab, 0x47, 0x55, 0xb6, 0xba,
	0xa6, 0xc7, 0x9e, 0x8c, 0x9d, 0xbe, 0xd7, 0x35, 0x79, 0x0d, 0x50, 0x31, 0xa6, 0x5a, 0x69, 0x4b,
	0xc1, 0xe9, 0xc8, 0xc3, 0xb8, 0x73, 0xde, 0x73, 0xf2, 0x06, 0x12, 0x61, 0xca, 0x1d, 0x6a, 0xf1,
	0x59, 0x20, 0xa7, 0x93, 0x34, 0xca, 0x26, 0x05, 0x08, 0xf3, 0xd0, 0x39, 0xe4, 0x06, 0x4e, 0x34,
	0x72, 0xa1, 0x91, 0x59, 0xdf, 0x3e, 0xf6, 0x1d, 0x92, 0xbd, 0xe7, 0x46, 0x10, 0x38, 0xb2, 0xdf,
	0xb6, 0x48, 0x13, 0x8f, 0xfc, 0xd9, 0x79, 0xb2, 0x6a, 0x90, 0x9e, 0x04, 0xcf, 0x9d, 0x09, 0x85,
	0xf1, 0x0e, 0xb5, 0x11, 0x4a, 0xd2, 0x69, 0x08, 0xd9, 0x49, 0x17, 0x52, 0x98, 0x12, 0x65, 0xb5,
	0xa9, 0x91, 0xd3, 0x53, 0x1f, 0x22, 0x16, 0xe6, 0x2e, 0x18, 0xae, 0x90, 0x69, 0xac, 0x2c, 0x72,
	0x7a, 0x9e, 0x46, 0xd9, 0xb0, 0xd8, 0x4b, 0xb2, 0x80, 0x49, 0xa3, 0x78, 0xc8, 0x4e, 0x3c, 0xfa,
	0xa3, 0x5d, 0x72, 0xf6, 0x54, 0x49, 0x89, 0x75, 0xe9, 0xe3, 0x5d, 0x86, 0xe4, 0x9d, 0xf7, 0xc9,
	0xa5, 0x3c, 0xb8, 0xe2, 0xd3, 0xce, 0x5e, 0x5c, 0xf9, 0x58, 0x35, 0xb8, 0xfc, 0x35, 0x80, 0x51,
	0x58, 0xd2, 0xdf, 0x2c, 0xfa, 0xff, 0xc2, 0xfe, 0x7d, 0x61, 0x6f, 0x7f, 0x46, 0x70, 0x7c, 0xb7,
	0x73, 0x2f, 0x3d, 0x87, 0x59, 0x78, 0xf3, 0xb5, 0x2f, 0x2b, 0xf0, 0x6b, 0x8b, 0xc6, 0x22, 0x3f,
	0xbb, 0xec, 0xd1, 0xfd, 0x96, 0xbf, 0x40, 0xb3, 0x1e, 0xbd, 0xc3, 0x1a, 0x0f, 0xd1, 0x15, 0xb9,
	0x86, 0x8b, 0xee, 0x4f, 0xc3, 0x8a, 0xf7, 0xe0, 0xba, 0x07, 0x1f, 0x84, 0xb1, 0x3d, 0xa0, 0x84,
	0xc0, 0x74, 0x3f, 0xc7, 0xa0, 0x76, 0xde, 0x9c, 0x9c, 0xc3, 0xab, 0xc3, 0x01, 0xfc, 0x6c, 0xf1,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x58, 0x38, 0x60, 0xe5, 0x55, 0x04, 0x00, 0x00,
}
