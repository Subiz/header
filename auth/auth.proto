syntax = "proto3";

package auth;

message Credential {
	string account_id = 1;
	string issuer = 3;
	Type type = 4;

	Method method = 5;

	string client_id = 7;
	Type client_type = 8;
	string client_account_id = 10;

	repeated string scopes = 9;

	// optional
	string avatar_url = 15;
	string name = 16;
	string email = 17;
}

message Scope {
	string id = 1;
	string name = 2;
	string logo_url = 3;
	string title = 4;
	string description = 5;
	Method method = 6;
	Event event = 7;
}

message Event {
	bool conversation_started = 10;
	bool conversation_sent = 11;
	bool conversation_joined = 12;
}

message Method {
	// trigger
	bool update_trigger = 50;
	bool delete_trigger = 51;
	bool create_trigger = 52;
	bool read_trigger = 53;
	bool list_trigger = 54;
	bool ReadAllTrigger = 55;
	bool ListAllTrigger = 56;
	bool UpdateAllTrigger = 57;
	bool DeleteAllTrigger = 58;
	bool CreateAllTrigger = 59;

	// agents

	//bool AuthorizeAgentClient = 89;
	//bool RevokeAgentClient = 90;
	bool ReadAgentNotification = 105;
	bool SeenAgentNotification = 106;

	bool Ping = 107;
	// agent
	bool UpdatePasswords = 109;
	bool UpdatePassword = 108;
	bool InviteAgents = 70;
	bool UpdateAgent = 72;
	bool UpdateAgents = 73;
	bool ReadAgent = 76;
	bool ReadAgents = 77;
	bool ResetPassword = 78; // acc group

	bool UpdateAgentsPermission = 81;
	//bool ListAgentClient = 85;
	bool UpdateAgentsState = 86;


	// bool ReadAccount = 120; // default right
	bool ConfirmAccount = 120;
	//bool ListAccountClient = 121;

	// agent group
	bool CreateAgentGroups = 124;
	bool DeleteAgentGroups = 125;
	bool ReadAgentGroups = 126;
	bool UpdateAgentGroups = 127;

	// account
	bool UpdatePlan = 123; // only for subiz agent
	//bool ViewAccountReport = 125;
	//bool EnableChannel = 126;
	//bool DisableChannel = 127;
	bool CreateAccount = 129;
	bool DeleteAccount = 130;
	bool UpdateAccount  = 122;
	bool ReadAccount = 131;

	// clients
	bool ReadClient = 151;
	bool ListClient = 152;
	bool UpdateClientInfo = 153;
	bool PublishClient = 154;
	bool RegenerateClientSecret = 155;
	bool VerifyClient = 156;
	bool DeleteClient = 157;
	bool CreateClient = 158;

	// rule
	bool ReadRule = 180;
	bool UpdateRule = 181;
	bool DeleteRule = 182;

	// channel

	// converstation
	bool StartConversation = 190;
	bool ReadConversation = 191;
	bool WriteConversation = 192;

	// connector integration
	bool IntegrateConnector = 200;

	bool ReadUserEmail = 205;
	bool ReadUserFacebookId = 206;
	bool ReadUserPhone = 207;


	bool update_widget_setting = 299;

	bool create_whitelist_domain = 300;
	bool create_whitelist_ip = 301;
	bool create_whitelist_user = 302;
	bool delete_whitelist_domain = 303;
	bool delete_whitelist_ip = 304;
	bool delete_whitelist_user = 305;
	bool list_whitelist_ip = 306;
	bool list_whitelist_user = 307;
	bool list_whitelist_domain = 308;
}

message UserAuth {
	string UserId = 1;
	Method Method = 2;
}

message PasswordCredential {
	string username = 1;
	string password = 2;
}

message AuthCookie {
	string user_id = 1;
	string account_id = 2;
}

message OauthAccessToken {
	string access_token = 1;
	string token_type = 3;
	int64 expires_in = 4;
	string refresh_token = 5;
	string scope = 6;
	string state = 7;
	string error = 8;
	string error_description = 9;
  string error_uri = 10;
}

message AccessToken {
	string	issuer_id = 1;
	string issuer_type = 7;
	string client_id = 2;
  string	client_type = 3;
	string	account_id = 4;
	string	client_account_id = 5;
	repeated string scopes = 6;
}

message CookieExpire {
	string user_id = 1;
	string account_id = 2;

	// expired_token will be mark as expired
	string expired_token = 3;


	// all token issue before before_time will be mark as expired, except for
	// except_token
	int64 before_time = 4;

	// this token will not be expired
	string except_token = 5;

}

enum Type {
	unknown = 0;
  user = 1;
	agent = 2;
	subiz = 3;


	// APP is general client type
	app = 5;
	rest = 8;
	// CHANNEL is special client, that can and only listen chat topics of an account
	connector = 6;

	// BOT reserve for future
	bot = 7;
}

message User {
	reserved 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;
	//	optioanl common.Context ctx = 1;
	string id = 2;
	string account_id = 3;
	string email = 5;
	string encrypted_password = 17;
}

enum AuthorizationType {
	client_auth = 0;
	channel_auth = 1;
}

enum EVENT {
	AUTH = 0;
	AuthExpireCookie = 4; //CookieExpire

	ClientAuthorized = 12;
}
