syntax = "proto3";

package auth;

message Credential {
	string account_id = 1;
	string issuer = 3;
	Type type = 4;
	Method method = 5;
	Permission perm = 6;
	string client_id = 7;
	Type client_type = 8;
	string client_account_id = 10;
	repeated string scopes = 9;

	// optional
	string avatar_url = 15;
	string name = 16;
	string email = 17;

	bool is_internal_client = 18;
}

message Scope {
	string id = 1;
	string name = 2;
	string logo_url = 3;
	string title = 4;
	string description = 5;
	Method method = 6;
	repeated string event = 7;
}

message RequirePerm {
	string account = 2;
	string agent = 3;
	string agent_password = 4;
	string basic_scope_permission = 5;
	string all_scope_permission = 6;
	string agent_group = 7;
	string segmentation = 10;
	string client = 12;
	string rule = 13;
	string conversation = 14;
	string integration = 15;
	string canned_response = 16;
	string tag = 17;
	string whitelist_ip = 20;
	string whitelist_user = 21;
	string whitelist_domain = 22;
	string widget = 23;
	string subscription = 24;
	string invoice = 25;
	string payment_method = 26;
	string bill = 27;
	string payment_log = 28;
	string payment_comment = 29;
	string user = 30;
	string automation = 31;
}

message Permission {
	int32 account = 2;  //    ogu
	int32 agent = 3;    // 0x0777
	int32 agent_password = 4;
	int32 permission = 6;
	int32 agent_group = 7;
	int32 segmentation = 10;
	int32 client = 12;
	int32 rule = 13;
	int32 conversation = 14;
	int32 integration = 15;
	int32 canned_response = 16;
	int32 tag = 17;
	int32 whitelist_ip = 20;
	int32 whitelist_user = 21;
	int32 whitelist_domain = 22;
	int32 widget = 23;
	int32 subscription = 24;
	int32 invoice = 25;
	int32 payment_method = 26;
	int32 bill = 27;
	int32 payment_log = 28;
	int32 payment_comment = 29;
	int32 user = 30;
	int32 automation = 31;
}

message Method {
	bool ping = 1;
	// trigger
	bool update_trigger = 50;
	bool delete_trigger = 51;
	bool create_trigger = 52;
	bool read_trigger = 53;

	// segmentation
	bool read_segmentation = 60;
	bool update_segmentation = 61;
	bool delete_segmentation = 62;
	bool create_segmentation = 63;

	// agent
	bool invite_agent = 70;
	bool update_agent = 72;
	bool update_agents = 73;
	bool read_agent = 76;
	bool read_agents = 77;
	bool reset_password = 78; // acc group

	bool update_agents_permission = 81;
	bool read_agent_permission = 85;
	bool update_agents_state = 86;

	bool read_account = 120; // default right

	// agent group
	bool create_agent_group = 124;
	bool delete_agent_group = 125;
	bool read_agent_group = 126;
	bool update_agent_group = 127;

	// account
	bool update_plan = 123; // only for subiz agent
	bool update_account_infomation  = 122;

	// clients
	bool read_client = 151;
	bool update_client = 153;
	//bool RegenerateClientSecret = 155;
	//bool VerifyClient = 156;
	bool delete_client = 157;
	bool create_client = 158;

	// rule
	bool read_rule = 180;
	bool create_rule = 181;
	bool delete_rule = 182;
	bool update_rule = 183;

	// converstation
	bool start_conversation = 190;
	bool read_conversation = 191; // basic permission
	bool export_conversations = 192;
	bool read_teammates_conversations = 193;
	bool send_message = 194;

	// connector integration
	bool integrate_connector = 200;

	bool read_user_email = 205;
	bool read_user_facebook_id = 206;
	bool read_user_phones = 207;
	bool read_user_widget_setting = 208;

	bool read_tag = 209;
	bool update_tag = 210;
	bool delete_tag = 211;

	bool update_widget_setting = 299;
	bool create_whitelist_domain = 300;
	bool create_whitelist_ip = 301;
	bool create_whitelist_user = 302;
	bool delete_whitelist_domain = 303;
	bool delete_whitelist_ip = 304;
	bool delete_whitelist_user = 305;
	bool read_whitelist_ip = 306;
	bool read_whitelist_user = 307;
	bool read_whitelist_domain = 308;

	bool purchase_service = 310;
	bool update_payment_method = 311;
	bool pay_invoice = 312;
	bool update_billing_cycle = 313;
	bool read_invoice = 314;
	bool read_subscription = 315;

	// user attribute
	bool read_attribute = 316;
	bool create_attribute = 317;
	bool update_attribute = 318;
	bool delete_attribute = 319;

	bool read_all_accounts = 1000;
	bool read_all_agents = 1002;
	bool read_payment_comments = 1003;
	bool add_payment_comments = 1004;
	bool read_all_bills = 1005;
	bool write_all_invoices = 1006;
	bool read_all_invoices = 1007;
	bool purchase_all_services = 1008;
	bool read_all_subscriptions = 1009;
	bool add_credit = 1010;
	bool update_all_subscriptions = 1011;
	bool pay_all_invoices = 1012;
	bool transfer_money = 1013;
	bool read_all_logs = 1014;
	bool grant_all_perm = 4000; // SUPER! DONOT GRANT
}

message UserAuth {
	string user_id = 1;
	Method method = 2;
}

message GoogleCredential {
	string id_token = 2;
}

message PasswordCredential {
	string username = 1;
	string password = 2;
	GoogleCredential google = 3;
}

message SuperPasswordCredential {
	string subiz_username = 1;
	string subiz_password = 2;
	string subiz_token = 3;

	string issuer_id = 5; // default: owner
	// string client_id = 7; // default subiz
  // string client_type = 8;
	string account_id = 9;
	// string client_account_id = 10; // subiz
	int32 expired = 11; // default 24 hour
	repeated string scopes = 12; // default all
}

message AuthCookie {
	string user_id = 1;
	string account_id = 2;
	int32 expired = 4;
	int32 issued = 5;
	string type = 3;
}

message OauthAccessToken {
	string access_token = 1;
	string token_type = 3;
	int64 expires_in = 4;
	string refresh_token = 5;
	string scope = 6;
	string state = 7;
	string error = 8;
	string error_description = 9;
	string error_uri = 10;
}

message AccessToken {
	string issuer_id = 1;
	string issuer_type = 7;
	string client_id = 2;
	string client_type = 3;
	string account_id = 4;
	string client_account_id = 5;
	int32 expired = 8;
	repeated string scopes = 6;
}

message CookieExpire {
	string user_id = 1;
	string account_id = 2;

	// expired_token will be mark as expired
	string expired_token = 3;

	// all token issue before before_time will be mark as expired, except for
	// except_token
	int64 before_time = 4;

	// this token will not be expired
	string except_token = 5;
}

enum Type {
	unknown = 0;
	user = 1;
	agent = 2;
	subiz = 3;
	// APP is general client type
	app = 5;
	rest = 8;
	// CHANNEL is special client, that can and only listen chat topics of an account
	connector = 6;

	// BOT reserve for future
	bot = 7;
	dashboard = 10;
	// accmgr
	accmgr = 11;
}

message User {
	reserved 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;
	//	optioanl common.Context ctx = 1;
	string id = 2;
	string account_id = 3;
	string email = 5;
	string encrypted_password = 17;
	bool is_active = 18;
	int64 upserted = 19;
	int32 v3_state = 20; // 0: not v3, 1: v3 but not convert, 2: converted v3
}

enum AuthorizationType {
	client_auth = 0;
	channel_auth = 1;
}

enum Event {
	AUTH = 0;
	AuthExpireCookie = 4; //CookieExpire
}

message UpdatePermRequest {
	string account_id = 1;
	string user_id = 2;
	Method method = 3;
	Permission perm = 4;
}

message UpdateStateRequest {
	string account_id = 1;
	string user_id = 2;
	bool is_active = 3;
}

message ReadPermRequest {
	string account_id = 1;
	string user_id = 2;
}

message PingRequest {
	string message = 2;
}

message Pong {
	string message = 3;
}

message Empty {}

message ListUsersRequest {
	string account_id = 1;
	Method method = 2;
	string start_id = 3;
	int32 limit = 4;
	Permission perm = 5;
}

message ListUsersResponse {
	repeated string ids = 1;
}

service Perm {
	rpc Update(UpdatePermRequest) returns (Empty);
	rpc UpdateState(UpdateStateRequest) returns (Empty);
	rpc Read(ReadPermRequest) returns (Method);
	rpc ListUsersByMethod(ListUsersRequest) returns (ListUsersResponse);
	rpc Ping(PingRequest) returns (Pong);
}
