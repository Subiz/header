// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth/auth.proto

It has these top-level messages:
	Credential
	Scope
	Event
	Method
	UserAuth
	PasswordCredential
	AuthCookie
	OauthAccessToken
	AccessToken
	CookieExpire
	User
	By
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientType int32

const (
	// STONE is just default value, client should never have Type is STONE
	ClientType_STONE ClientType = 0
	// APP is general client type
	ClientType_app ClientType = 1
	// CHANNEL is special client, that can and only listen chat topics of an account
	ClientType_channel ClientType = 2
	// BOT reserve for future
	ClientType_bot ClientType = 3
)

var ClientType_name = map[int32]string{
	0: "STONE",
	1: "app",
	2: "channel",
	3: "bot",
}
var ClientType_value = map[string]int32{
	"STONE":   0,
	"app":     1,
	"channel": 2,
	"bot":     3,
}

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}
func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}
func (x *ClientType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientType_value, data, "ClientType")
	if err != nil {
		return err
	}
	*x = ClientType(value)
	return nil
}
func (ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserType int32

const (
	UserType_unknown UserType = 0
	UserType_user    UserType = 1
	UserType_agent   UserType = 2
	UserType_subiz   UserType = 3
)

var UserType_name = map[int32]string{
	0: "unknown",
	1: "user",
	2: "agent",
	3: "subiz",
}
var UserType_value = map[string]int32{
	"unknown": 0,
	"user":    1,
	"agent":   2,
	"subiz":   3,
}

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}
func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (x *UserType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserType_value, data, "UserType")
	if err != nil {
		return err
	}
	*x = UserType(value)
	return nil
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AuthorizationType int32

const (
	AuthorizationType_client_auth  AuthorizationType = 0
	AuthorizationType_channel_auth AuthorizationType = 1
)

var AuthorizationType_name = map[int32]string{
	0: "client_auth",
	1: "channel_auth",
}
var AuthorizationType_value = map[string]int32{
	"client_auth":  0,
	"channel_auth": 1,
}

func (x AuthorizationType) Enum() *AuthorizationType {
	p := new(AuthorizationType)
	*p = x
	return p
}
func (x AuthorizationType) String() string {
	return proto.EnumName(AuthorizationType_name, int32(x))
}
func (x *AuthorizationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AuthorizationType_value, data, "AuthorizationType")
	if err != nil {
		return err
	}
	*x = AuthorizationType(value)
	return nil
}
func (AuthorizationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type EVENT int32

const (
	EVENT_AuthExpireCookie EVENT = 4
	EVENT_ClientAuthorized EVENT = 12
)

var EVENT_name = map[int32]string{
	4:  "AuthExpireCookie",
	12: "ClientAuthorized",
}
var EVENT_value = map[string]int32{
	"AuthExpireCookie": 4,
	"ClientAuthorized": 12,
}

func (x EVENT) Enum() *EVENT {
	p := new(EVENT)
	*p = x
	return p
}
func (x EVENT) String() string {
	return proto.EnumName(EVENT_name, int32(x))
}
func (x *EVENT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EVENT_value, data, "EVENT")
	if err != nil {
		return err
	}
	*x = EVENT(value)
	return nil
}
func (EVENT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Credential struct {
	AccountId *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// int32 AccountPlan = 2;
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// scope that the user allow
	Method           *Method     `protobuf:"bytes,5,opt,name=method" json:"method,omitempty"`
	ClientId         *string     `protobuf:"bytes,7,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType       *ClientType `protobuf:"varint,8,opt,name=client_type,json=clientType,enum=auth.ClientType" json:"client_type,omitempty"`
	Scopes           []string    `protobuf:"bytes,9,rep,name=scopes" json:"scopes,omitempty"`
	ClientAccountId  *string     `protobuf:"bytes,10,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Credential) Reset()                    { *m = Credential{} }
func (m *Credential) String() string            { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()               {}
func (*Credential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Credential) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Credential) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Credential) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Credential) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Credential) GetClientType() ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ClientType_STONE
}

func (m *Credential) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Credential) GetClientAccountId() string {
	if m != nil && m.ClientAccountId != nil {
		return *m.ClientAccountId
	}
	return ""
}

type Scope struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	LogoUrl          *string `protobuf:"bytes,3,req,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Title            *string `protobuf:"bytes,4,req,name=title" json:"title,omitempty"`
	Description      *string `protobuf:"bytes,5,req,name=description" json:"description,omitempty"`
	Method           *Method `protobuf:"bytes,6,req,name=method" json:"method,omitempty"`
	Event            *Event  `protobuf:"bytes,7,req,name=event" json:"event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Scope) Reset()                    { *m = Scope{} }
func (m *Scope) String() string            { return proto.CompactTextString(m) }
func (*Scope) ProtoMessage()               {}
func (*Scope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Scope) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Scope) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Scope) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Scope) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Scope) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Scope) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Scope) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type Event struct {
	ConversationStarted *bool  `protobuf:"varint,10,opt,name=conversation_started,json=conversationStarted" json:"conversation_started,omitempty"`
	ConversationSent    *bool  `protobuf:"varint,11,opt,name=conversation_sent,json=conversationSent" json:"conversation_sent,omitempty"`
	ConversationJoined  *bool  `protobuf:"varint,12,opt,name=conversation_joined,json=conversationJoined" json:"conversation_joined,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Event) GetConversationStarted() bool {
	if m != nil && m.ConversationStarted != nil {
		return *m.ConversationStarted
	}
	return false
}

func (m *Event) GetConversationSent() bool {
	if m != nil && m.ConversationSent != nil {
		return *m.ConversationSent
	}
	return false
}

func (m *Event) GetConversationJoined() bool {
	if m != nil && m.ConversationJoined != nil {
		return *m.ConversationJoined
	}
	return false
}

type Method struct {
	// trigger
	UpdateTrigger    *bool `protobuf:"varint,50,opt,name=update_trigger,json=updateTrigger" json:"update_trigger,omitempty"`
	DeleteTrigger    *bool `protobuf:"varint,51,opt,name=delete_trigger,json=deleteTrigger" json:"delete_trigger,omitempty"`
	CreateTrigger    *bool `protobuf:"varint,52,opt,name=create_trigger,json=createTrigger" json:"create_trigger,omitempty"`
	ReadTrigger      *bool `protobuf:"varint,53,opt,name=read_trigger,json=readTrigger" json:"read_trigger,omitempty"`
	ListTrigger      *bool `protobuf:"varint,54,opt,name=list_trigger,json=listTrigger" json:"list_trigger,omitempty"`
	ReadAllTrigger   *bool `protobuf:"varint,55,opt,name=ReadAllTrigger" json:"ReadAllTrigger,omitempty"`
	ListAllTrigger   *bool `protobuf:"varint,56,opt,name=ListAllTrigger" json:"ListAllTrigger,omitempty"`
	UpdateAllTrigger *bool `protobuf:"varint,57,opt,name=UpdateAllTrigger" json:"UpdateAllTrigger,omitempty"`
	DeleteAllTrigger *bool `protobuf:"varint,58,opt,name=DeleteAllTrigger" json:"DeleteAllTrigger,omitempty"`
	CreateAllTrigger *bool `protobuf:"varint,59,opt,name=CreateAllTrigger" json:"CreateAllTrigger,omitempty"`
	// bool AuthorizeAgentClient = 89;
	// bool RevokeAgentClient = 90;
	ReadAgentNotification *bool `protobuf:"varint,105,opt,name=ReadAgentNotification" json:"ReadAgentNotification,omitempty"`
	SeenAgentNotification *bool `protobuf:"varint,106,opt,name=SeenAgentNotification" json:"SeenAgentNotification,omitempty"`
	Ping                  *bool `protobuf:"varint,107,opt,name=Ping" json:"Ping,omitempty"`
	// agent
	UpdatePasswords        *bool `protobuf:"varint,109,opt,name=UpdatePasswords" json:"UpdatePasswords,omitempty"`
	UpdatePassword         *bool `protobuf:"varint,108,opt,name=UpdatePassword" json:"UpdatePassword,omitempty"`
	InviteAgents           *bool `protobuf:"varint,70,opt,name=InviteAgents" json:"InviteAgents,omitempty"`
	UpdateAgent            *bool `protobuf:"varint,72,opt,name=UpdateAgent" json:"UpdateAgent,omitempty"`
	UpdateAgents           *bool `protobuf:"varint,73,opt,name=UpdateAgents" json:"UpdateAgents,omitempty"`
	ReadAgent              *bool `protobuf:"varint,76,opt,name=ReadAgent" json:"ReadAgent,omitempty"`
	ReadAgents             *bool `protobuf:"varint,77,opt,name=ReadAgents" json:"ReadAgents,omitempty"`
	ResetPassword          *bool `protobuf:"varint,78,opt,name=ResetPassword" json:"ResetPassword,omitempty"`
	UpdateAgentsPermission *bool `protobuf:"varint,81,opt,name=UpdateAgentsPermission" json:"UpdateAgentsPermission,omitempty"`
	// bool ListAgentClient = 85;
	UpdateAgentsState *bool `protobuf:"varint,86,opt,name=UpdateAgentsState" json:"UpdateAgentsState,omitempty"`
	// bool ReadAccount = 120; // default right
	ConfirmAccount *bool `protobuf:"varint,120,opt,name=ConfirmAccount" json:"ConfirmAccount,omitempty"`
	// agent group
	CreateAgentGroups *bool `protobuf:"varint,124,opt,name=CreateAgentGroups" json:"CreateAgentGroups,omitempty"`
	DeleteAgentGroups *bool `protobuf:"varint,125,opt,name=DeleteAgentGroups" json:"DeleteAgentGroups,omitempty"`
	ReadAgentGroups   *bool `protobuf:"varint,126,opt,name=ReadAgentGroups" json:"ReadAgentGroups,omitempty"`
	UpdateAgentGroups *bool `protobuf:"varint,127,opt,name=UpdateAgentGroups" json:"UpdateAgentGroups,omitempty"`
	// account
	UpdatePlan *bool `protobuf:"varint,123,opt,name=UpdatePlan" json:"UpdatePlan,omitempty"`
	// bool ViewAccountReport = 125;
	// bool EnableChannel = 126;
	// bool DisableChannel = 127;
	CreateAccount *bool `protobuf:"varint,129,opt,name=CreateAccount" json:"CreateAccount,omitempty"`
	DeleteAccount *bool `protobuf:"varint,130,opt,name=DeleteAccount" json:"DeleteAccount,omitempty"`
	UpdateAccount *bool `protobuf:"varint,122,opt,name=UpdateAccount" json:"UpdateAccount,omitempty"`
	ReadAccount   *bool `protobuf:"varint,131,opt,name=ReadAccount" json:"ReadAccount,omitempty"`
	// clients
	ReadClient             *bool `protobuf:"varint,151,opt,name=ReadClient" json:"ReadClient,omitempty"`
	ListClient             *bool `protobuf:"varint,152,opt,name=ListClient" json:"ListClient,omitempty"`
	UpdateClientInfo       *bool `protobuf:"varint,153,opt,name=UpdateClientInfo" json:"UpdateClientInfo,omitempty"`
	PublishClient          *bool `protobuf:"varint,154,opt,name=PublishClient" json:"PublishClient,omitempty"`
	RegenerateClientSecret *bool `protobuf:"varint,155,opt,name=RegenerateClientSecret" json:"RegenerateClientSecret,omitempty"`
	VerifyClient           *bool `protobuf:"varint,156,opt,name=VerifyClient" json:"VerifyClient,omitempty"`
	DeleteClient           *bool `protobuf:"varint,157,opt,name=DeleteClient" json:"DeleteClient,omitempty"`
	CreateClient           *bool `protobuf:"varint,158,opt,name=CreateClient" json:"CreateClient,omitempty"`
	// rule
	ReadRule   *bool `protobuf:"varint,180,opt,name=ReadRule" json:"ReadRule,omitempty"`
	UpdateRule *bool `protobuf:"varint,181,opt,name=UpdateRule" json:"UpdateRule,omitempty"`
	DeleteRule *bool `protobuf:"varint,182,opt,name=DeleteRule" json:"DeleteRule,omitempty"`
	// converstation
	StartConversation *bool  `protobuf:"varint,190,opt,name=StartConversation" json:"StartConversation,omitempty"`
	ReadConversation  *bool  `protobuf:"varint,191,opt,name=ReadConversation" json:"ReadConversation,omitempty"`
	WriteConversation *bool  `protobuf:"varint,192,opt,name=WriteConversation" json:"WriteConversation,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Method) GetUpdateTrigger() bool {
	if m != nil && m.UpdateTrigger != nil {
		return *m.UpdateTrigger
	}
	return false
}

func (m *Method) GetDeleteTrigger() bool {
	if m != nil && m.DeleteTrigger != nil {
		return *m.DeleteTrigger
	}
	return false
}

func (m *Method) GetCreateTrigger() bool {
	if m != nil && m.CreateTrigger != nil {
		return *m.CreateTrigger
	}
	return false
}

func (m *Method) GetReadTrigger() bool {
	if m != nil && m.ReadTrigger != nil {
		return *m.ReadTrigger
	}
	return false
}

func (m *Method) GetListTrigger() bool {
	if m != nil && m.ListTrigger != nil {
		return *m.ListTrigger
	}
	return false
}

func (m *Method) GetReadAllTrigger() bool {
	if m != nil && m.ReadAllTrigger != nil {
		return *m.ReadAllTrigger
	}
	return false
}

func (m *Method) GetListAllTrigger() bool {
	if m != nil && m.ListAllTrigger != nil {
		return *m.ListAllTrigger
	}
	return false
}

func (m *Method) GetUpdateAllTrigger() bool {
	if m != nil && m.UpdateAllTrigger != nil {
		return *m.UpdateAllTrigger
	}
	return false
}

func (m *Method) GetDeleteAllTrigger() bool {
	if m != nil && m.DeleteAllTrigger != nil {
		return *m.DeleteAllTrigger
	}
	return false
}

func (m *Method) GetCreateAllTrigger() bool {
	if m != nil && m.CreateAllTrigger != nil {
		return *m.CreateAllTrigger
	}
	return false
}

func (m *Method) GetReadAgentNotification() bool {
	if m != nil && m.ReadAgentNotification != nil {
		return *m.ReadAgentNotification
	}
	return false
}

func (m *Method) GetSeenAgentNotification() bool {
	if m != nil && m.SeenAgentNotification != nil {
		return *m.SeenAgentNotification
	}
	return false
}

func (m *Method) GetPing() bool {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return false
}

func (m *Method) GetUpdatePasswords() bool {
	if m != nil && m.UpdatePasswords != nil {
		return *m.UpdatePasswords
	}
	return false
}

func (m *Method) GetUpdatePassword() bool {
	if m != nil && m.UpdatePassword != nil {
		return *m.UpdatePassword
	}
	return false
}

func (m *Method) GetInviteAgents() bool {
	if m != nil && m.InviteAgents != nil {
		return *m.InviteAgents
	}
	return false
}

func (m *Method) GetUpdateAgent() bool {
	if m != nil && m.UpdateAgent != nil {
		return *m.UpdateAgent
	}
	return false
}

func (m *Method) GetUpdateAgents() bool {
	if m != nil && m.UpdateAgents != nil {
		return *m.UpdateAgents
	}
	return false
}

func (m *Method) GetReadAgent() bool {
	if m != nil && m.ReadAgent != nil {
		return *m.ReadAgent
	}
	return false
}

func (m *Method) GetReadAgents() bool {
	if m != nil && m.ReadAgents != nil {
		return *m.ReadAgents
	}
	return false
}

func (m *Method) GetResetPassword() bool {
	if m != nil && m.ResetPassword != nil {
		return *m.ResetPassword
	}
	return false
}

func (m *Method) GetUpdateAgentsPermission() bool {
	if m != nil && m.UpdateAgentsPermission != nil {
		return *m.UpdateAgentsPermission
	}
	return false
}

func (m *Method) GetUpdateAgentsState() bool {
	if m != nil && m.UpdateAgentsState != nil {
		return *m.UpdateAgentsState
	}
	return false
}

func (m *Method) GetConfirmAccount() bool {
	if m != nil && m.ConfirmAccount != nil {
		return *m.ConfirmAccount
	}
	return false
}

func (m *Method) GetCreateAgentGroups() bool {
	if m != nil && m.CreateAgentGroups != nil {
		return *m.CreateAgentGroups
	}
	return false
}

func (m *Method) GetDeleteAgentGroups() bool {
	if m != nil && m.DeleteAgentGroups != nil {
		return *m.DeleteAgentGroups
	}
	return false
}

func (m *Method) GetReadAgentGroups() bool {
	if m != nil && m.ReadAgentGroups != nil {
		return *m.ReadAgentGroups
	}
	return false
}

func (m *Method) GetUpdateAgentGroups() bool {
	if m != nil && m.UpdateAgentGroups != nil {
		return *m.UpdateAgentGroups
	}
	return false
}

func (m *Method) GetUpdatePlan() bool {
	if m != nil && m.UpdatePlan != nil {
		return *m.UpdatePlan
	}
	return false
}

func (m *Method) GetCreateAccount() bool {
	if m != nil && m.CreateAccount != nil {
		return *m.CreateAccount
	}
	return false
}

func (m *Method) GetDeleteAccount() bool {
	if m != nil && m.DeleteAccount != nil {
		return *m.DeleteAccount
	}
	return false
}

func (m *Method) GetUpdateAccount() bool {
	if m != nil && m.UpdateAccount != nil {
		return *m.UpdateAccount
	}
	return false
}

func (m *Method) GetReadAccount() bool {
	if m != nil && m.ReadAccount != nil {
		return *m.ReadAccount
	}
	return false
}

func (m *Method) GetReadClient() bool {
	if m != nil && m.ReadClient != nil {
		return *m.ReadClient
	}
	return false
}

func (m *Method) GetListClient() bool {
	if m != nil && m.ListClient != nil {
		return *m.ListClient
	}
	return false
}

func (m *Method) GetUpdateClientInfo() bool {
	if m != nil && m.UpdateClientInfo != nil {
		return *m.UpdateClientInfo
	}
	return false
}

func (m *Method) GetPublishClient() bool {
	if m != nil && m.PublishClient != nil {
		return *m.PublishClient
	}
	return false
}

func (m *Method) GetRegenerateClientSecret() bool {
	if m != nil && m.RegenerateClientSecret != nil {
		return *m.RegenerateClientSecret
	}
	return false
}

func (m *Method) GetVerifyClient() bool {
	if m != nil && m.VerifyClient != nil {
		return *m.VerifyClient
	}
	return false
}

func (m *Method) GetDeleteClient() bool {
	if m != nil && m.DeleteClient != nil {
		return *m.DeleteClient
	}
	return false
}

func (m *Method) GetCreateClient() bool {
	if m != nil && m.CreateClient != nil {
		return *m.CreateClient
	}
	return false
}

func (m *Method) GetReadRule() bool {
	if m != nil && m.ReadRule != nil {
		return *m.ReadRule
	}
	return false
}

func (m *Method) GetUpdateRule() bool {
	if m != nil && m.UpdateRule != nil {
		return *m.UpdateRule
	}
	return false
}

func (m *Method) GetDeleteRule() bool {
	if m != nil && m.DeleteRule != nil {
		return *m.DeleteRule
	}
	return false
}

func (m *Method) GetStartConversation() bool {
	if m != nil && m.StartConversation != nil {
		return *m.StartConversation
	}
	return false
}

func (m *Method) GetReadConversation() bool {
	if m != nil && m.ReadConversation != nil {
		return *m.ReadConversation
	}
	return false
}

func (m *Method) GetWriteConversation() bool {
	if m != nil && m.WriteConversation != nil {
		return *m.WriteConversation
	}
	return false
}

type UserAuth struct {
	UserId           *string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Method           *Method `protobuf:"bytes,2,opt,name=Method" json:"Method,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAuth) Reset()                    { *m = UserAuth{} }
func (m *UserAuth) String() string            { return proto.CompactTextString(m) }
func (*UserAuth) ProtoMessage()               {}
func (*UserAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserAuth) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserAuth) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

type PasswordCredential struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PasswordCredential) Reset()                    { *m = PasswordCredential{} }
func (m *PasswordCredential) String() string            { return proto.CompactTextString(m) }
func (*PasswordCredential) ProtoMessage()               {}
func (*PasswordCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PasswordCredential) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *PasswordCredential) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type AuthCookie struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthCookie) Reset()                    { *m = AuthCookie{} }
func (m *AuthCookie) String() string            { return proto.CompactTextString(m) }
func (*AuthCookie) ProtoMessage()               {}
func (*AuthCookie) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AuthCookie) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AuthCookie) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type OauthAccessToken struct {
	AccessToken      *string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	TokenType        *string `protobuf:"bytes,3,opt,name=token_type,json=tokenType" json:"token_type,omitempty"`
	ExpiresIn        *int64  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn" json:"expires_in,omitempty"`
	RefreshToken     *string `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
	Scope            *string `protobuf:"bytes,6,opt,name=scope" json:"scope,omitempty"`
	State            *string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Error            *string `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
	ErrorDescription *string `protobuf:"bytes,9,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	ErrorUri         *string `protobuf:"bytes,10,opt,name=error_uri,json=errorUri" json:"error_uri,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OauthAccessToken) Reset()                    { *m = OauthAccessToken{} }
func (m *OauthAccessToken) String() string            { return proto.CompactTextString(m) }
func (*OauthAccessToken) ProtoMessage()               {}
func (*OauthAccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OauthAccessToken) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func (m *OauthAccessToken) GetTokenType() string {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return ""
}

func (m *OauthAccessToken) GetExpiresIn() int64 {
	if m != nil && m.ExpiresIn != nil {
		return *m.ExpiresIn
	}
	return 0
}

func (m *OauthAccessToken) GetRefreshToken() string {
	if m != nil && m.RefreshToken != nil {
		return *m.RefreshToken
	}
	return ""
}

func (m *OauthAccessToken) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *OauthAccessToken) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *OauthAccessToken) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *OauthAccessToken) GetErrorDescription() string {
	if m != nil && m.ErrorDescription != nil {
		return *m.ErrorDescription
	}
	return ""
}

func (m *OauthAccessToken) GetErrorUri() string {
	if m != nil && m.ErrorUri != nil {
		return *m.ErrorUri
	}
	return ""
}

type AccessToken struct {
	UserId           *string     `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientId         *string     `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType       *ClientType `protobuf:"varint,3,opt,name=client_type,json=clientType,enum=auth.ClientType" json:"client_type,omitempty"`
	AccountId        *string     `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ClientAccountId  *string     `protobuf:"bytes,5,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	Scopes           []string    `protobuf:"bytes,6,rep,name=scopes" json:"scopes,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *AccessToken) Reset()                    { *m = AccessToken{} }
func (m *AccessToken) String() string            { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()               {}
func (*AccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AccessToken) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AccessToken) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *AccessToken) GetClientType() ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ClientType_STONE
}

func (m *AccessToken) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AccessToken) GetClientAccountId() string {
	if m != nil && m.ClientAccountId != nil {
		return *m.ClientAccountId
	}
	return ""
}

func (m *AccessToken) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CookieExpire struct {
	UserId    *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// expired_token will be mark as expired
	ExpiredToken *string `protobuf:"bytes,3,opt,name=expired_token,json=expiredToken" json:"expired_token,omitempty"`
	// all token issue before before_time will be mark as expired, except for
	// except_token
	BeforeTime *int64 `protobuf:"varint,4,opt,name=before_time,json=beforeTime" json:"before_time,omitempty"`
	// this token will not be expired
	ExceptToken      *string `protobuf:"bytes,5,opt,name=except_token,json=exceptToken" json:"except_token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CookieExpire) Reset()                    { *m = CookieExpire{} }
func (m *CookieExpire) String() string            { return proto.CompactTextString(m) }
func (*CookieExpire) ProtoMessage()               {}
func (*CookieExpire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CookieExpire) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *CookieExpire) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CookieExpire) GetExpiredToken() string {
	if m != nil && m.ExpiredToken != nil {
		return *m.ExpiredToken
	}
	return ""
}

func (m *CookieExpire) GetBeforeTime() int64 {
	if m != nil && m.BeforeTime != nil {
		return *m.BeforeTime
	}
	return 0
}

func (m *CookieExpire) GetExceptToken() string {
	if m != nil && m.ExceptToken != nil {
		return *m.ExceptToken
	}
	return ""
}

type User struct {
	// 	optioanl common.Context ctx = 1;
	Id                *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId         *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Email             *string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	EncryptedPassword *string `protobuf:"bytes,17,opt,name=encrypted_password,json=encryptedPassword" json:"encrypted_password,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *User) GetEncryptedPassword() string {
	if m != nil && m.EncryptedPassword != nil {
		return *m.EncryptedPassword
	}
	return ""
}

type By struct {
	Type *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Id   *string `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	// optional
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	AvatarUrl        *string `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	AppId            *string `protobuf:"bytes,7,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *By) Reset()                    { *m = By{} }
func (m *By) String() string            { return proto.CompactTextString(m) }
func (*By) ProtoMessage()               {}
func (*By) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *By) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *By) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *By) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *By) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *By) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func init() {
	proto.RegisterType((*Credential)(nil), "auth.Credential")
	proto.RegisterType((*Scope)(nil), "auth.Scope")
	proto.RegisterType((*Event)(nil), "auth.Event")
	proto.RegisterType((*Method)(nil), "auth.Method")
	proto.RegisterType((*UserAuth)(nil), "auth.UserAuth")
	proto.RegisterType((*PasswordCredential)(nil), "auth.PasswordCredential")
	proto.RegisterType((*AuthCookie)(nil), "auth.AuthCookie")
	proto.RegisterType((*OauthAccessToken)(nil), "auth.OauthAccessToken")
	proto.RegisterType((*AccessToken)(nil), "auth.AccessToken")
	proto.RegisterType((*CookieExpire)(nil), "auth.CookieExpire")
	proto.RegisterType((*User)(nil), "auth.User")
	proto.RegisterType((*By)(nil), "auth.By")
	proto.RegisterEnum("auth.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("auth.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("auth.AuthorizationType", AuthorizationType_name, AuthorizationType_value)
	proto.RegisterEnum("auth.EVENT", EVENT_name, EVENT_value)
}

func init() { proto.RegisterFile("auth/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x97, 0xdf, 0x73, 0x23, 0x47,
	0x11, 0xc7, 0x6f, 0xa5, 0x95, 0xb4, 0x6a, 0xc9, 0xf6, 0x68, 0x70, 0x8e, 0x81, 0xe3, 0x12, 0x9f,
	0x92, 0x50, 0x2e, 0x87, 0x24, 0x95, 0x4b, 0xb8, 0xe3, 0xc7, 0xd3, 0xe1, 0x33, 0x44, 0xaa, 0x8b,
	0x63, 0x64, 0xfb, 0x78, 0x54, 0xad, 0xb5, 0x63, 0x7b, 0xe3, 0xd5, 0xee, 0xd6, 0xec, 0xca, 0x39,
	0x1f, 0x3f, 0x52, 0xc0, 0x1f, 0x41, 0xf8, 0xf9, 0xc4, 0x3b, 0x2f, 0xc0, 0x23, 0xf0, 0x06, 0x7f,
	0x02, 0xfc, 0x33, 0x14, 0xd5, 0xdd, 0x23, 0x69, 0x56, 0xb6, 0x29, 0x8a, 0x17, 0x7b, 0xe7, 0xdb,
	0x9f, 0xe9, 0x99, 0xee, 0xe9, 0x1d, 0xf5, 0xc2, 0x46, 0x38, 0x2b, 0xcf, 0xdf, 0xc5, 0x3f, 0xef,
	0xe4, 0x26, 0x2b, 0x33, 0xe9, 0xe3, 0x73, 0xff, 0xdf, 0x1e, 0xc0, 0xae, 0xd1, 0x91, 0x4e, 0xcb,
	0x38, 0x4c, 0xe4, 0x7d, 0x80, 0x70, 0x32, 0xc9, 0x66, 0x69, 0x39, 0x8e, 0x23, 0xe5, 0x6d, 0x79,
	0xdb, 0xed, 0x51, 0xdb, 0x2a, 0x83, 0x48, 0x7e, 0x11, 0x5a, 0xb3, 0x42, 0x1b, 0xb4, 0xd5, 0xc9,
	0xd6, 0xc4, 0xe1, 0x20, 0x92, 0x6f, 0x40, 0x73, 0xaa, 0xcb, 0xf3, 0x2c, 0x52, 0x8d, 0x2d, 0x6f,
	0xbb, 0xf3, 0xb0, 0xfb, 0x0e, 0xad, 0xf4, 0x11, 0x69, 0x23, 0x6b, 0x93, 0xf7, 0xa0, 0x3d, 0x49,
	0x62, 0xcd, 0xce, 0x5b, 0xe4, 0x20, 0x60, 0x61, 0x10, 0xc9, 0xf7, 0xa0, 0x63, 0x8d, 0xe5, 0x55,
	0xae, 0x55, 0xb0, 0xe5, 0x6d, 0xaf, 0x3f, 0x14, 0xec, 0x67, 0x97, 0x0c, 0x47, 0x57, 0xb9, 0x1e,
	0xc1, 0x64, 0xf1, 0x2c, 0xef, 0x42, 0xb3, 0x98, 0x64, 0xb9, 0x2e, 0x54, 0x7b, 0xab, 0x8e, 0xbb,
	0xe1, 0x91, 0xdc, 0x81, 0x9e, 0x75, 0xe5, 0x04, 0x03, 0xb4, 0xde, 0x06, 0x1b, 0x9e, 0xcc, 0x43,
	0xea, 0xff, 0xdd, 0x83, 0xc6, 0x21, 0x4e, 0x93, 0xeb, 0x50, 0xa3, 0x98, 0x6b, 0xdb, 0xed, 0x51,
	0x2d, 0x8e, 0xa4, 0x04, 0x3f, 0x0d, 0xa7, 0x5a, 0xd5, 0x48, 0xa1, 0x67, 0xf9, 0x25, 0x08, 0x92,
	0xec, 0x2c, 0x1b, 0xcf, 0x4c, 0xa2, 0xea, 0xa4, 0xb7, 0x70, 0x7c, 0x6c, 0x12, 0xb9, 0x09, 0x8d,
	0x32, 0x2e, 0x13, 0xad, 0x7c, 0xd2, 0x79, 0x20, 0xb7, 0xa0, 0x13, 0xe9, 0x62, 0x62, 0xe2, 0xbc,
	0x8c, 0xb3, 0x54, 0x35, 0xc8, 0xe6, 0x4a, 0x4e, 0xea, 0x9a, 0x5b, 0xb5, 0x5b, 0x53, 0xf7, 0x00,
	0x1a, 0xfa, 0x52, 0xa7, 0xa5, 0x6a, 0x11, 0xd4, 0x61, 0x68, 0x0f, 0xa5, 0x11, 0x5b, 0xfa, 0x9f,
	0x7b, 0xd0, 0x20, 0x41, 0xbe, 0x07, 0x9b, 0x93, 0x2c, 0xbd, 0xd4, 0xa6, 0x08, 0x71, 0x89, 0x71,
	0x51, 0x86, 0xa6, 0xd4, 0x9c, 0x82, 0x60, 0xf4, 0x05, 0xd7, 0x76, 0xc8, 0x26, 0xf9, 0x16, 0xf4,
	0xaa, 0x53, 0x70, 0xad, 0x0e, 0xf1, 0xa2, 0xc2, 0xa3, 0xff, 0x77, 0xa1, 0xe2, 0x63, 0xfc, 0x49,
	0x16, 0xa7, 0x3a, 0x52, 0x5d, 0xc2, 0xa5, 0x6b, 0x1a, 0x92, 0xa5, 0xff, 0xcf, 0x75, 0x68, 0x72,
	0x40, 0xf2, 0x4d, 0x58, 0x9f, 0xe5, 0x51, 0x58, 0xea, 0x71, 0x69, 0xe2, 0xb3, 0x33, 0x6d, 0xd4,
	0x43, 0x9a, 0xb6, 0xc6, 0xea, 0x11, 0x8b, 0x88, 0x45, 0x3a, 0xd1, 0x0e, 0xf6, 0x3e, 0x63, 0xac,
	0x3a, 0xd8, 0xc4, 0x68, 0xd7, 0xdb, 0x07, 0x8c, 0xb1, 0x3a, 0xc7, 0x1e, 0x40, 0xd7, 0xe8, 0x30,
	0x5a, 0x40, 0x5f, 0x27, 0xa8, 0x83, 0x9a, 0x83, 0x24, 0x71, 0x51, 0x2e, 0x90, 0x47, 0x8c, 0xa0,
	0x36, 0x47, 0xbe, 0x0a, 0xeb, 0x23, 0x1d, 0x46, 0x4f, 0x92, 0xc4, 0x2a, 0xea, 0x31, 0x41, 0x2b,
	0x2a, 0x72, 0xcf, 0xe2, 0xa2, 0x74, 0xb8, 0x6f, 0x30, 0x57, 0x55, 0xe5, 0x0e, 0x88, 0x63, 0x0a,
	0xda, 0x21, 0xbf, 0xc9, 0x29, 0x5f, 0xd5, 0x91, 0x7d, 0x4a, 0x91, 0x3b, 0xec, 0xb7, 0x98, 0x5d,
	0xd5, 0x91, 0xdd, 0xa5, 0xf0, 0x1d, 0xf6, 0xdb, 0xcc, 0xae, 0xea, 0xf2, 0x03, 0x78, 0x85, 0x76,
	0x7f, 0xa6, 0xd3, 0x72, 0x3f, 0x2b, 0xe3, 0xd3, 0x78, 0x42, 0x07, 0xa7, 0x62, 0x9a, 0x70, 0xb3,
	0x11, 0x67, 0x1d, 0x6a, 0x9d, 0x5e, 0x9f, 0xf5, 0x09, 0xcf, 0xba, 0xd1, 0x88, 0x2f, 0xd4, 0x41,
	0x9c, 0x9e, 0xa9, 0x0b, 0x82, 0xe8, 0x59, 0x6e, 0xc3, 0x06, 0xc7, 0x7a, 0x10, 0x16, 0xc5, 0xa7,
	0x99, 0x89, 0x0a, 0x35, 0x25, 0xf3, 0xaa, 0x8c, 0x59, 0xad, 0x4a, 0x2a, 0xe1, 0xac, 0x56, 0x55,
	0xd9, 0x87, 0xee, 0x20, 0xbd, 0x8c, 0x4b, 0x4d, 0x1b, 0x28, 0xd4, 0x77, 0x89, 0xaa, 0x68, 0xf8,
	0x56, 0xda, 0x0c, 0xe3, 0x58, 0x7d, 0xc8, 0x67, 0xed, 0x48, 0xe8, 0xc5, 0x19, 0x16, 0x6a, 0xc0,
	0x5e, 0x5c, 0x4d, 0x7e, 0x05, 0xda, 0x8b, 0xf4, 0xa8, 0x67, 0x04, 0x2c, 0x05, 0xf9, 0x2a, 0xc0,
	0x62, 0x50, 0xa8, 0x8f, 0xc8, 0xec, 0x28, 0xf2, 0x0d, 0x58, 0x1b, 0xe9, 0x42, 0x97, 0x8b, 0x70,
	0xf6, 0xb9, 0x72, 0x2b, 0xa2, 0x7c, 0x04, 0x77, 0xdd, 0x35, 0x0f, 0xb4, 0x99, 0xc6, 0x45, 0x81,
	0xa9, 0xfe, 0x3e, 0xe1, 0xb7, 0x58, 0xe5, 0xd7, 0xa0, 0xe7, 0x5a, 0x0e, 0xcb, 0xb0, 0xd4, 0xea,
	0x39, 0x4d, 0xb9, 0x6e, 0xc0, 0xdc, 0xee, 0x66, 0xe9, 0x69, 0x6c, 0xa6, 0xf6, 0x62, 0x54, 0x2f,
	0x38, 0xb7, 0x55, 0x15, 0xbd, 0xda, 0x0a, 0xc2, 0xc9, 0xdf, 0x33, 0xd9, 0x2c, 0x2f, 0xd4, 0x8f,
	0xd8, 0xeb, 0x35, 0x03, 0xd2, 0xb6, 0x36, 0x1d, 0xfa, 0xc7, 0x4c, 0x5f, 0x33, 0x60, 0x25, 0x2c,
	0xb2, 0x63, 0xd9, 0x9f, 0x70, 0x25, 0xac, 0xc8, 0x2b, 0xb1, 0x59, 0xf6, 0xb3, 0x6b, 0xb1, 0x59,
	0xfa, 0x55, 0x00, 0x5b, 0x21, 0x49, 0x98, 0xaa, 0x1f, 0xf2, 0x39, 0x2c, 0x15, 0xf9, 0x26, 0xac,
	0xd9, 0xad, 0xdb, 0xd0, 0x7f, 0xea, 0xf1, 0x41, 0x54, 0x54, 0xc4, 0xec, 0x9e, 0x2d, 0xf6, 0x33,
	0x8b, 0x55, 0x54, 0x3c, 0x55, 0xbb, 0x05, 0x8b, 0xbd, 0x64, 0xaa, 0x22, 0xca, 0x07, 0xd0, 0xa1,
	0xa0, 0x2c, 0xf3, 0x73, 0x76, 0xe5, 0x6a, 0xf2, 0x35, 0x2e, 0x1f, 0xfe, 0xe5, 0x53, 0xbf, 0xf0,
	0x96, 0xf5, 0xc3, 0x12, 0x02, 0x78, 0x9f, 0x58, 0xe0, 0x73, 0x0b, 0x2c, 0x25, 0xf9, 0xd6, 0xfc,
	0x7a, 0xe1, 0xf1, 0x20, 0x3d, 0xcd, 0xd4, 0x2f, 0x3d, 0xf7, 0x7e, 0x59, 0x1a, 0x30, 0xbc, 0x83,
	0xd9, 0x49, 0x12, 0x17, 0xe7, 0xd6, 0xe1, 0xaf, 0x6c, 0x78, 0x15, 0x55, 0x3e, 0x86, 0xbb, 0x23,
	0x7d, 0xa6, 0x53, 0x6d, 0x16, 0xd3, 0x0f, 0xf5, 0xc4, 0xe8, 0x52, 0xfd, 0x9a, 0xf9, 0x5b, 0xcc,
	0xf2, 0x75, 0xe8, 0x3e, 0xd7, 0x26, 0x3e, 0xbd, 0xb2, 0xee, 0x7f, 0xc3, 0x78, 0x45, 0x44, 0x88,
	0xb3, 0x69, 0xa1, 0xdf, 0x5a, 0xc8, 0x15, 0x11, 0xe2, 0x93, 0xb1, 0xd0, 0xef, 0x2c, 0xe4, 0x8a,
	0xf2, 0x1e, 0x04, 0x98, 0xaa, 0xd1, 0x2c, 0xd1, 0xea, 0x8f, 0x0c, 0x2c, 0x04, 0xcc, 0x1c, 0xc7,
	0x4f, 0xe6, 0x3f, 0x79, 0x6e, 0x49, 0xcc, 0x01, 0x5e, 0x92, 0x80, 0x3f, 0x5b, 0x60, 0x29, 0xc9,
	0xb7, 0xa1, 0x47, 0x3f, 0x9c, 0xbb, 0xce, 0x4f, 0x9d, 0xfa, 0x0b, 0x73, 0xd7, 0x2d, 0x78, 0x12,
	0x74, 0x70, 0x2e, 0xfd, 0x57, 0x7b, 0x12, 0xab, 0x06, 0xf4, 0xfd, 0x03, 0x13, 0x97, 0xba, 0x42,
	0xff, 0xcd, 0xfa, 0xbe, 0x66, 0xe9, 0x7f, 0x08, 0xc1, 0x71, 0xa1, 0xcd, 0x93, 0x59, 0x79, 0x8e,
	0xfd, 0xd0, 0x31, 0xf5, 0x63, 0xb6, 0x73, 0xb3, 0x23, 0x6c, 0x31, 0xf8, 0xd7, 0x57, 0xd5, 0x6e,
	0xea, 0xce, 0xf8, 0x7f, 0xff, 0x19, 0xc8, 0xf9, 0xb5, 0xe3, 0x74, 0x84, 0x5f, 0x86, 0x00, 0x7b,
	0x3c, 0xea, 0x84, 0xd8, 0xeb, 0x62, 0x8c, 0xb6, 0x7c, 0x7e, 0x7b, 0xd5, 0xd8, 0x36, 0x1f, 0xf7,
	0x9f, 0x02, 0xe0, 0x9e, 0x76, 0xb3, 0xec, 0x22, 0xd6, 0x6e, 0xe3, 0xe8, 0x55, 0x1a, 0xc7, 0x6a,
	0xc3, 0x59, 0x5b, 0x69, 0x38, 0xfb, 0xbf, 0xaf, 0x81, 0xf8, 0x18, 0x37, 0xfb, 0x64, 0x32, 0xd1,
	0x45, 0x71, 0x94, 0x5d, 0xe8, 0x14, 0x7f, 0xaa, 0x43, 0x1a, 0x8e, 0x4b, 0x1c, 0x5b, 0x8f, 0x9d,
	0xd0, 0x41, 0xee, 0x03, 0x90, 0x8d, 0x7b, 0x49, 0xee, 0x55, 0xdb, 0xa4, 0x50, 0xe3, 0x78, 0x1f,
	0x40, 0xbf, 0xc8, 0x63, 0xa3, 0x8b, 0x71, 0x9c, 0x2a, 0x7f, 0xcb, 0xdb, 0xae, 0x8f, 0xda, 0x56,
	0x19, 0xa4, 0xf2, 0x75, 0x58, 0x33, 0xfa, 0xd4, 0xe8, 0xe2, 0xdc, 0xae, 0xd0, 0x20, 0x07, 0x5d,
	0x2b, 0xf2, 0x12, 0x9b, 0xd0, 0xa0, 0x76, 0x53, 0x35, 0xc9, 0xc8, 0x03, 0x52, 0xe9, 0xae, 0x6d,
	0x59, 0x95, 0xee, 0xd7, 0x4d, 0x68, 0x68, 0x63, 0x32, 0x43, 0x5d, 0x6d, 0x7b, 0xc4, 0x03, 0xec,
	0xb9, 0xe8, 0x61, 0xec, 0x76, 0x88, 0x6d, 0x22, 0x04, 0x19, 0x9e, 0x3a, 0x6d, 0xe2, 0x3d, 0x68,
	0x33, 0x3c, 0x33, 0xb1, 0xed, 0x65, 0x03, 0x12, 0x8e, 0x4d, 0xdc, 0xff, 0x97, 0x07, 0x1d, 0x37,
	0x43, 0xb7, 0xa6, 0xbb, 0xd2, 0x81, 0xd7, 0xfe, 0x7b, 0x07, 0x5e, 0xff, 0x1f, 0x3a, 0xf0, 0xea,
	0xf1, 0xf9, 0xab, 0xdf, 0x0b, 0x37, 0x36, 0xe2, 0x8d, 0x1b, 0x1b, 0x71, 0xa7, 0x99, 0x6f, 0xba,
	0xcd, 0x7c, 0xff, 0x0f, 0x1e, 0x74, 0xb9, 0x8a, 0xf6, 0xe8, 0x80, 0xfe, 0xdf, 0x5a, 0xc2, 0x53,
	0xe5, 0x23, 0x8e, 0xec, 0xa9, 0x72, 0x59, 0x74, 0xad, 0xc8, 0x99, 0x7b, 0x0d, 0x3a, 0x27, 0xfa,
	0x34, 0x33, 0x7a, 0x5c, 0xc6, 0x53, 0x6d, 0x4b, 0x03, 0x58, 0x3a, 0x8a, 0xa7, 0x1a, 0x8b, 0x4f,
	0xbf, 0x98, 0xe8, 0xbc, 0xac, 0x94, 0x46, 0x87, 0x35, 0xf2, 0xd1, 0xff, 0x87, 0x07, 0x3e, 0xbe,
	0x79, 0xf6, 0x8b, 0x82, 0x37, 0x82, 0x5f, 0x14, 0xd5, 0x0d, 0xd6, 0x57, 0x37, 0x88, 0x55, 0x32,
	0x0d, 0xe3, 0xc4, 0xfa, 0xe4, 0x81, 0x7c, 0x1b, 0xa4, 0x4e, 0x27, 0xe6, 0x2a, 0x2f, 0x75, 0x34,
	0x5e, 0xbc, 0x6e, 0x3d, 0x42, 0x7a, 0x0b, 0xcb, 0xfc, 0xcd, 0x1d, 0xfa, 0x81, 0x27, 0x6a, 0x43,
	0x3f, 0xf0, 0x45, 0x63, 0xe8, 0x07, 0x4d, 0xd1, 0x1a, 0xfa, 0x41, 0x4b, 0x04, 0x43, 0x3f, 0x08,
	0x44, 0x7b, 0xe8, 0x07, 0x6d, 0x01, 0x43, 0x3f, 0x00, 0xd1, 0x19, 0xfa, 0x41, 0x47, 0x74, 0x87,
	0x7e, 0xd0, 0x15, 0x6b, 0x43, 0x3f, 0x58, 0x13, 0xeb, 0x43, 0x3f, 0x58, 0x17, 0x1b, 0x43, 0x3f,
	0xd8, 0x10, 0x62, 0xe8, 0x07, 0x42, 0xf4, 0xfa, 0x9f, 0x41, 0xed, 0x3b, 0x57, 0xd8, 0xb8, 0x39,
	0xef, 0x11, 0x3d, 0xdb, 0xd8, 0x82, 0x45, 0x6c, 0xf3, 0xaf, 0x25, 0xde, 0x3b, 0x7f, 0x2d, 0x61,
	0xbc, 0x97, 0x61, 0x19, 0x1a, 0xfa, 0x5e, 0x6a, 0xda, 0x78, 0x49, 0xc1, 0x2f, 0xa6, 0x57, 0xa0,
	0x19, 0xe6, 0xf9, 0xf2, 0x5b, 0xb0, 0x11, 0xe6, 0xf9, 0x20, 0xe2, 0xbd, 0xdb, 0xe8, 0x77, 0x1e,
	0x01, 0x2c, 0x4b, 0x4f, 0xb6, 0xa1, 0x71, 0x78, 0xf4, 0xf1, 0xfe, 0x9e, 0xb8, 0x23, 0x5b, 0x50,
	0x0f, 0xf3, 0x5c, 0x78, 0xb2, 0x03, 0xad, 0xc9, 0x79, 0x98, 0xa6, 0x3a, 0x11, 0x35, 0x54, 0x4f,
	0xb2, 0x52, 0xd4, 0x77, 0x1e, 0xf3, 0xb5, 0x48, 0xb3, 0x3a, 0xd0, 0x9a, 0xa5, 0x17, 0x69, 0xf6,
	0x69, 0x2a, 0xee, 0xc8, 0x00, 0x7c, 0x2c, 0x17, 0xe1, 0xa1, 0xb3, 0x10, 0xfb, 0x04, 0x51, 0xc3,
	0xc7, 0x62, 0x76, 0x12, 0xbf, 0x14, 0xf5, 0x9d, 0x47, 0xd0, 0xc3, 0x7b, 0x2b, 0x33, 0xf1, 0x4b,
	0xba, 0x60, 0xc9, 0xc3, 0xc6, 0xe2, 0xcd, 0xc0, 0x97, 0x41, 0xdc, 0x91, 0x02, 0xba, 0x76, 0x51,
	0x56, 0xbc, 0x9d, 0xf7, 0xa1, 0xb1, 0xf7, 0x7c, 0x6f, 0xff, 0x48, 0x6e, 0x82, 0x40, 0x07, 0x5c,
	0xac, 0x5c, 0xb8, 0xc2, 0x47, 0x95, 0xe3, 0x98, 0x3b, 0xd7, 0x91, 0xe8, 0xfe, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x36, 0xd3, 0x63, 0x8d, 0x95, 0x0f, 0x00, 0x00,
}
