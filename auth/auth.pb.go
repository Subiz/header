// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth/auth.proto

It has these top-level messages:
	Credential
	Scope
	Method
	UserAuth
	GoogleCredential
	PasswordCredential
	SuperPasswordCredential
	AuthCookie
	OauthAccessToken
	AccessToken
	CookieExpire
	User
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_unknown Type = 0
	Type_user    Type = 1
	Type_agent   Type = 2
	Type_subiz   Type = 3
	// APP is general client type
	Type_app  Type = 5
	Type_rest Type = 8
	// CHANNEL is special client, that can and only listen chat topics of an account
	Type_connector Type = 6
	// BOT reserve for future
	Type_bot       Type = 7
	Type_dashboard Type = 10
	// accmgr
	Type_accmgr Type = 11
)

var Type_name = map[int32]string{
	0:  "unknown",
	1:  "user",
	2:  "agent",
	3:  "subiz",
	5:  "app",
	8:  "rest",
	6:  "connector",
	7:  "bot",
	10: "dashboard",
	11: "accmgr",
}
var Type_value = map[string]int32{
	"unknown":   0,
	"user":      1,
	"agent":     2,
	"subiz":     3,
	"app":       5,
	"rest":      8,
	"connector": 6,
	"bot":       7,
	"dashboard": 10,
	"accmgr":    11,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AuthorizationType int32

const (
	AuthorizationType_client_auth  AuthorizationType = 0
	AuthorizationType_channel_auth AuthorizationType = 1
)

var AuthorizationType_name = map[int32]string{
	0: "client_auth",
	1: "channel_auth",
}
var AuthorizationType_value = map[string]int32{
	"client_auth":  0,
	"channel_auth": 1,
}

func (x AuthorizationType) String() string {
	return proto.EnumName(AuthorizationType_name, int32(x))
}
func (AuthorizationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Event int32

const (
	Event_AUTH             Event = 0
	Event_AuthExpireCookie Event = 4
)

var Event_name = map[int32]string{
	0: "AUTH",
	4: "AuthExpireCookie",
}
var Event_value = map[string]int32{
	"AUTH":             0,
	"AuthExpireCookie": 4,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Credential struct {
	AccountId       string   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Issuer          string   `protobuf:"bytes,3,opt,name=issuer" json:"issuer,omitempty"`
	Type            Type     `protobuf:"varint,4,opt,name=type,enum=auth.Type" json:"type,omitempty"`
	Method          *Method  `protobuf:"bytes,5,opt,name=method" json:"method,omitempty"`
	ClientId        string   `protobuf:"bytes,7,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType      Type     `protobuf:"varint,8,opt,name=client_type,json=clientType,enum=auth.Type" json:"client_type,omitempty"`
	ClientAccountId string   `protobuf:"bytes,10,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	Scopes          []string `protobuf:"bytes,9,rep,name=scopes" json:"scopes,omitempty"`
	// optional
	AvatarUrl        string `protobuf:"bytes,15,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Name             string `protobuf:"bytes,16,opt,name=name" json:"name,omitempty"`
	Email            string `protobuf:"bytes,17,opt,name=email" json:"email,omitempty"`
	IsInternalClient bool   `protobuf:"varint,18,opt,name=is_internal_client,json=isInternalClient" json:"is_internal_client,omitempty"`
}

func (m *Credential) Reset()                    { *m = Credential{} }
func (m *Credential) String() string            { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()               {}
func (*Credential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Credential) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Credential) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *Credential) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_unknown
}

func (m *Credential) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Credential) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Credential) GetClientType() Type {
	if m != nil {
		return m.ClientType
	}
	return Type_unknown
}

func (m *Credential) GetClientAccountId() string {
	if m != nil {
		return m.ClientAccountId
	}
	return ""
}

func (m *Credential) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Credential) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *Credential) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Credential) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Credential) GetIsInternalClient() bool {
	if m != nil {
		return m.IsInternalClient
	}
	return false
}

type Scope struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LogoUrl     string   `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Title       string   `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Description string   `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Method      *Method  `protobuf:"bytes,6,opt,name=method" json:"method,omitempty"`
	Event       []string `protobuf:"bytes,7,rep,name=event" json:"event,omitempty"`
}

func (m *Scope) Reset()                    { *m = Scope{} }
func (m *Scope) String() string            { return proto.CompactTextString(m) }
func (*Scope) ProtoMessage()               {}
func (*Scope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Scope) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Scope) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Scope) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Scope) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Scope) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Scope) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Scope) GetEvent() []string {
	if m != nil {
		return m.Event
	}
	return nil
}

type Method struct {
	Ping bool `protobuf:"varint,1,opt,name=ping" json:"ping,omitempty"`
	// trigger
	UpdateTrigger bool `protobuf:"varint,50,opt,name=update_trigger,json=updateTrigger" json:"update_trigger,omitempty"`
	DeleteTrigger bool `protobuf:"varint,51,opt,name=delete_trigger,json=deleteTrigger" json:"delete_trigger,omitempty"`
	CreateTrigger bool `protobuf:"varint,52,opt,name=create_trigger,json=createTrigger" json:"create_trigger,omitempty"`
	ReadTrigger   bool `protobuf:"varint,53,opt,name=read_trigger,json=readTrigger" json:"read_trigger,omitempty"`
	// segmentation
	ReadSegmentation   bool `protobuf:"varint,60,opt,name=read_segmentation,json=readSegmentation" json:"read_segmentation,omitempty"`
	UpdateSegmentation bool `protobuf:"varint,61,opt,name=update_segmentation,json=updateSegmentation" json:"update_segmentation,omitempty"`
	DeleteSegmentation bool `protobuf:"varint,62,opt,name=delete_segmentation,json=deleteSegmentation" json:"delete_segmentation,omitempty"`
	CreateSegmentation bool `protobuf:"varint,63,opt,name=create_segmentation,json=createSegmentation" json:"create_segmentation,omitempty"`
	// agent
	InviteAgent            bool `protobuf:"varint,70,opt,name=invite_agent,json=inviteAgent" json:"invite_agent,omitempty"`
	UpdateAgent            bool `protobuf:"varint,72,opt,name=update_agent,json=updateAgent" json:"update_agent,omitempty"`
	UpdateAgents           bool `protobuf:"varint,73,opt,name=update_agents,json=updateAgents" json:"update_agents,omitempty"`
	ReadAgent              bool `protobuf:"varint,76,opt,name=read_agent,json=readAgent" json:"read_agent,omitempty"`
	ReadAgents             bool `protobuf:"varint,77,opt,name=read_agents,json=readAgents" json:"read_agents,omitempty"`
	ResetPassword          bool `protobuf:"varint,78,opt,name=reset_password,json=resetPassword" json:"reset_password,omitempty"`
	UpdateAgentsPermission bool `protobuf:"varint,81,opt,name=update_agents_permission,json=updateAgentsPermission" json:"update_agents_permission,omitempty"`
	ReadAgentPermission    bool `protobuf:"varint,85,opt,name=read_agent_permission,json=readAgentPermission" json:"read_agent_permission,omitempty"`
	UpdateAgentsState      bool `protobuf:"varint,86,opt,name=update_agents_state,json=updateAgentsState" json:"update_agents_state,omitempty"`
	ReadAccount            bool `protobuf:"varint,120,opt,name=read_account,json=readAccount" json:"read_account,omitempty"`
	// agent group
	CreateAgentGroup bool `protobuf:"varint,124,opt,name=create_agent_group,json=createAgentGroup" json:"create_agent_group,omitempty"`
	DeleteAgentGroup bool `protobuf:"varint,125,opt,name=delete_agent_group,json=deleteAgentGroup" json:"delete_agent_group,omitempty"`
	ReadAgentGroup   bool `protobuf:"varint,126,opt,name=read_agent_group,json=readAgentGroup" json:"read_agent_group,omitempty"`
	UpdateAgentGroup bool `protobuf:"varint,127,opt,name=update_agent_group,json=updateAgentGroup" json:"update_agent_group,omitempty"`
	// account
	UpdatePlan              bool `protobuf:"varint,123,opt,name=update_plan,json=updatePlan" json:"update_plan,omitempty"`
	UpdateAccountInfomation bool `protobuf:"varint,122,opt,name=update_account_infomation,json=updateAccountInfomation" json:"update_account_infomation,omitempty"`
	// clients
	ReadClient   bool `protobuf:"varint,151,opt,name=read_client,json=readClient" json:"read_client,omitempty"`
	UpdateClient bool `protobuf:"varint,153,opt,name=update_client,json=updateClient" json:"update_client,omitempty"`
	// bool RegenerateClientSecret = 155;
	// bool VerifyClient = 156;
	DeleteClient bool `protobuf:"varint,157,opt,name=delete_client,json=deleteClient" json:"delete_client,omitempty"`
	CreateClient bool `protobuf:"varint,158,opt,name=create_client,json=createClient" json:"create_client,omitempty"`
	// rule
	ReadRule   bool `protobuf:"varint,180,opt,name=read_rule,json=readRule" json:"read_rule,omitempty"`
	CreateRule bool `protobuf:"varint,181,opt,name=create_rule,json=createRule" json:"create_rule,omitempty"`
	DeleteRule bool `protobuf:"varint,182,opt,name=delete_rule,json=deleteRule" json:"delete_rule,omitempty"`
	UpdateRule bool `protobuf:"varint,183,opt,name=update_rule,json=updateRule" json:"update_rule,omitempty"`
	// converstation
	StartConversation          bool `protobuf:"varint,190,opt,name=start_conversation,json=startConversation" json:"start_conversation,omitempty"`
	ReadConversation           bool `protobuf:"varint,191,opt,name=read_conversation,json=readConversation" json:"read_conversation,omitempty"`
	ExportConversations        bool `protobuf:"varint,192,opt,name=export_conversations,json=exportConversations" json:"export_conversations,omitempty"`
	ReadTeammatesConversations bool `protobuf:"varint,193,opt,name=read_teammates_conversations,json=readTeammatesConversations" json:"read_teammates_conversations,omitempty"`
	SendMessage                bool `protobuf:"varint,194,opt,name=send_message,json=sendMessage" json:"send_message,omitempty"`
	// connector integration
	IntegrateConnector    bool `protobuf:"varint,200,opt,name=integrate_connector,json=integrateConnector" json:"integrate_connector,omitempty"`
	ReadUserEmail         bool `protobuf:"varint,205,opt,name=read_user_email,json=readUserEmail" json:"read_user_email,omitempty"`
	ReadUserFacebookId    bool `protobuf:"varint,206,opt,name=read_user_facebook_id,json=readUserFacebookId" json:"read_user_facebook_id,omitempty"`
	ReadUserPhones        bool `protobuf:"varint,207,opt,name=read_user_phones,json=readUserPhones" json:"read_user_phones,omitempty"`
	ReadUserWidgetSetting bool `protobuf:"varint,208,opt,name=read_user_widget_setting,json=readUserWidgetSetting" json:"read_user_widget_setting,omitempty"`
	ReadTag               bool `protobuf:"varint,209,opt,name=read_tag,json=readTag" json:"read_tag,omitempty"`
	UpdateTag             bool `protobuf:"varint,210,opt,name=update_tag,json=updateTag" json:"update_tag,omitempty"`
	DeleteTag             bool `protobuf:"varint,211,opt,name=delete_tag,json=deleteTag" json:"delete_tag,omitempty"`
	UpdateWidgetSetting   bool `protobuf:"varint,299,opt,name=update_widget_setting,json=updateWidgetSetting" json:"update_widget_setting,omitempty"`
	CreateWhitelistDomain bool `protobuf:"varint,300,opt,name=create_whitelist_domain,json=createWhitelistDomain" json:"create_whitelist_domain,omitempty"`
	CreateWhitelistIp     bool `protobuf:"varint,301,opt,name=create_whitelist_ip,json=createWhitelistIp" json:"create_whitelist_ip,omitempty"`
	CreateWhitelistUser   bool `protobuf:"varint,302,opt,name=create_whitelist_user,json=createWhitelistUser" json:"create_whitelist_user,omitempty"`
	DeleteWhitelistDomain bool `protobuf:"varint,303,opt,name=delete_whitelist_domain,json=deleteWhitelistDomain" json:"delete_whitelist_domain,omitempty"`
	DeleteWhitelistIp     bool `protobuf:"varint,304,opt,name=delete_whitelist_ip,json=deleteWhitelistIp" json:"delete_whitelist_ip,omitempty"`
	DeleteWhitelistUser   bool `protobuf:"varint,305,opt,name=delete_whitelist_user,json=deleteWhitelistUser" json:"delete_whitelist_user,omitempty"`
	ReadWhitelistIp       bool `protobuf:"varint,306,opt,name=read_whitelist_ip,json=readWhitelistIp" json:"read_whitelist_ip,omitempty"`
	ReadWhitelistUser     bool `protobuf:"varint,307,opt,name=read_whitelist_user,json=readWhitelistUser" json:"read_whitelist_user,omitempty"`
	ReadWhitelistDomain   bool `protobuf:"varint,308,opt,name=read_whitelist_domain,json=readWhitelistDomain" json:"read_whitelist_domain,omitempty"`
	PurchaseService       bool `protobuf:"varint,310,opt,name=purchase_service,json=purchaseService" json:"purchase_service,omitempty"`
	UpdatePaymentMethod   bool `protobuf:"varint,311,opt,name=update_payment_method,json=updatePaymentMethod" json:"update_payment_method,omitempty"`
	AddCredit             bool `protobuf:"varint,312,opt,name=add_credit,json=addCredit" json:"add_credit,omitempty"`
	UpdateBillingCycle    bool `protobuf:"varint,313,opt,name=update_billing_cycle,json=updateBillingCycle" json:"update_billing_cycle,omitempty"`
	ReadInvoices          bool `protobuf:"varint,314,opt,name=read_invoices,json=readInvoices" json:"read_invoices,omitempty"`
	ReadSubscriptions     bool `protobuf:"varint,315,opt,name=read_subscriptions,json=readSubscriptions" json:"read_subscriptions,omitempty"`
	// user attribute
	ReadAttribute   bool `protobuf:"varint,316,opt,name=read_attribute,json=readAttribute" json:"read_attribute,omitempty"`
	CreateAttribute bool `protobuf:"varint,317,opt,name=create_attribute,json=createAttribute" json:"create_attribute,omitempty"`
	UpdateAttribute bool `protobuf:"varint,318,opt,name=update_attribute,json=updateAttribute" json:"update_attribute,omitempty"`
	DeleteAttribute bool `protobuf:"varint,319,opt,name=delete_attribute,json=deleteAttribute" json:"delete_attribute,omitempty"`
	ReadAllAccounts bool `protobuf:"varint,1000,opt,name=read_all_accounts,json=readAllAccounts" json:"read_all_accounts,omitempty"`
	ReadAllInvoices bool `protobuf:"varint,1001,opt,name=read_all_invoices,json=readAllInvoices" json:"read_all_invoices,omitempty"`
	ReadAllAgents   bool `protobuf:"varint,1002,opt,name=read_all_agents,json=readAllAgents" json:"read_all_agents,omitempty"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Method) GetPing() bool {
	if m != nil {
		return m.Ping
	}
	return false
}

func (m *Method) GetUpdateTrigger() bool {
	if m != nil {
		return m.UpdateTrigger
	}
	return false
}

func (m *Method) GetDeleteTrigger() bool {
	if m != nil {
		return m.DeleteTrigger
	}
	return false
}

func (m *Method) GetCreateTrigger() bool {
	if m != nil {
		return m.CreateTrigger
	}
	return false
}

func (m *Method) GetReadTrigger() bool {
	if m != nil {
		return m.ReadTrigger
	}
	return false
}

func (m *Method) GetReadSegmentation() bool {
	if m != nil {
		return m.ReadSegmentation
	}
	return false
}

func (m *Method) GetUpdateSegmentation() bool {
	if m != nil {
		return m.UpdateSegmentation
	}
	return false
}

func (m *Method) GetDeleteSegmentation() bool {
	if m != nil {
		return m.DeleteSegmentation
	}
	return false
}

func (m *Method) GetCreateSegmentation() bool {
	if m != nil {
		return m.CreateSegmentation
	}
	return false
}

func (m *Method) GetInviteAgent() bool {
	if m != nil {
		return m.InviteAgent
	}
	return false
}

func (m *Method) GetUpdateAgent() bool {
	if m != nil {
		return m.UpdateAgent
	}
	return false
}

func (m *Method) GetUpdateAgents() bool {
	if m != nil {
		return m.UpdateAgents
	}
	return false
}

func (m *Method) GetReadAgent() bool {
	if m != nil {
		return m.ReadAgent
	}
	return false
}

func (m *Method) GetReadAgents() bool {
	if m != nil {
		return m.ReadAgents
	}
	return false
}

func (m *Method) GetResetPassword() bool {
	if m != nil {
		return m.ResetPassword
	}
	return false
}

func (m *Method) GetUpdateAgentsPermission() bool {
	if m != nil {
		return m.UpdateAgentsPermission
	}
	return false
}

func (m *Method) GetReadAgentPermission() bool {
	if m != nil {
		return m.ReadAgentPermission
	}
	return false
}

func (m *Method) GetUpdateAgentsState() bool {
	if m != nil {
		return m.UpdateAgentsState
	}
	return false
}

func (m *Method) GetReadAccount() bool {
	if m != nil {
		return m.ReadAccount
	}
	return false
}

func (m *Method) GetCreateAgentGroup() bool {
	if m != nil {
		return m.CreateAgentGroup
	}
	return false
}

func (m *Method) GetDeleteAgentGroup() bool {
	if m != nil {
		return m.DeleteAgentGroup
	}
	return false
}

func (m *Method) GetReadAgentGroup() bool {
	if m != nil {
		return m.ReadAgentGroup
	}
	return false
}

func (m *Method) GetUpdateAgentGroup() bool {
	if m != nil {
		return m.UpdateAgentGroup
	}
	return false
}

func (m *Method) GetUpdatePlan() bool {
	if m != nil {
		return m.UpdatePlan
	}
	return false
}

func (m *Method) GetUpdateAccountInfomation() bool {
	if m != nil {
		return m.UpdateAccountInfomation
	}
	return false
}

func (m *Method) GetReadClient() bool {
	if m != nil {
		return m.ReadClient
	}
	return false
}

func (m *Method) GetUpdateClient() bool {
	if m != nil {
		return m.UpdateClient
	}
	return false
}

func (m *Method) GetDeleteClient() bool {
	if m != nil {
		return m.DeleteClient
	}
	return false
}

func (m *Method) GetCreateClient() bool {
	if m != nil {
		return m.CreateClient
	}
	return false
}

func (m *Method) GetReadRule() bool {
	if m != nil {
		return m.ReadRule
	}
	return false
}

func (m *Method) GetCreateRule() bool {
	if m != nil {
		return m.CreateRule
	}
	return false
}

func (m *Method) GetDeleteRule() bool {
	if m != nil {
		return m.DeleteRule
	}
	return false
}

func (m *Method) GetUpdateRule() bool {
	if m != nil {
		return m.UpdateRule
	}
	return false
}

func (m *Method) GetStartConversation() bool {
	if m != nil {
		return m.StartConversation
	}
	return false
}

func (m *Method) GetReadConversation() bool {
	if m != nil {
		return m.ReadConversation
	}
	return false
}

func (m *Method) GetExportConversations() bool {
	if m != nil {
		return m.ExportConversations
	}
	return false
}

func (m *Method) GetReadTeammatesConversations() bool {
	if m != nil {
		return m.ReadTeammatesConversations
	}
	return false
}

func (m *Method) GetSendMessage() bool {
	if m != nil {
		return m.SendMessage
	}
	return false
}

func (m *Method) GetIntegrateConnector() bool {
	if m != nil {
		return m.IntegrateConnector
	}
	return false
}

func (m *Method) GetReadUserEmail() bool {
	if m != nil {
		return m.ReadUserEmail
	}
	return false
}

func (m *Method) GetReadUserFacebookId() bool {
	if m != nil {
		return m.ReadUserFacebookId
	}
	return false
}

func (m *Method) GetReadUserPhones() bool {
	if m != nil {
		return m.ReadUserPhones
	}
	return false
}

func (m *Method) GetReadUserWidgetSetting() bool {
	if m != nil {
		return m.ReadUserWidgetSetting
	}
	return false
}

func (m *Method) GetReadTag() bool {
	if m != nil {
		return m.ReadTag
	}
	return false
}

func (m *Method) GetUpdateTag() bool {
	if m != nil {
		return m.UpdateTag
	}
	return false
}

func (m *Method) GetDeleteTag() bool {
	if m != nil {
		return m.DeleteTag
	}
	return false
}

func (m *Method) GetUpdateWidgetSetting() bool {
	if m != nil {
		return m.UpdateWidgetSetting
	}
	return false
}

func (m *Method) GetCreateWhitelistDomain() bool {
	if m != nil {
		return m.CreateWhitelistDomain
	}
	return false
}

func (m *Method) GetCreateWhitelistIp() bool {
	if m != nil {
		return m.CreateWhitelistIp
	}
	return false
}

func (m *Method) GetCreateWhitelistUser() bool {
	if m != nil {
		return m.CreateWhitelistUser
	}
	return false
}

func (m *Method) GetDeleteWhitelistDomain() bool {
	if m != nil {
		return m.DeleteWhitelistDomain
	}
	return false
}

func (m *Method) GetDeleteWhitelistIp() bool {
	if m != nil {
		return m.DeleteWhitelistIp
	}
	return false
}

func (m *Method) GetDeleteWhitelistUser() bool {
	if m != nil {
		return m.DeleteWhitelistUser
	}
	return false
}

func (m *Method) GetReadWhitelistIp() bool {
	if m != nil {
		return m.ReadWhitelistIp
	}
	return false
}

func (m *Method) GetReadWhitelistUser() bool {
	if m != nil {
		return m.ReadWhitelistUser
	}
	return false
}

func (m *Method) GetReadWhitelistDomain() bool {
	if m != nil {
		return m.ReadWhitelistDomain
	}
	return false
}

func (m *Method) GetPurchaseService() bool {
	if m != nil {
		return m.PurchaseService
	}
	return false
}

func (m *Method) GetUpdatePaymentMethod() bool {
	if m != nil {
		return m.UpdatePaymentMethod
	}
	return false
}

func (m *Method) GetAddCredit() bool {
	if m != nil {
		return m.AddCredit
	}
	return false
}

func (m *Method) GetUpdateBillingCycle() bool {
	if m != nil {
		return m.UpdateBillingCycle
	}
	return false
}

func (m *Method) GetReadInvoices() bool {
	if m != nil {
		return m.ReadInvoices
	}
	return false
}

func (m *Method) GetReadSubscriptions() bool {
	if m != nil {
		return m.ReadSubscriptions
	}
	return false
}

func (m *Method) GetReadAttribute() bool {
	if m != nil {
		return m.ReadAttribute
	}
	return false
}

func (m *Method) GetCreateAttribute() bool {
	if m != nil {
		return m.CreateAttribute
	}
	return false
}

func (m *Method) GetUpdateAttribute() bool {
	if m != nil {
		return m.UpdateAttribute
	}
	return false
}

func (m *Method) GetDeleteAttribute() bool {
	if m != nil {
		return m.DeleteAttribute
	}
	return false
}

func (m *Method) GetReadAllAccounts() bool {
	if m != nil {
		return m.ReadAllAccounts
	}
	return false
}

func (m *Method) GetReadAllInvoices() bool {
	if m != nil {
		return m.ReadAllInvoices
	}
	return false
}

func (m *Method) GetReadAllAgents() bool {
	if m != nil {
		return m.ReadAllAgents
	}
	return false
}

type UserAuth struct {
	UserId string  `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Method *Method `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
}

func (m *UserAuth) Reset()                    { *m = UserAuth{} }
func (m *UserAuth) String() string            { return proto.CompactTextString(m) }
func (*UserAuth) ProtoMessage()               {}
func (*UserAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserAuth) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuth) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

type GoogleCredential struct {
	IdToken string `protobuf:"bytes,2,opt,name=id_token,json=idToken" json:"id_token,omitempty"`
}

func (m *GoogleCredential) Reset()                    { *m = GoogleCredential{} }
func (m *GoogleCredential) String() string            { return proto.CompactTextString(m) }
func (*GoogleCredential) ProtoMessage()               {}
func (*GoogleCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GoogleCredential) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

type PasswordCredential struct {
	Username string            `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string            `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Google   *GoogleCredential `protobuf:"bytes,3,opt,name=google" json:"google,omitempty"`
}

func (m *PasswordCredential) Reset()                    { *m = PasswordCredential{} }
func (m *PasswordCredential) String() string            { return proto.CompactTextString(m) }
func (*PasswordCredential) ProtoMessage()               {}
func (*PasswordCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PasswordCredential) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PasswordCredential) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PasswordCredential) GetGoogle() *GoogleCredential {
	if m != nil {
		return m.Google
	}
	return nil
}

type SuperPasswordCredential struct {
	SubizUsername string `protobuf:"bytes,1,opt,name=subiz_username,json=subizUsername" json:"subiz_username,omitempty"`
	SubizPassword string `protobuf:"bytes,2,opt,name=subiz_password,json=subizPassword" json:"subiz_password,omitempty"`
	SubizToken    string `protobuf:"bytes,3,opt,name=subiz_token,json=subizToken" json:"subiz_token,omitempty"`
	IssuerId      string `protobuf:"bytes,5,opt,name=issuer_id,json=issuerId" json:"issuer_id,omitempty"`
	// string client_id = 7; // default subiz
	// string client_type = 8;
	AccountId string `protobuf:"bytes,9,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// string client_account_id = 10; // subiz
	Expired int32    `protobuf:"varint,11,opt,name=expired" json:"expired,omitempty"`
	Scopes  []string `protobuf:"bytes,12,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *SuperPasswordCredential) Reset()                    { *m = SuperPasswordCredential{} }
func (m *SuperPasswordCredential) String() string            { return proto.CompactTextString(m) }
func (*SuperPasswordCredential) ProtoMessage()               {}
func (*SuperPasswordCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SuperPasswordCredential) GetSubizUsername() string {
	if m != nil {
		return m.SubizUsername
	}
	return ""
}

func (m *SuperPasswordCredential) GetSubizPassword() string {
	if m != nil {
		return m.SubizPassword
	}
	return ""
}

func (m *SuperPasswordCredential) GetSubizToken() string {
	if m != nil {
		return m.SubizToken
	}
	return ""
}

func (m *SuperPasswordCredential) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *SuperPasswordCredential) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *SuperPasswordCredential) GetExpired() int32 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *SuperPasswordCredential) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type AuthCookie struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Expired   int32  `protobuf:"varint,4,opt,name=expired" json:"expired,omitempty"`
	Issued    int32  `protobuf:"varint,5,opt,name=issued" json:"issued,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *AuthCookie) Reset()                    { *m = AuthCookie{} }
func (m *AuthCookie) String() string            { return proto.CompactTextString(m) }
func (*AuthCookie) ProtoMessage()               {}
func (*AuthCookie) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AuthCookie) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AuthCookie) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AuthCookie) GetExpired() int32 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *AuthCookie) GetIssued() int32 {
	if m != nil {
		return m.Issued
	}
	return 0
}

func (m *AuthCookie) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type OauthAccessToken struct {
	AccessToken      string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	TokenType        string `protobuf:"bytes,3,opt,name=token_type,json=tokenType" json:"token_type,omitempty"`
	ExpiresIn        int64  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn" json:"expires_in,omitempty"`
	RefreshToken     string `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
	Scope            string `protobuf:"bytes,6,opt,name=scope" json:"scope,omitempty"`
	State            string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Error            string `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
	ErrorDescription string `protobuf:"bytes,9,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	ErrorUri         string `protobuf:"bytes,10,opt,name=error_uri,json=errorUri" json:"error_uri,omitempty"`
}

func (m *OauthAccessToken) Reset()                    { *m = OauthAccessToken{} }
func (m *OauthAccessToken) String() string            { return proto.CompactTextString(m) }
func (*OauthAccessToken) ProtoMessage()               {}
func (*OauthAccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *OauthAccessToken) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *OauthAccessToken) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *OauthAccessToken) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *OauthAccessToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *OauthAccessToken) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *OauthAccessToken) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OauthAccessToken) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *OauthAccessToken) GetErrorDescription() string {
	if m != nil {
		return m.ErrorDescription
	}
	return ""
}

func (m *OauthAccessToken) GetErrorUri() string {
	if m != nil {
		return m.ErrorUri
	}
	return ""
}

type AccessToken struct {
	IssuerId        string   `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId" json:"issuer_id,omitempty"`
	IssuerType      string   `protobuf:"bytes,7,opt,name=issuer_type,json=issuerType" json:"issuer_type,omitempty"`
	ClientId        string   `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType      string   `protobuf:"bytes,3,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId       string   `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ClientAccountId string   `protobuf:"bytes,5,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	Expired         int32    `protobuf:"varint,8,opt,name=expired" json:"expired,omitempty"`
	Scopes          []string `protobuf:"bytes,6,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *AccessToken) Reset()                    { *m = AccessToken{} }
func (m *AccessToken) String() string            { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()               {}
func (*AccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AccessToken) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *AccessToken) GetIssuerType() string {
	if m != nil {
		return m.IssuerType
	}
	return ""
}

func (m *AccessToken) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AccessToken) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *AccessToken) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AccessToken) GetClientAccountId() string {
	if m != nil {
		return m.ClientAccountId
	}
	return ""
}

func (m *AccessToken) GetExpired() int32 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *AccessToken) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CookieExpire struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// expired_token will be mark as expired
	ExpiredToken string `protobuf:"bytes,3,opt,name=expired_token,json=expiredToken" json:"expired_token,omitempty"`
	// all token issue before before_time will be mark as expired, except for
	// except_token
	BeforeTime int64 `protobuf:"varint,4,opt,name=before_time,json=beforeTime" json:"before_time,omitempty"`
	// this token will not be expired
	ExceptToken string `protobuf:"bytes,5,opt,name=except_token,json=exceptToken" json:"except_token,omitempty"`
}

func (m *CookieExpire) Reset()                    { *m = CookieExpire{} }
func (m *CookieExpire) String() string            { return proto.CompactTextString(m) }
func (*CookieExpire) ProtoMessage()               {}
func (*CookieExpire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CookieExpire) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CookieExpire) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CookieExpire) GetExpiredToken() string {
	if m != nil {
		return m.ExpiredToken
	}
	return ""
}

func (m *CookieExpire) GetBeforeTime() int64 {
	if m != nil {
		return m.BeforeTime
	}
	return 0
}

func (m *CookieExpire) GetExceptToken() string {
	if m != nil {
		return m.ExceptToken
	}
	return ""
}

type User struct {
	// 	optioanl common.Context ctx = 1;
	Id                string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId         string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Email             string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	EncryptedPassword string `protobuf:"bytes,17,opt,name=encrypted_password,json=encryptedPassword" json:"encrypted_password,omitempty"`
	IsActive          bool   `protobuf:"varint,18,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	Upserted          int64  `protobuf:"varint,19,opt,name=upserted" json:"upserted,omitempty"`
	V3State           int32  `protobuf:"varint,20,opt,name=v3_state,json=v3State" json:"v3_state,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEncryptedPassword() string {
	if m != nil {
		return m.EncryptedPassword
	}
	return ""
}

func (m *User) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *User) GetUpserted() int64 {
	if m != nil {
		return m.Upserted
	}
	return 0
}

func (m *User) GetV3State() int32 {
	if m != nil {
		return m.V3State
	}
	return 0
}

func init() {
	proto.RegisterType((*Credential)(nil), "auth.Credential")
	proto.RegisterType((*Scope)(nil), "auth.Scope")
	proto.RegisterType((*Method)(nil), "auth.Method")
	proto.RegisterType((*UserAuth)(nil), "auth.UserAuth")
	proto.RegisterType((*GoogleCredential)(nil), "auth.GoogleCredential")
	proto.RegisterType((*PasswordCredential)(nil), "auth.PasswordCredential")
	proto.RegisterType((*SuperPasswordCredential)(nil), "auth.SuperPasswordCredential")
	proto.RegisterType((*AuthCookie)(nil), "auth.AuthCookie")
	proto.RegisterType((*OauthAccessToken)(nil), "auth.OauthAccessToken")
	proto.RegisterType((*AccessToken)(nil), "auth.AccessToken")
	proto.RegisterType((*CookieExpire)(nil), "auth.CookieExpire")
	proto.RegisterType((*User)(nil), "auth.User")
	proto.RegisterEnum("auth.Type", Type_name, Type_value)
	proto.RegisterEnum("auth.AuthorizationType", AuthorizationType_name, AuthorizationType_value)
	proto.RegisterEnum("auth.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("auth/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0x4b, 0x93, 0x1c, 0x47,
	0xf1, 0xf7, 0xcc, 0xf6, 0xcc, 0xf4, 0xe4, 0xcc, 0xee, 0xf6, 0xd6, 0xae, 0xa4, 0x96, 0x6c, 0x69,
	0x57, 0x63, 0xfb, 0xef, 0xfd, 0xcb, 0xb6, 0x04, 0xbb, 0xbc, 0x82, 0xe0, 0x11, 0xcb, 0x5a, 0xb6,
	0x67, 0x02, 0x81, 0x98, 0xd5, 0xe2, 0x63, 0x47, 0x6f, 0x77, 0x69, 0xb6, 0x42, 0x3d, 0xdd, 0x1d,
	0x55, 0x3d, 0x2b, 0xad, 0x30, 0x70, 0xe3, 0xc0, 0x81, 0x2b, 0x41, 0x04, 0x70, 0xe2, 0xc6, 0xc3,
	0x3c, 0x8c, 0x6d, 0x0c, 0xd8, 0xc0, 0x89, 0x0b, 0xef, 0x2f, 0x01, 0x7c, 0x00, 0xce, 0x44, 0x65,
	0x56, 0xf7, 0x54, 0xcf, 0x4a, 0x3e, 0x70, 0x99, 0xe8, 0xfa, 0xe5, 0x2f, 0xab, 0xb2, 0xb2, 0x72,
	0x32, 0x2b, 0x0b, 0x56, 0xc3, 0x59, 0x71, 0x7c, 0x43, 0xff, 0x5c, 0xcf, 0x65, 0x56, 0x64, 0xcc,
	0xd1, 0xdf, 0x83, 0x6f, 0x2d, 0x01, 0xec, 0x4b, 0x1e, 0xf3, 0xb4, 0x10, 0x61, 0xc2, 0x2e, 0x03,
	0x84, 0x51, 0x94, 0xcd, 0xd2, 0x22, 0x10, 0xb1, 0xdf, 0xd8, 0x6a, 0x6c, 0x77, 0xc7, 0x5d, 0x83,
	0x0c, 0x63, 0x76, 0x1e, 0xda, 0x42, 0xa9, 0x19, 0x97, 0xfe, 0x12, 0x8a, 0xcc, 0x88, 0x5d, 0x01,
	0xa7, 0x38, 0xcd, 0xb9, 0xef, 0x6c, 0x35, 0xb6, 0x57, 0x76, 0xe0, 0x3a, 0x2e, 0x73, 0xe7, 0x34,
	0xe7, 0x63, 0xc4, 0xd9, 0x33, 0xd0, 0x9e, 0xf2, 0xe2, 0x38, 0x8b, 0xfd, 0xd6, 0x56, 0x63, 0xbb,
	0xb7, 0xd3, 0x27, 0xc6, 0x2d, 0xc4, 0xc6, 0x46, 0xc6, 0x9e, 0x84, 0x6e, 0x94, 0x08, 0x4e, 0x6b,
	0x77, 0x70, 0x01, 0x97, 0x80, 0x61, 0xcc, 0x9e, 0x87, 0x9e, 0x11, 0xe2, 0x4a, 0xee, 0x99, 0x95,
	0x80, 0xc4, 0xfa, 0x9b, 0x5d, 0x83, 0x35, 0x43, 0xb6, 0x76, 0x03, 0x38, 0xe3, 0x2a, 0x09, 0xf6,
	0xec, 0x3d, 0xa9, 0x28, 0xcb, 0xb9, 0xf2, 0xbb, 0x5b, 0x4b, 0x7a, 0x4f, 0x34, 0x42, 0x57, 0x9c,
	0x84, 0x45, 0x28, 0x83, 0x99, 0x4c, 0xfc, 0x55, 0xe3, 0x0a, 0x44, 0x0e, 0x65, 0xc2, 0x18, 0x38,
	0x69, 0x38, 0xe5, 0xbe, 0x87, 0x02, 0xfc, 0x66, 0x1b, 0xd0, 0xe2, 0xd3, 0x50, 0x24, 0xfe, 0x1a,
	0x82, 0x34, 0x60, 0x2f, 0x00, 0x13, 0x2a, 0x10, 0x69, 0xc1, 0x65, 0x1a, 0x26, 0x01, 0xad, 0xef,
	0xb3, 0xad, 0xc6, 0xb6, 0x3b, 0xf6, 0x84, 0x1a, 0x1a, 0xc1, 0x3e, 0xe2, 0x83, 0x77, 0x1b, 0xd0,
	0x3a, 0xd0, 0x16, 0xb0, 0x15, 0x68, 0x56, 0x67, 0xd0, 0x14, 0x71, 0xb5, 0x62, 0xd3, 0x5a, 0xf1,
	0x22, 0xb8, 0x49, 0x36, 0xc9, 0xd0, 0x44, 0x3a, 0x92, 0x8e, 0x1e, 0x6b, 0x03, 0x37, 0xa0, 0x55,
	0x88, 0x22, 0xa1, 0x43, 0xe9, 0x8e, 0x69, 0xc0, 0xb6, 0xa0, 0x17, 0x73, 0x15, 0x49, 0x91, 0x17,
	0x22, 0x4b, 0xf1, 0x38, 0xba, 0x63, 0x1b, 0xb2, 0xce, 0xaa, 0xfd, 0x01, 0x67, 0xa5, 0xb7, 0x7a,
	0xa2, 0xf7, 0xd1, 0x41, 0xa7, 0xd1, 0x60, 0xf0, 0xce, 0x05, 0x68, 0x13, 0x51, 0x5b, 0x9b, 0x8b,
	0x74, 0x82, 0xf6, 0xbb, 0x63, 0xfc, 0x66, 0xcf, 0xc2, 0xca, 0x2c, 0x8f, 0xc3, 0x82, 0x07, 0x85,
	0x14, 0x93, 0x09, 0x97, 0xfe, 0x0e, 0x4a, 0x97, 0x09, 0xbd, 0x43, 0xa0, 0xa6, 0xc5, 0x3c, 0xe1,
	0x16, 0x6d, 0x97, 0x68, 0x84, 0x5a, 0xb4, 0x48, 0x72, 0x7b, 0xb6, 0x8f, 0x10, 0x8d, 0xd0, 0x92,
	0x76, 0x15, 0xfa, 0x92, 0x87, 0x71, 0x45, 0xfa, 0x28, 0x92, 0x7a, 0x1a, 0x2b, 0x29, 0xcf, 0xc3,
	0x1a, 0x52, 0x14, 0x9f, 0x4c, 0x79, 0x5a, 0x84, 0xe8, 0x9a, 0x4f, 0xd1, 0x01, 0x69, 0xc1, 0x81,
	0x85, 0xb3, 0x1b, 0xb0, 0x6e, 0x36, 0x51, 0xa3, 0x7f, 0x1a, 0xe9, 0x8c, 0x44, 0x8b, 0x0a, 0x66,
	0x3b, 0x35, 0x85, 0xcf, 0x90, 0x02, 0x89, 0x16, 0x15, 0xcc, 0xc6, 0x6a, 0x0a, 0x9f, 0x25, 0x05,
	0x12, 0xd5, 0x14, 0xae, 0x42, 0x5f, 0xa4, 0x27, 0xa2, 0xe0, 0x41, 0x38, 0xd1, 0x67, 0xf2, 0x32,
	0x6d, 0x91, 0xb0, 0x3d, 0x0d, 0x69, 0x8a, 0xb1, 0x9a, 0x28, 0xaf, 0x12, 0x85, 0x30, 0xa2, 0x3c,
	0x0d, 0xcb, 0x36, 0x45, 0xf9, 0x43, 0xe4, 0xf4, 0x2d, 0x0e, 0xfe, 0x2b, 0xd0, 0x55, 0x34, 0xcb,
	0xe7, 0x91, 0xd1, 0xd5, 0x08, 0xcd, 0xb1, 0x09, 0xbd, 0xb9, 0x58, 0xf9, 0xb7, 0x50, 0x0e, 0x95,
	0x5c, 0xe9, 0x43, 0x93, 0x5c, 0xf1, 0x22, 0xc8, 0x43, 0xa5, 0xee, 0x67, 0x32, 0xf6, 0xbf, 0x40,
	0x87, 0x86, 0xe8, 0x6d, 0x03, 0xb2, 0x4f, 0x80, 0x5f, 0xb3, 0x25, 0xc8, 0xb9, 0x9c, 0x0a, 0xa5,
	0xb4, 0x1f, 0xbe, 0x84, 0x0a, 0xe7, 0x6d, 0xb3, 0x6e, 0x57, 0x52, 0xb6, 0x03, 0xe7, 0xe6, 0x16,
	0xd8, 0x6a, 0x87, 0xa8, 0xb6, 0x5e, 0xd9, 0x62, 0xe9, 0x5c, 0xaf, 0x8e, 0xd4, 0xac, 0xa6, 0x8a,
	0xb0, 0xe0, 0xfe, 0x97, 0x51, 0x63, 0xcd, 0x5e, 0xe8, 0x40, 0x0b, 0xaa, 0x90, 0x32, 0xc9, 0xc5,
	0x7f, 0x30, 0x0f, 0x29, 0x93, 0x57, 0xf4, 0x9f, 0xde, 0x9c, 0x21, 0x19, 0x32, 0x91, 0xd9, 0x2c,
	0xf7, 0x5f, 0xa7, 0x98, 0x22, 0x09, 0xce, 0xf8, 0x8a, 0xc6, 0x35, 0xdb, 0x84, 0x88, 0xcd, 0xfe,
	0x2a, 0xb1, 0x49, 0x62, 0xb1, 0xb7, 0xc1, 0xb3, 0xb6, 0x48, 0xdc, 0xaf, 0x21, 0x77, 0xa5, 0xda,
	0x5d, 0x35, 0xaf, 0xbd, 0x31, 0xc3, 0xfd, 0x3a, 0xcd, 0x6b, 0xed, 0x8b, 0xd8, 0x9b, 0x60, 0xe2,
	0x21, 0xc8, 0x93, 0x30, 0xf5, 0xbf, 0x42, 0x87, 0x47, 0xd0, 0xed, 0x24, 0x4c, 0xd9, 0x27, 0xe1,
	0x62, 0x39, 0x5d, 0x99, 0x56, 0xd3, 0xbb, 0xd9, 0x94, 0xc2, 0xf3, 0x21, 0xd2, 0x2f, 0x98, 0x59,
	0x4d, 0x7a, 0xad, 0xc4, 0x3a, 0xf1, 0xa0, 0xd1, 0x26, 0xfd, 0x7d, 0xbb, 0x31, 0x0f, 0x0d, 0xca,
	0x7c, 0xec, 0x99, 0x2a, 0xfe, 0x0c, 0xe7, 0x3b, 0x0d, 0x3b, 0x00, 0xe7, 0x2c, 0xe3, 0x2a, 0xc3,
	0xfa, 0x9e, 0x61, 0x11, 0x3a, 0x67, 0x19, 0xf7, 0x1b, 0xd6, 0xf7, 0x0d, 0x8b, 0x50, 0xc3, 0x7a,
	0x0a, 0x30, 0x74, 0x03, 0x39, 0x4b, 0xb8, 0xff, 0x26, 0x31, 0x5c, 0x8d, 0x8c, 0x67, 0x94, 0x2a,
	0xcd, 0x1c, 0x28, 0xff, 0xa5, 0xb1, 0x98, 0xb0, 0x92, 0x61, 0x6c, 0x41, 0xc6, 0x5b, 0x86, 0x41,
	0x58, 0xc9, 0x30, 0x7b, 0x42, 0xc6, 0xdb, 0x0d, 0xdb, 0xa7, 0xc8, 0xb8, 0x0e, 0x4c, 0x15, 0xa1,
	0x2c, 0x82, 0x28, 0x4b, 0x4f, 0xb8, 0x54, 0xe4, 0xcc, 0xf7, 0x88, 0xb8, 0x86, 0xa2, 0x7d, 0x4b,
	0xc2, 0x5e, 0x30, 0xb9, 0xaa, 0x46, 0x7f, 0xbf, 0x31, 0x4f, 0x56, 0x35, 0xf6, 0x0e, 0x6c, 0xf0,
	0x07, 0x79, 0xb6, 0x30, 0xbd, 0xf2, 0x7f, 0x47, 0x0a, 0xeb, 0x24, 0xb4, 0x55, 0x14, 0xdb, 0x83,
	0xa7, 0x28, 0x61, 0xf2, 0x70, 0x3a, 0x0d, 0x0b, 0xae, 0x16, 0x74, 0x7f, 0x4f, 0xba, 0x97, 0x30,
	0x83, 0x96, 0x9c, 0xfa, 0x14, 0x03, 0xe8, 0x2b, 0x9e, 0xc6, 0xc1, 0x94, 0x2b, 0x15, 0x4e, 0xb8,
	0xff, 0x07, 0x52, 0xe9, 0x69, 0xf0, 0x16, 0x61, 0xec, 0x43, 0xb0, 0xae, 0x6b, 0xe2, 0x44, 0xe2,
	0x29, 0x65, 0x69, 0xca, 0xa3, 0x22, 0x93, 0xfe, 0x1f, 0x89, 0xca, 0x2a, 0xd9, 0x7e, 0x29, 0x62,
	0xcf, 0xc1, 0x2a, 0x1a, 0x36, 0x53, 0x5c, 0x06, 0x54, 0x68, 0xff, 0xd4, 0x28, 0xb3, 0x47, 0x18,
	0x1f, 0x2a, 0x2e, 0x6f, 0x62, 0xc5, 0x2d, 0x73, 0x00, 0x12, 0xef, 0x86, 0x11, 0x3f, 0xca, 0xb2,
	0x7b, 0xfa, 0x0a, 0xf0, 0x67, 0x33, 0x79, 0x49, 0x7f, 0xd9, 0xc8, 0x86, 0x31, 0xfb, 0x7f, 0xf3,
	0xa7, 0x42, 0x9d, 0xfc, 0x38, 0x4b, 0xb9, 0xf2, 0xff, 0xd2, 0x98, 0xff, 0xab, 0x34, 0xfd, 0x36,
	0xc2, 0x3a, 0x39, 0xcd, 0xa9, 0xf7, 0x45, 0x3c, 0xe1, 0x45, 0xa0, 0x78, 0x51, 0xe8, 0x72, 0xf7,
	0x57, 0x52, 0x39, 0x57, 0xaa, 0xbc, 0x86, 0xe2, 0x03, 0x92, 0xb2, 0x4b, 0xe0, 0x92, 0x6b, 0xc3,
	0x89, 0xff, 0x37, 0x62, 0x76, 0xd0, 0x8d, 0xe1, 0x84, 0x5d, 0x01, 0x28, 0x8b, 0x63, 0x38, 0xf1,
	0xff, 0x4e, 0xd2, 0xae, 0xa9, 0x8c, 0x24, 0x2f, 0xab, 0x62, 0x38, 0xf1, 0xff, 0x61, 0xe4, 0xa6,
	0x24, 0x86, 0x13, 0xb6, 0x0b, 0xe7, 0x8c, 0xfe, 0x82, 0x49, 0x3f, 0x6c, 0xd2, 0x59, 0x93, 0xb4,
	0x6e, 0xd0, 0xc7, 0xe1, 0x82, 0x89, 0xf1, 0xfb, 0xc7, 0xa2, 0xe0, 0x89, 0x50, 0x45, 0x10, 0x67,
	0xd3, 0x50, 0xa4, 0xfe, 0x8f, 0x48, 0xed, 0x1c, 0xc9, 0x5f, 0x2b, 0xc5, 0x2f, 0xa1, 0xd4, 0xaa,
	0x51, 0x73, 0x45, 0x91, 0xfb, 0x3f, 0x26, 0xa5, 0xb5, 0x05, 0xa5, 0x61, 0xae, 0xcd, 0x3b, 0xa3,
	0xa0, 0x1d, 0xe8, 0xff, 0xc4, 0x98, 0xb7, 0xa0, 0xa2, 0x9d, 0xa7, 0xcd, 0x33, 0x7b, 0x3e, 0x63,
	0xde, 0x1b, 0xc6, 0x3c, 0x92, 0x3f, 0xc2, 0xbc, 0x33, 0x8a, 0x22, 0xf7, 0x7f, 0x6a, 0xcc, 0x5b,
	0x50, 0x22, 0xf3, 0xce, 0x28, 0xa0, 0x79, 0x3f, 0x33, 0xe6, 0x2d, 0xa8, 0xa0, 0x79, 0xe5, 0xbd,
	0xa1, 0xb6, 0xc6, 0xcf, 0x49, 0x01, 0x43, 0xd5, 0x5e, 0xe1, 0x06, 0xac, 0x2f, 0x90, 0x71, 0xfe,
	0x5f, 0x18, 0x93, 0x6a, 0x74, 0x9c, 0x7d, 0xd7, 0x44, 0xf1, 0x99, 0xad, 0xbf, 0xd9, 0x9c, 0x97,
	0xb2, 0xc5, 0x8d, 0x5f, 0x03, 0x2f, 0x9f, 0xc9, 0xe8, 0x38, 0x54, 0xfa, 0xf6, 0x20, 0x4f, 0x44,
	0xc4, 0xfd, 0xb7, 0x8c, 0x45, 0xa5, 0xe0, 0x80, 0x70, 0x2b, 0x62, 0xf2, 0xf0, 0x54, 0xdf, 0x26,
	0x02, 0x73, 0xf1, 0x7b, 0xbb, 0x16, 0x31, 0xb7, 0x49, 0x68, 0xee, 0x75, 0x57, 0x00, 0xc2, 0x38,
	0x0e, 0x22, 0xc9, 0x63, 0x51, 0xf8, 0xef, 0x10, 0xb3, 0x1b, 0xc6, 0xf1, 0x3e, 0x22, 0xec, 0xc3,
	0xb0, 0x61, 0x26, 0x3d, 0x12, 0x49, 0x22, 0xd2, 0x49, 0x10, 0x9d, 0x46, 0x09, 0xf7, 0x7f, 0xd5,
	0xb4, 0x2f, 0x48, 0x9f, 0x23, 0xd9, 0xbe, 0x16, 0xe9, 0x64, 0x8d, 0x1b, 0x15, 0xe9, 0x49, 0x26,
	0x22, 0xae, 0xfc, 0x77, 0x89, 0x8b, 0x45, 0x76, 0x68, 0x40, 0x9d, 0x28, 0xe9, 0x92, 0x36, 0x3b,
	0xaa, 0x2e, 0xab, 0xca, 0xff, 0xb5, 0xe5, 0xbe, 0x03, 0x5b, 0xc2, 0xfe, 0x0f, 0x56, 0xa8, 0x4a,
	0x16, 0x85, 0x14, 0x47, 0xb3, 0x82, 0xfb, 0xbf, 0x69, 0xce, 0x93, 0xc5, 0x5e, 0x89, 0x6a, 0x8f,
	0x95, 0x95, 0xba, 0x62, 0xfe, 0xd6, 0x78, 0xcc, 0x14, 0x6a, 0x9b, 0x5b, 0x16, 0xc0, 0x8a, 0xfb,
	0x9e, 0xe1, 0x9a, 0xc2, 0x67, 0x73, 0xcb, 0x9a, 0x5e, 0x71, 0xdf, 0x37, 0x5c, 0x53, 0xd2, 0x2b,
	0x6e, 0x19, 0x48, 0x61, 0x92, 0x94, 0xa5, 0x55, 0xf9, 0xff, 0xec, 0xcc, 0x03, 0x69, 0x2f, 0x49,
	0x4c, 0x49, 0x55, 0x35, 0x72, 0xe5, 0xb2, 0x7f, 0xd5, 0xc9, 0x95, 0xd7, 0xca, 0x9c, 0x89, 0x33,
	0xd3, 0xa5, 0xec, 0xdf, 0x1d, 0xcb, 0x0d, 0x49, 0x42, 0x17, 0x9b, 0xc1, 0x10, 0x5c, 0x1d, 0x75,
	0x7b, 0xb3, 0xe2, 0x98, 0x5d, 0x80, 0x0e, 0xe6, 0xb6, 0xaa, 0xfd, 0x68, 0xeb, 0xe1, 0x30, 0xb6,
	0x7a, 0x83, 0xe6, 0xe3, 0x7b, 0x83, 0xc1, 0x8b, 0xe0, 0xbd, 0x92, 0x65, 0x93, 0x84, 0x5b, 0x8d,
	0xe5, 0x45, 0x70, 0x45, 0x1c, 0x14, 0xd9, 0x3d, 0x9e, 0x9a, 0x06, 0xa6, 0x23, 0xe2, 0x3b, 0x7a,
	0x38, 0x78, 0x1d, 0x58, 0x79, 0xef, 0xb3, 0x14, 0x2e, 0x81, 0xab, 0x17, 0xc5, 0x8e, 0x87, 0x8c,
	0xa8, 0xc6, 0x5a, 0x56, 0x5d, 0x1f, 0x69, 0xb2, 0x6a, 0xcc, 0xae, 0x43, 0x7b, 0x82, 0x8b, 0x63,
	0x3f, 0xd4, 0xdb, 0x39, 0x4f, 0x26, 0x2e, 0x1a, 0x34, 0x36, 0xac, 0xc1, 0x7f, 0x1a, 0x70, 0xe1,
	0x60, 0x96, 0x73, 0xf9, 0x08, 0x1b, 0x9e, 0x85, 0x15, 0x35, 0x3b, 0x12, 0x0f, 0x83, 0x05, 0x4b,
	0x96, 0x11, 0x3d, 0x2c, 0xcd, 0xa9, 0x68, 0x0b, 0x46, 0x11, 0xad, 0xba, 0xd3, 0x6e, 0x42, 0x8f,
	0x68, 0xe4, 0x05, 0x6a, 0xd7, 0x00, 0x21, 0x74, 0x84, 0xee, 0x7f, 0xa9, 0x9f, 0xd6, 0x8e, 0xa7,
	0xce, 0xcc, 0x25, 0x60, 0x18, 0x2f, 0x74, 0xe6, 0xdd, 0xc5, 0xce, 0xdc, 0x87, 0x0e, 0x7f, 0x90,
	0x0b, 0xc9, 0x63, 0xbf, 0xb7, 0xd5, 0xd8, 0x6e, 0x8d, 0xcb, 0xa1, 0xd5, 0xdf, 0xf6, 0xed, 0xfe,
	0x76, 0xf0, 0xcd, 0x06, 0x80, 0x3e, 0xed, 0xfd, 0x2c, 0xbb, 0x27, 0xf8, 0xe3, 0xcf, 0xbc, 0xbe,
	0x70, 0xf3, 0x03, 0x16, 0x76, 0xce, 0x2c, 0x8c, 0xd6, 0xd3, 0x5e, 0x5a, 0xe6, 0xb1, 0x00, 0x3b,
	0x43, 0x6c, 0xe1, 0xc9, 0x01, 0xf8, 0x3d, 0xf8, 0x41, 0x13, 0xbc, 0x2f, 0xea, 0x83, 0xda, 0x8b,
	0x22, 0xae, 0x14, 0xf9, 0xe3, 0x2a, 0xf4, 0x43, 0x1c, 0x1a, 0x8f, 0x91, 0x5d, 0xbd, 0xd0, 0xa2,
	0x5c, 0x06, 0x40, 0x59, 0x60, 0xcd, 0xd8, 0x45, 0x04, 0xdf, 0x01, 0x2e, 0x03, 0x90, 0x35, 0xba,
	0xff, 0x46, 0xfb, 0x96, 0xc6, 0x5d, 0x83, 0x0c, 0x53, 0xdd, 0xf1, 0x48, 0x7e, 0x57, 0x72, 0x75,
	0x6c, 0x56, 0x20, 0xa7, 0xf7, 0x0d, 0x48, 0x4b, 0x6c, 0x40, 0x0b, 0x3d, 0x86, 0xed, 0x70, 0x77,
	0x4c, 0x03, 0x44, 0xb1, 0x49, 0xe8, 0x18, 0x14, 0x1b, 0x03, 0xdd, 0x15, 0x4b, 0x99, 0x49, 0x7c,
	0x9e, 0xd0, 0x5d, 0xb1, 0x1e, 0xe8, 0x3f, 0x2c, 0x7e, 0x04, 0x76, 0xe7, 0x4d, 0x27, 0xe8, 0xa1,
	0xe0, 0x25, 0xab, 0xfd, 0x7e, 0x12, 0xba, 0x44, 0x9e, 0x49, 0x61, 0x9e, 0x2c, 0x5c, 0x04, 0x0e,
	0xa5, 0x18, 0x7c, 0xa3, 0x09, 0x3d, 0xdb, 0x43, 0xb5, 0x88, 0x69, 0x2c, 0x44, 0xcc, 0x26, 0xf4,
	0x8c, 0x10, 0x9d, 0x43, 0x86, 0x02, 0x41, 0xe8, 0x9d, 0xda, 0x7b, 0x4b, 0x73, 0xe1, 0xbd, 0x65,
	0xb3, 0xfe, 0xde, 0x62, 0xa2, 0xd5, 0x7a, 0x63, 0xa9, 0xc7, 0x85, 0xb3, 0x18, 0x17, 0x8f, 0x7c,
	0x82, 0x69, 0x3d, 0xfa, 0x09, 0xc6, 0x8a, 0x21, 0xf7, 0x71, 0xc1, 0xdb, 0xae, 0x05, 0xef, 0x1b,
	0x0d, 0xe8, 0x53, 0xe0, 0xde, 0x44, 0xe6, 0xff, 0x1c, 0xbe, 0x4f, 0xc3, 0xb2, 0x59, 0xab, 0xf6,
	0xb7, 0xec, 0x1b, 0x90, 0xdc, 0xbc, 0x09, 0xbd, 0x23, 0x7e, 0x37, 0x93, 0x3c, 0x28, 0xc4, 0x94,
	0x9b, 0x38, 0x02, 0x82, 0xee, 0x88, 0x29, 0x36, 0x84, 0xfc, 0x41, 0xc4, 0xf3, 0xa2, 0x16, 0x47,
	0x3d, 0xc2, 0x28, 0xcb, 0x7d, 0xb7, 0x09, 0x0e, 0x96, 0x75, 0x7a, 0xd6, 0x69, 0x56, 0xcf, 0x3a,
	0x75, 0x03, 0x97, 0x16, 0x0d, 0xac, 0xde, 0x94, 0x5a, 0xf6, 0x9b, 0xd2, 0x8b, 0xc0, 0x78, 0x1a,
	0xc9, 0xd3, 0xbc, 0xe0, 0xf1, 0x3c, 0xed, 0xd0, 0xb3, 0xd3, 0x5a, 0x25, 0xa9, 0x52, 0x0f, 0xc6,
	0x49, 0x10, 0x46, 0x85, 0x38, 0xe1, 0xe6, 0xe5, 0xc9, 0x15, 0x6a, 0x0f, 0xc7, 0x98, 0x69, 0x73,
	0xc5, 0x65, 0xc1, 0x63, 0x7f, 0x1d, 0xb7, 0x56, 0x8d, 0x75, 0xda, 0x3e, 0xd9, 0x35, 0xed, 0xf0,
	0x06, 0x1d, 0xcd, 0xc9, 0x2e, 0x36, 0xc1, 0x23, 0xc7, 0x6d, 0x78, 0xcd, 0x91, 0xe3, 0x3a, 0x5e,
	0x6b, 0xe4, 0xb8, 0x6d, 0xaf, 0x33, 0x72, 0xdc, 0x8e, 0xe7, 0x8e, 0x1c, 0xd7, 0xf5, 0xba, 0x23,
	0xc7, 0xed, 0x7a, 0x30, 0x72, 0x5c, 0xf0, 0x7a, 0x23, 0xc7, 0xed, 0x79, 0xfd, 0x91, 0xe3, 0xf6,
	0xbd, 0xe5, 0x91, 0xe3, 0x2e, 0x7b, 0x2b, 0x23, 0xc7, 0x5d, 0xf1, 0x56, 0x47, 0x8e, 0xbb, 0xea,
	0x79, 0x23, 0xc7, 0xf5, 0xbc, 0xb5, 0x6b, 0xa7, 0xe0, 0x60, 0x54, 0xf5, 0xa0, 0x33, 0x4b, 0xef,
	0xa5, 0xd9, 0xfd, 0xd4, 0x7b, 0x82, 0xb9, 0xe0, 0xe8, 0x53, 0xf4, 0x1a, 0xac, 0x0b, 0x2d, 0xac,
	0x5e, 0x5e, 0x53, 0x7f, 0x62, 0xce, 0xf4, 0x96, 0x58, 0x07, 0x96, 0xc2, 0x3c, 0xf7, 0x5a, 0x9a,
	0x28, 0xb9, 0x2a, 0x3c, 0x97, 0x2d, 0x43, 0xb7, 0xea, 0x25, 0xbc, 0xb6, 0x66, 0x1c, 0x65, 0x85,
	0xd7, 0xd1, 0x78, 0x1c, 0xaa, 0xe3, 0xa3, 0x2c, 0x94, 0xb1, 0x07, 0x0c, 0xa0, 0x1d, 0x46, 0xd1,
	0x74, 0x22, 0xbd, 0xde, 0xb5, 0x8f, 0xc1, 0x9a, 0xce, 0x83, 0x99, 0x14, 0x0f, 0xb1, 0x7d, 0x41,
	0x3b, 0x56, 0xab, 0xf0, 0xd7, 0x59, 0xc9, 0x7b, 0x82, 0x79, 0xd0, 0x8f, 0x8e, 0xc3, 0x34, 0xe5,
	0x09, 0x21, 0x8d, 0x6b, 0xcf, 0x41, 0xeb, 0xe6, 0x89, 0x6e, 0x23, 0x5d, 0x70, 0xf6, 0x0e, 0xef,
	0xbc, 0xea, 0x3d, 0xc1, 0x36, 0xc0, 0xd3, 0x53, 0x51, 0x4c, 0x52, 0x7c, 0x7a, 0xce, 0x51, 0x1b,
	0x1f, 0x5c, 0x77, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x14, 0xe2, 0x86, 0x83, 0x15, 0x00,
	0x00,
}
