// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation/conversation.proto

/*
Package conversation is a generated protocol buffer package.

It is generated from these files:
	conversation/conversation.proto

It has these top-level messages:
	Limit
	Rule
	Condition
	Route
	RouteResult
	MemberSeen
	Member
	Conversation
	UserConversation
	StartRequest
	Conversations
	Search
	ListConversations
	ListEventsRequest
	ListConversationsByUserRequest
	RequestState
	Reaction
	Message
	Computed
	Seen
	Ack
	Received
	Field
	Button
	GenericElementTemplate
	Attachment
	Tag
	CannedResponse
	CannedResponses
	Tags
	Postback
	AllType
	UseConnector
	Integrations
	Integration
*/
package conversation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"
import user "bitbucket.org/subiz/header/user"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_ConversationAssigned            Event = 0
	Event_ConversationWaiting             Event = 2
	Event_ConversationStartRequested      Event = 3
	Event_ConversationAccepted            Event = 4
	Event_ConversationDropped             Event = 5
	Event_ConversationEventCreated        Event = 6
	Event_ConversationJoinRequested       Event = 7
	Event_ConversationMessageRequested    Event = 8
	Event_ConversationLeaveRequested      Event = 9
	Event_ConversationCloseRequested      Event = 10
	Event_ConversationTagRequested        Event = 11
	Event_ConversationUntagRequested      Event = 12
	Event_ConversationReadRequested       Event = 13
	Event_ConversationListRequested       Event = 14
	Event_ConversationAcceptRequested     Event = 15
	Event_ConversationUpdateRuleRequested Event = 20
	Event_ConversationCreateRuleRequested Event = 21
	Event_ConversationDeleteRuleRequested Event = 22
	Event_ConversationReadRuleRequested   Event = 23
	Event_ConversationListRuleRequested   Event = 24
	// ConversationRequested = 50; // user request for new conversation
	Event_ConversationUserRequestReply        Event = 51
	Event_ConversationLimitUpdated            Event = 52
	Event_ConversationRequestWaitTimeout      Event = 60
	Event_ConversationListEventsRequested     Event = 61
	Event_ChannelDeintegrateRequested         Event = 65
	Event_ChannelIntegrateRequested           Event = 66
	Event_ChannelIntegrationListRequested     Event = 67
	Event_ConnectorUpsertRequested            Event = 68
	Event_ConnectorListRequested              Event = 69
	Event_CannedResponseCreateRequested       Event = 80
	Event_CannedResponseUpdateRequested       Event = 81
	Event_CannedResponseDeleteRequested       Event = 82
	Event_CannedResponseReadRequested         Event = 83
	Event_CannedResponseListRequested         Event = 84
	Event_TagCreateRequested                  Event = 85
	Event_TagUpdateRequested                  Event = 86
	Event_TagReadRequested                    Event = 87
	Event_TagDeleteRequested                  Event = 88
	Event_TagListRequested                    Event = 89
	Event_ConversationMessageAckRequested     Event = 90
	Event_ConversationMessageReceiveRequested Event = 91
	Event_ConversationMessageSeeRequested     Event = 92
)

var Event_name = map[int32]string{
	0:  "ConversationAssigned",
	2:  "ConversationWaiting",
	3:  "ConversationStartRequested",
	4:  "ConversationAccepted",
	5:  "ConversationDropped",
	6:  "ConversationEventCreated",
	7:  "ConversationJoinRequested",
	8:  "ConversationMessageRequested",
	9:  "ConversationLeaveRequested",
	10: "ConversationCloseRequested",
	11: "ConversationTagRequested",
	12: "ConversationUntagRequested",
	13: "ConversationReadRequested",
	14: "ConversationListRequested",
	15: "ConversationAcceptRequested",
	20: "ConversationUpdateRuleRequested",
	21: "ConversationCreateRuleRequested",
	22: "ConversationDeleteRuleRequested",
	23: "ConversationReadRuleRequested",
	24: "ConversationListRuleRequested",
	51: "ConversationUserRequestReply",
	52: "ConversationLimitUpdated",
	60: "ConversationRequestWaitTimeout",
	61: "ConversationListEventsRequested",
	65: "ChannelDeintegrateRequested",
	66: "ChannelIntegrateRequested",
	67: "ChannelIntegrationListRequested",
	68: "ConnectorUpsertRequested",
	69: "ConnectorListRequested",
	80: "CannedResponseCreateRequested",
	81: "CannedResponseUpdateRequested",
	82: "CannedResponseDeleteRequested",
	83: "CannedResponseReadRequested",
	84: "CannedResponseListRequested",
	85: "TagCreateRequested",
	86: "TagUpdateRequested",
	87: "TagReadRequested",
	88: "TagDeleteRequested",
	89: "TagListRequested",
	90: "ConversationMessageAckRequested",
	91: "ConversationMessageReceiveRequested",
	92: "ConversationMessageSeeRequested",
}
var Event_value = map[string]int32{
	"ConversationAssigned":                0,
	"ConversationWaiting":                 2,
	"ConversationStartRequested":          3,
	"ConversationAccepted":                4,
	"ConversationDropped":                 5,
	"ConversationEventCreated":            6,
	"ConversationJoinRequested":           7,
	"ConversationMessageRequested":        8,
	"ConversationLeaveRequested":          9,
	"ConversationCloseRequested":          10,
	"ConversationTagRequested":            11,
	"ConversationUntagRequested":          12,
	"ConversationReadRequested":           13,
	"ConversationListRequested":           14,
	"ConversationAcceptRequested":         15,
	"ConversationUpdateRuleRequested":     20,
	"ConversationCreateRuleRequested":     21,
	"ConversationDeleteRuleRequested":     22,
	"ConversationReadRuleRequested":       23,
	"ConversationListRuleRequested":       24,
	"ConversationUserRequestReply":        51,
	"ConversationLimitUpdated":            52,
	"ConversationRequestWaitTimeout":      60,
	"ConversationListEventsRequested":     61,
	"ChannelDeintegrateRequested":         65,
	"ChannelIntegrateRequested":           66,
	"ChannelIntegrationListRequested":     67,
	"ConnectorUpsertRequested":            68,
	"ConnectorListRequested":              69,
	"CannedResponseCreateRequested":       80,
	"CannedResponseUpdateRequested":       81,
	"CannedResponseDeleteRequested":       82,
	"CannedResponseReadRequested":         83,
	"CannedResponseListRequested":         84,
	"TagCreateRequested":                  85,
	"TagUpdateRequested":                  86,
	"TagReadRequested":                    87,
	"TagDeleteRequested":                  88,
	"TagListRequested":                    89,
	"ConversationMessageAckRequested":     90,
	"ConversationMessageReceiveRequested": 91,
	"ConversationMessageSeeRequested":     92,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// optional string priority = 4;
type Rule_AssignStrategy int32

const (
	Rule_all_agents            Rule_AssignStrategy = 0
	Rule_agentgroup            Rule_AssignStrategy = 2
	Rule_agents                Rule_AssignStrategy = 3
	Rule_most_recent           Rule_AssignStrategy = 4
	Rule_roundrobin_all_agents Rule_AssignStrategy = 5
	Rule_roundrobin_agents     Rule_AssignStrategy = 6
)

var Rule_AssignStrategy_name = map[int32]string{
	0: "all_agents",
	2: "agentgroup",
	3: "agents",
	4: "most_recent",
	5: "roundrobin_all_agents",
	6: "roundrobin_agents",
}
var Rule_AssignStrategy_value = map[string]int32{
	"all_agents":            0,
	"agentgroup":            2,
	"agents":                3,
	"most_recent":           4,
	"roundrobin_all_agents": 5,
	"roundrobin_agents":     6,
}

func (x Rule_AssignStrategy) Enum() *Rule_AssignStrategy {
	p := new(Rule_AssignStrategy)
	*p = x
	return p
}
func (x Rule_AssignStrategy) String() string {
	return proto.EnumName(Rule_AssignStrategy_name, int32(x))
}
func (x *Rule_AssignStrategy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Rule_AssignStrategy_value, data, "Rule_AssignStrategy")
	if err != nil {
		return err
	}
	*x = Rule_AssignStrategy(value)
	return nil
}
func (Rule_AssignStrategy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Condition_JoinOperator int32

const (
	Condition_none Condition_JoinOperator = 0
	Condition_and  Condition_JoinOperator = 1
	Condition_or   Condition_JoinOperator = 2
)

var Condition_JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}
var Condition_JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x Condition_JoinOperator) Enum() *Condition_JoinOperator {
	p := new(Condition_JoinOperator)
	*p = x
	return p
}
func (x Condition_JoinOperator) String() string {
	return proto.EnumName(Condition_JoinOperator_name, int32(x))
}
func (x *Condition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Condition_JoinOperator_value, data, "Condition_JoinOperator")
	if err != nil {
		return err
	}
	*x = Condition_JoinOperator(value)
	return nil
}
func (Condition_JoinOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Conversation_State int32

const (
	Conversation_conversation_none Conversation_State = 0
	Conversation_unassigned        Conversation_State = 2
	Conversation_active            Conversation_State = 6
	Conversation_ended             Conversation_State = 8
)

var Conversation_State_name = map[int32]string{
	0: "conversation_none",
	2: "unassigned",
	6: "active",
	8: "ended",
}
var Conversation_State_value = map[string]int32{
	"conversation_none": 0,
	"unassigned":        2,
	"active":            6,
	"ended":             8,
}

func (x Conversation_State) Enum() *Conversation_State {
	p := new(Conversation_State)
	*p = x
	return p
}
func (x Conversation_State) String() string {
	return proto.EnumName(Conversation_State_name, int32(x))
}
func (x *Conversation_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Conversation_State_value, data, "Conversation_State")
	if err != nil {
		return err
	}
	*x = Conversation_State(value)
	return nil
}
func (Conversation_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type Button_ButtonType int32

const (
	Button_url_button      Button_ButtonType = 2
	Button_postback_button Button_ButtonType = 3
	Button_event_button    Button_ButtonType = 4
)

var Button_ButtonType_name = map[int32]string{
	2: "url_button",
	3: "postback_button",
	4: "event_button",
}
var Button_ButtonType_value = map[string]int32{
	"url_button":      2,
	"postback_button": 3,
	"event_button":    4,
}

func (x Button_ButtonType) Enum() *Button_ButtonType {
	p := new(Button_ButtonType)
	*p = x
	return p
}
func (x Button_ButtonType) String() string {
	return proto.EnumName(Button_ButtonType_name, int32(x))
}
func (x *Button_ButtonType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Button_ButtonType_value, data, "Button_ButtonType")
	if err != nil {
		return err
	}
	*x = Button_ButtonType(value)
	return nil
}
func (Button_ButtonType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{23, 0} }

type Attachment_AttachmentType int32

const (
	Attachment_file    Attachment_AttachmentType = 2
	Attachment_generic Attachment_AttachmentType = 3
	Attachment_preview Attachment_AttachmentType = 4
	Attachment_button  Attachment_AttachmentType = 5
	Attachment_input   Attachment_AttachmentType = 6
)

var Attachment_AttachmentType_name = map[int32]string{
	2: "file",
	3: "generic",
	4: "preview",
	5: "button",
	6: "input",
}
var Attachment_AttachmentType_value = map[string]int32{
	"file":    2,
	"generic": 3,
	"preview": 4,
	"button":  5,
	"input":   6,
}

func (x Attachment_AttachmentType) Enum() *Attachment_AttachmentType {
	p := new(Attachment_AttachmentType)
	*p = x
	return p
}
func (x Attachment_AttachmentType) String() string {
	return proto.EnumName(Attachment_AttachmentType_name, int32(x))
}
func (x *Attachment_AttachmentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Attachment_AttachmentType_value, data, "Attachment_AttachmentType")
	if err != nil {
		return err
	}
	*x = Attachment_AttachmentType(value)
	return nil
}
func (Attachment_AttachmentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 0}
}

type UseConnector_State int32

const (
	UseConnector_disabled  UseConnector_State = 0
	UseConnector_activated UseConnector_State = 1
)

var UseConnector_State_name = map[int32]string{
	0: "disabled",
	1: "activated",
}
var UseConnector_State_value = map[string]int32{
	"disabled":  0,
	"activated": 1,
}

func (x UseConnector_State) Enum() *UseConnector_State {
	p := new(UseConnector_State)
	*p = x
	return p
}
func (x UseConnector_State) String() string {
	return proto.EnumName(UseConnector_State_name, int32(x))
}
func (x *UseConnector_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UseConnector_State_value, data, "UseConnector_State")
	if err != nil {
		return err
	}
	*x = UseConnector_State(value)
	return nil
}
func (UseConnector_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{32, 0} }

type Integration_State int32

const (
	Integration_disabled  Integration_State = 0
	Integration_activated Integration_State = 1
)

var Integration_State_name = map[int32]string{
	0: "disabled",
	1: "activated",
}
var Integration_State_value = map[string]int32{
	"disabled":  0,
	"activated": 1,
}

func (x Integration_State) Enum() *Integration_State {
	p := new(Integration_State)
	*p = x
	return p
}
func (x Integration_State) String() string {
	return proto.EnumName(Integration_State_name, int32(x))
}
func (x *Integration_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Integration_State_value, data, "Integration_State")
	if err != nil {
		return err
	}
	*x = Integration_State(value)
	return nil
}
func (Integration_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{34, 0} }

type Limit struct {
	Ctx                 *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId           *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationHistory *int32          `protobuf:"varint,2,opt,name=conversation_history,json=conversationHistory" json:"conversation_history,omitempty"`
	MaxRules            *int32          `protobuf:"varint,7,opt,name=max_rules,json=maxRules" json:"max_rules,omitempty"`
	XXX_unrecognized    []byte          `json:"-"`
}

func (m *Limit) Reset()                    { *m = Limit{} }
func (m *Limit) String() string            { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()               {}
func (*Limit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Limit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Limit) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Limit) GetConversationHistory() int32 {
	if m != nil && m.ConversationHistory != nil {
		return *m.ConversationHistory
	}
	return 0
}

func (m *Limit) GetMaxRules() int32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Rule struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Strategy         *string         `protobuf:"bytes,5,opt,name=strategy" json:"strategy,omitempty"`
	AssignTos        []string        `protobuf:"bytes,6,rep,name=assign_tos,json=assignTos" json:"assign_tos,omitempty"`
	Conditions       []*Condition    `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty"`
	Enabled          *bool           `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,9,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	PrevId           *string         `protobuf:"bytes,10,opt,name=prev_id,json=prevId" json:"prev_id,omitempty"`
	NextId           *string         `protobuf:"bytes,11,opt,name=next_id,json=nextId" json:"next_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Rule) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Rule) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Rule) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Rule) GetStrategy() string {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return ""
}

func (m *Rule) GetAssignTos() []string {
	if m != nil {
		return m.AssignTos
	}
	return nil
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Rule) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Rule) GetPrevId() string {
	if m != nil && m.PrevId != nil {
		return *m.PrevId
	}
	return ""
}

func (m *Rule) GetNextId() string {
	if m != nil && m.NextId != nil {
		return *m.NextId
	}
	return ""
}

type Condition struct {
	Join             *string `protobuf:"bytes,1,opt,name=join" json:"join,omitempty"`
	Key              *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator         *string `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value            *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Condition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Route struct {
	Rules            []*Rule `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Route) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type RouteResult struct {
	RuleId           *string  `protobuf:"bytes,1,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	Strategy         *string  `protobuf:"bytes,3,opt,name=strategy" json:"strategy,omitempty"`
	AgentIds         []string `protobuf:"bytes,4,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RouteResult) Reset()                    { *m = RouteResult{} }
func (m *RouteResult) String() string            { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()               {}
func (*RouteResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RouteResult) GetRuleId() string {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return ""
}

func (m *RouteResult) GetStrategy() string {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return ""
}

func (m *RouteResult) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

type MemberSeen struct {
	MemberId         *string `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	MessageId        *string `protobuf:"bytes,3,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MemberSeen) Reset()                    { *m = MemberSeen{} }
func (m *MemberSeen) String() string            { return proto.CompactTextString(m) }
func (*MemberSeen) ProtoMessage()               {}
func (*MemberSeen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MemberSeen) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *MemberSeen) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

type Member struct {
	Type             *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	SubizId          *string `protobuf:"bytes,8,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	Id               *string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	AvatarUrl        *string `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Left             *bool   `protobuf:"varint,11,opt,name=left" json:"left,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Member) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Member) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *Member) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Member) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Member) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *Member) GetLeft() bool {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return false
}

type Conversation struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Creation time
	Created          *int64        `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Closed           *int64        `protobuf:"varint,6,opt,name=closed" json:"closed,omitempty"`
	Members          []*Member     `protobuf:"bytes,7,rep,name=members" json:"members,omitempty"`
	Tags             []*Tag        `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	State            *string       `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	Request          *StartRequest `protobuf:"bytes,14,opt,name=request" json:"request,omitempty"`
	Accepted         *int64        `protobuf:"varint,15,opt,name=accepted" json:"accepted,omitempty"`
	ChannelType      *string       `protobuf:"bytes,17,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	Integration      *Integration  `protobuf:"bytes,18,opt,name=integration" json:"integration,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Conversation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Conversation) GetClosed() int64 {
	if m != nil && m.Closed != nil {
		return *m.Closed
	}
	return 0
}

func (m *Conversation) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Conversation) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Conversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Conversation) GetRequest() *StartRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Conversation) GetAccepted() int64 {
	if m != nil && m.Accepted != nil {
		return *m.Accepted
	}
	return 0
}

func (m *Conversation) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

func (m *Conversation) GetIntegration() *Integration {
	if m != nil {
		return m.Integration
	}
	return nil
}

type UserConversation struct {
	State            *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	UserId           *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ConvoId          *string `protobuf:"bytes,4,opt,name=convo_id,json=convoId" json:"convo_id,omitempty"`
	LastSeenEvent    *string `protobuf:"bytes,5,opt,name=last_seen_event,json=lastSeenEvent" json:"last_seen_event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserConversation) Reset()                    { *m = UserConversation{} }
func (m *UserConversation) String() string            { return proto.CompactTextString(m) }
func (*UserConversation) ProtoMessage()               {}
func (*UserConversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UserConversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *UserConversation) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserConversation) GetConvoId() string {
	if m != nil && m.ConvoId != nil {
		return *m.ConvoId
	}
	return ""
}

func (m *UserConversation) GetLastSeenEvent() string {
	if m != nil && m.LastSeenEvent != nil {
		return *m.LastSeenEvent
	}
	return ""
}

type StartRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelType      *string         `protobuf:"bytes,4,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	From             *string         `protobuf:"bytes,12,opt,name=from" json:"from,omitempty"`
	To               []string        `protobuf:"bytes,5,rep,name=to" json:"to,omitempty"`
	PageUrl          *string         `protobuf:"bytes,6,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	PageTitle        *string         `protobuf:"bytes,7,opt,name=page_title,json=pageTitle" json:"page_title,omitempty"`
	Message          *string         `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	BrowserLanguage  *string         `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	Language         *string         `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	DeviceType       *string         `protobuf:"bytes,11,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	Created          *int64          `protobuf:"varint,13,opt,name=created" json:"created,omitempty"`
	ConversationId   *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Ip               *string         `protobuf:"bytes,15,opt,name=ip" json:"ip,omitempty"`
	Country          *string         `protobuf:"bytes,16,opt,name=country" json:"country,omitempty"`
	CountryCode      *string         `protobuf:"bytes,17,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	City             *string         `protobuf:"bytes,18,opt,name=city" json:"city,omitempty"`
	Timezone         *string         `protobuf:"bytes,19,opt,name=timezone" json:"timezone,omitempty"`
	StarterId        *string         `protobuf:"bytes,20,opt,name=starter_id,json=starterId" json:"starter_id,omitempty"`
	StarterType      *string         `protobuf:"bytes,21,opt,name=starter_type,json=starterType" json:"starter_type,omitempty"`
	AgentIds         []string        `protobuf:"bytes,22,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	User             *user.User      `protobuf:"bytes,25,opt,name=user" json:"user,omitempty"`
	IntegrationId    *string         `protobuf:"bytes,26,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *StartRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *StartRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *StartRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *StartRequest) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

func (m *StartRequest) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *StartRequest) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *StartRequest) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *StartRequest) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *StartRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *StartRequest) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *StartRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *StartRequest) GetDeviceType() string {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return ""
}

func (m *StartRequest) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *StartRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *StartRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *StartRequest) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *StartRequest) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *StartRequest) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *StartRequest) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *StartRequest) GetStarterId() string {
	if m != nil && m.StarterId != nil {
		return *m.StarterId
	}
	return ""
}

func (m *StartRequest) GetStarterType() string {
	if m != nil && m.StarterType != nil {
		return *m.StarterType
	}
	return ""
}

func (m *StartRequest) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *StartRequest) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *StartRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

type Conversations struct {
	Conversations    []*Conversation `protobuf:"bytes,1,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Conversations) Reset()                    { *m = Conversations{} }
func (m *Conversations) String() string            { return proto.CompactTextString(m) }
func (*Conversations) ProtoMessage()               {}
func (*Conversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Conversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type Search struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Keyword          *string         `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Limit            *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	BeforeId         *string         `protobuf:"bytes,6,opt,name=before_id,json=beforeId" json:"before_id,omitempty"`
	AfterId          *string         `protobuf:"bytes,7,opt,name=after_id,json=afterId" json:"after_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Search) Reset()                    { *m = Search{} }
func (m *Search) String() string            { return proto.CompactTextString(m) }
func (*Search) ProtoMessage()               {}
func (*Search) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Search) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Search) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Search) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *Search) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *Search) GetBeforeId() string {
	if m != nil && m.BeforeId != nil {
		return *m.BeforeId
	}
	return ""
}

func (m *Search) GetAfterId() string {
	if m != nil && m.AfterId != nil {
		return *m.AfterId
	}
	return ""
}

type ListConversations struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State            *string         `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Limit            *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	StartId          *string         `protobuf:"bytes,6,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	MemberId         *string         `protobuf:"bytes,8,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListConversations) Reset()                    { *m = ListConversations{} }
func (m *ListConversations) String() string            { return proto.CompactTextString(m) }
func (*ListConversations) ProtoMessage()               {}
func (*ListConversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ListConversations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListConversations) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListConversations) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *ListConversations) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListConversations) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListConversations) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

type ListEventsRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	StartId          *string         `protobuf:"bytes,4,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Limit            *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListEventsRequest) Reset()                    { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()               {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ListEventsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListEventsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListEventsRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *ListEventsRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListEventsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListConversationsByUserRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelId        *string `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	StartId          *string `protobuf:"bytes,4,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Limit            *int32  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListConversationsByUserRequest) Reset()                    { *m = ListConversationsByUserRequest{} }
func (m *ListConversationsByUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ListConversationsByUserRequest) ProtoMessage()               {}
func (*ListConversationsByUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ListConversationsByUserRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type RequestState struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	ChannelId        *string `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestState) Reset()                    { *m = RequestState{} }
func (m *RequestState) String() string            { return proto.CompactTextString(m) }
func (*RequestState) ProtoMessage()               {}
func (*RequestState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RequestState) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RequestState) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RequestState) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type Reaction struct {
	Name             *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Count            *int32   `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Users            []string `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Reaction) Reset()                    { *m = Reaction{} }
func (m *Reaction) String() string            { return proto.CompactTextString(m) }
func (*Reaction) ProtoMessage()               {}
func (*Reaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Reaction) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Reaction) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Reaction) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type Message struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id               *string         `protobuf:"bytes,11,opt,name=id" json:"id,omitempty"`
	Text             *string         `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Format           *string         `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	Attachments      []*Attachment   `protobuf:"bytes,4,rep,name=attachments" json:"attachments,omitempty"`
	Reactions        []*Reaction     `protobuf:"bytes,7,rep,name=reactions" json:"reactions,omitempty"`
	Fields           []*Field        `protobuf:"bytes,10,rep,name=fields" json:"fields,omitempty"`
	Computed         *Computed       `protobuf:"bytes,12,opt,name=computed" json:"computed,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Message) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Message) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Message) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Message) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Message) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Message) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *Message) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Message) GetReactions() []*Reaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

func (m *Message) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Message) GetComputed() *Computed {
	if m != nil {
		return m.Computed
	}
	return nil
}

type Computed struct {
	Seen             []*Seen     `protobuf:"bytes,4,rep,name=seen" json:"seen,omitempty"`
	Ack              []*Ack      `protobuf:"bytes,5,rep,name=ack" json:"ack,omitempty"`
	Received         []*Received `protobuf:"bytes,6,rep,name=received" json:"received,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Computed) Reset()                    { *m = Computed{} }
func (m *Computed) String() string            { return proto.CompactTextString(m) }
func (*Computed) ProtoMessage()               {}
func (*Computed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Computed) GetSeen() []*Seen {
	if m != nil {
		return m.Seen
	}
	return nil
}

func (m *Computed) GetAck() []*Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *Computed) GetReceived() []*Received {
	if m != nil {
		return m.Received
	}
	return nil
}

type Seen struct {
	MemberId         *string `protobuf:"bytes,6,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	At               *int64  `protobuf:"varint,4,opt,name=at" json:"at,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Seen) Reset()                    { *m = Seen{} }
func (m *Seen) String() string            { return proto.CompactTextString(m) }
func (*Seen) ProtoMessage()               {}
func (*Seen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Seen) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Seen) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Ack struct {
	MemberId         *string `protobuf:"bytes,5,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Error            *string `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	At               *int64  `protobuf:"varint,4,opt,name=at" json:"at,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ack) Reset()                    { *m = Ack{} }
func (m *Ack) String() string            { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()               {}
func (*Ack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Ack) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Ack) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Ack) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Received struct {
	MemberId         *string `protobuf:"bytes,4,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	At               *int64  `protobuf:"varint,5,opt,name=at" json:"at,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Received) Reset()                    { *m = Received{} }
func (m *Received) String() string            { return proto.CompactTextString(m) }
func (*Received) ProtoMessage()               {}
func (*Received) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Received) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Received) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Field struct {
	Value            *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Key              *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Field) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Field) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type Button struct {
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Id   *string `protobuf:"bytes,15,opt,name=id" json:"id,omitempty"`
	// post back
	Title     *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Payload   *string `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	ImageUrl  *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	ContentId *string `protobuf:"bytes,10,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	// 	optional RawEvent event = 12;
	Url              *string `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Button) Reset()                    { *m = Button{} }
func (m *Button) String() string            { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()               {}
func (*Button) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Button) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Button) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Button) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Button) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *Button) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *Button) GetContentId() string {
	if m != nil && m.ContentId != nil {
		return *m.ContentId
	}
	return ""
}

func (m *Button) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type GenericElementTemplate struct {
	Title            *string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ImageUrl         *string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Subtitle         *string   `protobuf:"bytes,4,opt,name=subtitle" json:"subtitle,omitempty"`
	DefaultAction    *Button   `protobuf:"bytes,5,opt,name=default_action,json=defaultAction" json:"default_action,omitempty"`
	Buttons          []*Button `protobuf:"bytes,6,rep,name=buttons" json:"buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GenericElementTemplate) Reset()                    { *m = GenericElementTemplate{} }
func (m *GenericElementTemplate) String() string            { return proto.CompactTextString(m) }
func (*GenericElementTemplate) ProtoMessage()               {}
func (*GenericElementTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GenericElementTemplate) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *GenericElementTemplate) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *GenericElementTemplate) GetSubtitle() string {
	if m != nil && m.Subtitle != nil {
		return *m.Subtitle
	}
	return ""
}

func (m *GenericElementTemplate) GetDefaultAction() *Button {
	if m != nil {
		return m.DefaultAction
	}
	return nil
}

func (m *GenericElementTemplate) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type Attachment struct {
	Type *string `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	// file
	Mimetype     *string `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Url          *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	ThumbnailUrl *string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl" json:"thumbnail_url,omitempty"`
	Name         *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Descrition   *string `protobuf:"bytes,6,opt,name=descrition" json:"descrition,omitempty"`
	// optional string data = 7; // for custom data
	Length *int32 `protobuf:"varint,15,opt,name=length" json:"length,omitempty"`
	Size   *int32 `protobuf:"varint,13,opt,name=size" json:"size,omitempty"`
	// generic
	Elements []*GenericElementTemplate `protobuf:"bytes,8,rep,name=elements" json:"elements,omitempty"`
	// preview
	Title            *string   `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Color            *string   `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	Pretext          *string   `protobuf:"bytes,11,opt,name=pretext" json:"pretext,omitempty"`
	Buttons          []*Button `protobuf:"bytes,16,rep,name=buttons" json:"buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Attachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Attachment) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *Attachment) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Attachment) GetThumbnailUrl() string {
	if m != nil && m.ThumbnailUrl != nil {
		return *m.ThumbnailUrl
	}
	return ""
}

func (m *Attachment) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Attachment) GetDescrition() string {
	if m != nil && m.Descrition != nil {
		return *m.Descrition
	}
	return ""
}

func (m *Attachment) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *Attachment) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Attachment) GetElements() []*GenericElementTemplate {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (m *Attachment) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Attachment) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *Attachment) GetPretext() string {
	if m != nil && m.Pretext != nil {
		return *m.Pretext
	}
	return ""
}

func (m *Attachment) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type Tag struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Title            *string         `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Created          *int64          `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Modified         *int64          `protobuf:"varint,6,opt,name=modified" json:"modified,omitempty"`
	CreatorId        *string         `protobuf:"bytes,7,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Color            *string         `protobuf:"bytes,8,opt,name=color" json:"color,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Tag) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Tag) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Tag) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Tag) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Tag) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Tag) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Tag) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Tag) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

type CannedResponse struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Text             *string         `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`
	Keys             []string        `protobuf:"bytes,6,rep,name=keys" json:"keys,omitempty"`
	Created          *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Modified         *int64          `protobuf:"varint,8,opt,name=modified" json:"modified,omitempty"`
	Creator          *string         `protobuf:"bytes,9,opt,name=creator" json:"creator,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CannedResponse) Reset()                    { *m = CannedResponse{} }
func (m *CannedResponse) String() string            { return proto.CompactTextString(m) }
func (*CannedResponse) ProtoMessage()               {}
func (*CannedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CannedResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CannedResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CannedResponse) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CannedResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CannedResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CannedResponse) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *CannedResponse) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *CannedResponse) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

type CannedResponses struct {
	Ctx              *common.Context   `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Responses        []*CannedResponse `protobuf:"bytes,3,rep,name=responses" json:"responses,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CannedResponses) Reset()                    { *m = CannedResponses{} }
func (m *CannedResponses) String() string            { return proto.CompactTextString(m) }
func (*CannedResponses) ProtoMessage()               {}
func (*CannedResponses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CannedResponses) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CannedResponses) GetResponses() []*CannedResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type Tags struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Tags             []*Tag          `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Tags) Reset()                    { *m = Tags{} }
func (m *Tags) String() string            { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()               {}
func (*Tags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Tags) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Tags) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Postback struct {
	Message          *Message `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Button           *Button  `protobuf:"bytes,3,opt,name=button" json:"button,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Postback) Reset()                    { *m = Postback{} }
func (m *Postback) String() string            { return proto.CompactTextString(m) }
func (*Postback) ProtoMessage()               {}
func (*Postback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *Postback) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Postback) GetButton() *Button {
	if m != nil {
		return m.Button
	}
	return nil
}

type AllType struct {
	L                *Limit                          `protobuf:"bytes,5,opt,name=l" json:"l,omitempty"`
	R                *Rule                           `protobuf:"bytes,6,opt,name=r" json:"r,omitempty"`
	Co               *Condition                      `protobuf:"bytes,7,opt,name=co" json:"co,omitempty"`
	Ro               *Route                          `protobuf:"bytes,8,opt,name=ro" json:"ro,omitempty"`
	Rr               *RouteResult                    `protobuf:"bytes,9,opt,name=rr" json:"rr,omitempty"`
	Ms               *MemberSeen                     `protobuf:"bytes,12,opt,name=ms" json:"ms,omitempty"`
	M                *Member                         `protobuf:"bytes,13,opt,name=m" json:"m,omitempty"`
	C                *Conversation                   `protobuf:"bytes,14,opt,name=c" json:"c,omitempty"`
	Sr               *StartRequest                   `protobuf:"bytes,16,opt,name=sr" json:"sr,omitempty"`
	Pb               *Postback                       `protobuf:"bytes,18,opt,name=pb" json:"pb,omitempty"`
	Tags             *Tags                           `protobuf:"bytes,20,opt,name=tags" json:"tags,omitempty"`
	Canr             *CannedResponse                 `protobuf:"bytes,22,opt,name=canr" json:"canr,omitempty"`
	Tag              *Tag                            `protobuf:"bytes,23,opt,name=tag" json:"tag,omitempty"`
	Att              *Attachment                     `protobuf:"bytes,25,opt,name=att" json:"att,omitempty"`
	Getem            *GenericElementTemplate         `protobuf:"bytes,26,opt,name=getem" json:"getem,omitempty"`
	Button           *Button                         `protobuf:"bytes,27,opt,name=button" json:"button,omitempty"`
	Messa            *Message                        `protobuf:"bytes,28,opt,name=messa" json:"messa,omitempty"`
	Com              *Computed                       `protobuf:"bytes,29,opt,name=com" json:"com,omitempty"`
	Rea              *Reaction                       `protobuf:"bytes,31,opt,name=rea" json:"rea,omitempty"`
	Fiel             *Field                          `protobuf:"bytes,35,opt,name=fiel" json:"fiel,omitempty"`
	Reci             *Received                       `protobuf:"bytes,36,opt,name=reci" json:"reci,omitempty"`
	Ack              *Ack                            `protobuf:"bytes,37,opt,name=ack" json:"ack,omitempty"`
	Seen             *Seen                           `protobuf:"bytes,38,opt,name=seen" json:"seen,omitempty"`
	Lcbur            *ListConversationsByUserRequest `protobuf:"bytes,39,opt,name=lcbur" json:"lcbur,omitempty"`
	Ler              *ListEventsRequest              `protobuf:"bytes,41,opt,name=ler" json:"ler,omitempty"`
	Search           *Search                         `protobuf:"bytes,42,opt,name=search" json:"search,omitempty"`
	Listcon          *ListConversations              `protobuf:"bytes,43,opt,name=listcon" json:"listcon,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *AllType) Reset()                    { *m = AllType{} }
func (m *AllType) String() string            { return proto.CompactTextString(m) }
func (*AllType) ProtoMessage()               {}
func (*AllType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AllType) GetL() *Limit {
	if m != nil {
		return m.L
	}
	return nil
}

func (m *AllType) GetR() *Rule {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *AllType) GetCo() *Condition {
	if m != nil {
		return m.Co
	}
	return nil
}

func (m *AllType) GetRo() *Route {
	if m != nil {
		return m.Ro
	}
	return nil
}

func (m *AllType) GetRr() *RouteResult {
	if m != nil {
		return m.Rr
	}
	return nil
}

func (m *AllType) GetMs() *MemberSeen {
	if m != nil {
		return m.Ms
	}
	return nil
}

func (m *AllType) GetM() *Member {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *AllType) GetC() *Conversation {
	if m != nil {
		return m.C
	}
	return nil
}

func (m *AllType) GetSr() *StartRequest {
	if m != nil {
		return m.Sr
	}
	return nil
}

func (m *AllType) GetPb() *Postback {
	if m != nil {
		return m.Pb
	}
	return nil
}

func (m *AllType) GetTags() *Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AllType) GetCanr() *CannedResponse {
	if m != nil {
		return m.Canr
	}
	return nil
}

func (m *AllType) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *AllType) GetAtt() *Attachment {
	if m != nil {
		return m.Att
	}
	return nil
}

func (m *AllType) GetGetem() *GenericElementTemplate {
	if m != nil {
		return m.Getem
	}
	return nil
}

func (m *AllType) GetButton() *Button {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AllType) GetMessa() *Message {
	if m != nil {
		return m.Messa
	}
	return nil
}

func (m *AllType) GetCom() *Computed {
	if m != nil {
		return m.Com
	}
	return nil
}

func (m *AllType) GetRea() *Reaction {
	if m != nil {
		return m.Rea
	}
	return nil
}

func (m *AllType) GetFiel() *Field {
	if m != nil {
		return m.Fiel
	}
	return nil
}

func (m *AllType) GetReci() *Received {
	if m != nil {
		return m.Reci
	}
	return nil
}

func (m *AllType) GetAck() *Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *AllType) GetSeen() *Seen {
	if m != nil {
		return m.Seen
	}
	return nil
}

func (m *AllType) GetLcbur() *ListConversationsByUserRequest {
	if m != nil {
		return m.Lcbur
	}
	return nil
}

func (m *AllType) GetLer() *ListEventsRequest {
	if m != nil {
		return m.Ler
	}
	return nil
}

func (m *AllType) GetSearch() *Search {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *AllType) GetListcon() *ListConversations {
	if m != nil {
		return m.Listcon
	}
	return nil
}

type UseConnector struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConnectorId      *string `protobuf:"bytes,3,opt,name=connector_id,json=connectorId" json:"connector_id,omitempty"`
	State            *string `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	Updated          *string `protobuf:"bytes,9,opt,name=updated" json:"updated,omitempty"`
	By               *string `protobuf:"bytes,10,opt,name=by" json:"by,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UseConnector) Reset()                    { *m = UseConnector{} }
func (m *UseConnector) String() string            { return proto.CompactTextString(m) }
func (*UseConnector) ProtoMessage()               {}
func (*UseConnector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *UseConnector) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UseConnector) GetConnectorId() string {
	if m != nil && m.ConnectorId != nil {
		return *m.ConnectorId
	}
	return ""
}

func (m *UseConnector) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *UseConnector) GetUpdated() string {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return ""
}

func (m *UseConnector) GetBy() string {
	if m != nil && m.By != nil {
		return *m.By
	}
	return ""
}

type Integrations struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Integrations     []*Integration  `protobuf:"bytes,3,rep,name=integrations" json:"integrations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Integrations) Reset()                    { *m = Integrations{} }
func (m *Integrations) String() string            { return proto.CompactTextString(m) }
func (*Integrations) ProtoMessage()               {}
func (*Integrations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *Integrations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Integrations) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Integrations) GetIntegrations() []*Integration {
	if m != nil {
		return m.Integrations
	}
	return nil
}

type Integration struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConnectorId      *string         `protobuf:"bytes,3,opt,name=connector_id,json=connectorId" json:"connector_id,omitempty"`
	LogoUrl          *string         `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Name             *string         `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Integrated       *int64          `protobuf:"varint,6,opt,name=integrated" json:"integrated,omitempty"`
	Updated          *int64          `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	By               *string         `protobuf:"bytes,11,opt,name=by" json:"by,omitempty"`
	State            *string         `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	Id               *string         `protobuf:"bytes,10,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Integration) Reset()                    { *m = Integration{} }
func (m *Integration) String() string            { return proto.CompactTextString(m) }
func (*Integration) ProtoMessage()               {}
func (*Integration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Integration) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Integration) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Integration) GetConnectorId() string {
	if m != nil && m.ConnectorId != nil {
		return *m.ConnectorId
	}
	return ""
}

func (m *Integration) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Integration) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Integration) GetIntegrated() int64 {
	if m != nil && m.Integrated != nil {
		return *m.Integrated
	}
	return 0
}

func (m *Integration) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Integration) GetBy() string {
	if m != nil && m.By != nil {
		return *m.By
	}
	return ""
}

func (m *Integration) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Integration) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Limit)(nil), "conversation.Limit")
	proto.RegisterType((*Rule)(nil), "conversation.Rule")
	proto.RegisterType((*Condition)(nil), "conversation.Condition")
	proto.RegisterType((*Route)(nil), "conversation.Route")
	proto.RegisterType((*RouteResult)(nil), "conversation.RouteResult")
	proto.RegisterType((*MemberSeen)(nil), "conversation.MemberSeen")
	proto.RegisterType((*Member)(nil), "conversation.Member")
	proto.RegisterType((*Conversation)(nil), "conversation.Conversation")
	proto.RegisterType((*UserConversation)(nil), "conversation.UserConversation")
	proto.RegisterType((*StartRequest)(nil), "conversation.StartRequest")
	proto.RegisterType((*Conversations)(nil), "conversation.Conversations")
	proto.RegisterType((*Search)(nil), "conversation.Search")
	proto.RegisterType((*ListConversations)(nil), "conversation.ListConversations")
	proto.RegisterType((*ListEventsRequest)(nil), "conversation.ListEventsRequest")
	proto.RegisterType((*ListConversationsByUserRequest)(nil), "conversation.ListConversationsByUserRequest")
	proto.RegisterType((*RequestState)(nil), "conversation.RequestState")
	proto.RegisterType((*Reaction)(nil), "conversation.Reaction")
	proto.RegisterType((*Message)(nil), "conversation.Message")
	proto.RegisterType((*Computed)(nil), "conversation.Computed")
	proto.RegisterType((*Seen)(nil), "conversation.Seen")
	proto.RegisterType((*Ack)(nil), "conversation.Ack")
	proto.RegisterType((*Received)(nil), "conversation.Received")
	proto.RegisterType((*Field)(nil), "conversation.Field")
	proto.RegisterType((*Button)(nil), "conversation.Button")
	proto.RegisterType((*GenericElementTemplate)(nil), "conversation.GenericElementTemplate")
	proto.RegisterType((*Attachment)(nil), "conversation.Attachment")
	proto.RegisterType((*Tag)(nil), "conversation.Tag")
	proto.RegisterType((*CannedResponse)(nil), "conversation.CannedResponse")
	proto.RegisterType((*CannedResponses)(nil), "conversation.CannedResponses")
	proto.RegisterType((*Tags)(nil), "conversation.Tags")
	proto.RegisterType((*Postback)(nil), "conversation.Postback")
	proto.RegisterType((*AllType)(nil), "conversation.AllType")
	proto.RegisterType((*UseConnector)(nil), "conversation.UseConnector")
	proto.RegisterType((*Integrations)(nil), "conversation.Integrations")
	proto.RegisterType((*Integration)(nil), "conversation.Integration")
	proto.RegisterEnum("conversation.Event", Event_name, Event_value)
	proto.RegisterEnum("conversation.Rule_AssignStrategy", Rule_AssignStrategy_name, Rule_AssignStrategy_value)
	proto.RegisterEnum("conversation.Condition_JoinOperator", Condition_JoinOperator_name, Condition_JoinOperator_value)
	proto.RegisterEnum("conversation.Conversation_State", Conversation_State_name, Conversation_State_value)
	proto.RegisterEnum("conversation.Button_ButtonType", Button_ButtonType_name, Button_ButtonType_value)
	proto.RegisterEnum("conversation.Attachment_AttachmentType", Attachment_AttachmentType_name, Attachment_AttachmentType_value)
	proto.RegisterEnum("conversation.UseConnector_State", UseConnector_State_name, UseConnector_State_value)
	proto.RegisterEnum("conversation.Integration_State", Integration_State_name, Integration_State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Converstation service

type ConverstationClient interface {
	Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error)
}

type converstationClient struct {
	cc *grpc.ClientConn
}

func NewConverstationClient(cc *grpc.ClientConn) ConverstationClient {
	return &converstationClient{cc}
}

func (c *converstationClient) Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error) {
	out := new(AllType)
	err := grpc.Invoke(ctx, "/conversation.Converstation/Do", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Converstation service

type ConverstationServer interface {
	Do(context.Context, *AllType) (*AllType, error)
}

func RegisterConverstationServer(s *grpc.Server, srv ConverstationServer) {
	s.RegisterService(&_Converstation_serviceDesc, srv)
}

func _Converstation_Do_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConverstationServer).Do(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.Converstation/Do",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConverstationServer).Do(ctx, req.(*AllType))
	}
	return interceptor(ctx, in, info, handler)
}

var _Converstation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.Converstation",
	HandlerType: (*ConverstationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Do",
			Handler:    _Converstation_Do_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

func init() { proto.RegisterFile("conversation/conversation.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3098 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x39, 0x4b, 0x6f, 0xdc, 0x46,
	0x9a, 0x26, 0xd9, 0xec, 0xc7, 0xd7, 0x2d, 0x89, 0x2e, 0xcb, 0x32, 0x2d, 0xbf, 0x64, 0x3a, 0xb1,
	0x65, 0x27, 0x90, 0x37, 0x8e, 0x81, 0x60, 0x93, 0x0d, 0x10, 0x59, 0xf6, 0x6e, 0x94, 0x75, 0xb0,
	0x09, 0x2d, 0x6f, 0xf6, 0x05, 0x34, 0xd8, 0x64, 0xa9, 0xcd, 0x15, 0x9b, 0xd5, 0x5b, 0xac, 0x56,
	0xac, 0x5c, 0xf6, 0xb0, 0x7b, 0x5b, 0x60, 0xe7, 0x3c, 0xff, 0x60, 0x80, 0x39, 0x0c, 0x30, 0x87,
	0x79, 0x00, 0xf3, 0x07, 0xe6, 0x3e, 0x87, 0x60, 0xfe, 0xc4, 0x5c, 0xe7, 0x38, 0xa8, 0xaf, 0x8a,
	0xec, 0x22, 0xbb, 0x25, 0x2b, 0x98, 0xf8, 0x22, 0xf1, 0x7b, 0x54, 0xd5, 0xf7, 0xae, 0xaf, 0xbe,
	0x86, 0x5b, 0x31, 0xcb, 0x8f, 0x29, 0x2f, 0x22, 0x91, 0xb2, 0xfc, 0xa1, 0x09, 0xec, 0x4c, 0x39,
	0x13, 0x8c, 0x0c, 0x4c, 0xdc, 0xe6, 0xce, 0x28, 0x15, 0xa3, 0x59, 0x7c, 0x44, 0xc5, 0x0e, 0xe3,
	0xe3, 0x87, 0xc5, 0x6c, 0x94, 0x7e, 0xf7, 0xf0, 0x15, 0x8d, 0x12, 0xca, 0x1f, 0xc6, 0x6c, 0x32,
	0xc1, 0x3d, 0xe4, 0x3f, 0xb5, 0x7a, 0xf3, 0xc1, 0x19, 0xfc, 0xb3, 0x42, 0xff, 0x51, 0xbc, 0xc1,
	0x4f, 0x2d, 0x70, 0x9f, 0xa7, 0x93, 0x54, 0x90, 0xdb, 0xe0, 0xc4, 0xe2, 0xb5, 0x6f, 0x6d, 0x59,
	0xdb, 0xfd, 0x47, 0x6b, 0x3b, 0x7a, 0xc7, 0x3d, 0x96, 0x0b, 0xfa, 0x5a, 0x84, 0x92, 0x46, 0x6e,
	0x00, 0x44, 0x71, 0xcc, 0x66, 0xb9, 0x18, 0xa6, 0x89, 0xef, 0x6c, 0x59, 0xdb, 0xbd, 0xb0, 0xa7,
	0x31, 0xfb, 0x09, 0xf9, 0x00, 0xd6, 0x4d, 0xb9, 0x87, 0xaf, 0xd2, 0x42, 0x30, 0x7e, 0xe2, 0xdb,
	0x5b, 0xd6, 0xb6, 0x1b, 0x5e, 0x32, 0x69, 0x9f, 0x2b, 0x12, 0xb9, 0x06, 0xbd, 0x49, 0xf4, 0x7a,
	0xc8, 0x67, 0x19, 0x2d, 0xfc, 0x0e, 0xf2, 0x75, 0x27, 0xd1, 0xeb, 0x50, 0xc2, 0xc1, 0xef, 0x1c,
	0x68, 0xc9, 0xaf, 0xf3, 0x88, 0xb6, 0x0a, 0x76, 0x9a, 0xe0, 0x49, 0xbd, 0xd0, 0x4e, 0x93, 0x37,
	0x89, 0xba, 0x09, 0xdd, 0x42, 0xf0, 0x48, 0xd0, 0xf1, 0x89, 0xef, 0x22, 0xb1, 0x82, 0x71, 0x69,
	0x51, 0xa4, 0xe3, 0x7c, 0x28, 0x58, 0xe1, 0xb7, 0xb7, 0x1c, 0x5c, 0x8a, 0x98, 0x03, 0x56, 0x90,
	0x8f, 0x00, 0x62, 0x96, 0x27, 0xa9, 0x54, 0x43, 0xca, 0xec, 0x6c, 0xf7, 0x1f, 0x5d, 0xd9, 0xa9,
	0x39, 0x71, 0xaf, 0xa4, 0x87, 0x06, 0x2b, 0xf1, 0xa1, 0x43, 0xf3, 0x68, 0x94, 0xd1, 0xc4, 0xef,
	0x6e, 0x59, 0xdb, 0xdd, 0xb0, 0x04, 0xc9, 0x6d, 0x18, 0xc4, 0x9c, 0x46, 0x82, 0x26, 0x43, 0x91,
	0x4e, 0xa8, 0xdf, 0xdb, 0xb2, 0xb6, 0x9d, 0xb0, 0xaf, 0x71, 0x07, 0xe9, 0x84, 0x92, 0x2b, 0xd0,
	0x99, 0x72, 0x7a, 0x2c, 0x95, 0x01, 0x94, 0xb7, 0x2d, 0xc1, 0xfd, 0x44, 0x12, 0x72, 0xfa, 0x1a,
	0xb5, 0xec, 0x2b, 0x82, 0x04, 0xf7, 0x93, 0xe0, 0xbf, 0x61, 0x75, 0x17, 0x85, 0x7e, 0x51, 0x2a,
	0xb6, 0x0a, 0x10, 0x65, 0xd9, 0x30, 0x1a, 0xd3, 0x5c, 0x14, 0xde, 0x05, 0x84, 0xe5, 0xf7, 0x98,
	0xb3, 0xd9, 0xd4, 0xb3, 0x09, 0x40, 0x5b, 0xd3, 0x1c, 0xb2, 0x06, 0xfd, 0x09, 0x2b, 0xc4, 0x90,
	0xd3, 0x98, 0xe6, 0xc2, 0x6b, 0x91, 0xab, 0x70, 0x99, 0xb3, 0x59, 0x9e, 0x70, 0x36, 0x4a, 0xf3,
	0xa1, 0xb1, 0x8f, 0x4b, 0x2e, 0xc3, 0x45, 0x93, 0xa4, 0xd0, 0xed, 0xe0, 0xff, 0x2d, 0xe8, 0x55,
	0x96, 0x20, 0x04, 0x5a, 0xff, 0xc9, 0xd2, 0x1c, 0x9d, 0xd8, 0x0b, 0xf1, 0x9b, 0x78, 0xe0, 0x1c,
	0xd1, 0x13, 0xed, 0x35, 0xf9, 0x29, 0xfd, 0xc2, 0xa6, 0x94, 0x47, 0x82, 0x71, 0xed, 0xb4, 0x0a,
	0x26, 0xeb, 0xe0, 0x1e, 0x47, 0xd9, 0x8c, 0xfa, 0x2d, 0x24, 0x28, 0x20, 0xb8, 0x0f, 0x83, 0x2f,
	0x58, 0x9a, 0xff, 0x53, 0xc9, 0xd5, 0x85, 0x56, 0xce, 0x72, 0xea, 0x5d, 0x20, 0x1d, 0x70, 0xa2,
	0x3c, 0xf1, 0x2c, 0xd2, 0x06, 0x9b, 0x71, 0xcf, 0x0e, 0x3e, 0x00, 0x37, 0x64, 0x33, 0x41, 0xc9,
	0x36, 0xb8, 0x2a, 0xe2, 0x2c, 0xf4, 0x1e, 0xa9, 0x7b, 0x4f, 0x86, 0x5c, 0xa8, 0x18, 0x82, 0x21,
	0xf4, 0x71, 0x49, 0x48, 0x8b, 0x59, 0x26, 0xa4, 0xb1, 0x25, 0x5e, 0x1a, 0x5b, 0xe9, 0xd1, 0x96,
	0x60, 0x23, 0x9e, 0x9c, 0x46, 0x3c, 0x5d, 0x83, 0x1e, 0xda, 0x64, 0x98, 0x26, 0x85, 0xdf, 0xc2,
	0x70, 0xea, 0x22, 0x62, 0x3f, 0x29, 0x82, 0xcf, 0x01, 0xbe, 0xa4, 0x93, 0x11, 0xe5, 0x2f, 0x28,
	0xcd, 0x31, 0x1d, 0x10, 0x1a, 0x56, 0xc1, 0xdc, 0x55, 0x88, 0x7d, 0x0c, 0xe9, 0x09, 0x2d, 0x8a,
	0x68, 0x4c, 0x8d, 0x90, 0xd6, 0x98, 0xfd, 0x44, 0x9a, 0xbb, 0xad, 0xb6, 0x92, 0xb6, 0x16, 0x27,
	0x53, 0xaa, 0x79, 0xf0, 0x9b, 0x5c, 0x85, 0x2e, 0x16, 0x02, 0xb9, 0xb6, 0x8b, 0xf8, 0x0e, 0xc2,
	0xfb, 0x89, 0xce, 0x9d, 0x56, 0x95, 0x3b, 0x04, 0x5a, 0x79, 0x34, 0xa1, 0x3a, 0xd0, 0xf0, 0x1b,
	0x93, 0xe2, 0x38, 0x12, 0x11, 0x1f, 0xce, 0x78, 0xe6, 0xb7, 0x75, 0x3e, 0x21, 0xe6, 0x25, 0xcf,
	0xe4, 0x92, 0x8c, 0x1e, 0x0a, 0x0c, 0xc1, 0x6e, 0x88, 0xdf, 0xc1, 0x9f, 0x1d, 0x18, 0xec, 0x19,
	0x86, 0x7d, 0x0b, 0x69, 0xec, 0x43, 0x47, 0x27, 0x09, 0x8a, 0xef, 0x84, 0x25, 0x48, 0x36, 0xa0,
	0x1d, 0x67, 0xac, 0xa0, 0x09, 0xca, 0xea, 0x84, 0x1a, 0x22, 0x3b, 0xd0, 0x51, 0x06, 0x2d, 0x53,
	0x77, 0xbd, 0xee, 0x7c, 0x65, 0xc1, 0xb0, 0x64, 0x22, 0xef, 0x42, 0x4b, 0x44, 0xe3, 0xc2, 0x07,
	0x64, 0xbe, 0x58, 0x67, 0x3e, 0x88, 0xc6, 0x21, 0x92, 0x65, 0x6c, 0x16, 0x22, 0x12, 0x54, 0xe7,
	0xa0, 0x02, 0xc8, 0x63, 0xe8, 0x70, 0xfa, 0x5f, 0x33, 0x5a, 0x08, 0x7f, 0x15, 0x95, 0xde, 0xac,
	0xaf, 0x7f, 0x21, 0x22, 0x2e, 0x42, 0xc5, 0x11, 0x96, 0xac, 0x32, 0x96, 0xa2, 0x38, 0xa6, 0x53,
	0xa9, 0xd5, 0x1a, 0x0a, 0x5f, 0xc1, 0x58, 0x29, 0x5e, 0x45, 0x79, 0x4e, 0xb3, 0x21, 0x7a, 0xf8,
	0x22, 0x1e, 0xd7, 0xd7, 0xb8, 0x03, 0xe9, 0xe8, 0x4f, 0xa0, 0x9f, 0xe6, 0x82, 0x8e, 0x39, 0x9e,
	0xe1, 0x13, 0x3c, 0xf8, 0x6a, 0xfd, 0xe0, 0xfd, 0x39, 0x43, 0x68, 0x72, 0x07, 0xcf, 0xc0, 0x7d,
	0x81, 0xa2, 0x5f, 0x86, 0x8b, 0xb5, 0x5a, 0xae, 0x73, 0x6a, 0x15, 0x60, 0x96, 0xab, 0x5a, 0x48,
	0x13, 0x5d, 0x32, 0x62, 0x91, 0x1e, 0x53, 0xaf, 0x4d, 0x7a, 0xe0, 0xd2, 0x3c, 0xa1, 0x89, 0xd7,
	0x0d, 0xfe, 0xd7, 0x02, 0xef, 0x65, 0x41, 0x79, 0xcd, 0xfd, 0xcb, 0x6d, 0x74, 0x05, 0x3a, 0xf2,
	0x3a, 0x9a, 0x07, 0x7c, 0x5b, 0x82, 0xfb, 0x89, 0x0c, 0x58, 0x29, 0x01, 0x1b, 0x56, 0xb1, 0xd9,
	0x41, 0x78, 0x3f, 0x21, 0x77, 0x61, 0x2d, 0x8b, 0x0a, 0x31, 0x2c, 0x28, 0xcd, 0x87, 0xf4, 0x98,
	0xe6, 0x42, 0x17, 0xf1, 0x15, 0x89, 0x96, 0x99, 0xf4, 0x4c, 0x22, 0x83, 0xdf, 0xbb, 0x30, 0x30,
	0x6d, 0xfc, 0x16, 0x22, 0xb0, 0xe9, 0x90, 0xd6, 0xa2, 0x43, 0x08, 0xb4, 0x0e, 0x39, 0x9b, 0xf8,
	0x03, 0x95, 0x4e, 0xf2, 0x5b, 0x9e, 0x22, 0x98, 0xef, 0x62, 0x31, 0xb0, 0x05, 0x93, 0xca, 0x4e,
	0x65, 0x62, 0xcf, 0x93, 0xab, 0x23, 0x61, 0x99, 0x5a, 0x37, 0x00, 0x90, 0x24, 0x52, 0x91, 0x51,
	0xbc, 0x23, 0x7b, 0x61, 0x4f, 0x62, 0x0e, 0x24, 0x42, 0xa6, 0x80, 0xae, 0x01, 0x65, 0x5a, 0x6b,
	0x90, 0xdc, 0x07, 0x6f, 0xc4, 0xd9, 0xb7, 0xd2, 0xb8, 0x59, 0x94, 0x8f, 0x67, 0x92, 0xa5, 0x87,
	0x2c, 0x6b, 0x1a, 0xff, 0x5c, 0xa3, 0x65, 0xc8, 0x55, 0x2c, 0x2a, 0xeb, 0x2b, 0x98, 0xdc, 0x82,
	0x7e, 0x42, 0x8f, 0xd3, 0x98, 0x2a, 0x05, 0x95, 0xf3, 0x40, 0xa1, 0x50, 0x3f, 0x23, 0x09, 0x57,
	0xea, 0x49, 0x78, 0x0f, 0xd6, 0x6a, 0x41, 0x94, 0x26, 0x98, 0x07, 0xbd, 0x70, 0xd5, 0x44, 0xeb,
	0x0a, 0x34, 0xc5, 0x60, 0x97, 0x46, 0x9f, 0xe2, 0x96, 0xd2, 0xc0, 0xfc, 0xc4, 0xf7, 0x4a, 0xd7,
	0x23, 0x88, 0xf6, 0x56, 0x9f, 0xc3, 0x98, 0x25, 0xf3, 0x04, 0x50, 0xb8, 0x3d, 0x96, 0xa0, 0xbd,
	0xe3, 0x54, 0x9c, 0x60, 0xe4, 0xf7, 0x42, 0xfc, 0x96, 0x0a, 0xca, 0x9b, 0xf5, 0x3b, 0x96, 0x53,
	0xff, 0x92, 0x52, 0xb0, 0x84, 0xa5, 0x81, 0x0b, 0x19, 0x24, 0x2a, 0x08, 0xd7, 0x95, 0x81, 0x35,
	0x46, 0x79, 0xb8, 0x24, 0xa3, 0x01, 0x2e, 0xab, 0x13, 0x35, 0x0e, 0x2d, 0x50, 0xab, 0xf0, 0x1b,
	0xf5, 0x0a, 0x4f, 0x6e, 0x42, 0x4b, 0x46, 0xb4, 0x7f, 0x15, 0x83, 0x0e, 0x76, 0xb0, 0xf9, 0x92,
	0xc9, 0x11, 0x22, 0x9e, 0xbc, 0x0b, 0xab, 0x46, 0x06, 0x4a, 0x11, 0x36, 0x55, 0x2c, 0x1b, 0xd8,
	0xfd, 0x24, 0xf8, 0x1a, 0x56, 0xcc, 0x6c, 0x2a, 0xc8, 0x67, 0xb0, 0x62, 0x5a, 0xb1, 0xbc, 0xcc,
	0x36, 0x17, 0x5a, 0x91, 0x0a, 0x08, 0xeb, 0x0b, 0x82, 0x5f, 0x5a, 0xd0, 0x7e, 0x41, 0x23, 0x1e,
	0xbf, 0xfa, 0x11, 0x9a, 0x3f, 0x1f, 0x3a, 0x47, 0xf4, 0xe4, 0x5b, 0xc6, 0xab, 0x6c, 0xd5, 0xa0,
	0xcc, 0xfb, 0x4c, 0x76, 0x98, 0x98, 0xa3, 0x6e, 0xa8, 0x00, 0x69, 0xb3, 0x11, 0x3d, 0x64, 0x1c,
	0x2f, 0x33, 0x15, 0xf2, 0x5d, 0x85, 0x50, 0xb9, 0x1f, 0x1d, 0x6a, 0x87, 0xa8, 0x88, 0xef, 0x20,
	0xbc, 0x9f, 0x04, 0xbf, 0xb5, 0xe0, 0xe2, 0xf3, 0xb4, 0x10, 0x75, 0x63, 0xfc, 0xf5, 0xf2, 0x57,
	0xd5, 0xa9, 0x65, 0x56, 0xa7, 0xe5, 0xb2, 0xcb, 0xbb, 0x54, 0xba, 0x7f, 0x2e, 0x7a, 0x07, 0xe1,
	0xfd, 0xa4, 0x7e, 0x83, 0x77, 0xeb, 0x37, 0x78, 0xf0, 0x0b, 0x2d, 0x3b, 0x56, 0xa7, 0xe2, 0x07,
	0x14, 0xa5, 0xba, 0xec, 0x76, 0x53, 0xf6, 0x25, 0x79, 0xe6, 0x2c, 0xcd, 0x33, 0x53, 0xf0, 0x56,
	0x5d, 0xf0, 0x4a, 0xd3, 0xb6, 0xa1, 0x69, 0xf0, 0x33, 0x0b, 0x6e, 0x2e, 0x58, 0xfb, 0xc9, 0x09,
	0x86, 0xaf, 0x16, 0xbf, 0x2e, 0x9b, 0xd5, 0x94, 0xed, 0x06, 0x40, 0x59, 0x20, 0xe7, 0xa2, 0x6b,
	0x8c, 0x6a, 0x5f, 0xcb, 0xf2, 0xef, 0x34, 0xcb, 0xff, 0x1b, 0x45, 0x35, 0x9d, 0x12, 0xcc, 0x60,
	0xa0, 0x45, 0x52, 0x37, 0xd8, 0x1b, 0xe4, 0x5a, 0x62, 0x33, 0x7b, 0xa9, 0xcd, 0xea, 0x0a, 0x38,
	0x0d, 0x05, 0x82, 0x2f, 0xa0, 0x1b, 0x52, 0x79, 0x07, 0xaa, 0x1e, 0x17, 0x1b, 0x27, 0xc7, 0x68,
	0x9c, 0xd6, 0xc1, 0xc5, 0x23, 0x51, 0x09, 0x37, 0x54, 0x80, 0xc4, 0x4a, 0x3d, 0x0b, 0x7d, 0x05,
	0x28, 0x20, 0xf8, 0x1f, 0x07, 0x3a, 0x5f, 0xea, 0xea, 0xfd, 0x83, 0xa3, 0xc2, 0x3d, 0x87, 0x86,
	0xa7, 0x57, 0xdf, 0xf2, 0xf5, 0xa0, 0xfb, 0x3f, 0x79, 0x88, 0xb6, 0x07, 0x7e, 0xcb, 0x7e, 0xea,
	0x90, 0xf1, 0x49, 0x24, 0x4a, 0x37, 0x29, 0x88, 0x7c, 0x0c, 0xfd, 0x48, 0x88, 0x28, 0x7e, 0x35,
	0x91, 0x21, 0x8d, 0xed, 0x6d, 0xff, 0x91, 0x5f, 0xaf, 0x41, 0xbb, 0x15, 0x43, 0x68, 0x32, 0x93,
	0xc7, 0xd0, 0xe3, 0xda, 0x74, 0x65, 0x37, 0xb6, 0xd1, 0x68, 0xc5, 0x35, 0x39, 0x9c, 0x33, 0x92,
	0xf7, 0xa0, 0x7d, 0x98, 0xd2, 0x2c, 0x29, 0x7b, 0xb2, 0x4b, 0xf5, 0x25, 0x7f, 0x2f, 0x69, 0xa1,
	0x66, 0x21, 0x8f, 0x64, 0x13, 0x31, 0x99, 0xce, 0xe4, 0xe5, 0x34, 0x40, 0x53, 0x6e, 0x34, 0xeb,
	0xa3, 0xa2, 0x86, 0x15, 0x5f, 0xf0, 0x7f, 0x16, 0x74, 0x4b, 0x34, 0xb9, 0x0b, 0x2d, 0xd9, 0x65,
	0x68, 0xc5, 0x1a, 0x2f, 0x05, 0xd9, 0x69, 0x84, 0x48, 0x27, 0x77, 0xc0, 0x89, 0xe2, 0x23, 0x74,
	0xe7, 0x42, 0x9b, 0xb8, 0x1b, 0x1f, 0x85, 0x92, 0x2a, 0xa5, 0x91, 0xef, 0xa9, 0xf4, 0x18, 0xdb,
	0xd2, 0xa5, 0xfa, 0x2a, 0x6a, 0x58, 0xf1, 0x05, 0x1f, 0x42, 0x6b, 0xf1, 0x69, 0xd0, 0x6e, 0x3c,
	0x0d, 0x56, 0xc1, 0x8e, 0x84, 0x6e, 0x81, 0xed, 0x48, 0x04, 0x9f, 0x83, 0xb3, 0x1b, 0x1f, 0xd5,
	0xd7, 0xb8, 0x8d, 0x35, 0xeb, 0xe0, 0x52, 0xce, 0x19, 0xd7, 0x9b, 0x29, 0x60, 0x61, 0xa7, 0x8f,
	0x64, 0x78, 0x2b, 0x51, 0xea, 0xdb, 0xb5, 0x96, 0x8a, 0xe0, 0x56, 0x0b, 0x1f, 0x82, 0x8b, 0xae,
	0x98, 0x3f, 0xdb, 0x1c, 0xe3, 0xd9, 0xb6, 0xf8, 0xf4, 0x0b, 0xfe, 0x64, 0x41, 0xfb, 0xc9, 0x4c,
	0x08, 0x95, 0x47, 0x78, 0xd5, 0xda, 0xc6, 0xfb, 0x45, 0x05, 0xe9, 0x5a, 0x15, 0xa4, 0xeb, 0xe0,
	0xaa, 0x8e, 0x48, 0x6f, 0x2b, 0xca, 0x6e, 0x68, 0x1a, 0x9d, 0x64, 0x2c, 0xaa, 0x8a, 0x86, 0x06,
	0xa5, 0xf0, 0xe9, 0xa4, 0x6c, 0xb1, 0xb4, 0x2d, 0x10, 0xa1, 0x7b, 0xac, 0x58, 0x66, 0x96, 0xca,
	0x24, 0xd0, 0x39, 0xae, 0x30, 0xfb, 0x89, 0x14, 0x56, 0xae, 0x52, 0xd9, 0x23, 0x3f, 0x83, 0x3d,
	0x00, 0x25, 0xeb, 0x81, 0x92, 0x0d, 0x66, 0x3c, 0x1b, 0x8e, 0x10, 0xe3, 0xd9, 0xe4, 0x12, 0xac,
	0x4d, 0x59, 0x21, 0x46, 0x51, 0x7c, 0x54, 0x22, 0x1d, 0xe2, 0xc1, 0x00, 0x5b, 0xd5, 0x12, 0xd3,
	0x0a, 0xfe, 0x60, 0xc1, 0xc6, 0x3f, 0xd0, 0x9c, 0xf2, 0x34, 0x7e, 0x96, 0x51, 0x99, 0x13, 0x07,
	0x74, 0x32, 0xcd, 0xf4, 0xbd, 0xa3, 0xb4, 0xb3, 0x4d, 0xed, 0x6a, 0x3a, 0x38, 0x0d, 0x1d, 0x36,
	0xf1, 0x81, 0xa7, 0x56, 0x69, 0xe7, 0x94, 0x30, 0xf9, 0x04, 0x56, 0x13, 0x7a, 0x18, 0xcd, 0x32,
	0x31, 0x54, 0x69, 0x84, 0x16, 0x58, 0x78, 0xfc, 0x28, 0x95, 0xc2, 0x15, 0xcd, 0xbb, 0xab, 0xaa,
	0xda, 0x0e, 0x74, 0x94, 0xc8, 0x85, 0x0e, 0xda, 0xe5, 0xab, 0x4a, 0xa6, 0xe0, 0x7b, 0x07, 0x60,
	0x9e, 0xf2, 0x95, 0x33, 0x07, 0x86, 0x33, 0x37, 0xa1, 0x3b, 0x49, 0x27, 0xd4, 0x70, 0x72, 0x05,
	0x97, 0xc6, 0x76, 0x2a, 0x63, 0x93, 0x3b, 0xb0, 0x22, 0x5e, 0xcd, 0x26, 0xa3, 0x3c, 0x4a, 0x33,
	0x54, 0x5d, 0xa9, 0x37, 0xa8, 0x90, 0xfa, 0x05, 0x8a, 0xb5, 0xd7, 0x35, 0x6a, 0xef, 0x4d, 0x80,
	0x84, 0x16, 0x31, 0xc7, 0x09, 0x84, 0x8e, 0x73, 0x03, 0x23, 0x8b, 0x5a, 0x46, 0xf3, 0xb1, 0x78,
	0x85, 0x71, 0xe5, 0x86, 0x1a, 0x92, 0x7b, 0x15, 0xe9, 0x77, 0x14, 0xdb, 0x59, 0x37, 0xc4, 0x6f,
	0xf2, 0x19, 0x74, 0xa9, 0x72, 0x52, 0xe1, 0x77, 0xd1, 0x0c, 0xef, 0xd4, 0xcd, 0xb0, 0xdc, 0x93,
	0x61, 0xb5, 0x6a, 0xee, 0xd3, 0x9e, 0xe9, 0x53, 0xbc, 0x1f, 0x32, 0xc6, 0x75, 0xd4, 0x29, 0x00,
	0xe3, 0x98, 0x53, 0xac, 0xc2, 0x7d, 0x1d, 0xc7, 0x0a, 0x34, 0xbd, 0xe1, 0x9d, 0xc7, 0x1b, 0xff,
	0x08, 0xab, 0x73, 0x67, 0x60, 0xb4, 0x76, 0xa1, 0x75, 0x98, 0x66, 0xd4, 0xb3, 0x49, 0x1f, 0x3a,
	0x63, 0x25, 0xb5, 0xe7, 0x48, 0x60, 0xca, 0xe9, 0x71, 0x4a, 0xbf, 0xf5, 0x5a, 0xf2, 0x5d, 0xa7,
	0xc3, 0xd4, 0x95, 0xef, 0xba, 0x34, 0x9f, 0xce, 0x84, 0xd7, 0x0e, 0xbe, 0xb7, 0xc0, 0x39, 0x88,
	0xc6, 0x6f, 0xe1, 0x1d, 0x55, 0x19, 0xa7, 0xd5, 0x48, 0xe7, 0xf2, 0x69, 0xe1, 0xd6, 0x9f, 0x16,
	0x32, 0x82, 0x58, 0x92, 0x1e, 0xa6, 0xd5, 0x0b, 0xbf, 0x82, 0x31, 0x9b, 0x25, 0x1b, 0x33, 0xfa,
	0xc7, 0x9e, 0xc6, 0xa8, 0xa3, 0x94, 0xc5, 0xbb, 0x86, 0xc5, 0x83, 0x3f, 0x5a, 0xb0, 0xba, 0x27,
	0x2f, 0xf5, 0x24, 0xa4, 0xc5, 0x94, 0xe5, 0xc5, 0xdb, 0x18, 0x3b, 0x96, 0x37, 0xab, 0x6b, 0xdc,
	0xac, 0x04, 0x5a, 0x47, 0xf4, 0xa4, 0x1c, 0x34, 0xe2, 0xb7, 0xa9, 0x77, 0xe7, 0x74, 0xbd, 0xbb,
	0x0d, 0xbd, 0xcb, 0x55, 0x8c, 0xeb, 0x10, 0x2b, 0xc1, 0x60, 0x0a, 0x6b, 0x75, 0xdd, 0xce, 0xd5,
	0x31, 0x7f, 0x2c, 0xef, 0x67, 0xcd, 0xef, 0x3b, 0x18, 0x6c, 0xd7, 0x1b, 0xb7, 0x67, 0x6d, 0xd3,
	0x70, 0xce, 0x1e, 0x7c, 0x05, 0xad, 0x83, 0x68, 0x7c, 0xae, 0x63, 0xca, 0x11, 0x4b, 0xeb, 0xcc,
	0x11, 0x4b, 0x90, 0x42, 0xf7, 0x2b, 0x5d, 0x54, 0xc9, 0xc3, 0xf9, 0xa3, 0xd7, 0xc6, 0x9d, 0x2f,
	0x37, 0xa7, 0x38, 0x48, 0x9c, 0xbf, 0x85, 0xdf, 0x2f, 0xe3, 0x19, 0x7d, 0x72, 0x5a, 0xd2, 0x68,
	0x9e, 0xe0, 0xe7, 0x3d, 0xe8, 0xec, 0x66, 0xea, 0xf5, 0x7e, 0x1b, 0xac, 0x4c, 0x57, 0xcb, 0x46,
	0xa7, 0x81, 0x63, 0xf3, 0xd0, 0xca, 0xc8, 0x16, 0x58, 0xea, 0x16, 0x5d, 0x3e, 0x4a, 0xb4, 0x38,
	0xb9, 0x07, 0x76, 0xcc, 0xd0, 0x95, 0x67, 0xcc, 0x8a, 0xed, 0x98, 0x91, 0x3b, 0x60, 0x73, 0x86,
	0x8e, 0x5d, 0x38, 0x4e, 0xcd, 0x21, 0x6d, 0xce, 0xc8, 0x7d, 0xb0, 0xb9, 0x72, 0xf1, 0xc2, 0x60,
	0xc7, 0x18, 0x56, 0x86, 0x36, 0xe7, 0x64, 0x1b, 0xec, 0x49, 0xa1, 0x3b, 0x1f, 0x7f, 0xd9, 0xa4,
	0x0b, 0x5b, 0x18, 0x7b, 0x52, 0x90, 0x00, 0xac, 0x09, 0x16, 0xbc, 0xd3, 0x46, 0x62, 0xd6, 0x84,
	0x6c, 0x83, 0x15, 0x2f, 0x9f, 0x64, 0xd5, 0x9e, 0x99, 0x56, 0x4c, 0x1e, 0x80, 0x5d, 0x70, 0x7c,
	0xbb, 0x9f, 0x3d, 0xf4, 0xb2, 0x0b, 0x4e, 0xee, 0x82, 0x3d, 0x1d, 0xe9, 0x39, 0x55, 0xa3, 0x1f,
	0x2a, 0x1d, 0x1e, 0xda, 0xd3, 0x91, 0x6c, 0xc5, 0x30, 0x4e, 0xd6, 0x97, 0x59, 0x5a, 0x06, 0x9b,
	0x9e, 0xc5, 0xfd, 0x0d, 0xb4, 0xe2, 0x28, 0xe7, 0xfe, 0x06, 0xf2, 0x9d, 0x1d, 0xb1, 0xc8, 0x29,
	0x9b, 0x37, 0x11, 0x8d, 0xfd, 0x2b, 0xb8, 0x60, 0x49, 0x00, 0x4a, 0x2a, 0x79, 0x00, 0x4e, 0x24,
	0x84, 0x7e, 0xc6, 0x9f, 0xde, 0xe1, 0x4a, 0x26, 0xf2, 0x31, 0xb8, 0x63, 0x2a, 0xe8, 0x04, 0x9f,
	0xf2, 0xe7, 0xbd, 0x29, 0xd4, 0x12, 0x23, 0x54, 0xaf, 0xbd, 0x39, 0x54, 0xc9, 0x7b, 0xe0, 0x62,
	0x8c, 0xfb, 0xd7, 0xcf, 0xca, 0x03, 0xc5, 0x43, 0xb6, 0xc1, 0x89, 0xd9, 0xc4, 0xbf, 0x71, 0x66,
	0x23, 0x2c, 0x59, 0x24, 0x27, 0xa7, 0x91, 0x7f, 0x6b, 0x19, 0x67, 0xd5, 0x94, 0x4b, 0x16, 0x72,
	0x4f, 0xde, 0x26, 0x34, 0xf3, 0xef, 0x2c, 0x8b, 0x59, 0xd5, 0x8c, 0x23, 0x03, 0x79, 0x00, 0x2d,
	0x4e, 0xe3, 0xd4, 0x7f, 0x67, 0xf9, 0x9e, 0xba, 0xf1, 0x45, 0x9e, 0xb2, 0x9b, 0x7e, 0x77, 0x99,
	0x43, 0xaa, 0x6e, 0xba, 0x6c, 0xcd, 0xef, 0x2e, 0x8b, 0x07, 0xa3, 0x35, 0x7f, 0x02, 0x6e, 0x16,
	0x8f, 0x66, 0xdc, 0xbf, 0x87, 0x8c, 0xef, 0x37, 0xb3, 0xf8, 0xac, 0xd7, 0x6d, 0xa8, 0x96, 0x92,
	0x0f, 0xc0, 0xc9, 0x28, 0xf7, 0xef, 0xe3, 0x0e, 0xb7, 0x16, 0x77, 0xa8, 0xbd, 0xe8, 0x43, 0xc9,
	0x2b, 0xfd, 0x58, 0xe0, 0x70, 0xc5, 0x7f, 0xb0, 0xcc, 0x8f, 0x6a, 0xf0, 0x12, 0x6a, 0x1e, 0xf2,
	0xb7, 0xd0, 0xc9, 0xd2, 0x42, 0xc4, 0x2c, 0xf7, 0xdf, 0x3b, 0xed, 0x90, 0x9a, 0x98, 0x61, 0xc9,
	0x1f, 0xfc, 0xca, 0x82, 0xc1, 0xcb, 0x82, 0xee, 0xb1, 0x3c, 0xa7, 0xb1, 0x60, 0xfc, 0x4d, 0xd3,
	0x02, 0x1c, 0xa1, 0x69, 0xde, 0xf9, 0x2d, 0xd5, 0xaf, 0x70, 0xe6, 0x30, 0xa4, 0x6b, 0x0e, 0x43,
	0x7c, 0xe8, 0xcc, 0xa6, 0x09, 0xde, 0x4a, 0xfa, 0x7e, 0xd1, 0xa0, 0xbc, 0x06, 0x47, 0x27, 0xba,
	0x83, 0xb1, 0x47, 0x27, 0xc1, 0x3b, 0xe5, 0x18, 0x79, 0x00, 0xdd, 0x24, 0x2d, 0xf0, 0x57, 0x2e,
	0xef, 0x02, 0x59, 0x81, 0x1e, 0x4e, 0x8b, 0xe5, 0x1a, 0xcf, 0x0a, 0x7e, 0x62, 0xc1, 0xc0, 0x98,
	0x44, 0x17, 0x3f, 0xc2, 0x24, 0xe4, 0x53, 0x18, 0x18, 0x63, 0xb3, 0xf2, 0xd6, 0x3a, 0x63, 0xfa,
	0x5d, 0x63, 0x0f, 0x7e, 0x6d, 0x43, 0xdf, 0xa0, 0xfe, 0x08, 0x02, 0x9d, 0xc3, 0xd8, 0x57, 0xa1,
	0x9b, 0xb1, 0x31, 0x33, 0x3a, 0xdb, 0x8e, 0x84, 0xcf, 0x68, 0x6a, 0x4b, 0x99, 0xab, 0xde, 0xc7,
	0xc0, 0x98, 0x5e, 0xd2, 0xbd, 0x43, 0xdd, 0x4b, 0xfd, 0xd2, 0x4b, 0xa7, 0x78, 0x59, 0xb5, 0x34,
	0x50, 0xb6, 0x34, 0xe7, 0xf3, 0xe5, 0x83, 0xdf, 0x00, 0xb8, 0x98, 0x04, 0xc4, 0x87, 0x75, 0x33,
	0x50, 0x77, 0xcb, 0x1f, 0x0b, 0x2e, 0x90, 0x2b, 0x70, 0xc9, 0xa4, 0x7c, 0x13, 0xa5, 0x22, 0xcd,
	0xc7, 0x9e, 0x4d, 0x6e, 0xc2, 0xa6, 0x49, 0x30, 0x6f, 0x08, 0x9a, 0x78, 0xce, 0xc2, 0x96, 0xfa,
	0xd7, 0x10, 0xaf, 0xd5, 0xdc, 0xf2, 0x29, 0x67, 0xd3, 0x29, 0x4d, 0x3c, 0x97, 0x5c, 0x07, 0xdf,
	0x24, 0xa0, 0x68, 0x7b, 0xaa, 0x87, 0xf2, 0xda, 0xe4, 0x06, 0x5c, 0x35, 0xa9, 0x5f, 0xb0, 0x34,
	0x9f, 0x9f, 0xd7, 0x21, 0x5b, 0x70, 0xdd, 0x24, 0x97, 0x55, 0xb4, 0xe2, 0xe8, 0x36, 0x25, 0x7e,
	0x4e, 0xa3, 0x63, 0x83, 0xde, 0x6b, 0xd2, 0xf7, 0x32, 0x56, 0x18, 0x74, 0x68, 0x8a, 0x27, 0x2f,
	0x99, 0x8a, 0xda, 0x6f, 0xae, 0x7e, 0x99, 0x0b, 0x93, 0x3e, 0x68, 0x8a, 0x1f, 0xd2, 0x28, 0x99,
	0x93, 0x57, 0x9a, 0x64, 0x59, 0x3a, 0xe6, 0xe4, 0x55, 0x72, 0x0b, 0xae, 0x2d, 0x5a, 0x73, 0xce,
	0xb0, 0x46, 0xee, 0xc0, 0xad, 0xda, 0xf1, 0x18, 0x3e, 0xd8, 0xca, 0x54, 0x4c, 0xeb, 0x4d, 0x26,
	0x65, 0xdb, 0x3a, 0xd3, 0xe5, 0x26, 0xd3, 0x53, 0x9a, 0xd1, 0x26, 0xd3, 0x06, 0xb9, 0x0d, 0x37,
	0x16, 0xb4, 0xa9, 0xb1, 0x5c, 0x69, 0xb2, 0xa0, 0x46, 0x35, 0x16, 0xbf, 0xe9, 0x33, 0xb3, 0x86,
	0xd3, 0x69, 0x76, 0xe2, 0x7d, 0xd8, 0xb4, 0x39, 0xb6, 0x6f, 0x4a, 0xb7, 0xc4, 0x7b, 0x4c, 0x02,
	0xb8, 0x59, 0x97, 0x02, 0xd7, 0xca, 0x18, 0x3d, 0x48, 0x27, 0x94, 0xcd, 0x84, 0xf7, 0x77, 0x4d,
	0x75, 0x16, 0x0a, 0x3f, 0x4d, 0xbc, 0x4f, 0xd1, 0xbc, 0x6a, 0x3a, 0xf8, 0x94, 0x56, 0x69, 0x39,
	0x67, 0xd8, 0x45, 0xf7, 0xe8, 0xf1, 0xe1, 0x22, 0xf9, 0x09, 0x1e, 0x52, 0x27, 0x2f, 0xf8, 0x70,
	0x4f, 0xeb, 0xa2, 0x4a, 0xc8, 0xcb, 0x69, 0x41, 0xcd, 0x7c, 0x79, 0x4a, 0x36, 0x61, 0xa3, 0xa2,
	0xd6, 0x57, 0x3e, 0x43, 0x53, 0xd6, 0x7a, 0x20, 0xed, 0xb9, 0x8a, 0xe5, 0xab, 0x45, 0x16, 0x1d,
	0x01, 0x15, 0xcb, 0xd7, 0x8b, 0x2c, 0xda, 0xb5, 0x15, 0x4b, 0x88, 0x76, 0xa8, 0x37, 0x5b, 0xb5,
	0x30, 0x7d, 0xb1, 0xc8, 0x50, 0x17, 0xf5, 0x80, 0x6c, 0x00, 0x39, 0x88, 0xc6, 0x4d, 0xf9, 0x5e,
	0x6a, 0x7c, 0x53, 0xa8, 0x7f, 0x26, 0xeb, 0xe0, 0x61, 0x22, 0x99, 0xc7, 0x7c, 0xa3, 0xb9, 0x9b,
	0xf2, 0xfd, 0x8b, 0xe6, 0xae, 0x9f, 0xf9, 0xaf, 0x4d, 0x17, 0xeb, 0xd4, 0x97, 0x3d, 0x47, 0xc5,
	0xf4, 0x6f, 0xe4, 0x1e, 0xdc, 0x59, 0x5a, 0x1f, 0xb0, 0x87, 0x99, 0x33, 0xfe, 0xfb, 0x29, 0xbb,
	0xbd, 0xa0, 0x06, 0xd3, 0x7f, 0x3c, 0x7a, 0x56, 0xfd, 0xb2, 0x23, 0xd4, 0xad, 0xf3, 0x18, 0xec,
	0xa7, 0x8c, 0x34, 0x5a, 0x39, 0xfd, 0x1e, 0xd9, 0x5c, 0x8e, 0x0e, 0x2e, 0xfc, 0x25, 0x00, 0x00,
	0xff, 0xff, 0x29, 0x35, 0x8b, 0xc2, 0x55, 0x24, 0x00, 0x00,
}
