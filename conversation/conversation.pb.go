// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation/conversation.proto

/*
Package conversation is a generated protocol buffer package.

It is generated from these files:
	conversation/conversation.proto

It has these top-level messages:
	Id
	Limit
	Rule
	Condition
	Route
	RouteResult
	Conversation
	UserConversation
	Request
	Conversations
	Start
	ReplyConversationRequest
	ListConversations
	ListUsersUnreadRequest
	Unread
	UsersUnread
	ListEventsRequest
	ListChatsByUserRequest
	RequestState
	Reaction
	Message
	Field
	Button
	GenericElementTemplate
	Attachment
*/
package conversation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"
import auth "bitbucket.org/subiz/header/auth"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JoinOperator int32

const (
	JoinOperator_none JoinOperator = 0
	JoinOperator_and  JoinOperator = 1
	JoinOperator_or   JoinOperator = 2
)

var JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}
var JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x JoinOperator) Enum() *JoinOperator {
	p := new(JoinOperator)
	*p = x
	return p
}
func (x JoinOperator) String() string {
	return proto.EnumName(JoinOperator_name, int32(x))
}
func (x *JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JoinOperator_value, data, "JoinOperator")
	if err != nil {
		return err
	}
	*x = JoinOperator(value)
	return nil
}
func (JoinOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AssignStrategy int32

const (
	AssignStrategy_ALLAGENTS           AssignStrategy = 0
	AssignStrategy_AGENTGROUP          AssignStrategy = 2
	AssignStrategy_AGENTS              AssignStrategy = 3
	AssignStrategy_MOSTRECENT          AssignStrategy = 4
	AssignStrategy_ROUNDROBINALLAGENTS AssignStrategy = 5
	AssignStrategy_ROUNDROBINAGENTS    AssignStrategy = 6
)

var AssignStrategy_name = map[int32]string{
	0: "ALLAGENTS",
	2: "AGENTGROUP",
	3: "AGENTS",
	4: "MOSTRECENT",
	5: "ROUNDROBINALLAGENTS",
	6: "ROUNDROBINAGENTS",
}
var AssignStrategy_value = map[string]int32{
	"ALLAGENTS":           0,
	"AGENTGROUP":          2,
	"AGENTS":              3,
	"MOSTRECENT":          4,
	"ROUNDROBINALLAGENTS": 5,
	"ROUNDROBINAGENTS":    6,
}

func (x AssignStrategy) Enum() *AssignStrategy {
	p := new(AssignStrategy)
	*p = x
	return p
}
func (x AssignStrategy) String() string {
	return proto.EnumName(AssignStrategy_name, int32(x))
}
func (x *AssignStrategy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssignStrategy_value, data, "AssignStrategy")
	if err != nil {
		return err
	}
	*x = AssignStrategy(value)
	return nil
}
func (AssignStrategy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type State int32

const (
	State_conversation_none State = 0
	// 	assigning = 1;
	State_unassigned State = 2
	// opened = 3;
	// closed = 4;
	State_started State = 5
	State_active  State = 6
	State_ended   State = 8
)

var State_name = map[int32]string{
	0: "conversation_none",
	2: "unassigned",
	5: "started",
	6: "active",
	8: "ended",
}
var State_value = map[string]int32{
	"conversation_none": 0,
	"unassigned":        2,
	"started":           5,
	"active":            6,
	"ended":             8,
}

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}
func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (x *State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(State_value, data, "State")
	if err != nil {
		return err
	}
	*x = State(value)
	return nil
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Event int32

const (
	Event_ConversationAssigned            Event = 0
	Event_ConversationWaiting             Event = 2
	Event_ConversationStartRequested      Event = 3
	Event_ConversationAccepted            Event = 4
	Event_ConversationDropped             Event = 5
	Event_ConversationEventCreated        Event = 6
	Event_ConversationJoinRequested       Event = 7
	Event_ConversationMessageRequested    Event = 8
	Event_ConversationLeaveRequested      Event = 9
	Event_ConversationCloseRequested      Event = 10
	Event_ConversationTagRequested        Event = 11
	Event_ConversationUntagRequested      Event = 12
	Event_ConversationReadRequested       Event = 13
	Event_ConversationListRequested       Event = 14
	Event_ConversationReplyRequested      Event = 15
	Event_ConversationUpdateRuleRequested Event = 20
	Event_ConversationCreateRuleRequested Event = 21
	Event_ConversationDeleteRuleRequested Event = 22
	Event_ConversationReadRuleRequested   Event = 23
	Event_ConversationListRuleRequested   Event = 24
	Event_ChatUserInfoRequested           Event = 18
	Event_ChatUserInfoReply               Event = 19
	Event_ConversationRequested           Event = 50
	Event_ConversationUserRequestReply    Event = 51
	Event_ConversationLimitUpdated        Event = 52
	Event_ConversationRequestWaitTimeout  Event = 60
	Event_ConversationListEventsRequested Event = 61
)

var Event_name = map[int32]string{
	0:  "ConversationAssigned",
	2:  "ConversationWaiting",
	3:  "ConversationStartRequested",
	4:  "ConversationAccepted",
	5:  "ConversationDropped",
	6:  "ConversationEventCreated",
	7:  "ConversationJoinRequested",
	8:  "ConversationMessageRequested",
	9:  "ConversationLeaveRequested",
	10: "ConversationCloseRequested",
	11: "ConversationTagRequested",
	12: "ConversationUntagRequested",
	13: "ConversationReadRequested",
	14: "ConversationListRequested",
	15: "ConversationReplyRequested",
	20: "ConversationUpdateRuleRequested",
	21: "ConversationCreateRuleRequested",
	22: "ConversationDeleteRuleRequested",
	23: "ConversationReadRuleRequested",
	24: "ConversationListRuleRequested",
	18: "ChatUserInfoRequested",
	19: "ChatUserInfoReply",
	50: "ConversationRequested",
	51: "ConversationUserRequestReply",
	52: "ConversationLimitUpdated",
	60: "ConversationRequestWaitTimeout",
	61: "ConversationListEventsRequested",
}
var Event_value = map[string]int32{
	"ConversationAssigned":            0,
	"ConversationWaiting":             2,
	"ConversationStartRequested":      3,
	"ConversationAccepted":            4,
	"ConversationDropped":             5,
	"ConversationEventCreated":        6,
	"ConversationJoinRequested":       7,
	"ConversationMessageRequested":    8,
	"ConversationLeaveRequested":      9,
	"ConversationCloseRequested":      10,
	"ConversationTagRequested":        11,
	"ConversationUntagRequested":      12,
	"ConversationReadRequested":       13,
	"ConversationListRequested":       14,
	"ConversationReplyRequested":      15,
	"ConversationUpdateRuleRequested": 20,
	"ConversationCreateRuleRequested": 21,
	"ConversationDeleteRuleRequested": 22,
	"ConversationReadRuleRequested":   23,
	"ConversationListRuleRequested":   24,
	"ChatUserInfoRequested":           18,
	"ChatUserInfoReply":               19,
	"ConversationRequested":           50,
	"ConversationUserRequestReply":    51,
	"ConversationLimitUpdated":        52,
	"ConversationRequestWaitTimeout":  60,
	"ConversationListEventsRequested": 61,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ActionType int32

const (
	ActionType_url_button      ActionType = 2
	ActionType_postback_button ActionType = 3
	ActionType_event_button    ActionType = 4
)

var ActionType_name = map[int32]string{
	2: "url_button",
	3: "postback_button",
	4: "event_button",
}
var ActionType_value = map[string]int32{
	"url_button":      2,
	"postback_button": 3,
	"event_button":    4,
}

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}
func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (x *ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionType_value, data, "ActionType")
	if err != nil {
		return err
	}
	*x = ActionType(value)
	return nil
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type AttachmentType int32

const (
	AttachmentType_file    AttachmentType = 2
	AttachmentType_generic AttachmentType = 3
	AttachmentType_preview AttachmentType = 4
	AttachmentType_button  AttachmentType = 5
)

var AttachmentType_name = map[int32]string{
	2: "file",
	3: "generic",
	4: "preview",
	5: "button",
}
var AttachmentType_value = map[string]int32{
	"file":    2,
	"generic": 3,
	"preview": 4,
	"button":  5,
}

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}
func (x AttachmentType) String() string {
	return proto.EnumName(AttachmentType_name, int32(x))
}
func (x *AttachmentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AttachmentType_value, data, "AttachmentType")
	if err != nil {
		return err
	}
	*x = AttachmentType(value)
	return nil
}
func (AttachmentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Id struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Id) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Id) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type Limit struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxRules         *int32          `protobuf:"varint,7,opt,name=max_rules,json=maxRules" json:"max_rules,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Limit) Reset()                    { *m = Limit{} }
func (m *Limit) String() string            { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()               {}
func (*Limit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Limit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Limit) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Limit) GetMaxRules() int32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Rule struct {
	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	// @inject_tag: name:"ip"
	Id        *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// optional string priority = 4;
	Strategy         *AssignStrategy `protobuf:"varint,5,opt,name=strategy,enum=conversation.AssignStrategy" json:"strategy,omitempty"`
	AssignTos        []string        `protobuf:"bytes,6,rep,name=assign_tos,json=assignTos" json:"assign_tos,omitempty"`
	Conditions       []*Condition    `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty"`
	Enabled          *bool           `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,9,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	PrevId           *string         `protobuf:"bytes,10,opt,name=prev_id,json=prevId" json:"prev_id,omitempty"`
	NextId           *string         `protobuf:"bytes,11,opt,name=next_id,json=nextId" json:"next_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Rule) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Rule) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Rule) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Rule) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *Rule) GetAssignTos() []string {
	if m != nil {
		return m.AssignTos
	}
	return nil
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Rule) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Rule) GetPrevId() string {
	if m != nil && m.PrevId != nil {
		return *m.PrevId
	}
	return ""
}

func (m *Rule) GetNextId() string {
	if m != nil && m.NextId != nil {
		return *m.NextId
	}
	return ""
}

type Condition struct {
	Join             *JoinOperator `protobuf:"varint,1,opt,name=join,enum=conversation.JoinOperator" json:"join,omitempty"`
	Key              *string       `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator         *string       `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value            *string       `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Condition) GetJoin() JoinOperator {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return JoinOperator_none
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Route struct {
	Rules            []*Rule `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Route) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type RouteResult struct {
	RuleId           *string         `protobuf:"bytes,1,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	Strategy         *AssignStrategy `protobuf:"varint,3,opt,name=strategy,enum=conversation.AssignStrategy" json:"strategy,omitempty"`
	AgentIds         []string        `protobuf:"bytes,4,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RouteResult) Reset()                    { *m = RouteResult{} }
func (m *RouteResult) String() string            { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()               {}
func (*RouteResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RouteResult) GetRuleId() string {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return ""
}

func (m *RouteResult) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *RouteResult) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

// get number of unread message
type Conversation struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Creation time
	Created *int64 `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	// Last active time
	LastActived *int64 `protobuf:"varint,5,opt,name=last_actived,json=lastActived" json:"last_actived,omitempty"`
	// Closed time
	Closed           *int64     `protobuf:"varint,6,opt,name=closed" json:"closed,omitempty"`
	Users            []*auth.By `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
	ChannelId        *string    `protobuf:"bytes,9,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Tags             []string   `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	State            *string    `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	Request          *Request   `protobuf:"bytes,14,opt,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Conversation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Conversation) GetLastActived() int64 {
	if m != nil && m.LastActived != nil {
		return *m.LastActived
	}
	return 0
}

func (m *Conversation) GetClosed() int64 {
	if m != nil && m.Closed != nil {
		return *m.Closed
	}
	return 0
}

func (m *Conversation) GetUsers() []*auth.By {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Conversation) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Conversation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Conversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Conversation) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

type UserConversation struct {
	State            *string `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	UserId           *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ConvoId          *string `protobuf:"bytes,4,opt,name=convo_id,json=convoId" json:"convo_id,omitempty"`
	LastSeenEvent    *string `protobuf:"bytes,5,opt,name=last_seen_event,json=lastSeenEvent" json:"last_seen_event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserConversation) Reset()                    { *m = UserConversation{} }
func (m *UserConversation) String() string            { return proto.CompactTextString(m) }
func (*UserConversation) ProtoMessage()               {}
func (*UserConversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserConversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *UserConversation) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserConversation) GetConvoId() string {
	if m != nil && m.ConvoId != nil {
		return *m.ConvoId
	}
	return ""
}

func (m *UserConversation) GetLastSeenEvent() string {
	if m != nil && m.LastSeenEvent != nil {
		return *m.LastSeenEvent
	}
	return ""
}

type Request struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelId        *string         `protobuf:"bytes,4,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	MessageTo        *string         `protobuf:"bytes,5,opt,name=message_to,json=messageTo" json:"message_to,omitempty"`
	PageUrl          *string         `protobuf:"bytes,6,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	PageTitle        *string         `protobuf:"bytes,7,opt,name=page_title,json=pageTitle" json:"page_title,omitempty"`
	Message          *string         `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	BrowserLanguage  *string         `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	Language         *string         `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	DeviceType       *string         `protobuf:"bytes,11,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	UserId           *string         `protobuf:"bytes,12,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,13,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	ConversationId   *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Ip               *string         `protobuf:"bytes,15,opt,name=ip" json:"ip,omitempty"`
	Country          *string         `protobuf:"bytes,16,opt,name=country" json:"country,omitempty"`
	CountryCode      *string         `protobuf:"bytes,17,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	City             *string         `protobuf:"bytes,18,opt,name=city" json:"city,omitempty"`
	TimeZone         *string         `protobuf:"bytes,19,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Request) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Request) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Request) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Request) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Request) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *Request) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *Request) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *Request) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Request) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *Request) GetDeviceType() string {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return ""
}

func (m *Request) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Request) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Request) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Request) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Request) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *Request) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *Request) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *Request) GetTimeZone() string {
	if m != nil && m.TimeZone != nil {
		return *m.TimeZone
	}
	return ""
}

type Conversations struct {
	Conversations    []*Conversation `protobuf:"bytes,1,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Conversations) Reset()                    { *m = Conversations{} }
func (m *Conversations) String() string            { return proto.CompactTextString(m) }
func (*Conversations) ProtoMessage()               {}
func (*Conversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Conversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type Start struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId           *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ChannelId        *string         `protobuf:"bytes,5,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	UserName         *string         `protobuf:"bytes,10,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	UserAvatarUrl    *string         `protobuf:"bytes,11,opt,name=user_avatar_url,json=userAvatarUrl" json:"user_avatar_url,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Start) Reset()                    { *m = Start{} }
func (m *Start) String() string            { return proto.CompactTextString(m) }
func (*Start) ProtoMessage()               {}
func (*Start) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Start) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Start) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Start) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *Start) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Start) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Start) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *Start) GetUserAvatarUrl() string {
	if m != nil && m.UserAvatarUrl != nil {
		return *m.UserAvatarUrl
	}
	return ""
}

type ReplyConversationRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ConversationId   *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ReplyConversationRequest) Reset()                    { *m = ReplyConversationRequest{} }
func (m *ReplyConversationRequest) String() string            { return proto.CompactTextString(m) }
func (*ReplyConversationRequest) ProtoMessage()               {}
func (*ReplyConversationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReplyConversationRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ReplyConversationRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ReplyConversationRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ReplyConversationRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

type ListConversations struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State            *State          `protobuf:"varint,4,opt,name=state,enum=conversation.State" json:"state,omitempty"`
	Limit            *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	StartId          *string         `protobuf:"bytes,6,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListConversations) Reset()                    { *m = ListConversations{} }
func (m *ListConversations) String() string            { return proto.CompactTextString(m) }
func (*ListConversations) ProtoMessage()               {}
func (*ListConversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ListConversations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListConversations) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListConversations) GetState() State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return State_conversation_none
}

func (m *ListConversations) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListConversations) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

type ListUsersUnreadRequest struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string  `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	UserIds          []string `protobuf:"bytes,3,rep,name=UserIds" json:"UserIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ListUsersUnreadRequest) Reset()                    { *m = ListUsersUnreadRequest{} }
func (m *ListUsersUnreadRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersUnreadRequest) ProtoMessage()               {}
func (*ListUsersUnreadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ListUsersUnreadRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type Unread struct {
	UserId           *string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Unread           *int32  `protobuf:"varint,2,opt,name=Unread" json:"Unread,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Unread) Reset()                    { *m = Unread{} }
func (m *Unread) String() string            { return proto.CompactTextString(m) }
func (*Unread) ProtoMessage()               {}
func (*Unread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Unread) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Unread) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type UsersUnread struct {
	Unreads          []*Unread `protobuf:"bytes,1,rep,name=Unreads" json:"Unreads,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UsersUnread) Reset()                    { *m = UsersUnread{} }
func (m *UsersUnread) String() string            { return proto.CompactTextString(m) }
func (*UsersUnread) ProtoMessage()               {}
func (*UsersUnread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *UsersUnread) GetUnreads() []*Unread {
	if m != nil {
		return m.Unreads
	}
	return nil
}

type ListEventsRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	StartId          *string         `protobuf:"bytes,4,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Limit            *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ListEventsRequest) Reset()                    { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()               {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ListEventsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListEventsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListEventsRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *ListEventsRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListEventsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListChatsByUserRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string `protobuf:"bytes,2,opt,name=ChannelId" json:"ChannelId,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=UserId" json:"UserId,omitempty"`
	StartId          *string `protobuf:"bytes,4,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,5,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListChatsByUserRequest) Reset()                    { *m = ListChatsByUserRequest{} }
func (m *ListChatsByUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChatsByUserRequest) ProtoMessage()               {}
func (*ListChatsByUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ListChatsByUserRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type RequestState struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	ChannelId        *string `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestState) Reset()                    { *m = RequestState{} }
func (m *RequestState) String() string            { return proto.CompactTextString(m) }
func (*RequestState) ProtoMessage()               {}
func (*RequestState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RequestState) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RequestState) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RequestState) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type Reaction struct {
	Name             *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Count            *int32   `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Users            []string `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Reaction) Reset()                    { *m = Reaction{} }
func (m *Reaction) String() string            { return proto.CompactTextString(m) }
func (*Reaction) ProtoMessage()               {}
func (*Reaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Reaction) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Reaction) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Reaction) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type Message struct {
	Text             *string       `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Format           *string       `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	Attachments      []*Attachment `protobuf:"bytes,4,rep,name=attachments" json:"attachments,omitempty"`
	Reactions        []*Reaction   `protobuf:"bytes,7,rep,name=reactions" json:"reactions,omitempty"`
	Opened           *int32        `protobuf:"varint,8,opt,name=opened" json:"opened,omitempty"`
	Delivered        *bool         `protobuf:"varint,9,opt,name=delivered" json:"delivered,omitempty"`
	Fields           []*Field      `protobuf:"bytes,10,rep,name=fields" json:"fields,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Message) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Message) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *Message) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Message) GetReactions() []*Reaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

func (m *Message) GetOpened() int32 {
	if m != nil && m.Opened != nil {
		return *m.Opened
	}
	return 0
}

func (m *Message) GetDelivered() bool {
	if m != nil && m.Delivered != nil {
		return *m.Delivered
	}
	return false
}

func (m *Message) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Field struct {
	Value            *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Key              *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Field) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Field) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type Button struct {
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// post back
	Title     *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Payload   *string `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	ImageUrl  *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	ContentId *string `protobuf:"bytes,10,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	// 	optional RawEvent event = 12;
	Url              *string `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Button) Reset()                    { *m = Button{} }
func (m *Button) String() string            { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()               {}
func (*Button) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Button) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Button) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Button) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *Button) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *Button) GetContentId() string {
	if m != nil && m.ContentId != nil {
		return *m.ContentId
	}
	return ""
}

func (m *Button) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type GenericElementTemplate struct {
	Title            *string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ImageUrl         *string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Subtitle         *string   `protobuf:"bytes,4,opt,name=subtitle" json:"subtitle,omitempty"`
	DefaultAction    *Button   `protobuf:"bytes,5,opt,name=default_action,json=defaultAction" json:"default_action,omitempty"`
	Buttons          []*Button `protobuf:"bytes,6,rep,name=buttons" json:"buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GenericElementTemplate) Reset()                    { *m = GenericElementTemplate{} }
func (m *GenericElementTemplate) String() string            { return proto.CompactTextString(m) }
func (*GenericElementTemplate) ProtoMessage()               {}
func (*GenericElementTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GenericElementTemplate) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *GenericElementTemplate) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *GenericElementTemplate) GetSubtitle() string {
	if m != nil && m.Subtitle != nil {
		return *m.Subtitle
	}
	return ""
}

func (m *GenericElementTemplate) GetDefaultAction() *Button {
	if m != nil {
		return m.DefaultAction
	}
	return nil
}

func (m *GenericElementTemplate) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type Attachment struct {
	Type *string `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	// file
	Mimetype     *string `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Url          *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	ThumbnailUrl *string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl" json:"thumbnail_url,omitempty"`
	Name         *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Descrition   *string `protobuf:"bytes,6,opt,name=descrition" json:"descrition,omitempty"`
	// optional string data = 7; // for custom data
	Length *int32 `protobuf:"varint,15,opt,name=length" json:"length,omitempty"`
	Size   *int32 `protobuf:"varint,13,opt,name=size" json:"size,omitempty"`
	// generic
	Elements []*GenericElementTemplate `protobuf:"bytes,8,rep,name=elements" json:"elements,omitempty"`
	// preview
	Title            *string   `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Color            *string   `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	Pretext          *string   `protobuf:"bytes,11,opt,name=pretext" json:"pretext,omitempty"`
	Buttons          []*Button `protobuf:"bytes,16,rep,name=buttons" json:"buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Attachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Attachment) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *Attachment) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Attachment) GetThumbnailUrl() string {
	if m != nil && m.ThumbnailUrl != nil {
		return *m.ThumbnailUrl
	}
	return ""
}

func (m *Attachment) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Attachment) GetDescrition() string {
	if m != nil && m.Descrition != nil {
		return *m.Descrition
	}
	return ""
}

func (m *Attachment) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *Attachment) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Attachment) GetElements() []*GenericElementTemplate {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (m *Attachment) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Attachment) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *Attachment) GetPretext() string {
	if m != nil && m.Pretext != nil {
		return *m.Pretext
	}
	return ""
}

func (m *Attachment) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

func init() {
	proto.RegisterType((*Id)(nil), "conversation.Id")
	proto.RegisterType((*Limit)(nil), "conversation.Limit")
	proto.RegisterType((*Rule)(nil), "conversation.Rule")
	proto.RegisterType((*Condition)(nil), "conversation.Condition")
	proto.RegisterType((*Route)(nil), "conversation.Route")
	proto.RegisterType((*RouteResult)(nil), "conversation.RouteResult")
	proto.RegisterType((*Conversation)(nil), "conversation.Conversation")
	proto.RegisterType((*UserConversation)(nil), "conversation.UserConversation")
	proto.RegisterType((*Request)(nil), "conversation.Request")
	proto.RegisterType((*Conversations)(nil), "conversation.Conversations")
	proto.RegisterType((*Start)(nil), "conversation.Start")
	proto.RegisterType((*ReplyConversationRequest)(nil), "conversation.ReplyConversationRequest")
	proto.RegisterType((*ListConversations)(nil), "conversation.ListConversations")
	proto.RegisterType((*ListUsersUnreadRequest)(nil), "conversation.ListUsersUnreadRequest")
	proto.RegisterType((*Unread)(nil), "conversation.Unread")
	proto.RegisterType((*UsersUnread)(nil), "conversation.UsersUnread")
	proto.RegisterType((*ListEventsRequest)(nil), "conversation.ListEventsRequest")
	proto.RegisterType((*ListChatsByUserRequest)(nil), "conversation.ListChatsByUserRequest")
	proto.RegisterType((*RequestState)(nil), "conversation.RequestState")
	proto.RegisterType((*Reaction)(nil), "conversation.Reaction")
	proto.RegisterType((*Message)(nil), "conversation.Message")
	proto.RegisterType((*Field)(nil), "conversation.Field")
	proto.RegisterType((*Button)(nil), "conversation.Button")
	proto.RegisterType((*GenericElementTemplate)(nil), "conversation.GenericElementTemplate")
	proto.RegisterType((*Attachment)(nil), "conversation.Attachment")
	proto.RegisterEnum("conversation.JoinOperator", JoinOperator_name, JoinOperator_value)
	proto.RegisterEnum("conversation.AssignStrategy", AssignStrategy_name, AssignStrategy_value)
	proto.RegisterEnum("conversation.State", State_name, State_value)
	proto.RegisterEnum("conversation.Event", Event_name, Event_value)
	proto.RegisterEnum("conversation.ActionType", ActionType_name, ActionType_value)
	proto.RegisterEnum("conversation.AttachmentType", AttachmentType_name, AttachmentType_value)
}

func init() { proto.RegisterFile("conversation/conversation.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x6f, 0xe4, 0x48,
	0x11, 0xdf, 0x19, 0x8f, 0x67, 0xec, 0x9a, 0x64, 0xe2, 0xed, 0xcd, 0xee, 0x7a, 0xb3, 0xff, 0xb2,
	0x3e, 0x04, 0xd9, 0x20, 0x25, 0x22, 0x9c, 0xc4, 0x09, 0x38, 0x69, 0xb3, 0xd9, 0x65, 0x35, 0xab,
	0xdc, 0x06, 0x3a, 0x09, 0x48, 0xbc, 0x8c, 0x1c, 0xbb, 0x33, 0xf1, 0xad, 0xc7, 0x1e, 0xec, 0xf6,
	0x5c, 0x66, 0x25, 0xc4, 0x0b, 0x4f, 0xf0, 0x0d, 0x10, 0x0f, 0x7c, 0x03, 0xc4, 0x1b, 0xdf, 0x03,
	0x5e, 0x78, 0xbc, 0x6f, 0x82, 0xaa, 0xba, 0x3d, 0x63, 0x3b, 0xe1, 0xc8, 0xc1, 0xdd, 0x4b, 0xe2,
	0xfa, 0xd3, 0xd5, 0xd5, 0x55, 0xbf, 0xae, 0xaa, 0x1e, 0x78, 0x1a, 0xa4, 0xc9, 0x4c, 0x64, 0xb9,
	0x2f, 0xa3, 0x34, 0xd9, 0xad, 0x12, 0x3b, 0xd3, 0x2c, 0x95, 0x29, 0x5b, 0xa9, 0xf2, 0x36, 0x76,
	0xce, 0x22, 0x79, 0x56, 0x04, 0xef, 0x85, 0xdc, 0x49, 0xb3, 0xf1, 0x6e, 0x5e, 0x9c, 0x45, 0x1f,
	0x76, 0x2f, 0x84, 0x1f, 0x8a, 0x6c, 0x37, 0x48, 0x27, 0x13, 0xb2, 0x81, 0xff, 0xd4, 0xea, 0x8d,
	0xed, 0xaf, 0xd0, 0xf7, 0x0b, 0x79, 0x41, 0x7f, 0x94, 0xae, 0xf7, 0x4b, 0x68, 0x0f, 0x43, 0xf6,
	0x0c, 0x8c, 0x40, 0x5e, 0xba, 0xad, 0xcd, 0xd6, 0x56, 0x7f, 0x6f, 0x6d, 0x47, 0x5b, 0x3b, 0x48,
	0x13, 0x29, 0x2e, 0x25, 0x47, 0x19, 0x7b, 0x0c, 0xe0, 0x07, 0x41, 0x5a, 0x24, 0x72, 0x14, 0x85,
	0x6e, 0x7b, 0xb3, 0xb5, 0x65, 0x73, 0x5b, 0x73, 0x86, 0x21, 0x1b, 0x40, 0x3b, 0x0a, 0x5d, 0x83,
	0xd8, 0xed, 0x28, 0xf4, 0xce, 0xc1, 0x3c, 0x8c, 0x26, 0x91, 0xfc, 0xfa, 0xa6, 0x8d, 0xa6, 0xe9,
	0x87, 0x60, 0x4f, 0xfc, 0xcb, 0x51, 0x56, 0xc4, 0x22, 0x77, 0x7b, 0x9b, 0xad, 0x2d, 0x93, 0x5b,
	0x13, 0xff, 0x92, 0x23, 0xed, 0xfd, 0xab, 0x0d, 0x1d, 0xfc, 0xba, 0xc9, 0x3e, 0xca, 0xc7, 0x76,
	0xe9, 0xe3, 0x7f, 0xdb, 0xf7, 0x13, 0xb0, 0x72, 0x99, 0xf9, 0x52, 0x8c, 0xe7, 0xae, 0xb9, 0xd9,
	0xda, 0x1a, 0xec, 0x3d, 0xda, 0xa9, 0xe5, 0x6a, 0x3f, 0xcf, 0xa3, 0x71, 0x72, 0xac, 0x75, 0xf8,
	0x42, 0x9b, 0x0c, 0x93, 0x6c, 0x24, 0xd3, 0xdc, 0xed, 0x6e, 0x1a, 0x64, 0x98, 0x38, 0x27, 0x69,
	0xce, 0x7e, 0x04, 0x10, 0xa4, 0x49, 0x18, 0xa1, 0x11, 0x3c, 0x91, 0xb1, 0xd5, 0xdf, 0xbb, 0x5f,
	0x37, 0x7d, 0x50, 0xca, 0x79, 0x45, 0x95, 0xb9, 0xd0, 0x13, 0x89, 0x7f, 0x16, 0x8b, 0xd0, 0xb5,
	0x36, 0x5b, 0x5b, 0x16, 0x2f, 0x49, 0xf6, 0x0c, 0x56, 0x82, 0x4c, 0xf8, 0x52, 0x84, 0x23, 0x19,
	0x4d, 0x84, 0x6b, 0x6f, 0xb6, 0xb6, 0x0c, 0xde, 0xd7, 0xbc, 0x93, 0x68, 0x22, 0xd8, 0x7d, 0xe8,
	0x4d, 0x33, 0x31, 0xc3, 0xa3, 0x02, 0x1d, 0xb5, 0x8b, 0xe4, 0x30, 0x44, 0x41, 0x22, 0x2e, 0x29,
	0x06, 0x7d, 0x25, 0x40, 0x72, 0x18, 0x7a, 0xbf, 0x03, 0x7b, 0xe1, 0x07, 0xdb, 0x81, 0xce, 0xe7,
	0x69, 0x94, 0x50, 0x80, 0x07, 0x7b, 0x1b, 0x75, 0x77, 0xdf, 0xa6, 0x51, 0x72, 0x34, 0x15, 0x99,
	0x2f, 0xd3, 0x8c, 0x93, 0x1e, 0x73, 0xc0, 0x78, 0x2f, 0xe6, 0x3a, 0xda, 0xf8, 0xc9, 0x36, 0xc0,
	0x4a, 0xb5, 0x8e, 0x0e, 0xf6, 0x82, 0x66, 0xeb, 0x60, 0xce, 0xfc, 0xb8, 0x10, 0x6e, 0x87, 0x04,
	0x8a, 0xf0, 0x7e, 0x00, 0x26, 0x4f, 0x0b, 0x29, 0xd8, 0x16, 0x98, 0x2a, 0xfd, 0x2d, 0x0a, 0x16,
	0xab, 0xef, 0x8e, 0xf9, 0xe7, 0x4a, 0xc1, 0xfb, 0x2d, 0xf4, 0x69, 0x09, 0x17, 0x79, 0x11, 0x4b,
	0x3c, 0x1b, 0xf2, 0xf1, 0x6c, 0x2d, 0x75, 0x36, 0x24, 0x1b, 0xc9, 0x35, 0xbe, 0x56, 0x72, 0x1f,
	0x82, 0xed, 0x8f, 0x05, 0x61, 0x26, 0x77, 0x3b, 0x94, 0x5b, 0x8b, 0x18, 0xc3, 0x30, 0xf7, 0xbe,
	0x6c, 0xc3, 0xca, 0x41, 0xc5, 0xcc, 0xb7, 0x00, 0x4b, 0x17, 0x7a, 0x3a, 0xad, 0x14, 0x2c, 0x83,
	0x97, 0x24, 0x82, 0x20, 0xf6, 0x73, 0x39, 0xf2, 0x03, 0x19, 0xcd, 0x44, 0x48, 0xa0, 0x35, 0x78,
	0x1f, 0x79, 0xfb, 0x8a, 0xc5, 0xee, 0x41, 0x37, 0x88, 0xd3, 0x5c, 0x84, 0x6e, 0x97, 0x84, 0x9a,
	0x62, 0x4f, 0xc0, 0x2c, 0x72, 0x91, 0x95, 0x68, 0xb4, 0x76, 0xa8, 0x44, 0xbc, 0x9c, 0x73, 0xc5,
	0x46, 0x9f, 0x82, 0x0b, 0x3f, 0x49, 0x44, 0x8c, 0x3e, 0xd9, 0xca, 0x27, 0xcd, 0x19, 0x86, 0x8c,
	0x41, 0x47, 0xfa, 0xe3, 0xdc, 0x05, 0x0a, 0x07, 0x7d, 0x63, 0x4a, 0x73, 0xe9, 0x4b, 0xa1, 0x41,
	0xa5, 0x08, 0xb6, 0x0b, 0xbd, 0x4c, 0xfc, 0xa6, 0x10, 0xb9, 0x74, 0x07, 0x14, 0x93, 0xbb, 0x8d,
	0x5c, 0x2a, 0x21, 0x2f, 0xb5, 0xde, 0x76, 0xac, 0x55, 0x67, 0xc0, 0x41, 0x93, 0xa3, 0x28, 0xf4,
	0x7e, 0xdf, 0x02, 0xe7, 0x34, 0x17, 0x59, 0x2d, 0xce, 0xd7, 0xef, 0x76, 0x1f, 0x7a, 0xe8, 0xff,
	0xb2, 0x62, 0x75, 0x91, 0x1c, 0x86, 0xec, 0x01, 0x58, 0xb8, 0x6d, 0x8a, 0x12, 0x05, 0xb9, 0x1e,
	0xd1, 0xc3, 0x90, 0x7d, 0x17, 0xd6, 0x28, 0x8a, 0xb9, 0x10, 0xc9, 0x48, 0xcc, 0x44, 0x22, 0x29,
	0x90, 0x36, 0x5f, 0x45, 0xf6, 0xb1, 0x10, 0xc9, 0x6b, 0x64, 0x7a, 0x7f, 0xef, 0x40, 0x4f, 0x7b,
	0xfb, 0x2d, 0x64, 0xb9, 0x1e, 0xf0, 0x4e, 0x33, 0xe0, 0x8f, 0x01, 0x26, 0x22, 0xcf, 0xfd, 0xb1,
	0x18, 0xc9, 0x54, 0xfb, 0x67, 0x6b, 0xce, 0x49, 0x8a, 0xc7, 0x9b, 0xa2, 0xac, 0xc8, 0x62, 0x4a,
	0xb4, 0xcd, 0x7b, 0x48, 0x9f, 0x66, 0x31, 0xae, 0x24, 0x91, 0x8c, 0x64, 0x2c, 0xa8, 0x9c, 0xda,
	0xdc, 0x46, 0xce, 0x09, 0x32, 0x10, 0x5d, 0xda, 0x0c, 0x95, 0x18, 0x9b, 0x97, 0x24, 0x7b, 0x0e,
	0xce, 0x59, 0x96, 0x7e, 0x81, 0xe1, 0x8c, 0xfd, 0x64, 0x5c, 0xa0, 0x8a, 0x02, 0xc2, 0x9a, 0xe6,
	0x1f, 0x6a, 0x36, 0xde, 0xf4, 0x85, 0x8a, 0xaa, 0x35, 0x0b, 0x9a, 0x3d, 0x85, 0x7e, 0x28, 0x66,
	0x51, 0x20, 0x46, 0x72, 0x3e, 0x2d, 0xd3, 0x05, 0x8a, 0x75, 0x32, 0x9f, 0xd6, 0x72, 0xb6, 0x52,
	0xcb, 0x59, 0xb3, 0xc6, 0xad, 0x5e, 0xad, 0x71, 0xdf, 0x83, 0xb5, 0x2a, 0x9a, 0xd0, 0xc6, 0x80,
	0x6c, 0x0c, 0xaa, 0x6c, 0xdd, 0xae, 0xa6, 0xee, 0x9a, 0xce, 0xc6, 0x94, 0x2e, 0x15, 0x46, 0x3e,
	0x9b, 0xbb, 0x4e, 0x09, 0x07, 0x22, 0x69, 0x57, 0xf5, 0x39, 0x0a, 0xd2, 0x50, 0xb8, 0xb7, 0x49,
	0xdc, 0xd7, 0xbc, 0x83, 0x34, 0x14, 0x88, 0xfe, 0x20, 0x92, 0x73, 0x97, 0x91, 0x88, 0xbe, 0xb1,
	0x4a, 0xa0, 0x93, 0xa3, 0x0f, 0x69, 0x22, 0xdc, 0x3b, 0x2a, 0x06, 0xc8, 0xf8, 0x75, 0x9a, 0x08,
	0xef, 0x17, 0xb0, 0x5a, 0x05, 0x6f, 0xce, 0x5e, 0xc0, 0x6a, 0xd5, 0xc1, 0xb2, 0xce, 0x6d, 0x5c,
	0x69, 0x0a, 0x0b, 0x82, 0xd7, 0x17, 0x78, 0x5f, 0xb6, 0xc0, 0x3c, 0x96, 0x7e, 0x26, 0xbf, 0x81,
	0x5e, 0xfe, 0x00, 0xac, 0xb2, 0xc2, 0x69, 0x60, 0xf6, 0x74, 0x81, 0xab, 0x26, 0xa7, 0x53, 0x4b,
	0x4e, 0x1d, 0xaf, 0x66, 0x13, 0xaf, 0x0f, 0xc1, 0xa6, 0x75, 0x89, 0x3f, 0x59, 0x40, 0x02, 0x19,
	0xef, 0xfc, 0x89, 0xc0, 0x1b, 0x47, 0x42, 0x7f, 0xe6, 0x4b, 0x3f, 0x23, 0xd0, 0x2a, 0x58, 0xac,
	0x22, 0x7b, 0x9f, 0xb8, 0xa7, 0x59, 0xec, 0xfd, 0xa5, 0x05, 0x2e, 0x17, 0xd3, 0x78, 0x5e, 0x0b,
	0xc4, 0xcd, 0xaf, 0x60, 0xfd, 0xd8, 0x9d, 0xaf, 0x3a, 0x76, 0xbb, 0x7e, 0xec, 0x6b, 0x70, 0x65,
	0x5c, 0x87, 0x2b, 0xef, 0x6f, 0x2d, 0xb8, 0x7d, 0x18, 0xe5, 0xb2, 0x9e, 0xde, 0xff, 0x7f, 0x06,
	0x7a, 0x5e, 0x96, 0xb7, 0x0e, 0xf5, 0xaa, 0x3b, 0x75, 0x60, 0x1c, 0xa3, 0xa8, 0xac, 0x79, 0xeb,
	0x60, 0xc6, 0x38, 0x79, 0x51, 0x12, 0x4c, 0xae, 0x08, 0x3c, 0x5c, 0x8e, 0xf0, 0x40, 0xeb, 0xba,
	0x22, 0x10, 0x3d, 0x0c, 0xbd, 0xcf, 0xe1, 0x1e, 0xba, 0x8c, 0x25, 0x35, 0x3f, 0x4d, 0x32, 0xe1,
	0x87, 0x65, 0x4c, 0x1f, 0x81, 0xbd, 0x5f, 0xba, 0xa0, 0xfb, 0xe7, 0x92, 0x81, 0x77, 0x66, 0x5f,
	0xc5, 0xa7, 0x0c, 0x97, 0x26, 0x51, 0x72, 0x4a, 0xb0, 0xc8, 0x5d, 0x83, 0x3a, 0x42, 0x49, 0x7a,
	0x9f, 0x40, 0x57, 0x6d, 0x81, 0x9d, 0x48, 0x31, 0xcb, 0xc6, 0xac, 0x28, 0xe2, 0x93, 0x06, 0x19,
	0x35, 0xb9, 0xa6, 0xbc, 0x4f, 0xa1, 0x5f, 0xf1, 0x90, 0xed, 0x40, 0x4f, 0x7d, 0x95, 0x77, 0x65,
	0xbd, 0x1e, 0x12, 0x7d, 0x90, 0x52, 0xc9, 0xfb, 0xab, 0x4e, 0x0c, 0xd5, 0xee, 0xfc, 0x7f, 0x06,
	0xcd, 0x95, 0xbb, 0x72, 0x53, 0x64, 0xd4, 0x12, 0xd0, 0xa9, 0x25, 0x60, 0x99, 0xb1, 0x6e, 0x25,
	0x63, 0xde, 0x9f, 0x5b, 0x2a, 0x2f, 0x07, 0x17, 0xbe, 0xcc, 0x5f, 0xce, 0xf1, 0xf0, 0x37, 0xcb,
	0xcb, 0x23, 0xb0, 0x0f, 0xca, 0x8b, 0x57, 0x3a, 0xbc, 0x60, 0x54, 0xe2, 0x6e, 0xd4, 0xe2, 0xee,
	0x42, 0xef, 0x58, 0xf9, 0x53, 0xba, 0x77, 0xbc, 0x74, 0xef, 0xb0, 0x0a, 0x28, 0x22, 0xbc, 0x02,
	0x56, 0xb4, 0x3b, 0x84, 0xbe, 0x46, 0x9c, 0x5a, 0x37, 0x88, 0x53, 0xfb, 0xda, 0x38, 0xd5, 0x0b,
	0x89, 0xd1, 0x28, 0x24, 0xde, 0x5b, 0xb0, 0xb8, 0xc0, 0x01, 0x27, 0x4d, 0xb0, 0xee, 0x52, 0x3d,
	0x51, 0x4a, 0xf4, 0x8d, 0xce, 0xd2, 0x96, 0x74, 0x08, 0x93, 0x2b, 0x02, 0xb9, 0x6a, 0xbc, 0x31,
	0x09, 0x8e, 0x8a, 0xf0, 0xfe, 0xd0, 0x86, 0xde, 0x67, 0xba, 0xbb, 0xe1, 0x04, 0x23, 0x2e, 0xa5,
	0x76, 0x8a, 0xbe, 0x31, 0x54, 0xe7, 0x69, 0x36, 0xf1, 0x65, 0x19, 0x2a, 0x45, 0xb1, 0x1f, 0x43,
	0xdf, 0x97, 0xd2, 0x0f, 0x2e, 0x26, 0x88, 0x25, 0x9a, 0x01, 0xfb, 0x7b, 0x6e, 0x63, 0x7c, 0x5c,
	0x28, 0xf0, 0xaa, 0x32, 0xfb, 0x18, 0xec, 0x4c, 0xfb, 0x5f, 0x0e, 0x5b, 0xf7, 0x9a, 0x13, 0x90,
	0x12, 0xf3, 0xa5, 0x22, 0x7a, 0x92, 0x4e, 0x45, 0xa2, 0xe7, 0x7e, 0x93, 0x6b, 0x0a, 0x53, 0x1d,
	0x8a, 0x38, 0x9a, 0x89, 0x4c, 0xa8, 0xa9, 0xcc, 0xe2, 0x4b, 0x06, 0xfb, 0x3e, 0x74, 0xcf, 0x23,
	0x11, 0x87, 0x6a, 0x2e, 0xeb, 0x37, 0xab, 0xc6, 0xcf, 0x50, 0xc6, 0xb5, 0x8a, 0xb7, 0x0b, 0x26,
	0x31, 0x96, 0xa3, 0xb8, 0x51, 0x19, 0xc5, 0xaf, 0x8e, 0xf3, 0xde, 0x9f, 0x5a, 0xd0, 0x7d, 0x59,
	0x48, 0xa9, 0x12, 0x41, 0xcd, 0xbc, 0x0c, 0x1e, 0xb6, 0xf1, 0x75, 0x30, 0xd5, 0x88, 0xa1, 0xcd,
	0xc8, 0x72, 0xbc, 0x98, 0xfa, 0xf3, 0x38, 0xf5, 0x17, 0x28, 0xd3, 0x24, 0x76, 0x88, 0x68, 0x52,
	0xce, 0x2c, 0xaa, 0x7f, 0x58, 0xc4, 0xd0, 0x43, 0x4b, 0x80, 0x97, 0x52, 0x81, 0x0b, 0x34, 0x28,
	0x14, 0x67, 0x18, 0xa2, 0x73, 0xb8, 0x4a, 0xb5, 0x7a, 0xfc, 0xf4, 0xfe, 0xd9, 0x82, 0x7b, 0x6f,
	0x44, 0x22, 0xb2, 0x28, 0x78, 0x1d, 0x0b, 0x0c, 0xfd, 0x89, 0x98, 0x4c, 0x63, 0x5d, 0x1f, 0x95,
	0x63, 0xed, 0xaa, 0x63, 0xb5, 0xed, 0x8d, 0xc6, 0xf6, 0x1b, 0x60, 0xe5, 0xc5, 0x99, 0x5a, 0xa5,
	0xdc, 0x5e, 0xd0, 0xec, 0x27, 0x30, 0x08, 0xc5, 0xb9, 0x5f, 0xc4, 0x6a, 0xee, 0x4e, 0x13, 0x72,
	0xfe, 0x4a, 0x3d, 0x52, 0x91, 0xe2, 0xab, 0x5a, 0x77, 0x3f, 0xd0, 0x8f, 0xaa, 0xde, 0x19, 0x09,
	0xd4, 0x2b, 0xf1, 0x3f, 0xad, 0x2a, 0x95, 0xbc, 0x3f, 0x1a, 0x00, 0x4b, 0x64, 0x2d, 0xe2, 0xbe,
	0x52, 0x89, 0xfb, 0x06, 0x58, 0x93, 0x68, 0x22, 0x2a, 0xf9, 0x58, 0xd0, 0x65, 0x9c, 0x8c, 0x45,
	0x9c, 0xd8, 0x47, 0xb0, 0x2a, 0x2f, 0x8a, 0xc9, 0x59, 0xe2, 0x47, 0x31, 0x1d, 0x5d, 0x1d, 0x6f,
	0x65, 0xc1, 0xc4, 0xe3, 0x97, 0xf7, 0xcc, 0xac, 0xdc, 0xb3, 0x27, 0x00, 0xa1, 0xc8, 0x83, 0x8c,
	0x1e, 0x87, 0xba, 0xa3, 0x54, 0x38, 0x88, 0xd8, 0x58, 0x24, 0x63, 0x79, 0x41, 0x43, 0x96, 0xc9,
	0x35, 0x85, 0xb6, 0xf2, 0xe8, 0x83, 0x1a, 0xde, 0x4c, 0x4e, 0xdf, 0xec, 0x05, 0x58, 0x42, 0x25,
	0x29, 0x77, 0x2d, 0x0a, 0xc3, 0x77, 0xea, 0x61, 0xb8, 0x3e, 0x93, 0x7c, 0xb1, 0x6a, 0x99, 0x53,
	0xbb, 0x9a, 0x53, 0xaa, 0x05, 0x71, 0x9a, 0x69, 0xc0, 0x28, 0x82, 0x20, 0x98, 0x09, 0xba, 0xec,
	0x7d, 0x0d, 0x41, 0x45, 0x56, 0xb3, 0xe1, 0xdc, 0x20, 0x1b, 0xdb, 0xcf, 0x61, 0xa5, 0xfa, 0xf0,
	0x65, 0x16, 0x74, 0x92, 0x34, 0x11, 0xce, 0x2d, 0xd6, 0x03, 0xc3, 0x4f, 0x42, 0xa7, 0xc5, 0xba,
	0xd0, 0x4e, 0x33, 0xa7, 0xbd, 0xfd, 0x01, 0x06, 0xf5, 0x07, 0x25, 0x5b, 0x05, 0x7b, 0xff, 0xf0,
	0x70, 0xff, 0xcd, 0xeb, 0x77, 0x27, 0xc7, 0xce, 0x2d, 0x36, 0x00, 0xa0, 0xef, 0x37, 0xfc, 0xe8,
	0xf4, 0xe7, 0x4e, 0x9b, 0x01, 0x74, 0xb5, 0xcc, 0x40, 0xd9, 0x67, 0x47, 0xc7, 0x27, 0xfc, 0xf5,
	0xc1, 0xeb, 0x77, 0x27, 0x4e, 0x87, 0xdd, 0x87, 0x3b, 0xfc, 0xe8, 0xf4, 0xdd, 0x2b, 0x7e, 0xf4,
	0x72, 0xf8, 0x6e, 0x69, 0xc4, 0x64, 0xeb, 0xe0, 0x54, 0x04, 0x8a, 0xdb, 0xdd, 0xe6, 0x34, 0x19,
	0x4a, 0xc1, 0xee, 0xc2, 0xed, 0x5a, 0x0d, 0xd6, 0xce, 0x0e, 0x00, 0x8a, 0x44, 0xfd, 0x3a, 0x21,
	0x42, 0xa7, 0xcd, 0xfa, 0xa0, 0x3a, 0x93, 0x08, 0x1d, 0x13, 0xfd, 0x50, 0xcf, 0x49, 0xa7, 0xcb,
	0x6c, 0x30, 0x45, 0x12, 0x8a, 0xd0, 0xb1, 0xb6, 0xff, 0xd1, 0x05, 0x93, 0x5a, 0x29, 0x73, 0x61,
	0xbd, 0x3a, 0xec, 0xec, 0x97, 0x76, 0x6e, 0xa1, 0x9b, 0x55, 0xc9, 0xaf, 0xfc, 0x48, 0x46, 0xc9,
	0xd8, 0x69, 0xb3, 0x27, 0xb0, 0x51, 0x15, 0x50, 0x9f, 0xd1, 0xbd, 0x44, 0x84, 0x8e, 0x71, 0xc5,
	0x64, 0x10, 0x88, 0x29, 0x4a, 0x3a, 0x4d, 0x93, 0xaf, 0xb2, 0x74, 0x3a, 0x25, 0x37, 0x1f, 0x81,
	0x5b, 0x15, 0x90, 0x6b, 0x07, 0xea, 0x61, 0xe0, 0x74, 0xd9, 0x63, 0x78, 0x50, 0x95, 0x62, 0xd2,
	0x96, 0xfb, 0xf5, 0xd8, 0x26, 0x3c, 0xaa, 0x8a, 0x75, 0x4b, 0x58, 0x6a, 0x58, 0x4d, 0x8f, 0x0f,
	0x85, 0x3f, 0xab, 0xc8, 0xed, 0xa6, 0xfc, 0x00, 0x1f, 0xd5, 0x4b, 0x39, 0x34, 0xdd, 0x3b, 0xf1,
	0xc7, 0x4b, 0x69, 0xbf, 0xb9, 0xfa, 0x34, 0x91, 0x55, 0xf9, 0x4a, 0xd3, 0x7d, 0xbe, 0x9c, 0xd0,
	0x44, 0xe8, 0xac, 0x36, 0xc5, 0x38, 0x33, 0x2c, 0xc5, 0x83, 0xa6, 0x75, 0x1a, 0xa0, 0x97, 0xf2,
	0x35, 0xf6, 0x11, 0x3c, 0xad, 0xed, 0x3e, 0x0d, 0xf1, 0x6e, 0x15, 0x71, 0xe5, 0x00, 0xeb, 0x4d,
	0x25, 0x15, 0xda, 0xba, 0xd2, 0xdd, 0xa6, 0xd2, 0x2b, 0x11, 0x8b, 0xa6, 0xd2, 0x3d, 0xf6, 0x0c,
	0x1e, 0x5f, 0x39, 0x4c, 0x4d, 0xe5, 0x7e, 0x53, 0x85, 0x0e, 0x54, 0x53, 0x71, 0xd9, 0x03, 0xb8,
	0x8b, 0x73, 0x11, 0xcd, 0x2e, 0xc9, 0x79, 0xba, 0x14, 0x31, 0x44, 0x79, 0x5d, 0x34, 0x8d, 0xe7,
	0xce, 0x1d, 0x5a, 0x71, 0xf5, 0xd9, 0x20, 0x42, 0x67, 0xaf, 0x99, 0xff, 0xca, 0xa4, 0xa5, 0x16,
	0xff, 0xb0, 0x99, 0x3f, 0x9a, 0x80, 0x54, 0xa0, 0x42, 0xe7, 0x63, 0xe6, 0xc1, 0x93, 0x6b, 0x4c,
	0x23, 0xde, 0xf1, 0x51, 0x9a, 0x16, 0xd2, 0xf9, 0x69, 0x33, 0x36, 0x57, 0x46, 0x51, 0x11, 0x3a,
	0x9f, 0x6e, 0x1f, 0x00, 0xa8, 0xc6, 0x40, 0x0f, 0x61, 0xbc, 0x97, 0x59, 0x3c, 0x52, 0xd5, 0xc6,
	0x69, 0xb3, 0x3b, 0xb0, 0x36, 0x4d, 0x73, 0x79, 0xe6, 0x07, 0xef, 0x4b, 0xa6, 0xc1, 0x1c, 0x58,
	0xa1, 0xdf, 0x28, 0x4a, 0x4e, 0x67, 0xfb, 0x05, 0x0c, 0x96, 0x2d, 0x82, 0x0c, 0x59, 0xd0, 0x39,
	0x8f, 0x62, 0xa1, 0xae, 0xf6, 0x58, 0xd5, 0x52, 0xc7, 0x40, 0x62, 0x9a, 0x89, 0x59, 0x24, 0xbe,
	0x70, 0x3a, 0x78, 0xcf, 0xb5, 0x05, 0xf3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x07, 0x6d,
	0x2d, 0x9f, 0x16, 0x00, 0x00,
}
