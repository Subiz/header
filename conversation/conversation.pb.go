// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation/conversation.proto

package conversation

import (
	fmt "fmt"
	common "git.subiz.net/header/common"
	user "git.subiz.net/header/user"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_ConversationAssigned            Event = 0
	Event_ConversationWaiting             Event = 2
	Event_ConversationStartRequested      Event = 3
	Event_ConversationAccepted            Event = 4
	Event_ConversationDropped             Event = 5
	Event_ConversationEventCreated        Event = 6
	Event_ConversationJoinRequested       Event = 7
	Event_ConversationMessageRequested    Event = 8
	Event_ConversationLeaveRequested      Event = 9
	Event_ConversationCloseRequested      Event = 10
	Event_ConversationTagRequested        Event = 11
	Event_ConversationUntagRequested      Event = 12
	Event_ConversationReadRequested       Event = 13
	Event_ConversationListRequested       Event = 14
	Event_ConversationAcceptRequested     Event = 15
	Event_ConversationUpdateRuleRequested Event = 20
	Event_ConversationCreateRuleRequested Event = 21
	Event_ConversationDeleteRuleRequested Event = 22
	Event_ConversationReadRuleRequested   Event = 23
	Event_ConversationListRuleRequested   Event = 24
	// ConversationRequested = 50; // user request for new conversation
	Event_ConversationUserRequestReply        Event = 51
	Event_ConversationLimitUpdated            Event = 52
	Event_ConversationRequestWaitTimeout      Event = 60
	Event_ConversationListEventsRequested     Event = 61
	Event_ChannelDeintegrateRequested         Event = 65
	Event_ChannelIntegrateRequested           Event = 66
	Event_ChannelIntegrationListRequested     Event = 67
	Event_ConnectorUpsertRequested            Event = 68
	Event_ConnectorListRequested              Event = 69
	Event_CannedResponseCreateRequested       Event = 80
	Event_CannedResponseUpdateRequested       Event = 81
	Event_CannedResponseDeleteRequested       Event = 82
	Event_CannedResponseReadRequested         Event = 83
	Event_CannedResponseListRequested         Event = 84
	Event_TagCreateRequested                  Event = 85
	Event_TagUpdateRequested                  Event = 86
	Event_TagReadRequested                    Event = 87
	Event_TagDeleteRequested                  Event = 88
	Event_TagListRequested                    Event = 89
	Event_TagCreated                          Event = 95
	Event_ConversationUpserted                Event = 97
	Event_ConversationMessageSent             Event = 99
	Event_ConversationMessageAckRequested     Event = 90
	Event_ConversationMessageReceiveRequested Event = 91
	Event_ConversationMessageSeeRequested     Event = 92
	Event_ChannelIntegrationAvailabilityCheck Event = 93
	Event_ConversationMessageSearchRequest    Event = 94
	Event_ConversationRequested               Event = 100
	Event_ConversationSynced                  Event = 101
	Event_ConversationV3Synced                Event = 102
	Event_ConversationWorkerJob               Event = 103
)

var Event_name = map[int32]string{
	0:   "ConversationAssigned",
	2:   "ConversationWaiting",
	3:   "ConversationStartRequested",
	4:   "ConversationAccepted",
	5:   "ConversationDropped",
	6:   "ConversationEventCreated",
	7:   "ConversationJoinRequested",
	8:   "ConversationMessageRequested",
	9:   "ConversationLeaveRequested",
	10:  "ConversationCloseRequested",
	11:  "ConversationTagRequested",
	12:  "ConversationUntagRequested",
	13:  "ConversationReadRequested",
	14:  "ConversationListRequested",
	15:  "ConversationAcceptRequested",
	20:  "ConversationUpdateRuleRequested",
	21:  "ConversationCreateRuleRequested",
	22:  "ConversationDeleteRuleRequested",
	23:  "ConversationReadRuleRequested",
	24:  "ConversationListRuleRequested",
	51:  "ConversationUserRequestReply",
	52:  "ConversationLimitUpdated",
	60:  "ConversationRequestWaitTimeout",
	61:  "ConversationListEventsRequested",
	65:  "ChannelDeintegrateRequested",
	66:  "ChannelIntegrateRequested",
	67:  "ChannelIntegrationListRequested",
	68:  "ConnectorUpsertRequested",
	69:  "ConnectorListRequested",
	80:  "CannedResponseCreateRequested",
	81:  "CannedResponseUpdateRequested",
	82:  "CannedResponseDeleteRequested",
	83:  "CannedResponseReadRequested",
	84:  "CannedResponseListRequested",
	85:  "TagCreateRequested",
	86:  "TagUpdateRequested",
	87:  "TagReadRequested",
	88:  "TagDeleteRequested",
	89:  "TagListRequested",
	95:  "TagCreated",
	97:  "ConversationUpserted",
	99:  "ConversationMessageSent",
	90:  "ConversationMessageAckRequested",
	91:  "ConversationMessageReceiveRequested",
	92:  "ConversationMessageSeeRequested",
	93:  "ChannelIntegrationAvailabilityCheck",
	94:  "ConversationMessageSearchRequest",
	100: "ConversationRequested",
	101: "ConversationSynced",
	102: "ConversationV3Synced",
	103: "ConversationWorkerJob",
}

var Event_value = map[string]int32{
	"ConversationAssigned":                0,
	"ConversationWaiting":                 2,
	"ConversationStartRequested":          3,
	"ConversationAccepted":                4,
	"ConversationDropped":                 5,
	"ConversationEventCreated":            6,
	"ConversationJoinRequested":           7,
	"ConversationMessageRequested":        8,
	"ConversationLeaveRequested":          9,
	"ConversationCloseRequested":          10,
	"ConversationTagRequested":            11,
	"ConversationUntagRequested":          12,
	"ConversationReadRequested":           13,
	"ConversationListRequested":           14,
	"ConversationAcceptRequested":         15,
	"ConversationUpdateRuleRequested":     20,
	"ConversationCreateRuleRequested":     21,
	"ConversationDeleteRuleRequested":     22,
	"ConversationReadRuleRequested":       23,
	"ConversationListRuleRequested":       24,
	"ConversationUserRequestReply":        51,
	"ConversationLimitUpdated":            52,
	"ConversationRequestWaitTimeout":      60,
	"ConversationListEventsRequested":     61,
	"ChannelDeintegrateRequested":         65,
	"ChannelIntegrateRequested":           66,
	"ChannelIntegrationListRequested":     67,
	"ConnectorUpsertRequested":            68,
	"ConnectorListRequested":              69,
	"CannedResponseCreateRequested":       80,
	"CannedResponseUpdateRequested":       81,
	"CannedResponseDeleteRequested":       82,
	"CannedResponseReadRequested":         83,
	"CannedResponseListRequested":         84,
	"TagCreateRequested":                  85,
	"TagUpdateRequested":                  86,
	"TagReadRequested":                    87,
	"TagDeleteRequested":                  88,
	"TagListRequested":                    89,
	"TagCreated":                          95,
	"ConversationUpserted":                97,
	"ConversationMessageSent":             99,
	"ConversationMessageAckRequested":     90,
	"ConversationMessageReceiveRequested": 91,
	"ConversationMessageSeeRequested":     92,
	"ChannelIntegrationAvailabilityCheck": 93,
	"ConversationMessageSearchRequest":    94,
	"ConversationRequested":               100,
	"ConversationSynced":                  101,
	"ConversationV3Synced":                102,
	"ConversationWorkerJob":               103,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{0}
}

type AttachmentType int32

const (
	AttachmentType_file                 AttachmentType = 2
	AttachmentType_generic              AttachmentType = 3
	AttachmentType_preview              AttachmentType = 4
	AttachmentType_button               AttachmentType = 5
	AttachmentType_input                AttachmentType = 6
	AttachmentType_ask_info_form        AttachmentType = 7
	AttachmentType_ask_info_form_answer AttachmentType = 8
	AttachmentType_form                 AttachmentType = 9
	AttachmentType_form_submit          AttachmentType = 10
	AttachmentType_fallback             AttachmentType = 11
)

var AttachmentType_name = map[int32]string{
	2:  "file",
	3:  "generic",
	4:  "preview",
	5:  "button",
	6:  "input",
	7:  "ask_info_form",
	8:  "ask_info_form_answer",
	9:  "form",
	10: "form_submit",
	11: "fallback",
}

var AttachmentType_value = map[string]int32{
	"file":                 2,
	"generic":              3,
	"preview":              4,
	"button":               5,
	"input":                6,
	"ask_info_form":        7,
	"ask_info_form_answer": 8,
	"form":                 9,
	"form_submit":          10,
	"fallback":             11,
}

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}

func (x AttachmentType) String() string {
	return proto.EnumName(AttachmentType_name, int32(x))
}

func (x *AttachmentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AttachmentType_value, data, "AttachmentType")
	if err != nil {
		return err
	}
	*x = AttachmentType(value)
	return nil
}

func (AttachmentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{1}
}

type Path int32

const (
	Path_ConversationSendMessageToConvo Path = 0
	Path_ConversationSendMessageToChain Path = 1
	Path_ConversationEndChain           Path = 2
	Path_ConversationEndConvo           Path = 3
	Path_ConversationStartConvo         Path = 4
	Path_ConversationStartInChain       Path = 5
	Path_ConversationAcceptConvo        Path = 6
	Path_ConversationAcceptChain        Path = 7
	Path_ConversationJoinConvo          Path = 8
	Path_ConversationJoinChain          Path = 9
	Path_ConversationLeaveConvo         Path = 10
	Path_ConversationLeaveChain         Path = 11
	Path_ConversationTagConvo           Path = 13
	Path_ConversationTagChain           Path = 14
	Path_ConversationJustSendConvo      Path = 15
	Path_ConversationJustSendChain      Path = 16
	Path_ConversationUpdateStateConvo   Path = 17
	Path_ConversationUpdateStateChain   Path = 18
	Path_ConversationCreateTicket       Path = 19
	Path_ConversationUpdateTicket       Path = 20
	Path_ConversationSendWebhook        Path = 21
)

var Path_name = map[int32]string{
	0:  "ConversationSendMessageToConvo",
	1:  "ConversationSendMessageToChain",
	2:  "ConversationEndChain",
	3:  "ConversationEndConvo",
	4:  "ConversationStartConvo",
	5:  "ConversationStartInChain",
	6:  "ConversationAcceptConvo",
	7:  "ConversationAcceptChain",
	8:  "ConversationJoinConvo",
	9:  "ConversationJoinChain",
	10: "ConversationLeaveConvo",
	11: "ConversationLeaveChain",
	13: "ConversationTagConvo",
	14: "ConversationTagChain",
	15: "ConversationJustSendConvo",
	16: "ConversationJustSendChain",
	17: "ConversationUpdateStateConvo",
	18: "ConversationUpdateStateChain",
	19: "ConversationCreateTicket",
	20: "ConversationUpdateTicket",
	21: "ConversationSendWebhook",
}

var Path_value = map[string]int32{
	"ConversationSendMessageToConvo": 0,
	"ConversationSendMessageToChain": 1,
	"ConversationEndChain":           2,
	"ConversationEndConvo":           3,
	"ConversationStartConvo":         4,
	"ConversationStartInChain":       5,
	"ConversationAcceptConvo":        6,
	"ConversationAcceptChain":        7,
	"ConversationJoinConvo":          8,
	"ConversationJoinChain":          9,
	"ConversationLeaveConvo":         10,
	"ConversationLeaveChain":         11,
	"ConversationTagConvo":           13,
	"ConversationTagChain":           14,
	"ConversationJustSendConvo":      15,
	"ConversationJustSendChain":      16,
	"ConversationUpdateStateConvo":   17,
	"ConversationUpdateStateChain":   18,
	"ConversationCreateTicket":       19,
	"ConversationUpdateTicket":       20,
	"ConversationSendWebhook":        21,
}

func (x Path) Enum() *Path {
	p := new(Path)
	*p = x
	return p
}

func (x Path) String() string {
	return proto.EnumName(Path_name, int32(x))
}

func (x *Path) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Path_value, data, "Path")
	if err != nil {
		return err
	}
	*x = Path(value)
	return nil
}

func (Path) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{2}
}

type TicketState int32

const (
	TicketState_open     TicketState = 0
	TicketState_pending  TicketState = 1
	TicketState_resolved TicketState = 2
	TicketState_closed   TicketState = 3
)

var TicketState_name = map[int32]string{
	0: "open",
	1: "pending",
	2: "resolved",
	3: "closed",
}

var TicketState_value = map[string]int32{
	"open":     0,
	"pending":  1,
	"resolved": 2,
	"closed":   3,
}

func (x TicketState) Enum() *TicketState {
	p := new(TicketState)
	*p = x
	return p
}

func (x TicketState) String() string {
	return proto.EnumName(TicketState_name, int32(x))
}

func (x *TicketState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TicketState_value, data, "TicketState")
	if err != nil {
		return err
	}
	*x = TicketState(value)
	return nil
}

func (TicketState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{3}
}

type TicketPriority int32

const (
	TicketPriority_low    TicketPriority = 0
	TicketPriority_medium TicketPriority = 1
	TicketPriority_hight  TicketPriority = 2
	TicketPriority_urgent TicketPriority = 3
)

var TicketPriority_name = map[int32]string{
	0: "low",
	1: "medium",
	2: "hight",
	3: "urgent",
}

var TicketPriority_value = map[string]int32{
	"low":    0,
	"medium": 1,
	"hight":  2,
	"urgent": 3,
}

func (x TicketPriority) Enum() *TicketPriority {
	p := new(TicketPriority)
	*p = x
	return p
}

func (x TicketPriority) String() string {
	return proto.EnumName(TicketPriority_name, int32(x))
}

func (x *TicketPriority) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TicketPriority_value, data, "TicketPriority")
	if err != nil {
		return err
	}
	*x = TicketPriority(value)
	return nil
}

func (TicketPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{4}
}

type TicketAttributeType int32

const (
	TicketAttributeType_text     TicketAttributeType = 0
	TicketAttributeType_number   TicketAttributeType = 1
	TicketAttributeType_boolean  TicketAttributeType = 2
	TicketAttributeType_datetime TicketAttributeType = 3
	TicketAttributeType_list     TicketAttributeType = 4
)

var TicketAttributeType_name = map[int32]string{
	0: "text",
	1: "number",
	2: "boolean",
	3: "datetime",
	4: "list",
}

var TicketAttributeType_value = map[string]int32{
	"text":     0,
	"number":   1,
	"boolean":  2,
	"datetime": 3,
	"list":     4,
}

func (x TicketAttributeType) Enum() *TicketAttributeType {
	p := new(TicketAttributeType)
	*p = x
	return p
}

func (x TicketAttributeType) String() string {
	return proto.EnumName(TicketAttributeType_name, int32(x))
}

func (x *TicketAttributeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TicketAttributeType_value, data, "TicketAttributeType")
	if err != nil {
		return err
	}
	*x = TicketAttributeType(value)
	return nil
}

func (TicketAttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{5}
}

type TicketAttributeKind int32

const (
	TicketAttributeKind_system  TicketAttributeKind = 0
	TicketAttributeKind_default TicketAttributeKind = 1
	TicketAttributeKind_custom  TicketAttributeKind = 2
)

var TicketAttributeKind_name = map[int32]string{
	0: "system",
	1: "default",
	2: "custom",
}

var TicketAttributeKind_value = map[string]int32{
	"system":  0,
	"default": 1,
	"custom":  2,
}

func (x TicketAttributeKind) Enum() *TicketAttributeKind {
	p := new(TicketAttributeKind)
	*p = x
	return p
}

func (x TicketAttributeKind) String() string {
	return proto.EnumName(TicketAttributeKind_name, int32(x))
}

func (x *TicketAttributeKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TicketAttributeKind_value, data, "TicketAttributeKind")
	if err != nil {
		return err
	}
	*x = TicketAttributeKind(value)
	return nil
}

func (TicketAttributeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{6}
}

type TicketAttributeDataState int32

const (
	TicketAttributeDataState_live    TicketAttributeDataState = 0
	TicketAttributeDataState_deleted TicketAttributeDataState = 1
)

var TicketAttributeDataState_name = map[int32]string{
	0: "live",
	1: "deleted",
}

var TicketAttributeDataState_value = map[string]int32{
	"live":    0,
	"deleted": 1,
}

func (x TicketAttributeDataState) Enum() *TicketAttributeDataState {
	p := new(TicketAttributeDataState)
	*p = x
	return p
}

func (x TicketAttributeDataState) String() string {
	return proto.EnumName(TicketAttributeDataState_name, int32(x))
}

func (x *TicketAttributeDataState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TicketAttributeDataState_value, data, "TicketAttributeDataState")
	if err != nil {
		return err
	}
	*x = TicketAttributeDataState(value)
	return nil
}

func (TicketAttributeDataState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{7}
}

type Rule_AssignStrategy int32

const (
	Rule_all_agents            Rule_AssignStrategy = 0
	Rule_agentgroup            Rule_AssignStrategy = 2
	Rule_agents                Rule_AssignStrategy = 3
	Rule_most_recent           Rule_AssignStrategy = 4
	Rule_roundrobin_all_agents Rule_AssignStrategy = 5
	Rule_roundrobin_agents     Rule_AssignStrategy = 6
)

var Rule_AssignStrategy_name = map[int32]string{
	0: "all_agents",
	2: "agentgroup",
	3: "agents",
	4: "most_recent",
	5: "roundrobin_all_agents",
	6: "roundrobin_agents",
}

var Rule_AssignStrategy_value = map[string]int32{
	"all_agents":            0,
	"agentgroup":            2,
	"agents":                3,
	"most_recent":           4,
	"roundrobin_all_agents": 5,
	"roundrobin_agents":     6,
}

func (x Rule_AssignStrategy) Enum() *Rule_AssignStrategy {
	p := new(Rule_AssignStrategy)
	*p = x
	return p
}

func (x Rule_AssignStrategy) String() string {
	return proto.EnumName(Rule_AssignStrategy_name, int32(x))
}

func (x *Rule_AssignStrategy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Rule_AssignStrategy_value, data, "Rule_AssignStrategy")
	if err != nil {
		return err
	}
	*x = Rule_AssignStrategy(value)
	return nil
}

func (Rule_AssignStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{0, 0}
}

type Condition_JoinOperator int32

const (
	Condition_none Condition_JoinOperator = 0
	Condition_and  Condition_JoinOperator = 1
	Condition_or   Condition_JoinOperator = 2
)

var Condition_JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}

var Condition_JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x Condition_JoinOperator) Enum() *Condition_JoinOperator {
	p := new(Condition_JoinOperator)
	*p = x
	return p
}

func (x Condition_JoinOperator) String() string {
	return proto.EnumName(Condition_JoinOperator_name, int32(x))
}

func (x *Condition_JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Condition_JoinOperator_value, data, "Condition_JoinOperator")
	if err != nil {
		return err
	}
	*x = Condition_JoinOperator(value)
	return nil
}

func (Condition_JoinOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{3, 0}
}

type Conversation_State int32

const (
	Conversation_conversation_none Conversation_State = 0
	Conversation_unassigned        Conversation_State = 2
	Conversation_active            Conversation_State = 6
	Conversation_ended             Conversation_State = 8
	Conversation_pending           Conversation_State = 9
)

var Conversation_State_name = map[int32]string{
	0: "conversation_none",
	2: "unassigned",
	6: "active",
	8: "ended",
	9: "pending",
}

var Conversation_State_value = map[string]int32{
	"conversation_none": 0,
	"unassigned":        2,
	"active":            6,
	"ended":             8,
	"pending":           9,
}

func (x Conversation_State) Enum() *Conversation_State {
	p := new(Conversation_State)
	*p = x
	return p
}

func (x Conversation_State) String() string {
	return proto.EnumName(Conversation_State_name, int32(x))
}

func (x *Conversation_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Conversation_State_value, data, "Conversation_State")
	if err != nil {
		return err
	}
	*x = Conversation_State(value)
	return nil
}

func (Conversation_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{9, 0}
}

type Button_ButtonType int32

const (
	Button_url_button      Button_ButtonType = 2
	Button_postback_button Button_ButtonType = 3
	Button_event_button    Button_ButtonType = 4
)

var Button_ButtonType_name = map[int32]string{
	2: "url_button",
	3: "postback_button",
	4: "event_button",
}

var Button_ButtonType_value = map[string]int32{
	"url_button":      2,
	"postback_button": 3,
	"event_button":    4,
}

func (x Button_ButtonType) Enum() *Button_ButtonType {
	p := new(Button_ButtonType)
	*p = x
	return p
}

func (x Button_ButtonType) String() string {
	return proto.EnumName(Button_ButtonType_name, int32(x))
}

func (x *Button_ButtonType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Button_ButtonType_value, data, "Button_ButtonType")
	if err != nil {
		return err
	}
	*x = Button_ButtonType(value)
	return nil
}

func (Button_ButtonType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{26, 0}
}

type AskInfomation_InputType int32

const (
	AskInfomation_phone    AskInfomation_InputType = 0
	AskInfomation_email    AskInfomation_InputType = 1
	AskInfomation_text     AskInfomation_InputType = 2
	AskInfomation_password AskInfomation_InputType = 3
	AskInfomation_number   AskInfomation_InputType = 4
	AskInfomation_date     AskInfomation_InputType = 5
	AskInfomation_color    AskInfomation_InputType = 6
	AskInfomation_location AskInfomation_InputType = 7
	AskInfomation_time     AskInfomation_InputType = 8
	AskInfomation_url      AskInfomation_InputType = 9
)

var AskInfomation_InputType_name = map[int32]string{
	0: "phone",
	1: "email",
	2: "text",
	3: "password",
	4: "number",
	5: "date",
	6: "color",
	7: "location",
	8: "time",
	9: "url",
}

var AskInfomation_InputType_value = map[string]int32{
	"phone":    0,
	"email":    1,
	"text":     2,
	"password": 3,
	"number":   4,
	"date":     5,
	"color":    6,
	"location": 7,
	"time":     8,
	"url":      9,
}

func (x AskInfomation_InputType) Enum() *AskInfomation_InputType {
	p := new(AskInfomation_InputType)
	*p = x
	return p
}

func (x AskInfomation_InputType) String() string {
	return proto.EnumName(AskInfomation_InputType_name, int32(x))
}

func (x *AskInfomation_InputType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AskInfomation_InputType_value, data, "AskInfomation_InputType")
	if err != nil {
		return err
	}
	*x = AskInfomation_InputType(value)
	return nil
}

func (AskInfomation_InputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{28, 0}
}

type UseConnector_State int32

const (
	UseConnector_disabled  UseConnector_State = 0
	UseConnector_activated UseConnector_State = 1
)

var UseConnector_State_name = map[int32]string{
	0: "disabled",
	1: "activated",
}

var UseConnector_State_value = map[string]int32{
	"disabled":  0,
	"activated": 1,
}

func (x UseConnector_State) Enum() *UseConnector_State {
	p := new(UseConnector_State)
	*p = x
	return p
}

func (x UseConnector_State) String() string {
	return proto.EnumName(UseConnector_State_name, int32(x))
}

func (x *UseConnector_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UseConnector_State_value, data, "UseConnector_State")
	if err != nil {
		return err
	}
	*x = UseConnector_State(value)
	return nil
}

func (UseConnector_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{39, 0}
}

type Integration_State int32

const (
	Integration_disabled  Integration_State = 0
	Integration_activated Integration_State = 1
)

var Integration_State_name = map[int32]string{
	0: "disabled",
	1: "activated",
}

var Integration_State_value = map[string]int32{
	"disabled":  0,
	"activated": 1,
}

func (x Integration_State) Enum() *Integration_State {
	p := new(Integration_State)
	*p = x
	return p
}

func (x Integration_State) String() string {
	return proto.EnumName(Integration_State_name, int32(x))
}

func (x *Integration_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Integration_State_value, data, "Integration_State")
	if err != nil {
		return err
	}
	*x = Integration_State(value)
	return nil
}

func (Integration_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{41, 0}
}

type CountByAgentRequest_Range int32

const (
	CountByAgentRequest_hour CountByAgentRequest_Range = 0
	CountByAgentRequest_day  CountByAgentRequest_Range = 1
)

var CountByAgentRequest_Range_name = map[int32]string{
	0: "hour",
	1: "day",
}

var CountByAgentRequest_Range_value = map[string]int32{
	"hour": 0,
	"day":  1,
}

func (x CountByAgentRequest_Range) Enum() *CountByAgentRequest_Range {
	p := new(CountByAgentRequest_Range)
	*p = x
	return p
}

func (x CountByAgentRequest_Range) String() string {
	return proto.EnumName(CountByAgentRequest_Range_name, int32(x))
}

func (x *CountByAgentRequest_Range) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CountByAgentRequest_Range_value, data, "CountByAgentRequest_Range")
	if err != nil {
		return err
	}
	*x = CountByAgentRequest_Range(value)
	return nil
}

func (CountByAgentRequest_Range) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{46, 0}
}

type CountByGroupRequest_Range int32

const (
	CountByGroupRequest_hour CountByGroupRequest_Range = 0
	CountByGroupRequest_day  CountByGroupRequest_Range = 1
)

var CountByGroupRequest_Range_name = map[int32]string{
	0: "hour",
	1: "day",
}

var CountByGroupRequest_Range_value = map[string]int32{
	"hour": 0,
	"day":  1,
}

func (x CountByGroupRequest_Range) Enum() *CountByGroupRequest_Range {
	p := new(CountByGroupRequest_Range)
	*p = x
	return p
}

func (x CountByGroupRequest_Range) String() string {
	return proto.EnumName(CountByGroupRequest_Range_name, int32(x))
}

func (x *CountByGroupRequest_Range) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CountByGroupRequest_Range_value, data, "CountByGroupRequest_Range")
	if err != nil {
		return err
	}
	*x = CountByGroupRequest_Range(value)
	return nil
}

func (CountByGroupRequest_Range) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{47, 0}
}

type CountByAgentsRequest_Range int32

const (
	CountByAgentsRequest_hour CountByAgentsRequest_Range = 0
	CountByAgentsRequest_day  CountByAgentsRequest_Range = 1
)

var CountByAgentsRequest_Range_name = map[int32]string{
	0: "hour",
	1: "day",
}

var CountByAgentsRequest_Range_value = map[string]int32{
	"hour": 0,
	"day":  1,
}

func (x CountByAgentsRequest_Range) Enum() *CountByAgentsRequest_Range {
	p := new(CountByAgentsRequest_Range)
	*p = x
	return p
}

func (x CountByAgentsRequest_Range) String() string {
	return proto.EnumName(CountByAgentsRequest_Range_name, int32(x))
}

func (x *CountByAgentsRequest_Range) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CountByAgentsRequest_Range_value, data, "CountByAgentsRequest_Range")
	if err != nil {
		return err
	}
	*x = CountByAgentsRequest_Range(value)
	return nil
}

func (CountByAgentsRequest_Range) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{48, 0}
}

type CountByTagsRequest_Range int32

const (
	CountByTagsRequest_hour CountByTagsRequest_Range = 0
	CountByTagsRequest_day  CountByTagsRequest_Range = 1
)

var CountByTagsRequest_Range_name = map[int32]string{
	0: "hour",
	1: "day",
}

var CountByTagsRequest_Range_value = map[string]int32{
	"hour": 0,
	"day":  1,
}

func (x CountByTagsRequest_Range) Enum() *CountByTagsRequest_Range {
	p := new(CountByTagsRequest_Range)
	*p = x
	return p
}

func (x CountByTagsRequest_Range) String() string {
	return proto.EnumName(CountByTagsRequest_Range_name, int32(x))
}

func (x *CountByTagsRequest_Range) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CountByTagsRequest_Range_value, data, "CountByTagsRequest_Range")
	if err != nil {
		return err
	}
	*x = CountByTagsRequest_Range(value)
	return nil
}

func (CountByTagsRequest_Range) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{49, 0}
}

type Rule struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Priority             *int32          `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	Strategy             *string         `protobuf:"bytes,5,opt,name=strategy" json:"strategy,omitempty"`
	AssignTos            []string        `protobuf:"bytes,6,rep,name=assign_tos,json=assignTos" json:"assign_tos,omitempty"`
	Conditions           []*Condition    `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty"`
	Enabled              *bool           `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	Created              *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,12,opt,name=modified" json:"modified,omitempty"`
	Name                 *string         `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	Description          *string         `protobuf:"bytes,11,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{0}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Rule) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Rule) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Rule) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *Rule) GetStrategy() string {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return ""
}

func (m *Rule) GetAssignTos() []string {
	if m != nil {
		return m.AssignTos
	}
	return nil
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Rule) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Rule) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Rule) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Rule) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type AvailabilityCheckRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	IntegrationId        *string         `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	User                 *user.User      `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	AccountId            *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string         `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AvailabilityCheckRequest) Reset()         { *m = AvailabilityCheckRequest{} }
func (m *AvailabilityCheckRequest) String() string { return proto.CompactTextString(m) }
func (*AvailabilityCheckRequest) ProtoMessage()    {}
func (*AvailabilityCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{1}
}

func (m *AvailabilityCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityCheckRequest.Unmarshal(m, b)
}
func (m *AvailabilityCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityCheckRequest.Marshal(b, m, deterministic)
}
func (m *AvailabilityCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityCheckRequest.Merge(m, src)
}
func (m *AvailabilityCheckRequest) XXX_Size() int {
	return xxx_messageInfo_AvailabilityCheckRequest.Size(m)
}
func (m *AvailabilityCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityCheckRequest proto.InternalMessageInfo

func (m *AvailabilityCheckRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AvailabilityCheckRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *AvailabilityCheckRequest) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AvailabilityCheckRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AvailabilityCheckRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type AvailabilityCheckResult struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Availability         *bool           `protobuf:"varint,2,opt,name=availability" json:"availability,omitempty"`
	Reason               *string         `protobuf:"bytes,3,opt,name=reason" json:"reason,omitempty"`
	Payload              *string         `protobuf:"bytes,5,opt,name=payload" json:"payload,omitempty"`
	IntegrationId        *string         `protobuf:"bytes,6,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,7,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AvailabilityCheckResult) Reset()         { *m = AvailabilityCheckResult{} }
func (m *AvailabilityCheckResult) String() string { return proto.CompactTextString(m) }
func (*AvailabilityCheckResult) ProtoMessage()    {}
func (*AvailabilityCheckResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{2}
}

func (m *AvailabilityCheckResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityCheckResult.Unmarshal(m, b)
}
func (m *AvailabilityCheckResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityCheckResult.Marshal(b, m, deterministic)
}
func (m *AvailabilityCheckResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityCheckResult.Merge(m, src)
}
func (m *AvailabilityCheckResult) XXX_Size() int {
	return xxx_messageInfo_AvailabilityCheckResult.Size(m)
}
func (m *AvailabilityCheckResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityCheckResult.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityCheckResult proto.InternalMessageInfo

func (m *AvailabilityCheckResult) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AvailabilityCheckResult) GetAvailability() bool {
	if m != nil && m.Availability != nil {
		return *m.Availability
	}
	return false
}

func (m *AvailabilityCheckResult) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *AvailabilityCheckResult) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *AvailabilityCheckResult) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *AvailabilityCheckResult) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type Condition struct {
	Join                 *string  `protobuf:"bytes,1,opt,name=join" json:"join,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator             *string  `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value                *string  `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{3}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetJoin() string {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return ""
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Route struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Rules                []*Rule         `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{4}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Route) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type RouteResult struct {
	RuleId               *string  `protobuf:"bytes,1,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	Strategy             *string  `protobuf:"bytes,3,opt,name=strategy" json:"strategy,omitempty"`
	AgentIds             []string `protobuf:"bytes,4,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	GroupId              *string  `protobuf:"bytes,5,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteResult) Reset()         { *m = RouteResult{} }
func (m *RouteResult) String() string { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()    {}
func (*RouteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{5}
}

func (m *RouteResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteResult.Unmarshal(m, b)
}
func (m *RouteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteResult.Marshal(b, m, deterministic)
}
func (m *RouteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteResult.Merge(m, src)
}
func (m *RouteResult) XXX_Size() int {
	return xxx_messageInfo_RouteResult.Size(m)
}
func (m *RouteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteResult.DiscardUnknown(m)
}

var xxx_messageInfo_RouteResult proto.InternalMessageInfo

func (m *RouteResult) GetRuleId() string {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return ""
}

func (m *RouteResult) GetStrategy() string {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return ""
}

func (m *RouteResult) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *RouteResult) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

type MemberSeen struct {
	MemberId             *string  `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	MessageId            *string  `protobuf:"bytes,3,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberSeen) Reset()         { *m = MemberSeen{} }
func (m *MemberSeen) String() string { return proto.CompactTextString(m) }
func (*MemberSeen) ProtoMessage()    {}
func (*MemberSeen) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{6}
}

func (m *MemberSeen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberSeen.Unmarshal(m, b)
}
func (m *MemberSeen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberSeen.Marshal(b, m, deterministic)
}
func (m *MemberSeen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberSeen.Merge(m, src)
}
func (m *MemberSeen) XXX_Size() int {
	return xxx_messageInfo_MemberSeen.Size(m)
}
func (m *MemberSeen) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberSeen.DiscardUnknown(m)
}

var xxx_messageInfo_MemberSeen proto.InternalMessageInfo

func (m *MemberSeen) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *MemberSeen) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

type MemberV3 struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,5,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name                 *string         `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	AvatarUrl            *string         `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Type                 *string         `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MemberV3) Reset()         { *m = MemberV3{} }
func (m *MemberV3) String() string { return proto.CompactTextString(m) }
func (*MemberV3) ProtoMessage()    {}
func (*MemberV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{7}
}

func (m *MemberV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberV3.Unmarshal(m, b)
}
func (m *MemberV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberV3.Marshal(b, m, deterministic)
}
func (m *MemberV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberV3.Merge(m, src)
}
func (m *MemberV3) XXX_Size() int {
	return xxx_messageInfo_MemberV3.Size(m)
}
func (m *MemberV3) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberV3.DiscardUnknown(m)
}

var xxx_messageInfo_MemberV3 proto.InternalMessageInfo

func (m *MemberV3) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *MemberV3) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MemberV3) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *MemberV3) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *MemberV3) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MemberV3) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *MemberV3) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type Member struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Type                 *string         `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	SubizId              *string         `protobuf:"bytes,8,opt,name=subiz_id,json=subizId" json:"subiz_id,omitempty"`
	Id                   *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	Name                 *string         `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	AvatarUrl            *string         `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Left                 *bool           `protobuf:"varint,11,opt,name=left" json:"left,omitempty"`
	ConversationId       *string         `protobuf:"bytes,13,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Fields               []*Field        `protobuf:"bytes,14,rep,name=fields" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{8}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Member) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Member) GetSubizId() string {
	if m != nil && m.SubizId != nil {
		return *m.SubizId
	}
	return ""
}

func (m *Member) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Member) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Member) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *Member) GetLeft() bool {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return false
}

func (m *Member) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Member) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Conversation struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created              *int64          `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Closed               *int64          `protobuf:"varint,6,opt,name=closed" json:"closed,omitempty"`
	Members              []*Member       `protobuf:"bytes,7,rep,name=members" json:"members,omitempty"`
	Tags                 []*Tag          `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	State                *string         `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	Request              *StartRequest   `protobuf:"bytes,14,opt,name=request" json:"request,omitempty"`
	Accepted             *int64          `protobuf:"varint,15,opt,name=accepted" json:"accepted,omitempty"`
	ChannelType          *string         `protobuf:"bytes,17,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	Integration          *Integration    `protobuf:"bytes,18,opt,name=integration" json:"integration,omitempty"`
	Actived              *int64          `protobuf:"varint,19,opt,name=actived" json:"actived,omitempty"`
	LastMessageId        *string         `protobuf:"bytes,21,opt,name=last_message_id,json=lastMessageId" json:"last_message_id,omitempty"`
	LastMessage          *Message        `protobuf:"bytes,20,opt,name=last_message,json=lastMessage" json:"last_message,omitempty"`
	ResponseSec          *int64          `protobuf:"varint,22,opt,name=response_sec,json=responseSec" json:"response_sec,omitempty"`
	ChainId              *string         `protobuf:"bytes,24,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	LeftMembers          []*Member       `protobuf:"bytes,25,rep,name=left_members,json=leftMembers" json:"left_members,omitempty"`
	AssignTo             *RouteResult    `protobuf:"bytes,26,opt,name=assign_to,json=assignTo" json:"assign_to,omitempty"`
	Ticket               *Ticket         `protobuf:"bytes,27,opt,name=ticket" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Conversation) Reset()         { *m = Conversation{} }
func (m *Conversation) String() string { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()    {}
func (*Conversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{9}
}

func (m *Conversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversation.Unmarshal(m, b)
}
func (m *Conversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversation.Marshal(b, m, deterministic)
}
func (m *Conversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversation.Merge(m, src)
}
func (m *Conversation) XXX_Size() int {
	return xxx_messageInfo_Conversation.Size(m)
}
func (m *Conversation) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversation.DiscardUnknown(m)
}

var xxx_messageInfo_Conversation proto.InternalMessageInfo

func (m *Conversation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Conversation) GetClosed() int64 {
	if m != nil && m.Closed != nil {
		return *m.Closed
	}
	return 0
}

func (m *Conversation) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Conversation) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Conversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Conversation) GetRequest() *StartRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Conversation) GetAccepted() int64 {
	if m != nil && m.Accepted != nil {
		return *m.Accepted
	}
	return 0
}

func (m *Conversation) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

func (m *Conversation) GetIntegration() *Integration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *Conversation) GetActived() int64 {
	if m != nil && m.Actived != nil {
		return *m.Actived
	}
	return 0
}

func (m *Conversation) GetLastMessageId() string {
	if m != nil && m.LastMessageId != nil {
		return *m.LastMessageId
	}
	return ""
}

func (m *Conversation) GetLastMessage() *Message {
	if m != nil {
		return m.LastMessage
	}
	return nil
}

func (m *Conversation) GetResponseSec() int64 {
	if m != nil && m.ResponseSec != nil {
		return *m.ResponseSec
	}
	return 0
}

func (m *Conversation) GetChainId() string {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return ""
}

func (m *Conversation) GetLeftMembers() []*Member {
	if m != nil {
		return m.LeftMembers
	}
	return nil
}

func (m *Conversation) GetAssignTo() *RouteResult {
	if m != nil {
		return m.AssignTo
	}
	return nil
}

func (m *Conversation) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type UserConversation struct {
	AccountId            *string  `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State                *string  `protobuf:"bytes,11,opt,name=state" json:"state,omitempty"`
	UserId               *string  `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ConvoId              *string  `protobuf:"bytes,4,opt,name=convo_id,json=convoId" json:"convo_id,omitempty"`
	LastSeenEvent        *string  `protobuf:"bytes,5,opt,name=last_seen_event,json=lastSeenEvent" json:"last_seen_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserConversation) Reset()         { *m = UserConversation{} }
func (m *UserConversation) String() string { return proto.CompactTextString(m) }
func (*UserConversation) ProtoMessage()    {}
func (*UserConversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{10}
}

func (m *UserConversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserConversation.Unmarshal(m, b)
}
func (m *UserConversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserConversation.Marshal(b, m, deterministic)
}
func (m *UserConversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserConversation.Merge(m, src)
}
func (m *UserConversation) XXX_Size() int {
	return xxx_messageInfo_UserConversation.Size(m)
}
func (m *UserConversation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserConversation.DiscardUnknown(m)
}

var xxx_messageInfo_UserConversation proto.InternalMessageInfo

func (m *UserConversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserConversation) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *UserConversation) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserConversation) GetConvoId() string {
	if m != nil && m.ConvoId != nil {
		return *m.ConvoId
	}
	return ""
}

func (m *UserConversation) GetLastSeenEvent() string {
	if m != nil && m.LastSeenEvent != nil {
		return *m.LastSeenEvent
	}
	return ""
}

type StartRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelType          *string         `protobuf:"bytes,4,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
	From                 *string         `protobuf:"bytes,12,opt,name=from" json:"from,omitempty"`
	To                   []string        `protobuf:"bytes,5,rep,name=to" json:"to,omitempty"`
	PageUrl              *string         `protobuf:"bytes,6,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	PageTitle            *string         `protobuf:"bytes,7,opt,name=page_title,json=pageTitle" json:"page_title,omitempty"`
	Message              *string         `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	BrowserLanguage      *string         `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	Language             *string         `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	DeviceType           *string         `protobuf:"bytes,11,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	Created              *int64          `protobuf:"varint,13,opt,name=created" json:"created,omitempty"`
	ConversationId       *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Ip                   *string         `protobuf:"bytes,15,opt,name=ip" json:"ip,omitempty"`
	Country              *string         `protobuf:"bytes,16,opt,name=country" json:"country,omitempty"`
	CountryCode          *string         `protobuf:"bytes,17,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	City                 *string         `protobuf:"bytes,18,opt,name=city" json:"city,omitempty"`
	Timezone             *string         `protobuf:"bytes,19,opt,name=timezone" json:"timezone,omitempty"`
	StarterId            *string         `protobuf:"bytes,20,opt,name=starter_id,json=starterId" json:"starter_id,omitempty"`
	StarterType          *string         `protobuf:"bytes,21,opt,name=starter_type,json=starterType" json:"starter_type,omitempty"`
	AgentIds             []string        `protobuf:"bytes,22,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	User                 *user.User      `protobuf:"bytes,25,opt,name=user" json:"user,omitempty"`
	IntegrationId        *string         `protobuf:"bytes,26,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	ChainId              *string         `protobuf:"bytes,27,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	State                *string         `protobuf:"bytes,28,opt,name=state" json:"state,omitempty"`
	AutomationId         *string         `protobuf:"bytes,29,opt,name=automation_id,json=automationId" json:"automation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{11}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *StartRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *StartRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *StartRequest) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

func (m *StartRequest) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *StartRequest) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *StartRequest) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *StartRequest) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *StartRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *StartRequest) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *StartRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *StartRequest) GetDeviceType() string {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return ""
}

func (m *StartRequest) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *StartRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *StartRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *StartRequest) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *StartRequest) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *StartRequest) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *StartRequest) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *StartRequest) GetStarterId() string {
	if m != nil && m.StarterId != nil {
		return *m.StarterId
	}
	return ""
}

func (m *StartRequest) GetStarterType() string {
	if m != nil && m.StarterType != nil {
		return *m.StarterType
	}
	return ""
}

func (m *StartRequest) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *StartRequest) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *StartRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *StartRequest) GetChainId() string {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return ""
}

func (m *StartRequest) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *StartRequest) GetAutomationId() string {
	if m != nil && m.AutomationId != nil {
		return *m.AutomationId
	}
	return ""
}

type Conversations struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Conversations        []*Conversation `protobuf:"bytes,3,rep,name=conversations" json:"conversations,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	UserIds              []string        `protobuf:"bytes,5,rep,name=user_ids,json=userIds" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Conversations) Reset()         { *m = Conversations{} }
func (m *Conversations) String() string { return proto.CompactTextString(m) }
func (*Conversations) ProtoMessage()    {}
func (*Conversations) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{12}
}

func (m *Conversations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversations.Unmarshal(m, b)
}
func (m *Conversations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversations.Marshal(b, m, deterministic)
}
func (m *Conversations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversations.Merge(m, src)
}
func (m *Conversations) XXX_Size() int {
	return xxx_messageInfo_Conversations.Size(m)
}
func (m *Conversations) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversations.DiscardUnknown(m)
}

var xxx_messageInfo_Conversations proto.InternalMessageInfo

func (m *Conversations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Conversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

func (m *Conversations) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *Conversations) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type Search struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Keyword              *string         `protobuf:"bytes,4,opt,name=keyword" json:"keyword,omitempty"`
	Limit                *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	BeforeId             *string         `protobuf:"bytes,6,opt,name=before_id,json=beforeId" json:"before_id,omitempty"`
	AfterId              *string         `protobuf:"bytes,7,opt,name=after_id,json=afterId" json:"after_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Search) Reset()         { *m = Search{} }
func (m *Search) String() string { return proto.CompactTextString(m) }
func (*Search) ProtoMessage()    {}
func (*Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{13}
}

func (m *Search) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Search.Unmarshal(m, b)
}
func (m *Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Search.Marshal(b, m, deterministic)
}
func (m *Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Search.Merge(m, src)
}
func (m *Search) XXX_Size() int {
	return xxx_messageInfo_Search.Size(m)
}
func (m *Search) XXX_DiscardUnknown() {
	xxx_messageInfo_Search.DiscardUnknown(m)
}

var xxx_messageInfo_Search proto.InternalMessageInfo

func (m *Search) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Search) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Search) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *Search) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *Search) GetBeforeId() string {
	if m != nil && m.BeforeId != nil {
		return *m.BeforeId
	}
	return ""
}

func (m *Search) GetAfterId() string {
	if m != nil && m.AfterId != nil {
		return *m.AfterId
	}
	return ""
}

type ListConversationsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State                *string         `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Limit                *int32          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string         `protobuf:"bytes,6,opt,name=anchor" json:"anchor,omitempty"`
	MemberId             *string         `protobuf:"bytes,8,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	GroupBy              *string         `protobuf:"bytes,9,opt,name=group_by,json=groupBy" json:"group_by,omitempty"`
	IntegrationId        *string         `protobuf:"bytes,10,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListConversationsRequest) Reset()         { *m = ListConversationsRequest{} }
func (m *ListConversationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListConversationsRequest) ProtoMessage()    {}
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{14}
}

func (m *ListConversationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConversationsRequest.Unmarshal(m, b)
}
func (m *ListConversationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConversationsRequest.Marshal(b, m, deterministic)
}
func (m *ListConversationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConversationsRequest.Merge(m, src)
}
func (m *ListConversationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListConversationsRequest.Size(m)
}
func (m *ListConversationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConversationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListConversationsRequest proto.InternalMessageInfo

func (m *ListConversationsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListConversationsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListConversationsRequest) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *ListConversationsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListConversationsRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListConversationsRequest) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *ListConversationsRequest) GetGroupBy() string {
	if m != nil && m.GroupBy != nil {
		return *m.GroupBy
	}
	return ""
}

func (m *ListConversationsRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

type ListEventsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	StartId              *string         `protobuf:"bytes,4,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Limit                *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListEventsRequest) Reset()         { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()    {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{15}
}

func (m *ListEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventsRequest.Unmarshal(m, b)
}
func (m *ListEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventsRequest.Merge(m, src)
}
func (m *ListEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEventsRequest.Size(m)
}
func (m *ListEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventsRequest proto.InternalMessageInfo

func (m *ListEventsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListEventsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListEventsRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *ListEventsRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListEventsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListConversationsByUserRequest struct {
	AccountId            *string  `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelId            *string  `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	UserId               *string  `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	StartId              *string  `protobuf:"bytes,4,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Limit                *int32   `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConversationsByUserRequest) Reset()         { *m = ListConversationsByUserRequest{} }
func (m *ListConversationsByUserRequest) String() string { return proto.CompactTextString(m) }
func (*ListConversationsByUserRequest) ProtoMessage()    {}
func (*ListConversationsByUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{16}
}

func (m *ListConversationsByUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConversationsByUserRequest.Unmarshal(m, b)
}
func (m *ListConversationsByUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConversationsByUserRequest.Marshal(b, m, deterministic)
}
func (m *ListConversationsByUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConversationsByUserRequest.Merge(m, src)
}
func (m *ListConversationsByUserRequest) XXX_Size() int {
	return xxx_messageInfo_ListConversationsByUserRequest.Size(m)
}
func (m *ListConversationsByUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConversationsByUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListConversationsByUserRequest proto.InternalMessageInfo

func (m *ListConversationsByUserRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListConversationsByUserRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type RequestState struct {
	AccountId            *string  `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string  `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	ChannelId            *string  `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestState) Reset()         { *m = RequestState{} }
func (m *RequestState) String() string { return proto.CompactTextString(m) }
func (*RequestState) ProtoMessage()    {}
func (*RequestState) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{17}
}

func (m *RequestState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestState.Unmarshal(m, b)
}
func (m *RequestState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestState.Marshal(b, m, deterministic)
}
func (m *RequestState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestState.Merge(m, src)
}
func (m *RequestState) XXX_Size() int {
	return xxx_messageInfo_RequestState.Size(m)
}
func (m *RequestState) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestState.DiscardUnknown(m)
}

var xxx_messageInfo_RequestState proto.InternalMessageInfo

func (m *RequestState) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RequestState) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RequestState) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type Reaction struct {
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Count                *int32   `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Users                []string `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reaction) Reset()         { *m = Reaction{} }
func (m *Reaction) String() string { return proto.CompactTextString(m) }
func (*Reaction) ProtoMessage()    {}
func (*Reaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{18}
}

func (m *Reaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reaction.Unmarshal(m, b)
}
func (m *Reaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reaction.Marshal(b, m, deterministic)
}
func (m *Reaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reaction.Merge(m, src)
}
func (m *Reaction) XXX_Size() int {
	return xxx_messageInfo_Reaction.Size(m)
}
func (m *Reaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Reaction.DiscardUnknown(m)
}

var xxx_messageInfo_Reaction proto.InternalMessageInfo

func (m *Reaction) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Reaction) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Reaction) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type EsMessage struct {
	Id                   *string  `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string  `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string  `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	MemberIds            []string `protobuf:"bytes,5,rep,name=member_ids,json=memberIds" json:"member_ids,omitempty"`
	Text                 *string  `protobuf:"bytes,6,opt,name=text" json:"text,omitempty"`
	Attachments          []string `protobuf:"bytes,7,rep,name=attachments" json:"attachments,omitempty"`
	Fields               []string `protobuf:"bytes,8,rep,name=fields" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EsMessage) Reset()         { *m = EsMessage{} }
func (m *EsMessage) String() string { return proto.CompactTextString(m) }
func (*EsMessage) ProtoMessage()    {}
func (*EsMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{19}
}

func (m *EsMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EsMessage.Unmarshal(m, b)
}
func (m *EsMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EsMessage.Marshal(b, m, deterministic)
}
func (m *EsMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EsMessage.Merge(m, src)
}
func (m *EsMessage) XXX_Size() int {
	return xxx_messageInfo_EsMessage.Size(m)
}
func (m *EsMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EsMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EsMessage proto.InternalMessageInfo

func (m *EsMessage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *EsMessage) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *EsMessage) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *EsMessage) GetMemberIds() []string {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

func (m *EsMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *EsMessage) GetAttachments() []string {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *EsMessage) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Message struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id                   *string         `protobuf:"bytes,11,opt,name=id" json:"id,omitempty"`
	Text                 *string         `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Format               *string         `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	Attachments          []*Attachment   `protobuf:"bytes,4,rep,name=attachments" json:"attachments,omitempty"`
	Reactions            []*Reaction     `protobuf:"bytes,7,rep,name=reactions" json:"reactions,omitempty"`
	Fields               []*Field        `protobuf:"bytes,10,rep,name=fields" json:"fields,omitempty"`
	Computed             *Computed       `protobuf:"bytes,12,opt,name=computed" json:"computed,omitempty"`
	IntegrationId        *string         `protobuf:"bytes,15,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	ChainId              *string         `protobuf:"bytes,16,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{20}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Message) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Message) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Message) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Message) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Message) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *Message) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Message) GetReactions() []*Reaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

func (m *Message) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Message) GetComputed() *Computed {
	if m != nil {
		return m.Computed
	}
	return nil
}

func (m *Message) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *Message) GetChainId() string {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return ""
}

type Computed struct {
	Seen                 []*Seen     `protobuf:"bytes,4,rep,name=seen" json:"seen,omitempty"`
	Ack                  []*Ack      `protobuf:"bytes,5,rep,name=ack" json:"ack,omitempty"`
	Received             []*Received `protobuf:"bytes,6,rep,name=received" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Computed) Reset()         { *m = Computed{} }
func (m *Computed) String() string { return proto.CompactTextString(m) }
func (*Computed) ProtoMessage()    {}
func (*Computed) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{21}
}

func (m *Computed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Computed.Unmarshal(m, b)
}
func (m *Computed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Computed.Marshal(b, m, deterministic)
}
func (m *Computed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Computed.Merge(m, src)
}
func (m *Computed) XXX_Size() int {
	return xxx_messageInfo_Computed.Size(m)
}
func (m *Computed) XXX_DiscardUnknown() {
	xxx_messageInfo_Computed.DiscardUnknown(m)
}

var xxx_messageInfo_Computed proto.InternalMessageInfo

func (m *Computed) GetSeen() []*Seen {
	if m != nil {
		return m.Seen
	}
	return nil
}

func (m *Computed) GetAck() []*Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *Computed) GetReceived() []*Received {
	if m != nil {
		return m.Received
	}
	return nil
}

type Seen struct {
	MemberId             *string  `protobuf:"bytes,6,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	At                   *int64   `protobuf:"varint,4,opt,name=at" json:"at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Seen) Reset()         { *m = Seen{} }
func (m *Seen) String() string { return proto.CompactTextString(m) }
func (*Seen) ProtoMessage()    {}
func (*Seen) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{22}
}

func (m *Seen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seen.Unmarshal(m, b)
}
func (m *Seen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seen.Marshal(b, m, deterministic)
}
func (m *Seen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seen.Merge(m, src)
}
func (m *Seen) XXX_Size() int {
	return xxx_messageInfo_Seen.Size(m)
}
func (m *Seen) XXX_DiscardUnknown() {
	xxx_messageInfo_Seen.DiscardUnknown(m)
}

var xxx_messageInfo_Seen proto.InternalMessageInfo

func (m *Seen) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Seen) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Ack struct {
	MemberId             *string  `protobuf:"bytes,5,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Error                *string  `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	At                   *int64   `protobuf:"varint,4,opt,name=at" json:"at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{23}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Ack) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Ack) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Received struct {
	MemberId             *string  `protobuf:"bytes,4,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	At                   *int64   `protobuf:"varint,5,opt,name=at" json:"at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Received) Reset()         { *m = Received{} }
func (m *Received) String() string { return proto.CompactTextString(m) }
func (*Received) ProtoMessage()    {}
func (*Received) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{24}
}

func (m *Received) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Received.Unmarshal(m, b)
}
func (m *Received) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Received.Marshal(b, m, deterministic)
}
func (m *Received) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Received.Merge(m, src)
}
func (m *Received) XXX_Size() int {
	return xxx_messageInfo_Received.Size(m)
}
func (m *Received) XXX_DiscardUnknown() {
	xxx_messageInfo_Received.DiscardUnknown(m)
}

var xxx_messageInfo_Received proto.InternalMessageInfo

func (m *Received) GetMemberId() string {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return ""
}

func (m *Received) GetAt() int64 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

type Field struct {
	Value                *string  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{25}
}

func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Field) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type Button struct {
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Id   *string `protobuf:"bytes,15,opt,name=id" json:"id,omitempty"`
	// post back
	Title     *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Payload   *string `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	ImageUrl  *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	ContentId *string `protobuf:"bytes,10,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	// 	optional RawEvent event = 12;
	Url                  *string  `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Button) Reset()         { *m = Button{} }
func (m *Button) String() string { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()    {}
func (*Button) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{26}
}

func (m *Button) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Button.Unmarshal(m, b)
}
func (m *Button) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Button.Marshal(b, m, deterministic)
}
func (m *Button) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Button.Merge(m, src)
}
func (m *Button) XXX_Size() int {
	return xxx_messageInfo_Button.Size(m)
}
func (m *Button) XXX_DiscardUnknown() {
	xxx_messageInfo_Button.DiscardUnknown(m)
}

var xxx_messageInfo_Button proto.InternalMessageInfo

func (m *Button) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Button) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Button) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Button) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *Button) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *Button) GetContentId() string {
	if m != nil && m.ContentId != nil {
		return *m.ContentId
	}
	return ""
}

func (m *Button) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type AskInfomationAnswer struct {
	MessageId            *string  `protobuf:"bytes,2,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Answer               *string  `protobuf:"bytes,3,opt,name=answer" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AskInfomationAnswer) Reset()         { *m = AskInfomationAnswer{} }
func (m *AskInfomationAnswer) String() string { return proto.CompactTextString(m) }
func (*AskInfomationAnswer) ProtoMessage()    {}
func (*AskInfomationAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{27}
}

func (m *AskInfomationAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AskInfomationAnswer.Unmarshal(m, b)
}
func (m *AskInfomationAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AskInfomationAnswer.Marshal(b, m, deterministic)
}
func (m *AskInfomationAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AskInfomationAnswer.Merge(m, src)
}
func (m *AskInfomationAnswer) XXX_Size() int {
	return xxx_messageInfo_AskInfomationAnswer.Size(m)
}
func (m *AskInfomationAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_AskInfomationAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_AskInfomationAnswer proto.InternalMessageInfo

func (m *AskInfomationAnswer) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *AskInfomationAnswer) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

type AskInfomation struct {
	Question             *string  `protobuf:"bytes,2,opt,name=question" json:"question,omitempty"`
	InputType            *string  `protobuf:"bytes,3,opt,name=input_type,json=inputType" json:"input_type,omitempty"`
	Key                  *string  `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Answer               *string  `protobuf:"bytes,5,opt,name=answer" json:"answer,omitempty"`
	Answered             *int64   `protobuf:"varint,6,opt,name=answered" json:"answered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AskInfomation) Reset()         { *m = AskInfomation{} }
func (m *AskInfomation) String() string { return proto.CompactTextString(m) }
func (*AskInfomation) ProtoMessage()    {}
func (*AskInfomation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{28}
}

func (m *AskInfomation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AskInfomation.Unmarshal(m, b)
}
func (m *AskInfomation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AskInfomation.Marshal(b, m, deterministic)
}
func (m *AskInfomation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AskInfomation.Merge(m, src)
}
func (m *AskInfomation) XXX_Size() int {
	return xxx_messageInfo_AskInfomation.Size(m)
}
func (m *AskInfomation) XXX_DiscardUnknown() {
	xxx_messageInfo_AskInfomation.DiscardUnknown(m)
}

var xxx_messageInfo_AskInfomation proto.InternalMessageInfo

func (m *AskInfomation) GetQuestion() string {
	if m != nil && m.Question != nil {
		return *m.Question
	}
	return ""
}

func (m *AskInfomation) GetInputType() string {
	if m != nil && m.InputType != nil {
		return *m.InputType
	}
	return ""
}

func (m *AskInfomation) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AskInfomation) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *AskInfomation) GetAnswered() int64 {
	if m != nil && m.Answered != nil {
		return *m.Answered
	}
	return 0
}

type GenericElementTemplate struct {
	Title                *string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ImageUrl             *string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Subtitle             *string   `protobuf:"bytes,4,opt,name=subtitle" json:"subtitle,omitempty"`
	DefaultAction        *Button   `protobuf:"bytes,5,opt,name=default_action,json=defaultAction" json:"default_action,omitempty"`
	Buttons              []*Button `protobuf:"bytes,6,rep,name=buttons" json:"buttons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GenericElementTemplate) Reset()         { *m = GenericElementTemplate{} }
func (m *GenericElementTemplate) String() string { return proto.CompactTextString(m) }
func (*GenericElementTemplate) ProtoMessage()    {}
func (*GenericElementTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{29}
}

func (m *GenericElementTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericElementTemplate.Unmarshal(m, b)
}
func (m *GenericElementTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericElementTemplate.Marshal(b, m, deterministic)
}
func (m *GenericElementTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericElementTemplate.Merge(m, src)
}
func (m *GenericElementTemplate) XXX_Size() int {
	return xxx_messageInfo_GenericElementTemplate.Size(m)
}
func (m *GenericElementTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericElementTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_GenericElementTemplate proto.InternalMessageInfo

func (m *GenericElementTemplate) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *GenericElementTemplate) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *GenericElementTemplate) GetSubtitle() string {
	if m != nil && m.Subtitle != nil {
		return *m.Subtitle
	}
	return ""
}

func (m *GenericElementTemplate) GetDefaultAction() *Button {
	if m != nil {
		return m.DefaultAction
	}
	return nil
}

func (m *GenericElementTemplate) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type Attachment struct {
	Type *string `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	// file
	Mimetype     *string `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Url          *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	ThumbnailUrl *string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl" json:"thumbnail_url,omitempty"`
	Name         *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description  *string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	// optional string data = 7; // for custom data
	Length *int32 `protobuf:"varint,15,opt,name=length" json:"length,omitempty"`
	Size   *int32 `protobuf:"varint,13,opt,name=size" json:"size,omitempty"`
	// generic
	Elements []*GenericElementTemplate `protobuf:"bytes,8,rep,name=elements" json:"elements,omitempty"`
	// preview
	Title                *string              `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Color                *string              `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	Pretext              *string              `protobuf:"bytes,11,opt,name=pretext" json:"pretext,omitempty"`
	Buttons              []*Button            `protobuf:"bytes,16,rep,name=buttons" json:"buttons,omitempty"`
	AskInfo              *AskInfomation       `protobuf:"bytes,17,opt,name=ask_info,json=askInfo" json:"ask_info,omitempty"`
	AskInfoAnswer        *AskInfomationAnswer `protobuf:"bytes,18,opt,name=ask_info_answer,json=askInfoAnswer" json:"ask_info_answer,omitempty"`
	Form                 *Form                `protobuf:"bytes,20,opt,name=form" json:"form,omitempty"`
	FormSubmit           *FormSubmit          `protobuf:"bytes,21,opt,name=form_submit,json=formSubmit" json:"form_submit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Attachment) Reset()         { *m = Attachment{} }
func (m *Attachment) String() string { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()    {}
func (*Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{30}
}

func (m *Attachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attachment.Unmarshal(m, b)
}
func (m *Attachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attachment.Marshal(b, m, deterministic)
}
func (m *Attachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachment.Merge(m, src)
}
func (m *Attachment) XXX_Size() int {
	return xxx_messageInfo_Attachment.Size(m)
}
func (m *Attachment) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachment.DiscardUnknown(m)
}

var xxx_messageInfo_Attachment proto.InternalMessageInfo

func (m *Attachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Attachment) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *Attachment) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Attachment) GetThumbnailUrl() string {
	if m != nil && m.ThumbnailUrl != nil {
		return *m.ThumbnailUrl
	}
	return ""
}

func (m *Attachment) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Attachment) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Attachment) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *Attachment) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Attachment) GetElements() []*GenericElementTemplate {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (m *Attachment) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Attachment) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *Attachment) GetPretext() string {
	if m != nil && m.Pretext != nil {
		return *m.Pretext
	}
	return ""
}

func (m *Attachment) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

func (m *Attachment) GetAskInfo() *AskInfomation {
	if m != nil {
		return m.AskInfo
	}
	return nil
}

func (m *Attachment) GetAskInfoAnswer() *AskInfomationAnswer {
	if m != nil {
		return m.AskInfoAnswer
	}
	return nil
}

func (m *Attachment) GetForm() *Form {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *Attachment) GetFormSubmit() *FormSubmit {
	if m != nil {
		return m.FormSubmit
	}
	return nil
}

type Form struct {
	Title                *string      `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	State                *string      `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Fields               []*FormField `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
	SubmitUrl            *string      `protobuf:"bytes,5,opt,name=submit_url,json=submitUrl" json:"submit_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Form) Reset()         { *m = Form{} }
func (m *Form) String() string { return proto.CompactTextString(m) }
func (*Form) ProtoMessage()    {}
func (*Form) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{31}
}

func (m *Form) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Form.Unmarshal(m, b)
}
func (m *Form) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Form.Marshal(b, m, deterministic)
}
func (m *Form) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Form.Merge(m, src)
}
func (m *Form) XXX_Size() int {
	return xxx_messageInfo_Form.Size(m)
}
func (m *Form) XXX_DiscardUnknown() {
	xxx_messageInfo_Form.DiscardUnknown(m)
}

var xxx_messageInfo_Form proto.InternalMessageInfo

func (m *Form) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Form) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Form) GetFields() []*FormField {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Form) GetSubmitUrl() string {
	if m != nil && m.SubmitUrl != nil {
		return *m.SubmitUrl
	}
	return ""
}

type FormSubmit struct {
	FormMessageId        *string      `protobuf:"bytes,2,opt,name=form_message_id,json=formMessageId" json:"form_message_id,omitempty"`
	Fields               []*FormField `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
	State                *string      `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FormSubmit) Reset()         { *m = FormSubmit{} }
func (m *FormSubmit) String() string { return proto.CompactTextString(m) }
func (*FormSubmit) ProtoMessage()    {}
func (*FormSubmit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{32}
}

func (m *FormSubmit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormSubmit.Unmarshal(m, b)
}
func (m *FormSubmit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormSubmit.Marshal(b, m, deterministic)
}
func (m *FormSubmit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormSubmit.Merge(m, src)
}
func (m *FormSubmit) XXX_Size() int {
	return xxx_messageInfo_FormSubmit.Size(m)
}
func (m *FormSubmit) XXX_DiscardUnknown() {
	xxx_messageInfo_FormSubmit.DiscardUnknown(m)
}

var xxx_messageInfo_FormSubmit proto.InternalMessageInfo

func (m *FormSubmit) GetFormMessageId() string {
	if m != nil && m.FormMessageId != nil {
		return *m.FormMessageId
	}
	return ""
}

func (m *FormSubmit) GetFields() []*FormField {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *FormSubmit) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

type FormField struct {
	InputType            *string  `protobuf:"bytes,2,opt,name=input_type,json=inputType" json:"input_type,omitempty"`
	Items                []string `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	State                *string  `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Title                *string  `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	ImageUrl             *string  `protobuf:"bytes,6,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	Name                 *string  `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Answer               *string  `protobuf:"bytes,8,opt,name=answer" json:"answer,omitempty"`
	Answered             *int64   `protobuf:"varint,9,opt,name=answered" json:"answered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormField) Reset()         { *m = FormField{} }
func (m *FormField) String() string { return proto.CompactTextString(m) }
func (*FormField) ProtoMessage()    {}
func (*FormField) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{33}
}

func (m *FormField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormField.Unmarshal(m, b)
}
func (m *FormField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormField.Marshal(b, m, deterministic)
}
func (m *FormField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormField.Merge(m, src)
}
func (m *FormField) XXX_Size() int {
	return xxx_messageInfo_FormField.Size(m)
}
func (m *FormField) XXX_DiscardUnknown() {
	xxx_messageInfo_FormField.DiscardUnknown(m)
}

var xxx_messageInfo_FormField proto.InternalMessageInfo

func (m *FormField) GetInputType() string {
	if m != nil && m.InputType != nil {
		return *m.InputType
	}
	return ""
}

func (m *FormField) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FormField) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *FormField) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *FormField) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *FormField) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FormField) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *FormField) GetAnswered() int64 {
	if m != nil && m.Answered != nil {
		return *m.Answered
	}
	return 0
}

type Tag struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Title                *string         `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Created              *int64          `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,6,opt,name=modified" json:"modified,omitempty"`
	CreatorId            *string         `protobuf:"bytes,7,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Color                *string         `protobuf:"bytes,8,opt,name=color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{34}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Tag) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Tag) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Tag) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Tag) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Tag) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Tag) GetCreatorId() string {
	if m != nil && m.CreatorId != nil {
		return *m.CreatorId
	}
	return ""
}

func (m *Tag) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

type CannedResponse struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Text                 *string         `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`
	Keys                 []string        `protobuf:"bytes,6,rep,name=keys" json:"keys,omitempty"`
	Created              *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,8,opt,name=modified" json:"modified,omitempty"`
	Creator              *string         `protobuf:"bytes,9,opt,name=creator" json:"creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CannedResponse) Reset()         { *m = CannedResponse{} }
func (m *CannedResponse) String() string { return proto.CompactTextString(m) }
func (*CannedResponse) ProtoMessage()    {}
func (*CannedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{35}
}

func (m *CannedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CannedResponse.Unmarshal(m, b)
}
func (m *CannedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CannedResponse.Marshal(b, m, deterministic)
}
func (m *CannedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CannedResponse.Merge(m, src)
}
func (m *CannedResponse) XXX_Size() int {
	return xxx_messageInfo_CannedResponse.Size(m)
}
func (m *CannedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CannedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CannedResponse proto.InternalMessageInfo

func (m *CannedResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CannedResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CannedResponse) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CannedResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CannedResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CannedResponse) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *CannedResponse) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *CannedResponse) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

type CannedResponses struct {
	Ctx                  *common.Context   `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Responses            []*CannedResponse `protobuf:"bytes,3,rep,name=responses" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CannedResponses) Reset()         { *m = CannedResponses{} }
func (m *CannedResponses) String() string { return proto.CompactTextString(m) }
func (*CannedResponses) ProtoMessage()    {}
func (*CannedResponses) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{36}
}

func (m *CannedResponses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CannedResponses.Unmarshal(m, b)
}
func (m *CannedResponses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CannedResponses.Marshal(b, m, deterministic)
}
func (m *CannedResponses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CannedResponses.Merge(m, src)
}
func (m *CannedResponses) XXX_Size() int {
	return xxx_messageInfo_CannedResponses.Size(m)
}
func (m *CannedResponses) XXX_DiscardUnknown() {
	xxx_messageInfo_CannedResponses.DiscardUnknown(m)
}

var xxx_messageInfo_CannedResponses proto.InternalMessageInfo

func (m *CannedResponses) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CannedResponses) GetResponses() []*CannedResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type Tags struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Tags                 []*Tag          `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Tags) Reset()         { *m = Tags{} }
func (m *Tags) String() string { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()    {}
func (*Tags) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{37}
}

func (m *Tags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags.Unmarshal(m, b)
}
func (m *Tags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags.Marshal(b, m, deterministic)
}
func (m *Tags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags.Merge(m, src)
}
func (m *Tags) XXX_Size() int {
	return xxx_messageInfo_Tags.Size(m)
}
func (m *Tags) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags.DiscardUnknown(m)
}

var xxx_messageInfo_Tags proto.InternalMessageInfo

func (m *Tags) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Tags) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Postback struct {
	Message              *Message `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Button               *Button  `protobuf:"bytes,3,opt,name=button" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Postback) Reset()         { *m = Postback{} }
func (m *Postback) String() string { return proto.CompactTextString(m) }
func (*Postback) ProtoMessage()    {}
func (*Postback) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{38}
}

func (m *Postback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Postback.Unmarshal(m, b)
}
func (m *Postback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Postback.Marshal(b, m, deterministic)
}
func (m *Postback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Postback.Merge(m, src)
}
func (m *Postback) XXX_Size() int {
	return xxx_messageInfo_Postback.Size(m)
}
func (m *Postback) XXX_DiscardUnknown() {
	xxx_messageInfo_Postback.DiscardUnknown(m)
}

var xxx_messageInfo_Postback proto.InternalMessageInfo

func (m *Postback) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Postback) GetButton() *Button {
	if m != nil {
		return m.Button
	}
	return nil
}

type UseConnector struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConnectorId          *string  `protobuf:"bytes,3,opt,name=connector_id,json=connectorId" json:"connector_id,omitempty"`
	State                *string  `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	Updated              *string  `protobuf:"bytes,9,opt,name=updated" json:"updated,omitempty"`
	By                   *string  `protobuf:"bytes,10,opt,name=by" json:"by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseConnector) Reset()         { *m = UseConnector{} }
func (m *UseConnector) String() string { return proto.CompactTextString(m) }
func (*UseConnector) ProtoMessage()    {}
func (*UseConnector) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{39}
}

func (m *UseConnector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseConnector.Unmarshal(m, b)
}
func (m *UseConnector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseConnector.Marshal(b, m, deterministic)
}
func (m *UseConnector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseConnector.Merge(m, src)
}
func (m *UseConnector) XXX_Size() int {
	return xxx_messageInfo_UseConnector.Size(m)
}
func (m *UseConnector) XXX_DiscardUnknown() {
	xxx_messageInfo_UseConnector.DiscardUnknown(m)
}

var xxx_messageInfo_UseConnector proto.InternalMessageInfo

func (m *UseConnector) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UseConnector) GetConnectorId() string {
	if m != nil && m.ConnectorId != nil {
		return *m.ConnectorId
	}
	return ""
}

func (m *UseConnector) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *UseConnector) GetUpdated() string {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return ""
}

func (m *UseConnector) GetBy() string {
	if m != nil && m.By != nil {
		return *m.By
	}
	return ""
}

type Integrations struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Integrations         []*Integration  `protobuf:"bytes,3,rep,name=integrations" json:"integrations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Integrations) Reset()         { *m = Integrations{} }
func (m *Integrations) String() string { return proto.CompactTextString(m) }
func (*Integrations) ProtoMessage()    {}
func (*Integrations) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{40}
}

func (m *Integrations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Integrations.Unmarshal(m, b)
}
func (m *Integrations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Integrations.Marshal(b, m, deterministic)
}
func (m *Integrations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Integrations.Merge(m, src)
}
func (m *Integrations) XXX_Size() int {
	return xxx_messageInfo_Integrations.Size(m)
}
func (m *Integrations) XXX_DiscardUnknown() {
	xxx_messageInfo_Integrations.DiscardUnknown(m)
}

var xxx_messageInfo_Integrations proto.InternalMessageInfo

func (m *Integrations) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Integrations) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Integrations) GetIntegrations() []*Integration {
	if m != nil {
		return m.Integrations
	}
	return nil
}

type Integration struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConnectorId          *string         `protobuf:"bytes,3,opt,name=connector_id,json=connectorId" json:"connector_id,omitempty"`
	LogoUrl              *string         `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Name                 *string         `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	ConnectorType        *string         `protobuf:"bytes,12,opt,name=connector_type,json=connectorType" json:"connector_type,omitempty"`
	Integrated           *int64          `protobuf:"varint,6,opt,name=integrated" json:"integrated,omitempty"`
	Updated              *int64          `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	State                *string         `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	Id                   *string         `protobuf:"bytes,10,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Integration) Reset()         { *m = Integration{} }
func (m *Integration) String() string { return proto.CompactTextString(m) }
func (*Integration) ProtoMessage()    {}
func (*Integration) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{41}
}

func (m *Integration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Integration.Unmarshal(m, b)
}
func (m *Integration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Integration.Marshal(b, m, deterministic)
}
func (m *Integration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Integration.Merge(m, src)
}
func (m *Integration) XXX_Size() int {
	return xxx_messageInfo_Integration.Size(m)
}
func (m *Integration) XXX_DiscardUnknown() {
	xxx_messageInfo_Integration.DiscardUnknown(m)
}

var xxx_messageInfo_Integration proto.InternalMessageInfo

func (m *Integration) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Integration) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Integration) GetConnectorId() string {
	if m != nil && m.ConnectorId != nil {
		return *m.ConnectorId
	}
	return ""
}

func (m *Integration) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Integration) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Integration) GetConnectorType() string {
	if m != nil && m.ConnectorType != nil {
		return *m.ConnectorType
	}
	return ""
}

func (m *Integration) GetIntegrated() int64 {
	if m != nil && m.Integrated != nil {
		return *m.Integrated
	}
	return 0
}

func (m *Integration) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Integration) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Integration) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type SearchMessageRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	UserIds              []string        `protobuf:"bytes,4,rep,name=user_ids,json=userIds" json:"user_ids,omitempty"`
	Query                *string         `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
	Anchor               *string         `protobuf:"bytes,6,opt,name=anchor" json:"anchor,omitempty"`
	Limit                *int32          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchMessageRequest) Reset()         { *m = SearchMessageRequest{} }
func (m *SearchMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SearchMessageRequest) ProtoMessage()    {}
func (*SearchMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{42}
}

func (m *SearchMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMessageRequest.Unmarshal(m, b)
}
func (m *SearchMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMessageRequest.Marshal(b, m, deterministic)
}
func (m *SearchMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMessageRequest.Merge(m, src)
}
func (m *SearchMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SearchMessageRequest.Size(m)
}
func (m *SearchMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMessageRequest proto.InternalMessageInfo

func (m *SearchMessageRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SearchMessageRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SearchMessageRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *SearchMessageRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *SearchMessageRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *SearchMessageRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *SearchMessageRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type MessageId struct {
	ConversationId       *string  `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	MessageId            *string  `protobuf:"bytes,4,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageId) Reset()         { *m = MessageId{} }
func (m *MessageId) String() string { return proto.CompactTextString(m) }
func (*MessageId) ProtoMessage()    {}
func (*MessageId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{43}
}

func (m *MessageId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageId.Unmarshal(m, b)
}
func (m *MessageId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageId.Marshal(b, m, deterministic)
}
func (m *MessageId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageId.Merge(m, src)
}
func (m *MessageId) XXX_Size() int {
	return xxx_messageInfo_MessageId.Size(m)
}
func (m *MessageId) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageId.DiscardUnknown(m)
}

var xxx_messageInfo_MessageId proto.InternalMessageInfo

func (m *MessageId) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *MessageId) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

type MessageAck struct {
	ConversationId       *string  `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	MessageId            *string  `protobuf:"bytes,4,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Error                *string  `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageAck) Reset()         { *m = MessageAck{} }
func (m *MessageAck) String() string { return proto.CompactTextString(m) }
func (*MessageAck) ProtoMessage()    {}
func (*MessageAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{44}
}

func (m *MessageAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageAck.Unmarshal(m, b)
}
func (m *MessageAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageAck.Marshal(b, m, deterministic)
}
func (m *MessageAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageAck.Merge(m, src)
}
func (m *MessageAck) XXX_Size() int {
	return xxx_messageInfo_MessageAck.Size(m)
}
func (m *MessageAck) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageAck.DiscardUnknown(m)
}

var xxx_messageInfo_MessageAck proto.InternalMessageInfo

func (m *MessageAck) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *MessageAck) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *MessageAck) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type TagRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id                   *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TagRequest) Reset()         { *m = TagRequest{} }
func (m *TagRequest) String() string { return proto.CompactTextString(m) }
func (*TagRequest) ProtoMessage()    {}
func (*TagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{45}
}

func (m *TagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRequest.Unmarshal(m, b)
}
func (m *TagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRequest.Marshal(b, m, deterministic)
}
func (m *TagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRequest.Merge(m, src)
}
func (m *TagRequest) XXX_Size() int {
	return xxx_messageInfo_TagRequest.Size(m)
}
func (m *TagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TagRequest proto.InternalMessageInfo

func (m *TagRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *TagRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *TagRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *TagRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type CountByAgentRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IntegrationId        *string  `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	AgentId              *string  `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	From                 *int32   `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,6,opt,name=to" json:"to,omitempty"`
	Range                *string  `protobuf:"bytes,8,opt,name=range" json:"range,omitempty"`
	HasUser              *bool    `protobuf:"varint,9,opt,name=has_user,json=hasUser" json:"has_user,omitempty"`
	FromHour             *int32   `protobuf:"varint,10,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour               *int32   `protobuf:"varint,11,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByAgentRequest) Reset()         { *m = CountByAgentRequest{} }
func (m *CountByAgentRequest) String() string { return proto.CompactTextString(m) }
func (*CountByAgentRequest) ProtoMessage()    {}
func (*CountByAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{46}
}

func (m *CountByAgentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByAgentRequest.Unmarshal(m, b)
}
func (m *CountByAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByAgentRequest.Marshal(b, m, deterministic)
}
func (m *CountByAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByAgentRequest.Merge(m, src)
}
func (m *CountByAgentRequest) XXX_Size() int {
	return xxx_messageInfo_CountByAgentRequest.Size(m)
}
func (m *CountByAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountByAgentRequest proto.InternalMessageInfo

func (m *CountByAgentRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CountByAgentRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *CountByAgentRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *CountByAgentRequest) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *CountByAgentRequest) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *CountByAgentRequest) GetRange() string {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return ""
}

func (m *CountByAgentRequest) GetHasUser() bool {
	if m != nil && m.HasUser != nil {
		return *m.HasUser
	}
	return false
}

func (m *CountByAgentRequest) GetFromHour() int32 {
	if m != nil && m.FromHour != nil {
		return *m.FromHour
	}
	return 0
}

func (m *CountByAgentRequest) GetToHour() int32 {
	if m != nil && m.ToHour != nil {
		return *m.ToHour
	}
	return 0
}

type CountByGroupRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IntegrationId        *string  `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	GroupId              *string  `protobuf:"bytes,4,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	From                 *int32   `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,6,opt,name=to" json:"to,omitempty"`
	Range                *string  `protobuf:"bytes,8,opt,name=range" json:"range,omitempty"`
	HasUser              *bool    `protobuf:"varint,9,opt,name=has_user,json=hasUser" json:"has_user,omitempty"`
	FromHour             *int32   `protobuf:"varint,10,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour               *int32   `protobuf:"varint,11,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByGroupRequest) Reset()         { *m = CountByGroupRequest{} }
func (m *CountByGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CountByGroupRequest) ProtoMessage()    {}
func (*CountByGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{47}
}

func (m *CountByGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByGroupRequest.Unmarshal(m, b)
}
func (m *CountByGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByGroupRequest.Marshal(b, m, deterministic)
}
func (m *CountByGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByGroupRequest.Merge(m, src)
}
func (m *CountByGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CountByGroupRequest.Size(m)
}
func (m *CountByGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountByGroupRequest proto.InternalMessageInfo

func (m *CountByGroupRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CountByGroupRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *CountByGroupRequest) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *CountByGroupRequest) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *CountByGroupRequest) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *CountByGroupRequest) GetRange() string {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return ""
}

func (m *CountByGroupRequest) GetHasUser() bool {
	if m != nil && m.HasUser != nil {
		return *m.HasUser
	}
	return false
}

func (m *CountByGroupRequest) GetFromHour() int32 {
	if m != nil && m.FromHour != nil {
		return *m.FromHour
	}
	return 0
}

func (m *CountByGroupRequest) GetToHour() int32 {
	if m != nil && m.ToHour != nil {
		return *m.ToHour
	}
	return 0
}

type CountByAgentsRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IntegrationId        *string  `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	AgentIds             []string `protobuf:"bytes,4,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
	From                 *int32   `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,6,opt,name=to" json:"to,omitempty"`
	Range                *string  `protobuf:"bytes,8,opt,name=range" json:"range,omitempty"`
	HasUser              *bool    `protobuf:"varint,9,opt,name=has_user,json=hasUser" json:"has_user,omitempty"`
	FromHour             *int32   `protobuf:"varint,10,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour               *int32   `protobuf:"varint,11,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByAgentsRequest) Reset()         { *m = CountByAgentsRequest{} }
func (m *CountByAgentsRequest) String() string { return proto.CompactTextString(m) }
func (*CountByAgentsRequest) ProtoMessage()    {}
func (*CountByAgentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{48}
}

func (m *CountByAgentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByAgentsRequest.Unmarshal(m, b)
}
func (m *CountByAgentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByAgentsRequest.Marshal(b, m, deterministic)
}
func (m *CountByAgentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByAgentsRequest.Merge(m, src)
}
func (m *CountByAgentsRequest) XXX_Size() int {
	return xxx_messageInfo_CountByAgentsRequest.Size(m)
}
func (m *CountByAgentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByAgentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountByAgentsRequest proto.InternalMessageInfo

func (m *CountByAgentsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CountByAgentsRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *CountByAgentsRequest) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

func (m *CountByAgentsRequest) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *CountByAgentsRequest) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *CountByAgentsRequest) GetRange() string {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return ""
}

func (m *CountByAgentsRequest) GetHasUser() bool {
	if m != nil && m.HasUser != nil {
		return *m.HasUser
	}
	return false
}

func (m *CountByAgentsRequest) GetFromHour() int32 {
	if m != nil && m.FromHour != nil {
		return *m.FromHour
	}
	return 0
}

func (m *CountByAgentsRequest) GetToHour() int32 {
	if m != nil && m.ToHour != nil {
		return *m.ToHour
	}
	return 0
}

type CountByTagsRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IntegrationId        *string  `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	TagIds               []string `protobuf:"bytes,4,rep,name=tag_ids,json=tagIds" json:"tag_ids,omitempty"`
	From                 *int32   `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,6,opt,name=to" json:"to,omitempty"`
	Range                *string  `protobuf:"bytes,8,opt,name=range" json:"range,omitempty"`
	HasUser              *bool    `protobuf:"varint,9,opt,name=has_user,json=hasUser" json:"has_user,omitempty"`
	FromHour             *int32   `protobuf:"varint,10,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour               *int32   `protobuf:"varint,11,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByTagsRequest) Reset()         { *m = CountByTagsRequest{} }
func (m *CountByTagsRequest) String() string { return proto.CompactTextString(m) }
func (*CountByTagsRequest) ProtoMessage()    {}
func (*CountByTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{49}
}

func (m *CountByTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByTagsRequest.Unmarshal(m, b)
}
func (m *CountByTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByTagsRequest.Marshal(b, m, deterministic)
}
func (m *CountByTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByTagsRequest.Merge(m, src)
}
func (m *CountByTagsRequest) XXX_Size() int {
	return xxx_messageInfo_CountByTagsRequest.Size(m)
}
func (m *CountByTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountByTagsRequest proto.InternalMessageInfo

func (m *CountByTagsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CountByTagsRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *CountByTagsRequest) GetTagIds() []string {
	if m != nil {
		return m.TagIds
	}
	return nil
}

func (m *CountByTagsRequest) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *CountByTagsRequest) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *CountByTagsRequest) GetRange() string {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return ""
}

func (m *CountByTagsRequest) GetHasUser() bool {
	if m != nil && m.HasUser != nil {
		return *m.HasUser
	}
	return false
}

func (m *CountByTagsRequest) GetFromHour() int32 {
	if m != nil && m.FromHour != nil {
		return *m.FromHour
	}
	return 0
}

func (m *CountByTagsRequest) GetToHour() int32 {
	if m != nil && m.ToHour != nil {
		return *m.ToHour
	}
	return 0
}

type CountByAgent struct {
	AgentId              *string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Data                 []int64  `protobuf:"varint,3,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByAgent) Reset()         { *m = CountByAgent{} }
func (m *CountByAgent) String() string { return proto.CompactTextString(m) }
func (*CountByAgent) ProtoMessage()    {}
func (*CountByAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{50}
}

func (m *CountByAgent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByAgent.Unmarshal(m, b)
}
func (m *CountByAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByAgent.Marshal(b, m, deterministic)
}
func (m *CountByAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByAgent.Merge(m, src)
}
func (m *CountByAgent) XXX_Size() int {
	return xxx_messageInfo_CountByAgent.Size(m)
}
func (m *CountByAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByAgent.DiscardUnknown(m)
}

var xxx_messageInfo_CountByAgent proto.InternalMessageInfo

func (m *CountByAgent) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *CountByAgent) GetData() []int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountByGroup struct {
	GroupId              *string  `protobuf:"bytes,2,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Data                 []int64  `protobuf:"varint,3,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByGroup) Reset()         { *m = CountByGroup{} }
func (m *CountByGroup) String() string { return proto.CompactTextString(m) }
func (*CountByGroup) ProtoMessage()    {}
func (*CountByGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{51}
}

func (m *CountByGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByGroup.Unmarshal(m, b)
}
func (m *CountByGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByGroup.Marshal(b, m, deterministic)
}
func (m *CountByGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByGroup.Merge(m, src)
}
func (m *CountByGroup) XXX_Size() int {
	return xxx_messageInfo_CountByGroup.Size(m)
}
func (m *CountByGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CountByGroup proto.InternalMessageInfo

func (m *CountByGroup) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *CountByGroup) GetData() []int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountByTag struct {
	TagId                *string  `protobuf:"bytes,2,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	Data                 []int64  `protobuf:"varint,3,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountByTag) Reset()         { *m = CountByTag{} }
func (m *CountByTag) String() string { return proto.CompactTextString(m) }
func (*CountByTag) ProtoMessage()    {}
func (*CountByTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{52}
}

func (m *CountByTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByTag.Unmarshal(m, b)
}
func (m *CountByTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByTag.Marshal(b, m, deterministic)
}
func (m *CountByTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByTag.Merge(m, src)
}
func (m *CountByTag) XXX_Size() int {
	return xxx_messageInfo_CountByTag.Size(m)
}
func (m *CountByTag) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByTag.DiscardUnknown(m)
}

var xxx_messageInfo_CountByTag proto.InternalMessageInfo

func (m *CountByTag) GetTagId() string {
	if m != nil && m.TagId != nil {
		return *m.TagId
	}
	return ""
}

func (m *CountByTag) GetData() []int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountByTagsResponse struct {
	Data                 []*CountByTag `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CountByTagsResponse) Reset()         { *m = CountByTagsResponse{} }
func (m *CountByTagsResponse) String() string { return proto.CompactTextString(m) }
func (*CountByTagsResponse) ProtoMessage()    {}
func (*CountByTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{53}
}

func (m *CountByTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByTagsResponse.Unmarshal(m, b)
}
func (m *CountByTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByTagsResponse.Marshal(b, m, deterministic)
}
func (m *CountByTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByTagsResponse.Merge(m, src)
}
func (m *CountByTagsResponse) XXX_Size() int {
	return xxx_messageInfo_CountByTagsResponse.Size(m)
}
func (m *CountByTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountByTagsResponse proto.InternalMessageInfo

func (m *CountByTagsResponse) GetData() []*CountByTag {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountByAgentsResponse struct {
	Data                 []*CountByAgent `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CountByAgentsResponse) Reset()         { *m = CountByAgentsResponse{} }
func (m *CountByAgentsResponse) String() string { return proto.CompactTextString(m) }
func (*CountByAgentsResponse) ProtoMessage()    {}
func (*CountByAgentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{54}
}

func (m *CountByAgentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByAgentsResponse.Unmarshal(m, b)
}
func (m *CountByAgentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByAgentsResponse.Marshal(b, m, deterministic)
}
func (m *CountByAgentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByAgentsResponse.Merge(m, src)
}
func (m *CountByAgentsResponse) XXX_Size() int {
	return xxx_messageInfo_CountByAgentsResponse.Size(m)
}
func (m *CountByAgentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByAgentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountByAgentsResponse proto.InternalMessageInfo

func (m *CountByAgentsResponse) GetData() []*CountByAgent {
	if m != nil {
		return m.Data
	}
	return nil
}

type AvgResponseTimeRequest struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IntegrationId        *string  `protobuf:"bytes,3,opt,name=integration_id,json=integrationId" json:"integration_id,omitempty"`
	From                 *int32   `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,6,opt,name=to" json:"to,omitempty"`
	FromHour             *int32   `protobuf:"varint,7,opt,name=from_hour,json=fromHour" json:"from_hour,omitempty"`
	ToHour               *int32   `protobuf:"varint,8,opt,name=to_hour,json=toHour" json:"to_hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgResponseTimeRequest) Reset()         { *m = AvgResponseTimeRequest{} }
func (m *AvgResponseTimeRequest) String() string { return proto.CompactTextString(m) }
func (*AvgResponseTimeRequest) ProtoMessage()    {}
func (*AvgResponseTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{55}
}

func (m *AvgResponseTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgResponseTimeRequest.Unmarshal(m, b)
}
func (m *AvgResponseTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgResponseTimeRequest.Marshal(b, m, deterministic)
}
func (m *AvgResponseTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgResponseTimeRequest.Merge(m, src)
}
func (m *AvgResponseTimeRequest) XXX_Size() int {
	return xxx_messageInfo_AvgResponseTimeRequest.Size(m)
}
func (m *AvgResponseTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgResponseTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvgResponseTimeRequest proto.InternalMessageInfo

func (m *AvgResponseTimeRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AvgResponseTimeRequest) GetIntegrationId() string {
	if m != nil && m.IntegrationId != nil {
		return *m.IntegrationId
	}
	return ""
}

func (m *AvgResponseTimeRequest) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *AvgResponseTimeRequest) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *AvgResponseTimeRequest) GetFromHour() int32 {
	if m != nil && m.FromHour != nil {
		return *m.FromHour
	}
	return 0
}

func (m *AvgResponseTimeRequest) GetToHour() int32 {
	if m != nil && m.ToHour != nil {
		return *m.ToHour
	}
	return 0
}

type AvgResponseTimeResponse struct {
	AvgResponseSec       *float64 `protobuf:"fixed64,2,opt,name=avg_response_sec,json=avgResponseSec" json:"avg_response_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgResponseTimeResponse) Reset()         { *m = AvgResponseTimeResponse{} }
func (m *AvgResponseTimeResponse) String() string { return proto.CompactTextString(m) }
func (*AvgResponseTimeResponse) ProtoMessage()    {}
func (*AvgResponseTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{56}
}

func (m *AvgResponseTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgResponseTimeResponse.Unmarshal(m, b)
}
func (m *AvgResponseTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgResponseTimeResponse.Marshal(b, m, deterministic)
}
func (m *AvgResponseTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgResponseTimeResponse.Merge(m, src)
}
func (m *AvgResponseTimeResponse) XXX_Size() int {
	return xxx_messageInfo_AvgResponseTimeResponse.Size(m)
}
func (m *AvgResponseTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgResponseTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvgResponseTimeResponse proto.InternalMessageInfo

func (m *AvgResponseTimeResponse) GetAvgResponseSec() float64 {
	if m != nil && m.AvgResponseSec != nil {
		return *m.AvgResponseSec
	}
	return 0
}

type TotalConversationResponse struct {
	TotalConversation    *int64   `protobuf:"varint,2,opt,name=total_conversation,json=totalConversation" json:"total_conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalConversationResponse) Reset()         { *m = TotalConversationResponse{} }
func (m *TotalConversationResponse) String() string { return proto.CompactTextString(m) }
func (*TotalConversationResponse) ProtoMessage()    {}
func (*TotalConversationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{57}
}

func (m *TotalConversationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalConversationResponse.Unmarshal(m, b)
}
func (m *TotalConversationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalConversationResponse.Marshal(b, m, deterministic)
}
func (m *TotalConversationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalConversationResponse.Merge(m, src)
}
func (m *TotalConversationResponse) XXX_Size() int {
	return xxx_messageInfo_TotalConversationResponse.Size(m)
}
func (m *TotalConversationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalConversationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TotalConversationResponse proto.InternalMessageInfo

func (m *TotalConversationResponse) GetTotalConversation() int64 {
	if m != nil && m.TotalConversation != nil {
		return *m.TotalConversation
	}
	return 0
}

type Chain struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	ConversationId       *string  `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{58}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Chain) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Chain) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

type Ticket struct {
	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id             *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	// optional string state = 5;
	// optional string priority = 6;
	// optional int64 due_date = 7;
	// optional string subject = 8;
	// optional int64 created = 9;
	Attributes           []*TicketAttributeData `protobuf:"bytes,10,rep,name=attributes" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{59}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Ticket) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Ticket) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Ticket) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Ticket) GetAttributes() []*TicketAttributeData {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type TicketAttributeDefinition struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          *string         `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Type                 *string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ListItems            []string        `protobuf:"bytes,6,rep,name=list_items,json=listItems" json:"list_items,omitempty"`
	Key                  *string         `protobuf:"bytes,7,opt,name=key" json:"key,omitempty"`
	Kind                 *string         `protobuf:"bytes,8,opt,name=kind" json:"kind,omitempty"`
	Updated              *int64          `protobuf:"varint,9,opt,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TicketAttributeDefinition) Reset()         { *m = TicketAttributeDefinition{} }
func (m *TicketAttributeDefinition) String() string { return proto.CompactTextString(m) }
func (*TicketAttributeDefinition) ProtoMessage()    {}
func (*TicketAttributeDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{60}
}

func (m *TicketAttributeDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketAttributeDefinition.Unmarshal(m, b)
}
func (m *TicketAttributeDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketAttributeDefinition.Marshal(b, m, deterministic)
}
func (m *TicketAttributeDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketAttributeDefinition.Merge(m, src)
}
func (m *TicketAttributeDefinition) XXX_Size() int {
	return xxx_messageInfo_TicketAttributeDefinition.Size(m)
}
func (m *TicketAttributeDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketAttributeDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_TicketAttributeDefinition proto.InternalMessageInfo

func (m *TicketAttributeDefinition) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *TicketAttributeDefinition) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *TicketAttributeDefinition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TicketAttributeDefinition) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *TicketAttributeDefinition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *TicketAttributeDefinition) GetListItems() []string {
	if m != nil {
		return m.ListItems
	}
	return nil
}

func (m *TicketAttributeDefinition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *TicketAttributeDefinition) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *TicketAttributeDefinition) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type TicketAttributeDefinitions struct {
	Ctx                  *common.Context              `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Attributes           []*TicketAttributeDefinition `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TicketAttributeDefinitions) Reset()         { *m = TicketAttributeDefinitions{} }
func (m *TicketAttributeDefinitions) String() string { return proto.CompactTextString(m) }
func (*TicketAttributeDefinitions) ProtoMessage()    {}
func (*TicketAttributeDefinitions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{61}
}

func (m *TicketAttributeDefinitions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketAttributeDefinitions.Unmarshal(m, b)
}
func (m *TicketAttributeDefinitions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketAttributeDefinitions.Marshal(b, m, deterministic)
}
func (m *TicketAttributeDefinitions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketAttributeDefinitions.Merge(m, src)
}
func (m *TicketAttributeDefinitions) XXX_Size() int {
	return xxx_messageInfo_TicketAttributeDefinitions.Size(m)
}
func (m *TicketAttributeDefinitions) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketAttributeDefinitions.DiscardUnknown(m)
}

var xxx_messageInfo_TicketAttributeDefinitions proto.InternalMessageInfo

func (m *TicketAttributeDefinitions) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *TicketAttributeDefinitions) GetAttributes() []*TicketAttributeDefinition {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type TicketAttributeData struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TicketId             *string         `protobuf:"bytes,3,opt,name=ticket_id,json=ticketId" json:"ticket_id,omitempty"`
	Key                  *string         `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	State                *string         `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Created              *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Modified             *int64          `protobuf:"varint,8,opt,name=modified" json:"modified,omitempty"`
	Text                 *string         `protobuf:"bytes,10,opt,name=text" json:"text,omitempty"`
	Number               *float64        `protobuf:"fixed64,11,opt,name=number" json:"number,omitempty"`
	Boolean              *bool           `protobuf:"varint,12,opt,name=boolean" json:"boolean,omitempty"`
	Datetime             *string         `protobuf:"bytes,13,opt,name=datetime" json:"datetime,omitempty"`
	List                 []string        `protobuf:"bytes,14,rep,name=list" json:"list,omitempty"`
	Setter               *string         `protobuf:"bytes,16,opt,name=setter" json:"setter,omitempty"`
	SetterType           *string         `protobuf:"bytes,17,opt,name=setter_type,json=setterType" json:"setter_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TicketAttributeData) Reset()         { *m = TicketAttributeData{} }
func (m *TicketAttributeData) String() string { return proto.CompactTextString(m) }
func (*TicketAttributeData) ProtoMessage()    {}
func (*TicketAttributeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{62}
}

func (m *TicketAttributeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketAttributeData.Unmarshal(m, b)
}
func (m *TicketAttributeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketAttributeData.Marshal(b, m, deterministic)
}
func (m *TicketAttributeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketAttributeData.Merge(m, src)
}
func (m *TicketAttributeData) XXX_Size() int {
	return xxx_messageInfo_TicketAttributeData.Size(m)
}
func (m *TicketAttributeData) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketAttributeData.DiscardUnknown(m)
}

var xxx_messageInfo_TicketAttributeData proto.InternalMessageInfo

func (m *TicketAttributeData) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *TicketAttributeData) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *TicketAttributeData) GetTicketId() string {
	if m != nil && m.TicketId != nil {
		return *m.TicketId
	}
	return ""
}

func (m *TicketAttributeData) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *TicketAttributeData) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *TicketAttributeData) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *TicketAttributeData) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *TicketAttributeData) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *TicketAttributeData) GetNumber() float64 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *TicketAttributeData) GetBoolean() bool {
	if m != nil && m.Boolean != nil {
		return *m.Boolean
	}
	return false
}

func (m *TicketAttributeData) GetDatetime() string {
	if m != nil && m.Datetime != nil {
		return *m.Datetime
	}
	return ""
}

func (m *TicketAttributeData) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *TicketAttributeData) GetSetter() string {
	if m != nil && m.Setter != nil {
		return *m.Setter
	}
	return ""
}

func (m *TicketAttributeData) GetSetterType() string {
	if m != nil && m.SetterType != nil {
		return *m.SetterType
	}
	return ""
}

type DeleteTicketAttrRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Key                  *string         `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteTicketAttrRequest) Reset()         { *m = DeleteTicketAttrRequest{} }
func (m *DeleteTicketAttrRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketAttrRequest) ProtoMessage()    {}
func (*DeleteTicketAttrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{63}
}

func (m *DeleteTicketAttrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketAttrRequest.Unmarshal(m, b)
}
func (m *DeleteTicketAttrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketAttrRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTicketAttrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketAttrRequest.Merge(m, src)
}
func (m *DeleteTicketAttrRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketAttrRequest.Size(m)
}
func (m *DeleteTicketAttrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketAttrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketAttrRequest proto.InternalMessageInfo

func (m *DeleteTicketAttrRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *DeleteTicketAttrRequest) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type GetTicketRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id                   *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTicketRequest) Reset()         { *m = GetTicketRequest{} }
func (m *GetTicketRequest) String() string { return proto.CompactTextString(m) }
func (*GetTicketRequest) ProtoMessage()    {}
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{64}
}

func (m *GetTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTicketRequest.Unmarshal(m, b)
}
func (m *GetTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTicketRequest.Marshal(b, m, deterministic)
}
func (m *GetTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTicketRequest.Merge(m, src)
}
func (m *GetTicketRequest) XXX_Size() int {
	return xxx_messageInfo_GetTicketRequest.Size(m)
}
func (m *GetTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTicketRequest proto.InternalMessageInfo

func (m *GetTicketRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *GetTicketRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *GetTicketRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *GetTicketRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type DeleteTicketRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string         `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Id                   *string         `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteTicketRequest) Reset()         { *m = DeleteTicketRequest{} }
func (m *DeleteTicketRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketRequest) ProtoMessage()    {}
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a190b1b03f05cfca, []int{65}
}

func (m *DeleteTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketRequest.Unmarshal(m, b)
}
func (m *DeleteTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketRequest.Merge(m, src)
}
func (m *DeleteTicketRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketRequest.Size(m)
}
func (m *DeleteTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketRequest proto.InternalMessageInfo

func (m *DeleteTicketRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *DeleteTicketRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *DeleteTicketRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *DeleteTicketRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("conversation.Event", Event_name, Event_value)
	proto.RegisterEnum("conversation.AttachmentType", AttachmentType_name, AttachmentType_value)
	proto.RegisterEnum("conversation.Path", Path_name, Path_value)
	proto.RegisterEnum("conversation.TicketState", TicketState_name, TicketState_value)
	proto.RegisterEnum("conversation.TicketPriority", TicketPriority_name, TicketPriority_value)
	proto.RegisterEnum("conversation.TicketAttributeType", TicketAttributeType_name, TicketAttributeType_value)
	proto.RegisterEnum("conversation.TicketAttributeKind", TicketAttributeKind_name, TicketAttributeKind_value)
	proto.RegisterEnum("conversation.TicketAttributeDataState", TicketAttributeDataState_name, TicketAttributeDataState_value)
	proto.RegisterEnum("conversation.Rule_AssignStrategy", Rule_AssignStrategy_name, Rule_AssignStrategy_value)
	proto.RegisterEnum("conversation.Condition_JoinOperator", Condition_JoinOperator_name, Condition_JoinOperator_value)
	proto.RegisterEnum("conversation.Conversation_State", Conversation_State_name, Conversation_State_value)
	proto.RegisterEnum("conversation.Button_ButtonType", Button_ButtonType_name, Button_ButtonType_value)
	proto.RegisterEnum("conversation.AskInfomation_InputType", AskInfomation_InputType_name, AskInfomation_InputType_value)
	proto.RegisterEnum("conversation.UseConnector_State", UseConnector_State_name, UseConnector_State_value)
	proto.RegisterEnum("conversation.Integration_State", Integration_State_name, Integration_State_value)
	proto.RegisterEnum("conversation.CountByAgentRequest_Range", CountByAgentRequest_Range_name, CountByAgentRequest_Range_value)
	proto.RegisterEnum("conversation.CountByGroupRequest_Range", CountByGroupRequest_Range_name, CountByGroupRequest_Range_value)
	proto.RegisterEnum("conversation.CountByAgentsRequest_Range", CountByAgentsRequest_Range_name, CountByAgentsRequest_Range_value)
	proto.RegisterEnum("conversation.CountByTagsRequest_Range", CountByTagsRequest_Range_name, CountByTagsRequest_Range_value)
	proto.RegisterType((*Rule)(nil), "conversation.Rule")
	proto.RegisterType((*AvailabilityCheckRequest)(nil), "conversation.AvailabilityCheckRequest")
	proto.RegisterType((*AvailabilityCheckResult)(nil), "conversation.AvailabilityCheckResult")
	proto.RegisterType((*Condition)(nil), "conversation.Condition")
	proto.RegisterType((*Route)(nil), "conversation.Route")
	proto.RegisterType((*RouteResult)(nil), "conversation.RouteResult")
	proto.RegisterType((*MemberSeen)(nil), "conversation.MemberSeen")
	proto.RegisterType((*MemberV3)(nil), "conversation.MemberV3")
	proto.RegisterType((*Member)(nil), "conversation.Member")
	proto.RegisterType((*Conversation)(nil), "conversation.Conversation")
	proto.RegisterType((*UserConversation)(nil), "conversation.UserConversation")
	proto.RegisterType((*StartRequest)(nil), "conversation.StartRequest")
	proto.RegisterType((*Conversations)(nil), "conversation.Conversations")
	proto.RegisterType((*Search)(nil), "conversation.Search")
	proto.RegisterType((*ListConversationsRequest)(nil), "conversation.ListConversationsRequest")
	proto.RegisterType((*ListEventsRequest)(nil), "conversation.ListEventsRequest")
	proto.RegisterType((*ListConversationsByUserRequest)(nil), "conversation.ListConversationsByUserRequest")
	proto.RegisterType((*RequestState)(nil), "conversation.RequestState")
	proto.RegisterType((*Reaction)(nil), "conversation.Reaction")
	proto.RegisterType((*EsMessage)(nil), "conversation.EsMessage")
	proto.RegisterType((*Message)(nil), "conversation.Message")
	proto.RegisterType((*Computed)(nil), "conversation.Computed")
	proto.RegisterType((*Seen)(nil), "conversation.Seen")
	proto.RegisterType((*Ack)(nil), "conversation.Ack")
	proto.RegisterType((*Received)(nil), "conversation.Received")
	proto.RegisterType((*Field)(nil), "conversation.Field")
	proto.RegisterType((*Button)(nil), "conversation.Button")
	proto.RegisterType((*AskInfomationAnswer)(nil), "conversation.AskInfomationAnswer")
	proto.RegisterType((*AskInfomation)(nil), "conversation.AskInfomation")
	proto.RegisterType((*GenericElementTemplate)(nil), "conversation.GenericElementTemplate")
	proto.RegisterType((*Attachment)(nil), "conversation.Attachment")
	proto.RegisterType((*Form)(nil), "conversation.Form")
	proto.RegisterType((*FormSubmit)(nil), "conversation.FormSubmit")
	proto.RegisterType((*FormField)(nil), "conversation.FormField")
	proto.RegisterType((*Tag)(nil), "conversation.Tag")
	proto.RegisterType((*CannedResponse)(nil), "conversation.CannedResponse")
	proto.RegisterType((*CannedResponses)(nil), "conversation.CannedResponses")
	proto.RegisterType((*Tags)(nil), "conversation.Tags")
	proto.RegisterType((*Postback)(nil), "conversation.Postback")
	proto.RegisterType((*UseConnector)(nil), "conversation.UseConnector")
	proto.RegisterType((*Integrations)(nil), "conversation.Integrations")
	proto.RegisterType((*Integration)(nil), "conversation.Integration")
	proto.RegisterType((*SearchMessageRequest)(nil), "conversation.SearchMessageRequest")
	proto.RegisterType((*MessageId)(nil), "conversation.MessageId")
	proto.RegisterType((*MessageAck)(nil), "conversation.MessageAck")
	proto.RegisterType((*TagRequest)(nil), "conversation.TagRequest")
	proto.RegisterType((*CountByAgentRequest)(nil), "conversation.CountByAgentRequest")
	proto.RegisterType((*CountByGroupRequest)(nil), "conversation.CountByGroupRequest")
	proto.RegisterType((*CountByAgentsRequest)(nil), "conversation.CountByAgentsRequest")
	proto.RegisterType((*CountByTagsRequest)(nil), "conversation.CountByTagsRequest")
	proto.RegisterType((*CountByAgent)(nil), "conversation.CountByAgent")
	proto.RegisterType((*CountByGroup)(nil), "conversation.CountByGroup")
	proto.RegisterType((*CountByTag)(nil), "conversation.CountByTag")
	proto.RegisterType((*CountByTagsResponse)(nil), "conversation.CountByTagsResponse")
	proto.RegisterType((*CountByAgentsResponse)(nil), "conversation.CountByAgentsResponse")
	proto.RegisterType((*AvgResponseTimeRequest)(nil), "conversation.AvgResponseTimeRequest")
	proto.RegisterType((*AvgResponseTimeResponse)(nil), "conversation.AvgResponseTimeResponse")
	proto.RegisterType((*TotalConversationResponse)(nil), "conversation.TotalConversationResponse")
	proto.RegisterType((*Chain)(nil), "conversation.Chain")
	proto.RegisterType((*Ticket)(nil), "conversation.Ticket")
	proto.RegisterType((*TicketAttributeDefinition)(nil), "conversation.TicketAttributeDefinition")
	proto.RegisterType((*TicketAttributeDefinitions)(nil), "conversation.TicketAttributeDefinitions")
	proto.RegisterType((*TicketAttributeData)(nil), "conversation.TicketAttributeData")
	proto.RegisterType((*DeleteTicketAttrRequest)(nil), "conversation.DeleteTicketAttrRequest")
	proto.RegisterType((*GetTicketRequest)(nil), "conversation.GetTicketRequest")
	proto.RegisterType((*DeleteTicketRequest)(nil), "conversation.DeleteTicketRequest")
}

func init() { proto.RegisterFile("conversation/conversation.proto", fileDescriptor_a190b1b03f05cfca) }

var fileDescriptor_a190b1b03f05cfca = []byte{
	// 5310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x3c, 0x4d, 0x6f, 0x24, 0xc7,
	0x75, 0xdb, 0x33, 0x3d, 0x5f, 0x6f, 0x86, 0x64, 0xb3, 0xc8, 0x5d, 0x0e, 0x67, 0xb5, 0xbb, 0xdc,
	0x5e, 0x69, 0x45, 0x6d, 0x94, 0x5d, 0x68, 0x25, 0x5b, 0xf6, 0x5a, 0x0a, 0x44, 0x51, 0xeb, 0x15,
	0xe5, 0x55, 0xb2, 0x6e, 0x72, 0x25, 0xdb, 0xf9, 0x18, 0x34, 0xa7, 0x8b, 0xc3, 0x36, 0x67, 0xba,
	0xc7, 0xdd, 0x35, 0x94, 0x28, 0x1f, 0x82, 0xe4, 0x10, 0x07, 0x48, 0x9c, 0xe4, 0x94, 0x83, 0x81,
	0x20, 0x09, 0x7c, 0x48, 0x6e, 0x01, 0x12, 0xc0, 0xc8, 0x21, 0xd7, 0x04, 0x39, 0x04, 0x41, 0x02,
	0xe4, 0x60, 0x04, 0x48, 0x90, 0x4b, 0xce, 0x3e, 0xf8, 0x07, 0x24, 0x78, 0x55, 0xd5, 0xdd, 0xd5,
	0xd5, 0x3d, 0xc3, 0xa1, 0xb0, 0xb2, 0xa0, 0xcb, 0x6e, 0x57, 0xbd, 0xf7, 0xea, 0xe3, 0xd5, 0xfb,
	0xae, 0x1a, 0xc2, 0x8d, 0x41, 0x18, 0x9c, 0xd2, 0x28, 0x76, 0x99, 0x1f, 0x06, 0xf7, 0xd4, 0xc6,
	0xdd, 0x49, 0x14, 0xb2, 0x90, 0x74, 0xd4, 0xbe, 0xde, 0xf6, 0xd0, 0x67, 0x77, 0xe3, 0xe9, 0xa1,
	0xff, 0xc9, 0xdd, 0x80, 0xb2, 0x7b, 0xc7, 0xd4, 0xf5, 0x68, 0x74, 0x6f, 0x10, 0x8e, 0xc7, 0x9c,
	0x1a, 0xff, 0x13, 0x74, 0xbd, 0xe7, 0x4b, 0x31, 0xa7, 0xb1, 0xfc, 0x47, 0x60, 0xd9, 0x3f, 0xab,
	0x82, 0xe9, 0x4c, 0x47, 0x94, 0xdc, 0x84, 0xea, 0x80, 0x7d, 0xdc, 0x35, 0xb6, 0x8c, 0xed, 0xf6,
	0xfd, 0x95, 0xbb, 0x72, 0xa8, 0xdd, 0x30, 0x60, 0xf4, 0x63, 0xe6, 0x20, 0x8c, 0x2c, 0x43, 0xc5,
	0xf7, 0xba, 0x95, 0x2d, 0x63, 0xbb, 0xe5, 0x54, 0x7c, 0x8f, 0x5c, 0x03, 0x70, 0x07, 0x83, 0x70,
	0x1a, 0xb0, 0xbe, 0xef, 0x75, 0xab, 0xbc, 0xbf, 0x25, 0x7b, 0xf6, 0x3c, 0xd2, 0x83, 0xe6, 0x24,
	0xf2, 0xc3, 0xc8, 0x67, 0x67, 0x5d, 0x73, 0xcb, 0xd8, 0xae, 0x39, 0x69, 0x1b, 0x61, 0x31, 0x8b,
	0x5c, 0x46, 0x87, 0x67, 0xdd, 0x1a, 0x27, 0x4c, 0xdb, 0x7c, 0xd8, 0x38, 0xf6, 0x87, 0x41, 0x9f,
	0x85, 0x71, 0xb7, 0xbe, 0x55, 0xe5, 0xc3, 0xf2, 0x9e, 0x83, 0x30, 0x26, 0xaf, 0x03, 0x0c, 0xc2,
	0xc0, 0xf3, 0x91, 0x1d, 0x71, 0xb7, 0xb1, 0x55, 0xdd, 0x6e, 0xdf, 0xdf, 0xb8, 0x9b, 0x63, 0xdc,
	0x6e, 0x02, 0x77, 0x14, 0x54, 0xd2, 0x85, 0x06, 0x0d, 0xdc, 0xc3, 0x11, 0xf5, 0xba, 0xcd, 0x2d,
	0x63, 0xbb, 0xe9, 0x24, 0x4d, 0x84, 0x0c, 0x22, 0xea, 0x32, 0xea, 0x75, 0x5b, 0x5b, 0xc6, 0x76,
	0xd5, 0x49, 0x9a, 0xb8, 0xce, 0x71, 0xe8, 0xf9, 0x47, 0x3e, 0xf5, 0xba, 0x1d, 0x0e, 0x4a, 0xdb,
	0x84, 0x80, 0x19, 0xb8, 0x63, 0xda, 0x05, 0xbe, 0x7e, 0xfe, 0x4d, 0xb6, 0xa0, 0xed, 0xd1, 0x78,
	0x10, 0xf9, 0x13, 0x9c, 0xb3, 0xdb, 0xe6, 0x20, 0xb5, 0xcb, 0xfe, 0x6d, 0x58, 0xde, 0xe1, 0x7b,
	0xd9, 0x4f, 0xf6, 0xbb, 0x0c, 0xe0, 0x8e, 0x46, 0x7d, 0x77, 0x48, 0x03, 0x16, 0x5b, 0x97, 0x78,
	0x1b, 0xbf, 0x87, 0x51, 0x38, 0x9d, 0x58, 0x15, 0x02, 0x50, 0x97, 0xb0, 0x2a, 0x59, 0x81, 0xf6,
	0x38, 0x8c, 0x59, 0x3f, 0xa2, 0x03, 0x1a, 0x30, 0xcb, 0x24, 0x9b, 0x70, 0x39, 0x0a, 0xa7, 0x81,
	0x17, 0x85, 0x87, 0x7e, 0xd0, 0x57, 0xc6, 0xa9, 0x91, 0xcb, 0xb0, 0xaa, 0x82, 0x44, 0x77, 0xdd,
	0xfe, 0x07, 0x03, 0xba, 0x3b, 0xa7, 0xae, 0x3f, 0x72, 0x0f, 0xfd, 0x91, 0xcf, 0xce, 0x76, 0x8f,
	0xe9, 0xe0, 0xc4, 0xa1, 0xdf, 0x9b, 0xd2, 0x98, 0x2d, 0x22, 0x05, 0x2f, 0xc0, 0xb2, 0x1f, 0x30,
	0x3a, 0x8c, 0x38, 0xaf, 0xb3, 0x93, 0x5f, 0x52, 0x7a, 0xf7, 0x3c, 0x72, 0x1d, 0x4c, 0x14, 0x33,
	0x7e, 0xf2, 0xed, 0xfb, 0x70, 0x97, 0xcb, 0xdc, 0xd3, 0x98, 0x46, 0x0e, 0xef, 0xd7, 0x84, 0xa7,
	0xa6, 0x0b, 0xcf, 0x06, 0x34, 0x10, 0x0d, 0x61, 0x75, 0x0e, 0xab, 0x63, 0x73, 0xcf, 0xb3, 0x7f,
	0x6a, 0xc0, 0x46, 0xc9, 0xf2, 0xe3, 0xe9, 0x68, 0xa1, 0xd5, 0xdb, 0xd0, 0x71, 0x15, 0x6a, 0x2e,
	0xcd, 0x4d, 0x27, 0xd7, 0x47, 0xae, 0x40, 0x3d, 0xa2, 0x6e, 0x1c, 0x06, 0x72, 0x67, 0xb2, 0x85,
	0x62, 0x32, 0x71, 0xcf, 0x46, 0xa1, 0x9b, 0xac, 0x37, 0x69, 0x96, 0xf0, 0xa4, 0x5e, 0xc6, 0x93,
	0xfc, 0x9e, 0x1b, 0xda, 0x9e, 0xed, 0x3f, 0x32, 0xa0, 0x95, 0x8a, 0x2e, 0x8a, 0xd7, 0x77, 0x43,
	0x3f, 0xe0, 0xbb, 0x69, 0x39, 0xfc, 0x9b, 0x58, 0x50, 0x3d, 0xa1, 0x67, 0x52, 0x05, 0xf1, 0x13,
	0x05, 0x34, 0x9c, 0xd0, 0xc8, 0x65, 0x61, 0x24, 0x57, 0x9b, 0xb6, 0xc9, 0x3a, 0xd4, 0x4e, 0xdd,
	0xd1, 0x94, 0xf2, 0x33, 0x68, 0x39, 0xa2, 0x61, 0xbf, 0x04, 0x9d, 0xf7, 0x42, 0x3f, 0xf8, 0xb5,
	0x04, 0xab, 0x09, 0x66, 0x10, 0x06, 0xd4, 0xba, 0x44, 0x1a, 0x50, 0x75, 0x03, 0xcf, 0x32, 0x48,
	0x1d, 0x2a, 0x61, 0x64, 0x55, 0xec, 0x03, 0xa8, 0x39, 0xe1, 0x94, 0x2d, 0x64, 0x1c, 0xb6, 0xa1,
	0x16, 0x4d, 0x47, 0x34, 0xee, 0x56, 0xb8, 0x46, 0x92, 0xbc, 0x46, 0xa2, 0x89, 0x71, 0x04, 0x82,
	0xfd, 0x09, 0xb4, 0xf9, 0xa8, 0xf2, 0xd0, 0x36, 0xa0, 0x81, 0xfd, 0xc8, 0x11, 0x43, 0xb2, 0x7b,
	0x3a, 0xa2, 0xc2, 0x7e, 0xa4, 0x36, 0xa2, 0xaa, 0xd9, 0x88, 0xab, 0xd0, 0xe2, 0x02, 0xdd, 0xf7,
	0xbd, 0xb8, 0x6b, 0x72, 0x13, 0xd1, 0xe4, 0x1d, 0x7b, 0x5e, 0x4c, 0x36, 0xa1, 0xc9, 0x75, 0x27,
	0x13, 0xac, 0x06, 0x6f, 0xef, 0x79, 0xf6, 0xbb, 0x00, 0xef, 0xd3, 0xf1, 0x21, 0x8d, 0xf6, 0x29,
	0x0d, 0x70, 0x94, 0x31, 0x6f, 0xf5, 0x53, 0xbb, 0xd6, 0x14, 0x1d, 0xe2, 0xb0, 0xc6, 0x34, 0x8e,
	0xdd, 0x21, 0x55, 0xac, 0x9b, 0xec, 0xd9, 0xf3, 0xec, 0x7f, 0x31, 0xa0, 0x29, 0x86, 0xfa, 0xe0,
	0xd5, 0xc5, 0x8d, 0xa7, 0x99, 0x1a, 0xcf, 0x17, 0x61, 0x45, 0xe5, 0x50, 0xb6, 0xd6, 0x65, 0xb5,
	0xbb, 0x20, 0x34, 0x75, 0x5d, 0x51, 0x12, 0x2b, 0xd4, 0x50, 0xac, 0x10, 0x92, 0x9c, 0xba, 0xcc,
	0x8d, 0xfa, 0xd3, 0x68, 0xc4, 0x8d, 0x1d, 0x92, 0xf0, 0x9e, 0xa7, 0xd1, 0x08, 0x49, 0xd8, 0xd9,
	0x84, 0x72, 0x5b, 0xd7, 0x72, 0xf8, 0xb7, 0xfd, 0x83, 0x0a, 0xd4, 0xc5, 0x76, 0x16, 0xd9, 0x4c,
	0x32, 0x42, 0x35, 0x1b, 0x01, 0xb9, 0xce, 0xbd, 0x0d, 0xae, 0x52, 0x4c, 0xd9, 0xe0, 0xed, 0x3d,
	0xaf, 0xb0, 0xf7, 0x32, 0xcb, 0x99, 0x5f, 0x73, 0xbd, 0x64, 0xcd, 0x23, 0x7a, 0xc4, 0xb8, 0x45,
	0x6d, 0x3a, 0xfc, 0xbb, 0x8c, 0x85, 0x4b, 0xa5, 0x2c, 0xfc, 0x25, 0xa8, 0x1f, 0xf9, 0x74, 0xe4,
	0xc5, 0xdd, 0x65, 0x2e, 0x9c, 0x6b, 0x79, 0xe1, 0xfc, 0x3a, 0xc2, 0x1c, 0x89, 0x62, 0xff, 0x77,
	0x1d, 0x3a, 0xbb, 0x0a, 0xf8, 0x33, 0xf0, 0x8c, 0x8a, 0xbf, 0x31, 0xf3, 0xfe, 0xe6, 0x0a, 0xd4,
	0x07, 0xa3, 0x30, 0xa6, 0xe2, 0xa0, 0xab, 0x8e, 0x6c, 0x91, 0xbb, 0xd0, 0x10, 0x82, 0x99, 0x78,
	0xbc, 0xf5, 0xfc, 0x16, 0xc4, 0xd1, 0x39, 0x09, 0x12, 0x79, 0x01, 0x4c, 0xe6, 0x0e, 0xe3, 0x2e,
	0x70, 0xe4, 0xd5, 0x3c, 0xf2, 0x81, 0x3b, 0x74, 0x38, 0x18, 0x2d, 0x44, 0xcc, 0x5c, 0x46, 0xa5,
	0xa3, 0x12, 0x0d, 0xf2, 0x1a, 0x34, 0x22, 0xe1, 0x0f, 0xba, 0xcb, 0x7c, 0xd3, 0xbd, 0x3c, 0xfd,
	0x3e, 0x73, 0x23, 0x26, 0x3d, 0x86, 0x93, 0xa0, 0xa2, 0xba, 0xba, 0x83, 0x01, 0x9d, 0xe0, 0xae,
	0x56, 0x84, 0xab, 0x4c, 0xda, 0xe4, 0x26, 0x74, 0x06, 0xc7, 0x6e, 0x10, 0xd0, 0x51, 0x9f, 0xcb,
	0xcd, 0xaa, 0xf0, 0x8b, 0xb2, 0xef, 0x00, 0xc5, 0xe7, 0x6b, 0xd0, 0x56, 0x8c, 0x65, 0x97, 0xf0,
	0x89, 0x37, 0xf3, 0x13, 0xef, 0x65, 0x08, 0x8e, 0x8a, 0x8d, 0x0c, 0x75, 0x07, 0xcc, 0x3f, 0xa5,
	0x5e, 0x77, 0x4d, 0x30, 0x54, 0x36, 0xc9, 0x6d, 0x58, 0x19, 0xb9, 0x31, 0xeb, 0x2b, 0xaa, 0x7c,
	0x59, 0x98, 0x66, 0xec, 0x7e, 0x3f, 0x51, 0x67, 0xf2, 0x15, 0xe8, 0xa8, 0x78, 0xdd, 0x75, 0x3e,
	0xff, 0x65, 0x9d, 0xcb, 0x1c, 0xe8, 0xb4, 0x15, 0x5a, 0xdc, 0x5b, 0x44, 0xe3, 0x49, 0x18, 0xc4,
	0xb4, 0x1f, 0xd3, 0x41, 0xf7, 0x0a, 0x5f, 0x40, 0x3b, 0xe9, 0xdb, 0xa7, 0x03, 0x54, 0x8d, 0xc1,
	0xb1, 0xeb, 0x73, 0x09, 0xed, 0x0a, 0xd5, 0xe0, 0xed, 0x3d, 0x8f, 0xbc, 0x0e, 0x1d, 0x94, 0xe5,
	0x7e, 0x72, 0xba, 0x9b, 0x73, 0x4e, 0xb7, 0x8d, 0x98, 0xef, 0xcb, 0x13, 0xfe, 0x32, 0xb4, 0xd2,
	0x28, 0xa9, 0xdb, 0x2b, 0xe3, 0x96, 0x62, 0x64, 0x9d, 0x66, 0x12, 0x3f, 0x91, 0x97, 0xa1, 0xce,
	0xfc, 0xc1, 0x09, 0x65, 0xdd, 0xab, 0x9c, 0x48, 0x9b, 0xea, 0x80, 0xc3, 0x1c, 0x89, 0x63, 0x3b,
	0x50, 0xdb, 0xe7, 0x32, 0x71, 0x19, 0x56, 0x73, 0xba, 0x26, 0x5d, 0xc6, 0x32, 0xc0, 0x34, 0x10,
	0x63, 0x53, 0x4f, 0xc6, 0x2a, 0x9c, 0xf3, 0x56, 0x9d, 0xb4, 0xa0, 0x46, 0x03, 0x8f, 0x7a, 0x56,
	0x93, 0xb4, 0xa1, 0x31, 0xa1, 0x81, 0xe7, 0x07, 0x43, 0xab, 0x65, 0xff, 0xd8, 0x00, 0x0b, 0x03,
	0x81, 0x9c, 0x92, 0x9d, 0x63, 0xe5, 0xca, 0x05, 0x55, 0x09, 0x12, 0x2a, 0x6a, 0x90, 0xc0, 0x19,
	0x1e, 0x06, 0xa7, 0x61, 0x3f, 0x35, 0x3b, 0x0d, 0xde, 0xde, 0xcb, 0x04, 0x22, 0xa6, 0x34, 0xe8,
	0xd3, 0x53, 0x1a, 0x30, 0x69, 0x77, 0xb9, 0x40, 0xa0, 0x5b, 0x78, 0x88, 0x9d, 0xf6, 0x9f, 0xd7,
	0xa1, 0xa3, 0x0a, 0xfa, 0x67, 0x60, 0x06, 0x74, 0xad, 0x30, 0x8b, 0x5a, 0x41, 0xc0, 0x3c, 0x8a,
	0xc2, 0x31, 0x8f, 0x3d, 0x5b, 0x0e, 0xff, 0xc6, 0x59, 0x58, 0xd8, 0xad, 0x71, 0xa7, 0x57, 0x61,
	0x21, 0x6e, 0x76, 0x82, 0xa2, 0x9d, 0xd9, 0xcd, 0x06, 0xb6, 0xd1, 0x6a, 0x5e, 0x03, 0xe0, 0x20,
	0xe6, 0xb3, 0x51, 0xe2, 0x22, 0x5a, 0xd8, 0x73, 0x80, 0x1d, 0xa8, 0x36, 0x89, 0xbc, 0x4b, 0x8b,
	0x2d, 0x9b, 0xe4, 0x25, 0xb0, 0x0e, 0xa3, 0xf0, 0x23, 0x64, 0xee, 0xc8, 0x0d, 0x86, 0x53, 0x44,
	0x11, 0xee, 0x62, 0x45, 0xf6, 0x3f, 0x96, 0xdd, 0xa8, 0xf7, 0x29, 0x8a, 0x30, 0xe8, 0x69, 0x9b,
	0xdc, 0xc0, 0x70, 0xf8, 0xd4, 0x1f, 0x50, 0xb1, 0x41, 0x71, 0x78, 0x20, 0xba, 0xf8, 0xfe, 0x14,
	0x4b, 0xb8, 0x94, 0xb7, 0x84, 0x25, 0xc6, 0x7d, 0xb9, 0xd4, 0xb8, 0x23, 0xd3, 0x27, 0xdc, 0xe2,
	0x20, 0xd3, 0x27, 0x7c, 0x48, 0x64, 0x70, 0x74, 0xd6, 0xb5, 0x92, 0xa3, 0xe7, 0x4d, 0xce, 0x6f,
	0xf1, 0xd9, 0x1f, 0x84, 0x5e, 0x66, 0x85, 0x44, 0xdf, 0x6e, 0xe8, 0x71, 0x7e, 0x0f, 0x30, 0x2c,
	0x24, 0x82, 0xdf, 0x03, 0x99, 0xab, 0x30, 0x7f, 0x4c, 0x3f, 0x09, 0x03, 0xca, 0xad, 0x4b, 0xcb,
	0x49, 0xdb, 0xc8, 0xe0, 0x18, 0x85, 0x44, 0x08, 0xe1, 0xba, 0x60, 0xb0, 0xec, 0x11, 0x27, 0x9c,
	0x80, 0x39, 0x03, 0x84, 0xe9, 0x69, 0xcb, 0x3e, 0xce, 0x81, 0x5c, 0x24, 0x73, 0x45, 0x8b, 0x64,
	0x92, 0x20, 0x7a, 0x73, 0x46, 0x10, 0x5d, 0x8c, 0x3b, 0x7b, 0x65, 0x71, 0xa7, 0x6a, 0x7f, 0xae,
	0xe6, 0xed, 0x4f, 0xaa, 0x58, 0xcf, 0xa9, 0x8a, 0x75, 0x0b, 0x96, 0xdc, 0x29, 0x0b, 0xc7, 0xe9,
	0xb0, 0xd7, 0x38, 0xb4, 0x93, 0x75, 0xee, 0x79, 0xf6, 0x5f, 0x19, 0xb0, 0xa4, 0xea, 0x70, 0xbc,
	0x88, 0x8a, 0xbc, 0x05, 0x4b, 0xea, 0xf9, 0xc5, 0xdd, 0x2a, 0x37, 0x78, 0xbd, 0x42, 0x02, 0x97,
	0x36, 0x9c, 0x3c, 0x01, 0xba, 0x48, 0x37, 0x18, 0x1c, 0x87, 0x91, 0xd4, 0x17, 0xd9, 0xc2, 0x4d,
	0x4a, 0x63, 0x10, 0x4b, 0xe5, 0x68, 0x08, 0x6b, 0x10, 0xdb, 0x7f, 0x6b, 0x40, 0x7d, 0x9f, 0xba,
	0xd1, 0xe0, 0x78, 0x91, 0x25, 0x9e, 0xef, 0xbc, 0x4f, 0xe8, 0xd9, 0x47, 0x61, 0x94, 0x9a, 0x16,
	0xd9, 0x44, 0x5e, 0x8e, 0xfc, 0xb1, 0x2f, 0x0c, 0x4a, 0xcd, 0x11, 0x0d, 0x3c, 0xe0, 0x43, 0x7a,
	0x14, 0x46, 0x34, 0x33, 0x6c, 0x4d, 0xd1, 0x21, 0x4e, 0xc6, 0x3d, 0x92, 0xd2, 0x23, 0xd4, 0xb3,
	0xc1, 0xdb, 0x7b, 0x9e, 0xfd, 0x7f, 0x06, 0x74, 0x1f, 0xfb, 0x31, 0xcb, 0xb1, 0xf8, 0x02, 0xc6,
	0xe8, 0x9c, 0x6d, 0xa4, 0x07, 0x6f, 0xaa, 0x07, 0x5f, 0xbe, 0x85, 0x8c, 0xe5, 0xf5, 0x1c, 0xcb,
	0x73, 0xf1, 0x73, 0x53, 0x8b, 0x9f, 0xd3, 0x28, 0xfc, 0xf0, 0x4c, 0x9a, 0x0e, 0x11, 0x85, 0xbf,
	0x7d, 0x56, 0x22, 0xb6, 0x50, 0x22, 0xb6, 0xf6, 0xdf, 0x18, 0xb0, 0x8a, 0x1c, 0xe0, 0x06, 0xf9,
	0xd3, 0x6f, 0xbd, 0xa2, 0x6f, 0xbd, 0xc4, 0xb4, 0x54, 0x4b, 0x4d, 0x0b, 0x86, 0xb4, 0xa8, 0xaa,
	0x8a, 0x1b, 0xe1, 0xed, 0x3d, 0xe5, 0xac, 0xeb, 0x0a, 0xa3, 0xec, 0xbf, 0x36, 0xe0, 0x7a, 0xe1,
	0xcc, 0xde, 0x3e, 0xe3, 0x1a, 0x2b, 0x97, 0x9f, 0x5f, 0x9b, 0xa1, 0xaf, 0xed, 0x1a, 0x40, 0xe2,
	0x13, 0xb2, 0xa5, 0xcb, 0x9e, 0x7c, 0x5a, 0x5c, 0xd5, 0x3d, 0xde, 0xb9, 0x4b, 0x55, 0xcf, 0xd4,
	0x9e, 0x42, 0x47, 0x2e, 0x49, 0x38, 0xf8, 0x73, 0xd6, 0x55, 0xc2, 0xb3, 0xca, 0xac, 0x74, 0x45,
	0xd9, 0x40, 0x55, 0xdb, 0x80, 0xfd, 0x1e, 0x34, 0x1d, 0x8a, 0x21, 0x82, 0xc8, 0x70, 0x79, 0x1a,
	0x50, 0x55, 0xd2, 0x80, 0x75, 0xa8, 0xf1, 0x29, 0x65, 0xc5, 0x48, 0x34, 0xb0, 0x17, 0xf7, 0x99,
	0x28, 0xb6, 0x68, 0xd8, 0xff, 0x66, 0x40, 0xeb, 0x61, 0x9c, 0xc4, 0x61, 0x17, 0x74, 0xbe, 0x25,
	0x1b, 0x32, 0x67, 0x6d, 0x28, 0x15, 0xf2, 0x64, 0x01, 0xad, 0x44, 0xca, 0x63, 0x9e, 0x0a, 0xd1,
	0x8f, 0x99, 0xd4, 0x0c, 0xfe, 0x4d, 0xb6, 0xa0, 0xed, 0x32, 0xe6, 0x0e, 0x8e, 0xc7, 0x28, 0xb8,
	0x3c, 0x62, 0x6f, 0x39, 0x6a, 0x17, 0x6a, 0x94, 0xcc, 0x48, 0x9a, 0x1c, 0x98, 0x24, 0x1f, 0xff,
	0x58, 0x85, 0x46, 0x16, 0x58, 0x5e, 0x50, 0xd0, 0x6b, 0x0b, 0xec, 0x71, 0xb6, 0x0f, 0xf5, 0xa4,
	0x7b, 0x96, 0x09, 0x1a, 0xdf, 0x54, 0x45, 0xd9, 0x14, 0x2e, 0x39, 0x8c, 0xc6, 0x2e, 0x4b, 0x24,
	0x4f, 0xb4, 0xc8, 0x83, 0xfc, 0x66, 0x4d, 0x6e, 0xcf, 0xbb, 0x79, 0x7b, 0xbe, 0x93, 0x22, 0xe4,
	0xd9, 0xf0, 0x1a, 0xb4, 0x22, 0x29, 0x0d, 0x49, 0x62, 0x73, 0x45, 0x0b, 0x62, 0x25, 0xd8, 0xc9,
	0x10, 0x95, 0x74, 0x0e, 0xce, 0x4d, 0xe7, 0xc8, 0x7d, 0x0c, 0x05, 0xc7, 0x93, 0x29, 0x93, 0x15,
	0xbc, 0xc2, 0x0c, 0xbb, 0x12, 0xea, 0xa4, 0x78, 0x25, 0xf6, 0x69, 0xe5, 0x3c, 0xb7, 0x6a, 0xe5,
	0xdc, 0xaa, 0xfd, 0x07, 0x06, 0x34, 0x93, 0x81, 0xc9, 0x6d, 0x30, 0x31, 0xda, 0x94, 0xac, 0xd1,
	0x2a, 0x23, 0x18, 0x71, 0x3a, 0x1c, 0x4e, 0x6e, 0x41, 0xd5, 0x1d, 0x9c, 0x70, 0x11, 0x2b, 0xe4,
	0x6c, 0x3b, 0x83, 0x13, 0x07, 0xa1, 0xb8, 0x9f, 0x88, 0x0e, 0x28, 0xcf, 0x75, 0xea, 0xe5, 0x1c,
	0x13, 0x50, 0x27, 0xc5, 0xb3, 0x5f, 0x05, 0xb3, 0x58, 0xef, 0xa8, 0x6b, 0xf6, 0x7a, 0x19, 0x2a,
	0x2e, 0x93, 0xf9, 0x68, 0xc5, 0x65, 0xf6, 0xbb, 0x50, 0xdd, 0x19, 0x9c, 0xe4, 0x69, 0x6a, 0x1a,
	0xcd, 0x3a, 0xd4, 0x68, 0x14, 0xa5, 0x7e, 0x41, 0x34, 0x0a, 0x23, 0xbd, 0x8e, 0x3a, 0x2f, 0x96,
	0x92, 0x1f, 0xce, 0x2c, 0x5d, 0x42, 0x2d, 0x25, 0xbc, 0x07, 0x35, 0x7e, 0x98, 0x59, 0x25, 0xab,
	0xaa, 0x54, 0xb2, 0x8a, 0xd5, 0x30, 0xfb, 0x67, 0x06, 0xd4, 0xdf, 0x9e, 0x32, 0x26, 0x8c, 0x0b,
	0x0f, 0xb9, 0x2a, 0x4a, 0x89, 0x42, 0x88, 0xf9, 0x4a, 0x2a, 0xe6, 0xeb, 0x50, 0x13, 0x91, 0xb1,
	0x1c, 0x96, 0x25, 0x51, 0x71, 0x52, 0xe6, 0x33, 0xf3, 0x65, 0xbe, 0xab, 0xd0, 0xf2, 0xc7, 0x49,
	0xa8, 0x2d, 0x79, 0xc1, 0x3b, 0x64, 0xac, 0x3d, 0x40, 0xdd, 0x14, 0xba, 0x08, 0xd2, 0xf0, 0x89,
	0x9e, 0x3d, 0x0f, 0x17, 0x8b, 0x54, 0x42, 0xff, 0xf0, 0xd3, 0xde, 0x05, 0x10, 0x6b, 0x3d, 0x10,
	0x6b, 0x83, 0x69, 0x34, 0xea, 0x1f, 0xf2, 0x1e, 0xab, 0x42, 0xd6, 0x60, 0x65, 0x12, 0xc6, 0xec,
	0xd0, 0x1d, 0x9c, 0x24, 0x9d, 0x55, 0x62, 0x41, 0x87, 0xa7, 0x2c, 0x49, 0x8f, 0x69, 0x3f, 0x86,
	0xb5, 0x9d, 0xf8, 0x64, 0x2f, 0x38, 0x92, 0x71, 0xd9, 0x4e, 0x10, 0x7f, 0x24, 0xaa, 0xab, 0x4a,
	0xc6, 0x5b, 0xd1, 0x8a, 0x57, 0xc2, 0xa1, 0x23, 0x62, 0xa2, 0xcb, 0xa2, 0x65, 0xff, 0xb0, 0x02,
	0x4b, 0xb9, 0xe1, 0x30, 0xf8, 0xe5, 0x4e, 0x02, 0x73, 0x72, 0x59, 0x21, 0x4b, 0xda, 0x38, 0x89,
	0x1f, 0x4c, 0xa6, 0xac, 0xaf, 0xd4, 0x82, 0x5a, 0xbc, 0x87, 0xef, 0x48, 0x1e, 0x8f, 0x99, 0x15,
	0x2b, 0xb3, 0x69, 0x6b, 0xea, 0xb4, 0xbc, 0x74, 0xc0, 0xbf, 0xd2, 0xba, 0x47, 0xda, 0xb6, 0xbf,
	0x0f, 0xad, 0xbd, 0x74, 0xc8, 0x16, 0xd4, 0x26, 0xc7, 0x22, 0xf3, 0xc4, 0xec, 0x72, 0xec, 0xfa,
	0x23, 0xcb, 0x20, 0x4d, 0x61, 0xad, 0xac, 0x0a, 0xe9, 0x60, 0x2a, 0x14, 0xc7, 0x18, 0x8d, 0x59,
	0x55, 0x4c, 0x46, 0x83, 0x29, 0x8a, 0x96, 0x65, 0x22, 0x8e, 0xe7, 0x32, 0x6a, 0xd5, 0x90, 0x70,
	0x10, 0x8e, 0xc2, 0xc8, 0xaa, 0x23, 0xfa, 0x28, 0x1c, 0xf0, 0x8d, 0x5a, 0x0d, 0x3e, 0x8c, 0x3f,
	0xa6, 0x56, 0x93, 0x34, 0xf8, 0x59, 0x59, 0x2d, 0xfb, 0x3f, 0x0c, 0xb8, 0xf2, 0x88, 0x06, 0x34,
	0xf2, 0x07, 0x0f, 0x47, 0x14, 0x6d, 0xd6, 0x01, 0x1d, 0x4f, 0x46, 0x32, 0x52, 0x12, 0xb2, 0x53,
	0x51, 0x65, 0x27, 0x27, 0x21, 0x55, 0x4d, 0x42, 0x7a, 0xbc, 0x42, 0x26, 0xa8, 0xa4, 0xe8, 0x27,
	0x6d, 0xf2, 0x35, 0x58, 0xf6, 0xe8, 0x91, 0x3b, 0x1d, 0xb1, 0xbe, 0x30, 0x73, 0x9c, 0x45, 0x85,
	0xf4, 0x5c, 0x08, 0x8c, 0xb3, 0x24, 0x71, 0x77, 0x84, 0x23, 0xbd, 0x0b, 0x0d, 0x21, 0x10, 0xb1,
	0x34, 0x09, 0xe5, 0x54, 0x09, 0x92, 0xfd, 0x73, 0x13, 0x20, 0x33, 0xc9, 0xa9, 0xaa, 0x74, 0x14,
	0x55, 0xe9, 0x41, 0x73, 0xec, 0x8f, 0xa9, 0xa2, 0x42, 0x69, 0x3b, 0x11, 0xe5, 0x6a, 0x2a, 0xca,
	0x98, 0x2f, 0xb0, 0xe3, 0xe9, 0xf8, 0x30, 0x70, 0xfd, 0x11, 0xdf, 0xba, 0xd8, 0x5e, 0x27, 0xed,
	0x94, 0x25, 0x3c, 0xee, 0xee, 0x6b, 0xb3, 0xef, 0x4b, 0xea, 0x85, 0xfb, 0x12, 0x94, 0x99, 0x11,
	0x0d, 0x86, 0xec, 0x98, 0xeb, 0x6d, 0xcd, 0x91, 0x2d, 0x1c, 0x2d, 0xf6, 0x3f, 0xa1, 0x3c, 0x6d,
	0xac, 0x39, 0xfc, 0x9b, 0xbc, 0x05, 0x4d, 0x2a, 0x8e, 0x49, 0xf8, 0xd5, 0xf6, 0xfd, 0xe7, 0xf3,
	0x8c, 0x28, 0x3f, 0x4b, 0x27, 0xa5, 0xca, 0x4e, 0xb5, 0xa5, 0x9e, 0xea, 0xba, 0x14, 0x19, 0xa9,
	0xd5, 0xa2, 0xc1, 0xed, 0x44, 0x44, 0xb9, 0x9f, 0x6c, 0x4b, 0x3b, 0x21, 0x9a, 0xea, 0x79, 0x58,
	0x0b, 0x9c, 0x07, 0xf9, 0x32, 0x34, 0xdd, 0xf8, 0xa4, 0xef, 0x07, 0x47, 0x21, 0x4f, 0x4a, 0xdb,
	0xf7, 0xaf, 0x6a, 0xd6, 0x5f, 0xd5, 0x49, 0xa7, 0xe1, 0x8a, 0x26, 0xd9, 0x83, 0x95, 0x84, 0xae,
	0x2f, 0x15, 0x4b, 0xd4, 0xcd, 0x6e, 0xce, 0x21, 0x17, 0x16, 0xc2, 0x59, 0x92, 0x83, 0x48, 0x83,
	0x71, 0x1b, 0x4c, 0xf4, 0xe7, 0xb2, 0xee, 0xa5, 0xf9, 0xa8, 0xaf, 0x87, 0xd1, 0xd8, 0xe1, 0x70,
	0xf2, 0x55, 0x68, 0xe3, 0xff, 0xfd, 0x78, 0x7a, 0x88, 0x21, 0xe5, 0x65, 0x8e, 0xde, 0x2d, 0xa2,
	0xef, 0x73, 0xb8, 0x03, 0x47, 0xe9, 0xb7, 0xfd, 0xbb, 0x06, 0x98, 0x08, 0x9a, 0xa1, 0x3a, 0x69,
	0x42, 0x52, 0x55, 0x13, 0x92, 0x7b, 0xa9, 0xaf, 0x37, 0xcb, 0x6e, 0xfa, 0x70, 0xbc, 0xbc, 0xbf,
	0xc7, 0x8c, 0x9c, 0xcf, 0xa7, 0x18, 0xe9, 0x96, 0xe8, 0x79, 0x1a, 0x8d, 0xec, 0xef, 0x03, 0x64,
	0xcb, 0x23, 0xb7, 0x61, 0x85, 0xef, 0xa6, 0x60, 0x2b, 0x97, 0xb0, 0x3b, 0xab, 0x0e, 0x66, 0xab,
	0xa8, 0x2e, 0xb6, 0x8a, 0xd2, 0xec, 0xca, 0xfe, 0x77, 0x03, 0x5a, 0x29, 0xae, 0x66, 0x3e, 0x2b,
	0xba, 0xf9, 0x5c, 0x87, 0x9a, 0xcf, 0xe8, 0x58, 0x4c, 0xd9, 0x72, 0x44, 0x63, 0x76, 0xda, 0x26,
	0x38, 0x5a, 0x9b, 0x69, 0x8c, 0xea, 0x9a, 0x31, 0x2a, 0xbb, 0x37, 0xc8, 0xec, 0x73, 0x73, 0xa6,
	0x7d, 0x6e, 0x69, 0xf6, 0xf9, 0xa7, 0x06, 0x54, 0x0f, 0xdc, 0xe1, 0x67, 0x50, 0x1e, 0x4b, 0x37,
	0x65, 0x6a, 0xde, 0x39, 0xa9, 0x18, 0xd5, 0x66, 0xdf, 0xd5, 0xd6, 0xb5, 0xbb, 0x5a, 0x74, 0xce,
	0x88, 0x16, 0x2a, 0x99, 0x76, 0x4b, 0xf6, 0x88, 0xa9, 0x84, 0x82, 0x37, 0x15, 0x05, 0xb7, 0xff,
	0xd3, 0x80, 0xe5, 0x5d, 0x4c, 0x5c, 0x3c, 0x47, 0x16, 0x73, 0x3f, 0x83, 0x5d, 0x26, 0xa1, 0x76,
	0x4d, 0x09, 0xb5, 0x09, 0x98, 0x27, 0xf4, 0x2c, 0xb9, 0xfb, 0xe6, 0xdf, 0xea, 0xbe, 0x1b, 0xb3,
	0xf7, 0xdd, 0xd4, 0xf6, 0x9d, 0x50, 0x85, 0x51, 0x92, 0x83, 0xcb, 0xa6, 0x3d, 0x81, 0x95, 0xfc,
	0xde, 0x16, 0x2a, 0xdf, 0x3c, 0xc0, 0x80, 0x5d, 0xe2, 0x4b, 0x5d, 0x78, 0x4e, 0x0b, 0xa7, 0x73,
	0x83, 0x3a, 0x19, 0xba, 0xfd, 0x04, 0xcc, 0x03, 0x77, 0x18, 0x2f, 0x76, 0xc7, 0x2c, 0xae, 0x2f,
	0xcc, 0xb9, 0xd7, 0x17, 0xb6, 0x0f, 0xcd, 0x27, 0x32, 0x46, 0x22, 0xf7, 0xb2, 0x5a, 0x66, 0x65,
	0x5e, 0xed, 0x3e, 0x2d, 0x71, 0xbe, 0x0c, 0x75, 0x61, 0x7f, 0xf9, 0x99, 0xcc, 0xb2, 0xd1, 0x12,
	0xc7, 0xfe, 0x89, 0x01, 0x9d, 0xa7, 0x31, 0xdd, 0x0d, 0x83, 0x80, 0x0e, 0x58, 0x18, 0x9d, 0x57,
	0x63, 0xe0, 0xb5, 0x46, 0x89, 0x9b, 0x9d, 0x7b, 0x3b, 0xed, 0x53, 0x2b, 0x30, 0x4d, 0x55, 0x95,
	0xbb, 0xd0, 0x98, 0x4e, 0xbc, 0xf4, 0x2d, 0x42, 0xcb, 0x49, 0x9a, 0x28, 0x58, 0x87, 0x67, 0xd2,
	0x05, 0x55, 0x0e, 0xcf, 0xec, 0xe7, 0x93, 0xda, 0x7c, 0x07, 0x9a, 0x9e, 0x1f, 0xf3, 0xa7, 0x0c,
	0xd6, 0x25, 0xb2, 0x04, 0x2d, 0x5e, 0x82, 0x47, 0x1a, 0xcb, 0xb0, 0xff, 0xd8, 0x80, 0x8e, 0x72,
	0x6f, 0x12, 0x3f, 0x83, 0xfa, 0xc9, 0x9b, 0xd0, 0x51, 0x12, 0xa1, 0x44, 0x0e, 0xe6, 0xdc, 0xd5,
	0xe4, 0xd0, 0xed, 0x7f, 0xad, 0x40, 0x5b, 0x81, 0x3e, 0x83, 0x05, 0x2d, 0xc0, 0xec, 0x4d, 0x0c,
	0xf5, 0x86, 0xa1, 0x12, 0x9c, 0x34, 0xb0, 0x3d, 0x2b, 0x2e, 0x79, 0x01, 0x96, 0xb3, 0x11, 0x95,
	0xe0, 0x68, 0x29, 0xed, 0xe5, 0x36, 0xfa, 0x3a, 0x9a, 0x70, 0xb1, 0x93, 0xd4, 0xe8, 0x28, 0x3d,
	0xea, 0x61, 0x4a, 0xa5, 0x4d, 0x0e, 0xb3, 0xfc, 0xf0, 0x85, 0xed, 0x80, 0xc4, 0x76, 0x2c, 0x78,
	0xc4, 0xff, 0x63, 0xc0, 0xba, 0x28, 0x6f, 0x26, 0x42, 0xfe, 0xb9, 0x94, 0xca, 0xd2, 0xea, 0xab,
	0x99, 0xab, 0xbe, 0xe2, 0x56, 0xbf, 0x37, 0xa5, 0x51, 0xf2, 0xd0, 0x47, 0x34, 0x66, 0xd6, 0x14,
	0xd3, 0x6a, 0x55, 0x43, 0xad, 0x56, 0xed, 0x43, 0x2b, 0xf3, 0xc6, 0x0b, 0x2f, 0x2a, 0x9f, 0x05,
	0x99, 0xfa, 0x15, 0xfe, 0x77, 0x01, 0xe4, 0xa0, 0x98, 0xe8, 0x3e, 0xa3, 0x51, 0xb3, 0x9c, 0xb8,
	0xa6, 0xe4, 0xc4, 0xf6, 0x0f, 0x0c, 0x00, 0x34, 0x5c, 0xbf, 0xf8, 0x93, 0xd1, 0x2e, 0xdf, 0xed,
	0x3f, 0xab, 0xc0, 0xda, 0x2e, 0x0e, 0xf2, 0xf6, 0xd9, 0xce, 0x90, 0x06, 0xac, 0xbc, 0x30, 0x59,
	0x98, 0x6f, 0xc1, 0x67, 0x3f, 0x9b, 0xd0, 0x4c, 0xae, 0x33, 0x12, 0x3d, 0x93, 0xb7, 0x19, 0xe9,
	0x5d, 0x96, 0x28, 0x43, 0xaa, 0x77, 0x59, 0xa2, 0x86, 0x5a, 0x61, 0x21, 0x32, 0x2f, 0x72, 0x83,
	0xf4, 0x3e, 0x4a, 0x34, 0x70, 0xd0, 0x63, 0x37, 0xee, 0xf3, 0xab, 0x90, 0x96, 0x78, 0xba, 0x75,
	0xec, 0xc6, 0x4f, 0x63, 0xca, 0x4b, 0xd0, 0x38, 0x50, 0xff, 0x38, 0x9c, 0x8a, 0xf0, 0xbc, 0xe6,
	0x34, 0xb1, 0xe3, 0xdd, 0x70, 0x1a, 0x91, 0x0d, 0x68, 0xb0, 0x50, 0x80, 0xda, 0x22, 0x79, 0x60,
	0x21, 0x02, 0xec, 0x1e, 0xd4, 0x1c, 0x3e, 0x72, 0x13, 0x4c, 0x04, 0x8b, 0xc7, 0x2f, 0x9e, 0x7b,
	0x66, 0x19, 0x2a, 0x7f, 0x1e, 0x45, 0xe1, 0x74, 0xf2, 0xcc, 0xf9, 0x93, 0xbe, 0x4d, 0x31, 0x73,
	0x6f, 0x53, 0xbe, 0x28, 0xfc, 0xf9, 0x8b, 0x0a, 0xac, 0xab, 0xf2, 0x13, 0x3f, 0x5b, 0x06, 0xcd,
	0x7d, 0xd9, 0xf3, 0x05, 0x61, 0xd1, 0x8f, 0x2a, 0x40, 0x24, 0x8b, 0x30, 0xe2, 0x79, 0xb6, 0x0c,
	0xc2, 0x15, 0xb9, 0x43, 0x85, 0x3d, 0x75, 0xe6, 0x0e, 0xbf, 0x40, 0xcc, 0x79, 0x13, 0x3a, 0xaa,
	0xf8, 0xe4, 0x2c, 0x46, 0xa5, 0x60, 0x31, 0x3c, 0x97, 0xb9, 0x3c, 0xc0, 0xa8, 0x3a, 0xfc, 0x5b,
	0x21, 0xe7, 0xda, 0x99, 0x53, 0xa8, 0x4a, 0x41, 0xa1, 0x0a, 0xe4, 0xaf, 0x03, 0x64, 0x27, 0x43,
	0x2e, 0x43, 0x5d, 0xf0, 0x32, 0x4d, 0x45, 0x91, 0x95, 0xa5, 0x84, 0xbb, 0xa9, 0x55, 0x10, 0x47,
	0x2a, 0x13, 0x82, 0x97, 0x25, 0x6a, 0xa5, 0xac, 0xec, 0x9d, 0x11, 0xc8, 0x41, 0x1e, 0xc1, 0x65,
	0x4d, 0x75, 0xe4, 0x30, 0x77, 0x73, 0xc3, 0xf4, 0x4a, 0x87, 0x11, 0xd6, 0x5a, 0x0c, 0xf4, 0xf7,
	0x06, 0x5c, 0xd9, 0x39, 0x1d, 0x26, 0xf4, 0x07, 0xfe, 0x98, 0x3e, 0x5b, 0x29, 0x5b, 0x44, 0x98,
	0x72, 0xb2, 0xd1, 0x98, 0x2d, 0x1b, 0xcd, 0x9c, 0x6c, 0xec, 0xc2, 0x46, 0x61, 0xe5, 0x92, 0x0b,
	0xdb, 0x60, 0xb9, 0xa7, 0xc3, 0x7e, 0xee, 0x39, 0x0d, 0x6e, 0xc0, 0x70, 0x96, 0xdd, 0x8c, 0x64,
	0x9f, 0x0e, 0xec, 0xf7, 0x60, 0xf3, 0x20, 0x64, 0xee, 0x28, 0x77, 0x51, 0x9c, 0x0c, 0xf3, 0xcb,
	0x40, 0x18, 0x02, 0xfb, 0x2a, 0x17, 0xf9, 0x40, 0x55, 0x67, 0x95, 0xe9, 0x64, 0x76, 0x1f, 0x6a,
	0xbb, 0xc7, 0xae, 0x1f, 0x9c, 0xc7, 0x39, 0xe1, 0x48, 0xab, 0xf3, 0x5e, 0xf0, 0x95, 0xde, 0x20,
	0xd9, 0xff, 0x64, 0x40, 0x5d, 0xbc, 0xab, 0xf9, 0x1c, 0xfd, 0x3e, 0xd9, 0x01, 0x70, 0x19, 0x8b,
	0xfc, 0xc3, 0x29, 0xa3, 0xc9, 0xcd, 0xc9, 0xcd, 0xb2, 0xc7, 0x3f, 0x3b, 0x09, 0xd6, 0x3b, 0x2e,
	0x73, 0x1d, 0x85, 0xc8, 0xfe, 0xbd, 0x0a, 0x6c, 0xea, 0x38, 0xf4, 0xc8, 0x0f, 0xfc, 0x67, 0x14,
	0xc7, 0x97, 0x5d, 0x08, 0x6a, 0x15, 0x42, 0xb3, 0x58, 0x21, 0x4c, 0xca, 0x97, 0x35, 0xa5, 0x7c,
	0x79, 0x0d, 0x60, 0xe4, 0xc7, 0xac, 0x2f, 0x2a, 0x28, 0xf2, 0x0d, 0x39, 0xf6, 0xec, 0xf1, 0x2a,
	0x8a, 0x2c, 0x4d, 0x37, 0xb2, 0xd2, 0x34, 0xa6, 0xdc, 0x7e, 0x90, 0xdc, 0x62, 0xf3, 0x6f, 0x3d,
	0x15, 0xcb, 0xa2, 0x77, 0xfb, 0xf7, 0x0d, 0xe8, 0xcd, 0x64, 0xc4, 0x42, 0x29, 0xd6, 0xa3, 0xdc,
	0x69, 0x08, 0xb5, 0x7f, 0x71, 0xfe, 0x69, 0xa4, 0x13, 0xe4, 0xce, 0xe4, 0x77, 0xaa, 0xb0, 0x56,
	0x72, 0x6e, 0xcf, 0xe0, 0x34, 0xae, 0x42, 0x4b, 0xbc, 0x02, 0xcb, 0x64, 0xac, 0x29, 0x3a, 0xc4,
	0x75, 0x86, 0x56, 0xdc, 0x4f, 0x33, 0x9a, 0xba, 0x96, 0xce, 0x7e, 0x8a, 0xb2, 0x45, 0x52, 0x14,
	0x81, 0xfc, 0xfd, 0xa3, 0xa8, 0xe6, 0x73, 0x5f, 0x63, 0x38, 0xb2, 0x85, 0x33, 0x1c, 0x86, 0xe1,
	0x88, 0xba, 0x01, 0xcf, 0xd1, 0x9a, 0x4e, 0xd2, 0xc4, 0x19, 0xf0, 0xb8, 0x98, 0x3f, 0xa6, 0xf2,
	0x61, 0x68, 0xda, 0xe6, 0xef, 0x49, 0x7d, 0xfe, 0xc0, 0x91, 0x97, 0x58, 0xf0, 0x1b, 0x67, 0x88,
	0x29, 0x63, 0x34, 0x92, 0xb7, 0x79, 0xb2, 0x45, 0x6e, 0x40, 0x5b, 0x7c, 0xa9, 0x8f, 0x17, 0x41,
	0x74, 0x61, 0x1a, 0x68, 0xff, 0x2a, 0x6c, 0xbc, 0x43, 0x47, 0x94, 0xd1, 0xec, 0x20, 0x2e, 0x10,
	0xe8, 0x17, 0xaf, 0xb1, 0x7e, 0x68, 0x80, 0xf5, 0x88, 0x32, 0xf9, 0x16, 0xef, 0xf3, 0x4f, 0x19,
	0xfe, 0xc4, 0x80, 0x35, 0x75, 0x83, 0x9f, 0xff, 0x92, 0xee, 0xfc, 0xa4, 0x03, 0x35, 0xfe, 0x2e,
	0x84, 0x74, 0x31, 0x1c, 0xcd, 0x70, 0x77, 0x92, 0xc7, 0x88, 0x97, 0xc8, 0x06, 0xba, 0xec, 0x0c,
	0xf2, 0xa1, 0xeb, 0x33, 0x3f, 0x18, 0x5a, 0x15, 0x72, 0x1d, 0x7a, 0x2a, 0x40, 0x7d, 0xe6, 0x47,
	0x3d, 0xab, 0x5a, 0x18, 0x52, 0x3e, 0x63, 0xb5, 0x4c, 0x7d, 0xc8, 0x77, 0xa2, 0x70, 0x32, 0xa1,
	0x9e, 0x55, 0x23, 0xcf, 0x41, 0x57, 0x05, 0xf0, 0xa5, 0xed, 0x0a, 0x49, 0xb7, 0xea, 0xe4, 0x1a,
	0x6c, 0xaa, 0xd0, 0xf7, 0x42, 0x3f, 0xc8, 0xe6, 0x6b, 0x90, 0x2d, 0x78, 0x4e, 0x05, 0xe7, 0xb3,
	0x78, 0xfe, 0x80, 0x52, 0x5b, 0xf1, 0x63, 0xea, 0x9e, 0x2a, 0xf0, 0x96, 0x0e, 0xdf, 0x1d, 0x85,
	0xb1, 0x02, 0x07, 0x7d, 0x79, 0x59, 0x26, 0x4a, 0x3d, 0xab, 0xad, 0x53, 0x3f, 0x0d, 0x98, 0x0a,
	0xef, 0xe8, 0xcb, 0x77, 0xa8, 0xeb, 0x65, 0xe0, 0x25, 0x1d, 0xfc, 0xd8, 0x8f, 0x15, 0x6e, 0x2e,
	0x93, 0x1b, 0x70, 0xb5, 0xc8, 0xcd, 0x0c, 0x61, 0x85, 0xdc, 0x82, 0x1b, 0xb9, 0xe9, 0xb9, 0x91,
	0xe5, 0xbf, 0x18, 0x48, 0x91, 0xd6, 0x75, 0x24, 0xc1, 0xdb, 0x3c, 0xd2, 0x65, 0x1d, 0x49, 0xc8,
	0x6c, 0x1e, 0xe9, 0x0a, 0xb9, 0x09, 0xd7, 0x0a, 0xbb, 0xc9, 0xa1, 0x6c, 0xe8, 0x28, 0x7c, 0x47,
	0x39, 0x94, 0xae, 0x7e, 0x66, 0xca, 0x13, 0x1f, 0x87, 0x4e, 0x46, 0x67, 0xd6, 0xab, 0x3a, 0xcf,
	0x1f, 0xfb, 0x63, 0x9f, 0x89, 0xbd, 0x79, 0xd6, 0x6b, 0xc4, 0x86, 0xeb, 0xf9, 0x55, 0x70, 0x5a,
	0x94, 0x51, 0x0c, 0x89, 0xc2, 0x29, 0xb3, 0xde, 0xd0, 0xb7, 0x53, 0x78, 0x0b, 0x45, 0x3d, 0xeb,
	0x4d, 0xce, 0x5e, 0xf1, 0xbc, 0xe6, 0x1d, 0x9a, 0x96, 0x9e, 0x32, 0x84, 0x1d, 0x7e, 0x3c, 0xf2,
	0xfd, 0x4d, 0x11, 0xfc, 0x36, 0x9f, 0x24, 0x0f, 0x2e, 0x9c, 0xe1, 0xae, 0xdc, 0x8b, 0xa8, 0x7c,
	0x3d, 0x9d, 0xc4, 0x54, 0xd5, 0x97, 0x77, 0x48, 0x0f, 0xae, 0xa4, 0xd0, 0x3c, 0xe5, 0x43, 0xce,
	0xca, 0x5c, 0x49, 0x58, 0x9e, 0x5c, 0x8a, 0xf2, 0xa4, 0x88, 0x22, 0x25, 0x20, 0x45, 0xf9, 0x66,
	0x11, 0x45, 0x1e, 0x6d, 0x8a, 0xe2, 0x70, 0x3e, 0xe4, 0x6b, 0xcf, 0x39, 0x31, 0xdd, 0x2f, 0x22,
	0xe4, 0x97, 0x7a, 0x40, 0xae, 0x00, 0x39, 0x70, 0x87, 0xfa, 0xfa, 0x9e, 0xca, 0x7e, 0x7d, 0x51,
	0x1f, 0x90, 0x75, 0xb0, 0xb8, 0x22, 0xa9, 0xd3, 0x7c, 0x28, 0xb1, 0xf5, 0xf5, 0x7d, 0x4b, 0x62,
	0xe7, 0xe7, 0xfc, 0x36, 0x59, 0xe6, 0x65, 0xa1, 0xc4, 0x52, 0xf4, 0x75, 0xd3, 0x23, 0x78, 0x4d,
	0x3d, 0xcb, 0x25, 0x57, 0x61, 0xa3, 0xc4, 0x48, 0xec, 0xd3, 0x80, 0x59, 0x03, 0x5d, 0x52, 0xb2,
	0xb2, 0x56, 0x36, 0xd7, 0x77, 0xc8, 0x8b, 0x70, 0xab, 0xd4, 0xcc, 0xf0, 0xa7, 0x19, 0x19, 0xe2,
	0xaf, 0xcf, 0x18, 0x6d, 0x9f, 0x2a, 0x48, 0xbf, 0xc1, 0x47, 0x2b, 0xc8, 0x4d, 0xe1, 0x97, 0x59,
	0xd6, 0x6f, 0x92, 0xe7, 0x61, 0xab, 0x74, 0x34, 0x37, 0x1a, 0x1c, 0xcb, 0x01, 0xad, 0xdf, 0x22,
	0x9b, 0x98, 0x1a, 0x15, 0xf4, 0x81, 0x7a, 0x96, 0x87, 0x1c, 0xcd, 0x99, 0xeb, 0xb3, 0x60, 0x40,
	0x3d, 0x8b, 0xea, 0xbc, 0xfa, 0xe0, 0x55, 0x09, 0x39, 0xd2, 0x07, 0xfb, 0x30, 0x8c, 0x4e, 0x68,
	0xf4, 0x5e, 0x78, 0x68, 0x0d, 0xef, 0xfc, 0xa5, 0x01, 0xcb, 0xd9, 0xdd, 0x37, 0xaf, 0xe2, 0x36,
	0xc1, 0x3c, 0xf2, 0x47, 0xd4, 0xaa, 0x90, 0x36, 0x34, 0x86, 0xe2, 0x8a, 0xd8, 0xaa, 0xf2, 0x47,
	0xeb, 0x11, 0x3d, 0xf5, 0xe9, 0x47, 0x96, 0x49, 0x20, 0xb9, 0x2d, 0x10, 0x2f, 0x08, 0xf8, 0x35,
	0x9d, 0x55, 0x27, 0xab, 0xb0, 0x94, 0xde, 0xc0, 0x1e, 0x85, 0xd1, 0xd8, 0x6a, 0xe0, 0xaa, 0x72,
	0x5d, 0xf2, 0x66, 0xd6, 0x6a, 0xf2, 0x79, 0x10, 0xa7, 0x45, 0x56, 0x72, 0xb7, 0xa8, 0x16, 0x90,
	0x0e, 0x34, 0x8f, 0xdc, 0xd1, 0xe8, 0xd0, 0x1d, 0x9c, 0x58, 0xed, 0x3b, 0x3f, 0x37, 0xc1, 0x7c,
	0xe2, 0xb2, 0x63, 0xdd, 0x48, 0xec, 0xd3, 0xc0, 0x93, 0xec, 0x3b, 0x08, 0x11, 0x10, 0x5a, 0x97,
	0xe6, 0xe3, 0x60, 0x5e, 0x63, 0x19, 0x3a, 0xa7, 0x1e, 0x06, 0x9e, 0x80, 0x54, 0xca, 0x20, 0x7c,
	0xdc, 0xaa, 0x54, 0xea, 0xbc, 0x93, 0x14, 0x30, 0x53, 0x37, 0x6d, 0x1c, 0xb6, 0x17, 0x88, 0x31,
	0x6b, 0xba, 0xa4, 0x0a, 0x83, 0x2f, 0x48, 0xeb, 0x33, 0x80, 0x9c, 0xb2, 0xa1, 0x9f, 0x1b, 0xfa,
	0x49, 0x41, 0xd7, 0x2c, 0x05, 0x71, 0xaa, 0x96, 0xbe, 0x52, 0xee, 0x1c, 0x05, 0x19, 0x94, 0xc3,
	0x38, 0x5d, 0x5b, 0xdf, 0x3b, 0xea, 0x21, 0xa7, 0x5a, 0x2a, 0x83, 0x70, 0x9a, 0xe5, 0x82, 0x27,
	0x9f, 0xc6, 0x0c, 0x39, 0x2e, 0x08, 0x57, 0x66, 0x82, 0x39, 0xb5, 0x55, 0x70, 0x1a, 0xdc, 0xa4,
	0xf0, 0x0a, 0xbf, 0x18, 0x60, 0x75, 0x1e, 0x06, 0x1f, 0x83, 0xe8, 0xbc, 0x17, 0xa6, 0x43, 0xc4,
	0x65, 0xd6, 0x9a, 0x0e, 0x15, 0xf4, 0x12, 0xba, 0xae, 0x33, 0x1f, 0x97, 0xf6, 0x21, 0x3d, 0x3c,
	0x0e, 0xc3, 0x13, 0xeb, 0xf2, 0x9d, 0x5f, 0x81, 0xb6, 0x40, 0x14, 0x57, 0x0e, 0x4d, 0x30, 0xc3,
	0x09, 0x0d, 0xac, 0x4b, 0xea, 0xaf, 0x37, 0x0c, 0x94, 0xd4, 0x88, 0xc6, 0xe1, 0xe8, 0x34, 0xf9,
	0xbd, 0x87, 0xf8, 0x85, 0x92, 0x55, 0xbd, 0xf3, 0x06, 0x2c, 0x0b, 0xfa, 0x27, 0xc9, 0xaf, 0x7c,
	0x1b, 0x50, 0x1d, 0x85, 0x1f, 0x59, 0x97, 0x10, 0x6d, 0x4c, 0x3d, 0x7f, 0x3a, 0xb6, 0x0c, 0xd4,
	0x9e, 0x63, 0x7f, 0x78, 0xcc, 0x04, 0xf5, 0x34, 0x1a, 0xa2, 0x05, 0xab, 0xde, 0x79, 0x52, 0x48,
	0x63, 0x12, 0xdd, 0xe4, 0x6f, 0x7b, 0x2e, 0x29, 0xaf, 0x79, 0x0c, 0x5c, 0x91, 0x0c, 0xf2, 0xc5,
	0xa3, 0x9f, 0x24, 0xac, 0xb7, 0xaa, 0x48, 0x80, 0xc1, 0xbc, 0x65, 0xde, 0x79, 0x50, 0x18, 0xf1,
	0x1b, 0x98, 0xd5, 0x01, 0xd4, 0xe3, 0xb3, 0x98, 0xd1, 0xb1, 0xd8, 0x99, 0x7c, 0x49, 0x63, 0x19,
	0x7c, 0x2f, 0xd3, 0x98, 0x85, 0x63, 0xab, 0x72, 0xe7, 0x15, 0xe8, 0x96, 0x24, 0x55, 0x29, 0x63,
	0x46, 0xfe, 0x29, 0x4d, 0xc8, 0xd1, 0xce, 0x7b, 0x96, 0x71, 0xff, 0xc7, 0x15, 0x68, 0x60, 0x90,
	0xf0, 0xfe, 0x30, 0x22, 0xaf, 0x01, 0x64, 0x51, 0x0c, 0x29, 0xf9, 0x2d, 0x64, 0xaf, 0xa4, 0x0f,
	0xa9, 0xb2, 0xb0, 0x66, 0x61, 0xaa, 0x17, 0x01, 0xb2, 0x38, 0x87, 0x40, 0x12, 0x85, 0xef, 0x79,
	0xbd, 0xa5, 0xe4, 0xfb, 0xe1, 0x78, 0xc2, 0xce, 0xc8, 0x1d, 0xfe, 0xf4, 0xd6, 0x2b, 0xa0, 0x95,
	0x0d, 0xfa, 0x32, 0xb4, 0x92, 0xa0, 0x27, 0xce, 0x21, 0xaf, 0x95, 0xfc, 0xc6, 0x88, 0xbc, 0x04,
	0xe6, 0x13, 0x3f, 0x18, 0x92, 0xb5, 0x04, 0x11, 0x5b, 0xd2, 0x82, 0xf7, 0x3a, 0x69, 0x67, 0x18,
	0x0c, 0xef, 0xff, 0x6f, 0x1d, 0x56, 0x72, 0xde, 0x60, 0x18, 0x91, 0x2f, 0x41, 0x7b, 0x9f, 0xd2,
	0xc4, 0x31, 0x90, 0x8d, 0xd2, 0x8b, 0xdb, 0xe2, 0x7e, 0xbe, 0x02, 0xcb, 0xd2, 0x77, 0x5d, 0x94,
	0xf2, 0x4b, 0x00, 0x3b, 0x83, 0x93, 0x84, 0xaa, 0x5b, 0x4a, 0xb5, 0x33, 0x38, 0xd1, 0xc9, 0xbe,
	0x09, 0x1b, 0xe2, 0x54, 0x35, 0xdb, 0xc7, 0x28, 0x99, 0xf3, 0xfb, 0x85, 0xde, 0x1c, 0x18, 0xf9,
	0x06, 0xac, 0xa6, 0x86, 0x35, 0xed, 0x9c, 0xf3, 0x73, 0xbb, 0xb9, 0x83, 0x7d, 0x15, 0x56, 0xa4,
	0xfd, 0x4e, 0xbb, 0xd4, 0xa3, 0x3b, 0x87, 0xf4, 0x11, 0x65, 0x9f, 0x8a, 0xf4, 0x5b, 0xe2, 0x91,
	0x7e, 0xfe, 0x97, 0x20, 0xb7, 0xf3, 0x04, 0xb3, 0x7e, 0xc7, 0xd0, 0xbb, 0x3a, 0x7b, 0xe0, 0x98,
	0x3c, 0x80, 0x15, 0x69, 0x93, 0xd3, 0xc9, 0xba, 0xc5, 0xa7, 0x00, 0x72, 0x24, 0xed, 0xac, 0xde,
	0x80, 0x55, 0x9e, 0xc6, 0x7c, 0x3a, 0xea, 0xd7, 0xc1, 0x4a, 0x7c, 0x4f, 0x4a, 0x5c, 0xfa, 0x9b,
	0xbc, 0x12, 0xc2, 0xc7, 0xf4, 0x88, 0x5d, 0x9c, 0xf0, 0x16, 0xd4, 0x0f, 0xce, 0x26, 0xa8, 0x44,
	0x73, 0x34, 0xf8, 0x02, 0x7a, 0xf6, 0xa3, 0x2a, 0xac, 0xe6, 0xa3, 0x5d, 0xd4, 0x34, 0x07, 0xd6,
	0x85, 0x85, 0xd1, 0x9e, 0xb5, 0xcc, 0x7d, 0xc3, 0xd1, 0x9b, 0x0b, 0xc5, 0x31, 0xa5, 0x56, 0x3c,
	0xbb, 0x31, 0xdf, 0x82, 0x35, 0x2e, 0x32, 0xda, 0x03, 0x15, 0x95, 0x35, 0xd7, 0xe6, 0x0d, 0x10,
	0x93, 0x57, 0x60, 0x5d, 0x58, 0x45, 0x6d, 0xe4, 0x39, 0xdc, 0x7d, 0x13, 0x56, 0x51, 0x07, 0x66,
	0xe3, 0xcf, 0x5f, 0xf3, 0x05, 0x0e, 0xe7, 0x4f, 0x2b, 0x50, 0x3f, 0x70, 0x87, 0x78, 0x22, 0xaf,
	0x40, 0x4b, 0x7a, 0x70, 0x77, 0x48, 0x8a, 0x0f, 0x5d, 0x7a, 0xc5, 0x2e, 0x24, 0x91, 0x6e, 0x7d,
	0x61, 0x92, 0xdb, 0xd0, 0x92, 0xf5, 0x1b, 0x77, 0x78, 0x8e, 0x8b, 0x40, 0xbe, 0xf3, 0x67, 0x3a,
	0x73, 0x5c, 0x04, 0x87, 0xbf, 0x08, 0xf5, 0x47, 0x94, 0xe9, 0x03, 0x96, 0x4c, 0x7e, 0x01, 0xc6,
	0xfc, 0x73, 0x05, 0x96, 0x95, 0x6c, 0x02, 0x19, 0xb4, 0x0d, 0x6d, 0x25, 0xaf, 0x9d, 0xb7, 0xf8,
	0x07, 0x60, 0xe1, 0xe2, 0x73, 0x8f, 0x5d, 0xe6, 0x18, 0xb1, 0x1c, 0xde, 0x0e, 0xb4, 0xd2, 0xe4,
	0x98, 0xcc, 0x7e, 0xc9, 0xd2, 0x9b, 0x0d, 0x22, 0x87, 0xb0, 0xca, 0x33, 0x1e, 0x35, 0x05, 0xd2,
	0xed, 0xe0, 0xac, 0xbf, 0xbb, 0xd1, 0x7b, 0xe1, 0x5c, 0x3c, 0xfe, 0xb7, 0x12, 0x2e, 0xc0, 0xca,
	0x3f, 0xac, 0xe5, 0x63, 0x58, 0x87, 0x4e, 0xc2, 0x88, 0xd1, 0x88, 0x7c, 0x07, 0x43, 0xd4, 0x69,
	0xa0, 0xff, 0x46, 0x49, 0x5c, 0xc6, 0xdd, 0x9c, 0x73, 0xf3, 0x34, 0xcb, 0x03, 0x29, 0x77, 0x79,
	0x14, 0x7a, 0x33, 0xc7, 0x8e, 0x89, 0x3d, 0x9b, 0x32, 0x75, 0x08, 0xb7, 0xe6, 0xe2, 0x48, 0x55,
	0x9b, 0xb1, 0x05, 0x71, 0x21, 0x58, 0xbe, 0x05, 0xf5, 0x2a, 0x7f, 0xc6, 0x16, 0x04, 0x79, 0x1f,
	0x03, 0xe8, 0xe2, 0xd8, 0x5c, 0xe4, 0xb7, 0x66, 0x5d, 0xef, 0xa5, 0xcb, 0xbf, 0x39, 0x07, 0x43,
	0x2e, 0xfe, 0x10, 0xd6, 0x1e, 0x51, 0xa6, 0x5d, 0x81, 0xc5, 0xe4, 0x79, 0x5d, 0x02, 0xca, 0x2e,
	0xf7, 0x8a, 0x72, 0x52, 0x7e, 0x91, 0x46, 0x61, 0x1d, 0x75, 0x53, 0xbf, 0xea, 0x5a, 0x70, 0x12,
	0xfd, 0x1e, 0x62, 0xe6, 0x45, 0xdb, 0x05, 0xc4, 0xf1, 0xef, 0x2a, 0xd0, 0x12, 0x11, 0x35, 0x2a,
	0xf5, 0x03, 0xe8, 0xa8, 0x79, 0x0b, 0x29, 0xfd, 0x11, 0x7a, 0xaf, 0xb4, 0x17, 0x69, 0xd5, 0xac,
	0xe6, 0x42, 0xb4, 0x6f, 0x41, 0x47, 0xad, 0x63, 0xeb, 0xb2, 0x52, 0x52, 0xe3, 0xd6, 0x8d, 0xcc,
	0x0e, 0xb4, 0xd2, 0xca, 0x3c, 0xb9, 0xae, 0xbf, 0x2e, 0xcf, 0x97, 0xec, 0x67, 0x2c, 0xe2, 0x02,
	0x5c, 0xfb, 0xaf, 0x2a, 0x10, 0x2d, 0x0f, 0x41, 0xf6, 0x7d, 0x5b, 0xfc, 0xca, 0x70, 0xce, 0x0d,
	0x54, 0x7e, 0xd5, 0xbd, 0xed, 0x05, 0x6f, 0x96, 0x62, 0x12, 0xc3, 0x0d, 0xf5, 0x64, 0xca, 0xee,
	0xf9, 0x16, 0xbd, 0xa6, 0xea, 0x2d, 0x8a, 0x88, 0x93, 0xaa, 0x47, 0xfa, 0x8b, 0x99, 0xf4, 0x43,
	0xb8, 0xa1, 0x5f, 0xda, 0xe8, 0x28, 0x2f, 0xcc, 0x16, 0x0f, 0xe5, 0x8e, 0xe7, 0xd3, 0x47, 0x69,
	0xff, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xf9, 0xb3, 0x92, 0xfd, 0x4b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuleMgrClient is the client API for RuleMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuleMgrClient interface {
	UpdateRule(ctx context.Context, in *Rule, opts ...grpc.CallOption) (*Rule, error)
	CreateRule(ctx context.Context, in *Rule, opts ...grpc.CallOption) (*Rule, error)
	DeleteRule(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	ReadRule(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Rule, error)
	ListRules(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Route, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type ruleMgrClient struct {
	cc *grpc.ClientConn
}

func NewRuleMgrClient(cc *grpc.ClientConn) RuleMgrClient {
	return &ruleMgrClient{cc}
}

func (c *ruleMgrClient) UpdateRule(ctx context.Context, in *Rule, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/UpdateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleMgrClient) CreateRule(ctx context.Context, in *Rule, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/CreateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleMgrClient) DeleteRule(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/DeleteRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleMgrClient) ReadRule(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Rule, error) {
	out := new(Rule)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/ReadRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleMgrClient) ListRules(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/ListRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.RuleMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuleMgrServer is the server API for RuleMgr service.
type RuleMgrServer interface {
	UpdateRule(context.Context, *Rule) (*Rule, error)
	CreateRule(context.Context, *Rule) (*Rule, error)
	DeleteRule(context.Context, *common.Id) (*common.Empty, error)
	ReadRule(context.Context, *common.Id) (*Rule, error)
	ListRules(context.Context, *common.Id) (*Route, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterRuleMgrServer(s *grpc.Server, srv RuleMgrServer) {
	s.RegisterService(&_RuleMgr_serviceDesc, srv)
}

func _RuleMgr_UpdateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Rule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).UpdateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/UpdateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).UpdateRule(ctx, req.(*Rule))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleMgr_CreateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Rule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).CreateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/CreateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).CreateRule(ctx, req.(*Rule))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleMgr_DeleteRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).DeleteRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/DeleteRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).DeleteRule(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleMgr_ReadRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).ReadRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/ReadRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).ReadRule(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleMgr_ListRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).ListRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/ListRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).ListRules(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.RuleMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuleMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.RuleMgr",
	HandlerType: (*RuleMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRule",
			Handler:    _RuleMgr_UpdateRule_Handler,
		},
		{
			MethodName: "CreateRule",
			Handler:    _RuleMgr_CreateRule_Handler,
		},
		{
			MethodName: "DeleteRule",
			Handler:    _RuleMgr_DeleteRule_Handler,
		},
		{
			MethodName: "ReadRule",
			Handler:    _RuleMgr_ReadRule_Handler,
		},
		{
			MethodName: "ListRules",
			Handler:    _RuleMgr_ListRules_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _RuleMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// ConversationMgrClient is the client API for ConversationMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConversationMgrClient interface {
	SeenMessage(ctx context.Context, in *MessageId, opts ...grpc.CallOption) (*common.Empty, error)
	ReceiveMessage(ctx context.Context, in *MessageId, opts ...grpc.CallOption) (*common.Empty, error)
	AckMessage(ctx context.Context, in *MessageAck, opts ...grpc.CallOption) (*common.Empty, error)
	UpdateConversationState(ctx context.Context, in *Conversation, opts ...grpc.CallOption) (*Conversation, error)
	StartConversation(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*Conversation, error)
	EndConversation(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Conversation, error)
	GetConversation(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Conversation, error)
	ListConversations(ctx context.Context, in *ListConversationsRequest, opts ...grpc.CallOption) (*Conversations, error)
	TagConversation(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*common.Empty, error)
	UntagConversation(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*common.Empty, error)
	JoinConversation(ctx context.Context, in *Member, opts ...grpc.CallOption) (*common.Empty, error)
	LeftConversation(ctx context.Context, in *Member, opts ...grpc.CallOption) (*common.Empty, error)
	Typing(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type conversationMgrClient struct {
	cc *grpc.ClientConn
}

func NewConversationMgrClient(cc *grpc.ClientConn) ConversationMgrClient {
	return &conversationMgrClient{cc}
}

func (c *conversationMgrClient) SeenMessage(ctx context.Context, in *MessageId, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/SeenMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) ReceiveMessage(ctx context.Context, in *MessageId, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/ReceiveMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) AckMessage(ctx context.Context, in *MessageAck, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/AckMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) UpdateConversationState(ctx context.Context, in *Conversation, opts ...grpc.CallOption) (*Conversation, error) {
	out := new(Conversation)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/UpdateConversationState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) StartConversation(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*Conversation, error) {
	out := new(Conversation)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/StartConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) EndConversation(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Conversation, error) {
	out := new(Conversation)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/EndConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) GetConversation(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Conversation, error) {
	out := new(Conversation)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/GetConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) ListConversations(ctx context.Context, in *ListConversationsRequest, opts ...grpc.CallOption) (*Conversations, error) {
	out := new(Conversations)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/ListConversations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) TagConversation(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/TagConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) UntagConversation(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/UntagConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) JoinConversation(ctx context.Context, in *Member, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/JoinConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) LeftConversation(ctx context.Context, in *Member, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/LeftConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) Typing(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/Typing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.ConversationMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConversationMgrServer is the server API for ConversationMgr service.
type ConversationMgrServer interface {
	SeenMessage(context.Context, *MessageId) (*common.Empty, error)
	ReceiveMessage(context.Context, *MessageId) (*common.Empty, error)
	AckMessage(context.Context, *MessageAck) (*common.Empty, error)
	UpdateConversationState(context.Context, *Conversation) (*Conversation, error)
	StartConversation(context.Context, *StartRequest) (*Conversation, error)
	EndConversation(context.Context, *common.Id) (*Conversation, error)
	GetConversation(context.Context, *common.Id) (*Conversation, error)
	ListConversations(context.Context, *ListConversationsRequest) (*Conversations, error)
	TagConversation(context.Context, *TagRequest) (*common.Empty, error)
	UntagConversation(context.Context, *TagRequest) (*common.Empty, error)
	JoinConversation(context.Context, *Member) (*common.Empty, error)
	LeftConversation(context.Context, *Member) (*common.Empty, error)
	Typing(context.Context, *common.Id) (*common.Empty, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterConversationMgrServer(s *grpc.Server, srv ConversationMgrServer) {
	s.RegisterService(&_ConversationMgr_serviceDesc, srv)
}

func _ConversationMgr_SeenMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).SeenMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/SeenMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).SeenMessage(ctx, req.(*MessageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_ReceiveMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).ReceiveMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/ReceiveMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).ReceiveMessage(ctx, req.(*MessageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_AckMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageAck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).AckMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/AckMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).AckMessage(ctx, req.(*MessageAck))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_UpdateConversationState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Conversation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).UpdateConversationState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/UpdateConversationState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).UpdateConversationState(ctx, req.(*Conversation))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_StartConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).StartConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/StartConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).StartConversation(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_EndConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).EndConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/EndConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).EndConversation(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_GetConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).GetConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/GetConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).GetConversation(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_ListConversations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConversationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).ListConversations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/ListConversations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).ListConversations(ctx, req.(*ListConversationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_TagConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).TagConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/TagConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).TagConversation(ctx, req.(*TagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_UntagConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).UntagConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/UntagConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).UntagConversation(ctx, req.(*TagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_JoinConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).JoinConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/JoinConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).JoinConversation(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_LeftConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).LeftConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/LeftConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).LeftConversation(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_Typing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).Typing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/Typing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).Typing(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConversationMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.ConversationMgr",
	HandlerType: (*ConversationMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SeenMessage",
			Handler:    _ConversationMgr_SeenMessage_Handler,
		},
		{
			MethodName: "ReceiveMessage",
			Handler:    _ConversationMgr_ReceiveMessage_Handler,
		},
		{
			MethodName: "AckMessage",
			Handler:    _ConversationMgr_AckMessage_Handler,
		},
		{
			MethodName: "UpdateConversationState",
			Handler:    _ConversationMgr_UpdateConversationState_Handler,
		},
		{
			MethodName: "StartConversation",
			Handler:    _ConversationMgr_StartConversation_Handler,
		},
		{
			MethodName: "EndConversation",
			Handler:    _ConversationMgr_EndConversation_Handler,
		},
		{
			MethodName: "GetConversation",
			Handler:    _ConversationMgr_GetConversation_Handler,
		},
		{
			MethodName: "ListConversations",
			Handler:    _ConversationMgr_ListConversations_Handler,
		},
		{
			MethodName: "TagConversation",
			Handler:    _ConversationMgr_TagConversation_Handler,
		},
		{
			MethodName: "UntagConversation",
			Handler:    _ConversationMgr_UntagConversation_Handler,
		},
		{
			MethodName: "JoinConversation",
			Handler:    _ConversationMgr_JoinConversation_Handler,
		},
		{
			MethodName: "LeftConversation",
			Handler:    _ConversationMgr_LeftConversation_Handler,
		},
		{
			MethodName: "Typing",
			Handler:    _ConversationMgr_Typing_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _ConversationMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// CannedResponseMgrClient is the client API for CannedResponseMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CannedResponseMgrClient interface {
	CreateCannedResponse(ctx context.Context, in *CannedResponse, opts ...grpc.CallOption) (*CannedResponse, error)
	UpdateCannedResponse(ctx context.Context, in *CannedResponse, opts ...grpc.CallOption) (*CannedResponse, error)
	ListCannedResponses(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*CannedResponses, error)
	DeleteCannedResponse(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	GetCannedResponse(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*CannedResponse, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type cannedResponseMgrClient struct {
	cc *grpc.ClientConn
}

func NewCannedResponseMgrClient(cc *grpc.ClientConn) CannedResponseMgrClient {
	return &cannedResponseMgrClient{cc}
}

func (c *cannedResponseMgrClient) CreateCannedResponse(ctx context.Context, in *CannedResponse, opts ...grpc.CallOption) (*CannedResponse, error) {
	out := new(CannedResponse)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/CreateCannedResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cannedResponseMgrClient) UpdateCannedResponse(ctx context.Context, in *CannedResponse, opts ...grpc.CallOption) (*CannedResponse, error) {
	out := new(CannedResponse)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/UpdateCannedResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cannedResponseMgrClient) ListCannedResponses(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*CannedResponses, error) {
	out := new(CannedResponses)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/ListCannedResponses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cannedResponseMgrClient) DeleteCannedResponse(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/DeleteCannedResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cannedResponseMgrClient) GetCannedResponse(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*CannedResponse, error) {
	out := new(CannedResponse)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/GetCannedResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cannedResponseMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.CannedResponseMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CannedResponseMgrServer is the server API for CannedResponseMgr service.
type CannedResponseMgrServer interface {
	CreateCannedResponse(context.Context, *CannedResponse) (*CannedResponse, error)
	UpdateCannedResponse(context.Context, *CannedResponse) (*CannedResponse, error)
	ListCannedResponses(context.Context, *common.Id) (*CannedResponses, error)
	DeleteCannedResponse(context.Context, *common.Id) (*common.Empty, error)
	GetCannedResponse(context.Context, *common.Id) (*CannedResponse, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterCannedResponseMgrServer(s *grpc.Server, srv CannedResponseMgrServer) {
	s.RegisterService(&_CannedResponseMgr_serviceDesc, srv)
}

func _CannedResponseMgr_CreateCannedResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CannedResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).CreateCannedResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/CreateCannedResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).CreateCannedResponse(ctx, req.(*CannedResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _CannedResponseMgr_UpdateCannedResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CannedResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).UpdateCannedResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/UpdateCannedResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).UpdateCannedResponse(ctx, req.(*CannedResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _CannedResponseMgr_ListCannedResponses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).ListCannedResponses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/ListCannedResponses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).ListCannedResponses(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _CannedResponseMgr_DeleteCannedResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).DeleteCannedResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/DeleteCannedResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).DeleteCannedResponse(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _CannedResponseMgr_GetCannedResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).GetCannedResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/GetCannedResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).GetCannedResponse(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _CannedResponseMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CannedResponseMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.CannedResponseMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CannedResponseMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CannedResponseMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.CannedResponseMgr",
	HandlerType: (*CannedResponseMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCannedResponse",
			Handler:    _CannedResponseMgr_CreateCannedResponse_Handler,
		},
		{
			MethodName: "UpdateCannedResponse",
			Handler:    _CannedResponseMgr_UpdateCannedResponse_Handler,
		},
		{
			MethodName: "ListCannedResponses",
			Handler:    _CannedResponseMgr_ListCannedResponses_Handler,
		},
		{
			MethodName: "DeleteCannedResponse",
			Handler:    _CannedResponseMgr_DeleteCannedResponse_Handler,
		},
		{
			MethodName: "GetCannedResponse",
			Handler:    _CannedResponseMgr_GetCannedResponse_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _CannedResponseMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// TagMgrClient is the client API for TagMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TagMgrClient interface {
	CreateTag(ctx context.Context, in *Tag, opts ...grpc.CallOption) (*Tag, error)
	UpdateTag(ctx context.Context, in *Tag, opts ...grpc.CallOption) (*Tag, error)
	DeleteTag(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	ListTags(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Tags, error)
	GetTag(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Tag, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type tagMgrClient struct {
	cc *grpc.ClientConn
}

func NewTagMgrClient(cc *grpc.ClientConn) TagMgrClient {
	return &tagMgrClient{cc}
}

func (c *tagMgrClient) CreateTag(ctx context.Context, in *Tag, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/CreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagMgrClient) UpdateTag(ctx context.Context, in *Tag, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/UpdateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagMgrClient) DeleteTag(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagMgrClient) ListTags(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Tags, error) {
	out := new(Tags)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagMgrClient) GetTag(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.TagMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TagMgrServer is the server API for TagMgr service.
type TagMgrServer interface {
	CreateTag(context.Context, *Tag) (*Tag, error)
	UpdateTag(context.Context, *Tag) (*Tag, error)
	DeleteTag(context.Context, *common.Id) (*common.Empty, error)
	ListTags(context.Context, *common.Id) (*Tags, error)
	GetTag(context.Context, *common.Id) (*Tag, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterTagMgrServer(s *grpc.Server, srv TagMgrServer) {
	s.RegisterService(&_TagMgr_serviceDesc, srv)
}

func _TagMgr_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).CreateTag(ctx, req.(*Tag))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagMgr_UpdateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).UpdateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/UpdateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).UpdateTag(ctx, req.(*Tag))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagMgr_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).DeleteTag(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagMgr_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).ListTags(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagMgr_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).GetTag(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TagMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TagMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.TagMgr",
	HandlerType: (*TagMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTag",
			Handler:    _TagMgr_CreateTag_Handler,
		},
		{
			MethodName: "UpdateTag",
			Handler:    _TagMgr_UpdateTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _TagMgr_DeleteTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _TagMgr_ListTags_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _TagMgr_GetTag_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _TagMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// IntegrationMgrClient is the client API for IntegrationMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntegrationMgrClient interface {
	Deintegrate(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	ListIntegrations(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Integrations, error)
	Integrate(ctx context.Context, in *Integration, opts ...grpc.CallOption) (*Integration, error)
	CheckAvailability(ctx context.Context, in *AvailabilityCheckRequest, opts ...grpc.CallOption) (*AvailabilityCheckResult, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type integrationMgrClient struct {
	cc *grpc.ClientConn
}

func NewIntegrationMgrClient(cc *grpc.ClientConn) IntegrationMgrClient {
	return &integrationMgrClient{cc}
}

func (c *integrationMgrClient) Deintegrate(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.IntegrationMgr/Deintegrate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *integrationMgrClient) ListIntegrations(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Integrations, error) {
	out := new(Integrations)
	err := c.cc.Invoke(ctx, "/conversation.IntegrationMgr/ListIntegrations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *integrationMgrClient) Integrate(ctx context.Context, in *Integration, opts ...grpc.CallOption) (*Integration, error) {
	out := new(Integration)
	err := c.cc.Invoke(ctx, "/conversation.IntegrationMgr/Integrate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *integrationMgrClient) CheckAvailability(ctx context.Context, in *AvailabilityCheckRequest, opts ...grpc.CallOption) (*AvailabilityCheckResult, error) {
	out := new(AvailabilityCheckResult)
	err := c.cc.Invoke(ctx, "/conversation.IntegrationMgr/CheckAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *integrationMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.IntegrationMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IntegrationMgrServer is the server API for IntegrationMgr service.
type IntegrationMgrServer interface {
	Deintegrate(context.Context, *common.Id) (*common.Empty, error)
	ListIntegrations(context.Context, *common.Id) (*Integrations, error)
	Integrate(context.Context, *Integration) (*Integration, error)
	CheckAvailability(context.Context, *AvailabilityCheckRequest) (*AvailabilityCheckResult, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterIntegrationMgrServer(s *grpc.Server, srv IntegrationMgrServer) {
	s.RegisterService(&_IntegrationMgr_serviceDesc, srv)
}

func _IntegrationMgr_Deintegrate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegrationMgrServer).Deintegrate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.IntegrationMgr/Deintegrate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegrationMgrServer).Deintegrate(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntegrationMgr_ListIntegrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegrationMgrServer).ListIntegrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.IntegrationMgr/ListIntegrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegrationMgrServer).ListIntegrations(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntegrationMgr_Integrate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Integration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegrationMgrServer).Integrate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.IntegrationMgr/Integrate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegrationMgrServer).Integrate(ctx, req.(*Integration))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntegrationMgr_CheckAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailabilityCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegrationMgrServer).CheckAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.IntegrationMgr/CheckAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegrationMgrServer).CheckAvailability(ctx, req.(*AvailabilityCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntegrationMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegrationMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.IntegrationMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegrationMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IntegrationMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.IntegrationMgr",
	HandlerType: (*IntegrationMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deintegrate",
			Handler:    _IntegrationMgr_Deintegrate_Handler,
		},
		{
			MethodName: "ListIntegrations",
			Handler:    _IntegrationMgr_ListIntegrations_Handler,
		},
		{
			MethodName: "Integrate",
			Handler:    _IntegrationMgr_Integrate_Handler,
		},
		{
			MethodName: "CheckAvailability",
			Handler:    _IntegrationMgr_CheckAvailability_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _IntegrationMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// ConversationReporterClient is the client API for ConversationReporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConversationReporterClient interface {
	CountConversationsByAgent(ctx context.Context, in *CountByAgentRequest, opts ...grpc.CallOption) (*CountByAgent, error)
	CountConversationsByAgents(ctx context.Context, in *CountByAgentsRequest, opts ...grpc.CallOption) (*CountByAgentsResponse, error)
	CountConversationsByGroup(ctx context.Context, in *CountByGroupRequest, opts ...grpc.CallOption) (*CountByGroup, error)
	CountConversationsByTags(ctx context.Context, in *CountByTagsRequest, opts ...grpc.CallOption) (*CountByTagsResponse, error)
	GetAvgResponseTimes(ctx context.Context, in *AvgResponseTimeRequest, opts ...grpc.CallOption) (*AvgResponseTimeResponse, error)
	GetTotalConversation(ctx context.Context, in *AvgResponseTimeRequest, opts ...grpc.CallOption) (*TotalConversationResponse, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type conversationReporterClient struct {
	cc *grpc.ClientConn
}

func NewConversationReporterClient(cc *grpc.ClientConn) ConversationReporterClient {
	return &conversationReporterClient{cc}
}

func (c *conversationReporterClient) CountConversationsByAgent(ctx context.Context, in *CountByAgentRequest, opts ...grpc.CallOption) (*CountByAgent, error) {
	out := new(CountByAgent)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/CountConversationsByAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) CountConversationsByAgents(ctx context.Context, in *CountByAgentsRequest, opts ...grpc.CallOption) (*CountByAgentsResponse, error) {
	out := new(CountByAgentsResponse)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/CountConversationsByAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) CountConversationsByGroup(ctx context.Context, in *CountByGroupRequest, opts ...grpc.CallOption) (*CountByGroup, error) {
	out := new(CountByGroup)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/CountConversationsByGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) CountConversationsByTags(ctx context.Context, in *CountByTagsRequest, opts ...grpc.CallOption) (*CountByTagsResponse, error) {
	out := new(CountByTagsResponse)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/CountConversationsByTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) GetAvgResponseTimes(ctx context.Context, in *AvgResponseTimeRequest, opts ...grpc.CallOption) (*AvgResponseTimeResponse, error) {
	out := new(AvgResponseTimeResponse)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/GetAvgResponseTimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) GetTotalConversation(ctx context.Context, in *AvgResponseTimeRequest, opts ...grpc.CallOption) (*TotalConversationResponse, error) {
	out := new(TotalConversationResponse)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/GetTotalConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationReporterClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.ConversationReporter/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConversationReporterServer is the server API for ConversationReporter service.
type ConversationReporterServer interface {
	CountConversationsByAgent(context.Context, *CountByAgentRequest) (*CountByAgent, error)
	CountConversationsByAgents(context.Context, *CountByAgentsRequest) (*CountByAgentsResponse, error)
	CountConversationsByGroup(context.Context, *CountByGroupRequest) (*CountByGroup, error)
	CountConversationsByTags(context.Context, *CountByTagsRequest) (*CountByTagsResponse, error)
	GetAvgResponseTimes(context.Context, *AvgResponseTimeRequest) (*AvgResponseTimeResponse, error)
	GetTotalConversation(context.Context, *AvgResponseTimeRequest) (*TotalConversationResponse, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterConversationReporterServer(s *grpc.Server, srv ConversationReporterServer) {
	s.RegisterService(&_ConversationReporter_serviceDesc, srv)
}

func _ConversationReporter_CountConversationsByAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).CountConversationsByAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/CountConversationsByAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).CountConversationsByAgent(ctx, req.(*CountByAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_CountConversationsByAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).CountConversationsByAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/CountConversationsByAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).CountConversationsByAgents(ctx, req.(*CountByAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_CountConversationsByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).CountConversationsByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/CountConversationsByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).CountConversationsByGroup(ctx, req.(*CountByGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_CountConversationsByTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).CountConversationsByTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/CountConversationsByTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).CountConversationsByTags(ctx, req.(*CountByTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_GetAvgResponseTimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvgResponseTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).GetAvgResponseTimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/GetAvgResponseTimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).GetAvgResponseTimes(ctx, req.(*AvgResponseTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_GetTotalConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvgResponseTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).GetTotalConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/GetTotalConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).GetTotalConversation(ctx, req.(*AvgResponseTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConversationReporter_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationReporterServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.ConversationReporter/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationReporterServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConversationReporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.ConversationReporter",
	HandlerType: (*ConversationReporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountConversationsByAgent",
			Handler:    _ConversationReporter_CountConversationsByAgent_Handler,
		},
		{
			MethodName: "CountConversationsByAgents",
			Handler:    _ConversationReporter_CountConversationsByAgents_Handler,
		},
		{
			MethodName: "CountConversationsByGroup",
			Handler:    _ConversationReporter_CountConversationsByGroup_Handler,
		},
		{
			MethodName: "CountConversationsByTags",
			Handler:    _ConversationReporter_CountConversationsByTags_Handler,
		},
		{
			MethodName: "GetAvgResponseTimes",
			Handler:    _ConversationReporter_GetAvgResponseTimes_Handler,
		},
		{
			MethodName: "GetTotalConversation",
			Handler:    _ConversationReporter_GetTotalConversation_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _ConversationReporter_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// TicketMgrClient is the client API for TicketMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketMgrClient interface {
	CreateTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*Ticket, error)
	UpdateTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*Ticket, error)
	DeleteTicket(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*common.Empty, error)
	GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*Ticket, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type ticketMgrClient struct {
	cc *grpc.ClientConn
}

func NewTicketMgrClient(cc *grpc.ClientConn) TicketMgrClient {
	return &ticketMgrClient{cc}
}

func (c *ticketMgrClient) CreateTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*Ticket, error) {
	out := new(Ticket)
	err := c.cc.Invoke(ctx, "/conversation.TicketMgr/CreateTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketMgrClient) UpdateTicket(ctx context.Context, in *Ticket, opts ...grpc.CallOption) (*Ticket, error) {
	out := new(Ticket)
	err := c.cc.Invoke(ctx, "/conversation.TicketMgr/UpdateTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketMgrClient) DeleteTicket(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.TicketMgr/DeleteTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketMgrClient) GetTicket(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*Ticket, error) {
	out := new(Ticket)
	err := c.cc.Invoke(ctx, "/conversation.TicketMgr/GetTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.TicketMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketMgrServer is the server API for TicketMgr service.
type TicketMgrServer interface {
	CreateTicket(context.Context, *Ticket) (*Ticket, error)
	UpdateTicket(context.Context, *Ticket) (*Ticket, error)
	DeleteTicket(context.Context, *DeleteTicketRequest) (*common.Empty, error)
	GetTicket(context.Context, *GetTicketRequest) (*Ticket, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterTicketMgrServer(s *grpc.Server, srv TicketMgrServer) {
	s.RegisterService(&_TicketMgr_serviceDesc, srv)
}

func _TicketMgr_CreateTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketMgrServer).CreateTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketMgr/CreateTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketMgrServer).CreateTicket(ctx, req.(*Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketMgr_UpdateTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketMgrServer).UpdateTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketMgr/UpdateTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketMgrServer).UpdateTicket(ctx, req.(*Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketMgr_DeleteTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketMgrServer).DeleteTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketMgr/DeleteTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketMgrServer).DeleteTicket(ctx, req.(*DeleteTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketMgr_GetTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketMgrServer).GetTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketMgr/GetTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketMgrServer).GetTicket(ctx, req.(*GetTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.TicketMgr",
	HandlerType: (*TicketMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTicket",
			Handler:    _TicketMgr_CreateTicket_Handler,
		},
		{
			MethodName: "UpdateTicket",
			Handler:    _TicketMgr_UpdateTicket_Handler,
		},
		{
			MethodName: "DeleteTicket",
			Handler:    _TicketMgr_DeleteTicket_Handler,
		},
		{
			MethodName: "GetTicket",
			Handler:    _TicketMgr_GetTicket_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _TicketMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

// TicketAttributeMgrClient is the client API for TicketAttributeMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketAttributeMgrClient interface {
	ListTicketAttributeDefinitions(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*TicketAttributeDefinitions, error)
	CreateTicketAttributeDefinition(ctx context.Context, in *TicketAttributeDefinition, opts ...grpc.CallOption) (*TicketAttributeDefinition, error)
	UpdateTicketAttributeDefinition(ctx context.Context, in *TicketAttributeDefinition, opts ...grpc.CallOption) (*TicketAttributeDefinition, error)
	DeleteTicketAttributeDefinition(ctx context.Context, in *DeleteTicketAttrRequest, opts ...grpc.CallOption) (*common.Empty, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type ticketAttributeMgrClient struct {
	cc *grpc.ClientConn
}

func NewTicketAttributeMgrClient(cc *grpc.ClientConn) TicketAttributeMgrClient {
	return &ticketAttributeMgrClient{cc}
}

func (c *ticketAttributeMgrClient) ListTicketAttributeDefinitions(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*TicketAttributeDefinitions, error) {
	out := new(TicketAttributeDefinitions)
	err := c.cc.Invoke(ctx, "/conversation.TicketAttributeMgr/ListTicketAttributeDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketAttributeMgrClient) CreateTicketAttributeDefinition(ctx context.Context, in *TicketAttributeDefinition, opts ...grpc.CallOption) (*TicketAttributeDefinition, error) {
	out := new(TicketAttributeDefinition)
	err := c.cc.Invoke(ctx, "/conversation.TicketAttributeMgr/CreateTicketAttributeDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketAttributeMgrClient) UpdateTicketAttributeDefinition(ctx context.Context, in *TicketAttributeDefinition, opts ...grpc.CallOption) (*TicketAttributeDefinition, error) {
	out := new(TicketAttributeDefinition)
	err := c.cc.Invoke(ctx, "/conversation.TicketAttributeMgr/UpdateTicketAttributeDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketAttributeMgrClient) DeleteTicketAttributeDefinition(ctx context.Context, in *DeleteTicketAttrRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/conversation.TicketAttributeMgr/DeleteTicketAttributeDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketAttributeMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/conversation.TicketAttributeMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketAttributeMgrServer is the server API for TicketAttributeMgr service.
type TicketAttributeMgrServer interface {
	ListTicketAttributeDefinitions(context.Context, *common.Empty) (*TicketAttributeDefinitions, error)
	CreateTicketAttributeDefinition(context.Context, *TicketAttributeDefinition) (*TicketAttributeDefinition, error)
	UpdateTicketAttributeDefinition(context.Context, *TicketAttributeDefinition) (*TicketAttributeDefinition, error)
	DeleteTicketAttributeDefinition(context.Context, *DeleteTicketAttrRequest) (*common.Empty, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterTicketAttributeMgrServer(s *grpc.Server, srv TicketAttributeMgrServer) {
	s.RegisterService(&_TicketAttributeMgr_serviceDesc, srv)
}

func _TicketAttributeMgr_ListTicketAttributeDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketAttributeMgrServer).ListTicketAttributeDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketAttributeMgr/ListTicketAttributeDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketAttributeMgrServer).ListTicketAttributeDefinitions(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketAttributeMgr_CreateTicketAttributeDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TicketAttributeDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketAttributeMgrServer).CreateTicketAttributeDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketAttributeMgr/CreateTicketAttributeDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketAttributeMgrServer).CreateTicketAttributeDefinition(ctx, req.(*TicketAttributeDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketAttributeMgr_UpdateTicketAttributeDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TicketAttributeDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketAttributeMgrServer).UpdateTicketAttributeDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketAttributeMgr/UpdateTicketAttributeDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketAttributeMgrServer).UpdateTicketAttributeDefinition(ctx, req.(*TicketAttributeDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketAttributeMgr_DeleteTicketAttributeDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTicketAttrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketAttributeMgrServer).DeleteTicketAttributeDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketAttributeMgr/DeleteTicketAttributeDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketAttributeMgrServer).DeleteTicketAttributeDefinition(ctx, req.(*DeleteTicketAttrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketAttributeMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketAttributeMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conversation.TicketAttributeMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketAttributeMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketAttributeMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conversation.TicketAttributeMgr",
	HandlerType: (*TicketAttributeMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTicketAttributeDefinitions",
			Handler:    _TicketAttributeMgr_ListTicketAttributeDefinitions_Handler,
		},
		{
			MethodName: "CreateTicketAttributeDefinition",
			Handler:    _TicketAttributeMgr_CreateTicketAttributeDefinition_Handler,
		},
		{
			MethodName: "UpdateTicketAttributeDefinition",
			Handler:    _TicketAttributeMgr_UpdateTicketAttributeDefinition_Handler,
		},
		{
			MethodName: "DeleteTicketAttributeDefinition",
			Handler:    _TicketAttributeMgr_DeleteTicketAttributeDefinition_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _TicketAttributeMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}
