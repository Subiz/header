// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package event

object EventProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    common.CommonProto,
    account.AccountProto,
    conversation.ConversationProto,
    content.ContentProto,
    user.UserProto,
    notibox.NotiboxProto,
    payment.PaymentProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq(
    event.RawEventCreatedPayload,
    event.PubSubMessage,
    event.UnsubscribeMessage,
    event.RawEvents,
    event.By,
    event.RawEvent,
    event.Subscription,
    event.ListEventsRequest,
    event.UserEvent,
    event.SubscriptionResponse,
    event.AutomationEvent
  )
  private lazy val ProtoBytes: Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.Seq(
  """CixiaXRidWNrZXQub3JnL3N1Yml6L2hlYWRlci9ldmVudC9ldmVudC5wcm90bxIFZXZlbnQaLmJpdGJ1Y2tldC5vcmcvc3Via
  XovaGVhZGVyL2NvbW1vbi9jb21tb24ucHJvdG8aMGJpdGJ1Y2tldC5vcmcvc3ViaXovaGVhZGVyL2FjY291bnQvYWNjb3VudC5wc
  m90bxo6Yml0YnVja2V0Lm9yZy9zdWJpei9oZWFkZXIvY29udmVyc2F0aW9uL2NvbnZlcnNhdGlvbi5wcm90bxowYml0YnVja2V0L
  m9yZy9zdWJpei9oZWFkZXIvY29udGVudC9jb250ZW50LnByb3RvGipiaXRidWNrZXQub3JnL3N1Yml6L2hlYWRlci91c2VyL3VzZ
  XIucHJvdG8aMGJpdGJ1Y2tldC5vcmcvc3ViaXovaGVhZGVyL25vdGlib3gvbm90aWJveC5wcm90bxowYml0YnVja2V0Lm9yZy9zd
  WJpei9oZWFkZXIvcGF5bWVudC9wYXltZW50LnByb3RvIpICChZSYXdFdmVudENyZWF0ZWRQYXlsb2FkEiEKA2N0eBgBIAEoCzIPL
  mNvbW1vbi5Db250ZXh0UgNjdHgSEgoEc3VicxgDIAMoCVIEc3VicxIhCgx0YXJnZXRfdG9waWMYBCABKAlSC3RhcmdldFRvcGljE
  hgKB3BheWxvYWQYBSABKAlSB3BheWxvYWQSHQoKdGFyZ2V0X2tleRgGIAEoCVIJdGFyZ2V0S2V5EhoKCHBheWxvYWRzGAcgAygJU
  ghwYXlsb2FkcxIUCgV0b3BpYxgJIAEoCVIFdG9waWMSIQoMcm91dGVyX3RvcGljGAogASgJUgtyb3V0ZXJUb3BpYxIQCgNzdWIYC
  yABKAlSA3N1YiJzCg1QdWJTdWJNZXNzYWdlEiEKA2N0eBgBIAEoCzIPLmNvbW1vbi5Db250ZXh0UgNjdHgSJQoDc3ViGAIgASgLM
  hMuZXZlbnQuU3Vic2NyaXB0aW9uUgNzdWISGAoHcGF5bG9hZBgDIAEoDFIHcGF5bG9hZCJkChJVbnN1YnNjcmliZU1lc3NhZ2USI
  QoDY3R4GAEgASgLMg8uY29tbW9uLkNvbnRleHRSA2N0eBIUCgV0b3BpYxgDIAEoCVIFdG9waWMSFQoGc3ViX2lkGAQgASgJUgVzd
  WJJZCKFAQoJUmF3RXZlbnRzEiEKA2N0eBgBIAEoCzIPLmNvbW1vbi5Db250ZXh0UgNjdHgSJwoGZXZlbnRzGAQgAygLMg8uZXZlb
  nQuUmF3RXZlbnRSBmV2ZW50cxIUCgV0b3RhbBgCIAEoA1IFdG90YWwSFgoGYW5jaG9yGAMgASgJUgZhbmNob3IiWQoCQnkSJgoGZ
  GV2aWNlGAIgASgLMg4uY29tbW9uLkRldmljZVIGZGV2aWNlEg4KAmlkGAMgASgJUgJpZBIbCgljbGllbnRfaWQYBCABKAlSCGNsa
  WVudElkIpcMCghSYXdFdmVudBIhCgNjdHgYASABKAsyDy5jb21tb24uQ29udGV4dFIDY3R4Eg4KAmlkGAMgASgJUgJpZBIdCgphY
  2NvdW50X2lkGAQgASgJUglhY2NvdW50SWQSGAoHY3JlYXRlZBgIIAEoA1IHY3JlYXRlZBISCgR0eXBlGAkgASgJUgR0eXBlEhYKB
  nRvcGljcxgLIAMoCVIGdG9waWNzEhkKAmJ5GDIgASgLMgkuZXZlbnQuQnlSAmJ5EhYKBm9iamVjdBgNIAEoCVIGb2JqZWN0EicKD
  2NvbnZlcnNhdGlvbl9pZBgPIAEoCVIOY29udmVyc2F0aW9uSWQSKAoEZGF0YRgUIAEoCzIULmV2ZW50LlJhd0V2ZW50LkRhdGFSB
  GRhdGEa0QYKBERhdGESKgoHYWNjb3VudBgBIAEoCzIQLmFjY291bnQuQWNjb3VudFIHYWNjb3VudBIkCgVhZ2VudBgCIAEoCzIOL
  mFjY291bnQuQWdlbnRSBWFnZW50Ei8KB21lc3NhZ2UYAyABKAsyFS5jb252ZXJzYXRpb24uTWVzc2FnZVIHbWVzc2FnZRI+Cgxjb
  252ZXJzYXRpb24YBCABKAsyGi5jb252ZXJzYXRpb24uQ29udmVyc2F0aW9uUgxjb252ZXJzYXRpb24SMgoIcG9zdGJhY2sYBSABK
  AsyFi5jb252ZXJzYXRpb24uUG9zdGJhY2tSCHBvc3RiYWNrEioKB2NvbnRlbnQYBiABKAsyEC5jb250ZW50LkNvbnRlbnRSB2Nvb
  nRlbnQSIQoFdG9waWMYByABKAsyCy51c2VyLlRvcGljUgV0b3BpYxIqCghwcmVzZW5jZRgIIAEoCzIOLnVzZXIuUHJlc2VuY2VSC
  HByZXNlbmNlEh4KBHVzZXIYCiABKAsyCi51c2VyLlVzZXJSBHVzZXISNAoMdW5yZWFkX3RvcGljGAsgASgLMhEudXNlci5VbnJlY
  WRUb3BpY1ILdW5yZWFkVG9waWMSJQoHbXlfdXNlchgMIAEoCzIMLnVzZXIuTXlVc2VyUgZteVVzZXISOQoMbm90aWZpY2F0aW9uG
  A4gASgLMhUubm90aWJveC5Ob3RpZmljYXRpb25SDG5vdGlmaWNhdGlvbhImCgdub3RpYm94GA8gASgLMgwubm90aWJveC5Cb3hSB
  25vdGlib3gSMQoKYWdlbnRfcGVybRgQIAEoCzISLmFjY291bnQuQWdlbnRQZXJtUglhZ2VudFBlcm0SNwoMZ3JvdXBfbWVtYmVyG
  BEgASgLMhQuYWNjb3VudC5Hcm91cE1lbWJlclILZ3JvdXBNZW1iZXISKQoFZ3JvdXAYEiABKAsyEy5hY2NvdW50LkFnZW50R3Jvd
  XBSBWdyb3VwEiQKBWxpbWl0GBMgASgLMg4ucGF5bWVudC5MaW1pdFIFbGltaXQSOgoOdXNlcl9hdHRyaWJ1dGUYFCABKAsyEy51c
  2VyLkF0dHJpYnV0ZURhdGFSDXVzZXJBdHRyaWJ1dGVKBAgKEAtKBAgMEA1KBAgQEBFKBAgREBJKBAgSEBNKBAgTEBRKBAgVEBZKB
  AgWEBdKBAgXEBhKBAgYEBlKBAgZEBpKBAgaEBtKBAgbEBxKBAgcEB1KBAgdEB5KBAgeEB9KBAgfECBKBAggECFKBAghECJKBAgjE
  CRKBAgkECVKBAglECZKBAgmECdKBAgnEChKBAgoEClKBAgpECpKBAgqECtSCmNoYW5uZWxfaWRSCmJ5X3VzZXJfaWRSBXN0YXRlU
  gptZXNzYWdlX3RvUghwYWdlX3VybFIKcGFnZV90aXRsZVIQYnJvd3Nlcl9sYW5ndWFnZVILZGV2aWNlX3R5cGVSB3VzZXJfaWRSC
  WpvaW5lcl9pZFILam9pbmVyX3R5cGVSCWxlYXZlcl9pZFILYXR0YWNobWVudHNSBHRleHRSBmZvcm1hdFILZGVsaXZlcmllZHNSB
  mZpZWxkc1IIY29tcHV0ZWRSB2FjY291bnRSBWFnZW50UgdtZXNzYWdlUghwb3N0YmFja1IHY29udGVudFIFdG9waWMiggIKDFN1Y
  nNjcmlwdGlvbhIhCgNjdHgYASABKAsyDy5jb21tb24uQ29udGV4dFIDY3R4EhQKBXRvcGljGAMgASgJUgV0b3BpYxIVCgZzdWJfa
  WQYByABKAlSBXN1YklkEiEKDHRhcmdldF90b3BpYxgKIAEoCVILdGFyZ2V0VG9waWMSHQoKdGFyZ2V0X2tleRgLIAEoCVIJdGFyZ
  2V0S2V5EhIKBHR0bHMYDCABKANSBHR0bHMSIQoMcm91dGVyX3RvcGljGA0gASgJUgtyb3V0ZXJUb3BpYxIpChB0YXJnZXRfcGFyd
  Gl0aW9uGA4gASgFUg90YXJnZXRQYXJ0aXRpb24izgEKEUxpc3RFdmVudHNSZXF1ZXN0EiEKA2N0eBgBIAEoCzIPLmNvbW1vbi5Db
  250ZXh0UgNjdHgSHQoKYWNjb3VudF9pZBgCIAEoCVIJYWNjb3VudElkEhcKB3VzZXJfaWQYAyABKAlSBnVzZXJJZBIUCgVxdWVye
  RgEIAEoCVIFcXVlcnkSFgoGYW5jaG9yGAUgASgJUgZhbmNob3ISFAoFbGltaXQYBiABKAVSBWxpbWl0EhoKCGNhdGVnb3J5GAkgA
  SgJUghjYXRlZ29yeSKNAQoJVXNlckV2ZW50EiEKA2N0eBgBIAEoCzIPLmNvbW1vbi5Db250ZXh0UgNjdHgSHQoKYWNjb3VudF9pZ
  BgDIAEoCVIJYWNjb3VudElkEhcKB3VzZXJfaWQYBCABKAlSBnVzZXJJZBIlCgVldmVudBgFIAEoCzIPLmV2ZW50LlJhd0V2ZW50U
  gVldmVudCJRChRTdWJzY3JpcHRpb25SZXNwb25zZRIhCgNjdHgYASABKAsyDy5jb21tb24uQ29udGV4dFIDY3R4EhYKBnN0YXR1c
  xgCIAEoCFIGc3RhdHVzIo4CCg9BdXRvbWF0aW9uRXZlbnQSIQoDY3R4GAEgASgLMg8uY29tbW9uLkNvbnRleHRSA2N0eBIdCgphY
  2NvdW50X2lkGAMgASgJUglhY2NvdW50SWQSFwoHdXNlcl9pZBgEIAEoCVIGdXNlcklkEjAKCmF1dG9tYXRpb24YBSABKAsyEC51c
  2VyLkF1dG9tYXRpb25SCmF1dG9tYXRpb24SJwoHc2Vzc2lvbhgGIAEoCzINLnVzZXIuU2Vzc2lvblIHc2Vzc2lvbhIeCgR1c2VyG
  AcgASgLMgoudXNlci5Vc2VyUgR1c2VyEiUKBWV2ZW50GAkgASgLMg8uZXZlbnQuUmF3RXZlbnRSBWV2ZW50KpABCgVFdmVudBIHC
  gNTdWIQABITCg9SYXdFdmVudENyZWF0ZWQQAxINCglTdWJzY3JpYmUQBBISCg5TdWJzY3JpYmVSZXBseRAGEg8KC1Vuc3Vic2Nya
  WJlEAUSFAoQVW5zdWJzY3JpYmVSZXBseRAHEg0KCUV2ZW50U3luYxAIEhAKDEV2ZW50Q3JlYXRlZBAJKpgCCgtBY2NvdW50VHlwZ
  RIFCgFhEAASEwoPYWNjb3VudF9kZWxldGVkEDwSGAoUYWNjb3VudF9pbmZvX3VwZGF0ZWQQPRIRCg1ncm91cF9jcmVhdGVkED4SE
  QoNZ3JvdXBfZGVsZXRlZBA/EhYKEmdyb3VwX2luZm9fdXBkYXRlZBBAEhAKDGdyb3VwX2pvaW5lZBBBEg4KCmdyb3VwX2xlZnQQQ
  hIXChNpbnZpdGF0aW9uX2FjY2VwdGVkEEQSEQoNYWdlbnRfZGVsZXRlZBBFEhYKEmFnZW50X2luZm9fdXBkYXRlZBBGEhwKGGFnZ
  W50X3Blcm1pc3Npb25fdXBkYXRlZBBHEhEKDWxpbWl0X3VwZGF0ZWQQSCo+CghVc2VyVHlwZRIFCgF1EAASFAoQbXlfdXNlcl91c
  HNlcnRlZBAuEhUKEXVzZXJfaW5mb191cGRhdGVkEDAqtAIKCUV2ZW50VHlwZRIFCgFlEAASFAoQcHJlc2VuY2VfdXBkYXRlZBAmE
  hIKDmNvbnRlbnRfdmlld2VkECcSFAoQY29udGVudF9zZWFyY2hlZBAoEhcKE2NvbnRlbnRfYWRkZWR0b2NhcnQQKRIWChJjb250Z
  W50X2NoZWNrZWRvdXQQKhIVChFjb250ZW50X3B1cmNoYXNlZBArEg4KCnRvcGljX3JlYWQQLBIcChhzdWJzY3JpYmVkX3RvcGljX
  3VwZGF0ZWQQLRIWChJ1c2VyX3RvcGljX3VwZGF0ZWQQMhIaChZ1c2VyX2F0dHJpYnV0ZV9jcmVhdGVkEDMSGgoWdXNlcl9hdHRya
  WJ1dGVfdXBkYXRlZBA0EhoKFnVzZXJfYXR0cmlidXRlX2RlbGV0ZWQQNyq+AwoJQ29udm9UeXBlEgUKAWMQABIYChRjb252ZXJzY
  XRpb25fdXBkYXRlZBAJEhAKDG1lc3NhZ2Vfc2VudBAKEh4KGmNvbnZlcnNhdGlvbl9zdGF0ZV91cGRhdGVkEAsSFwoTY29udmVyc
  2F0aW9uX2pvaW5lZBACEhUKEWNvbnZlcnNhdGlvbl9sZWZ0EAQSFwoTY29udmVyc2F0aW9uX3RhZ2dlZBAGEhkKFWNvbnZlcnNhd
  Glvbl91bnRhZ2dlZBAHEhgKFGNoYW5uZWxfZGVpbnRlZ3JhdGVkEBQSFgoSY2hhbm5lbF9pbnRlZ3JhdGVkEBUSEAoMbWVzc2FnZ
  V9zZWVuEB4SEQoNbWVzc2FnZV9hY2tlZBAfEhQKEG1lc3NhZ2VfcmVjZWl2ZWQQIBIeChpjb252ZXJzYXRpb25fbWVtYmVyX3R5c
  GluZxAhEhsKF2NvbnZlcnNhdGlvbl9wb3N0YmFja2VkECISGwoXY29udmVyc2F0aW9uX3VuYXNzaWduZWQQIxIZChVjb252ZXJzY
  XRpb25fYXNzaWduZWQQJBIYChRjb252ZXJzYXRpb25fcGVuZGluZxBRKkUKC05vdGlib3hUeXBlEgUKAW4QABIZChVub3RpZmljY
  XRpb25fdXBzZXJ0ZWQQNBIUChBub3RpYm94X3Vwc2VydGVkEDUqLQoOU3Vic2NyaWJlclR5cGUSCwoHc3RfdXNlchAAEg4KCnN0X
  2NoYW5uZWwQASonCglTdWJQcmVmaXgSCwoHV2ViaG9vaxAAEg0KCVdlYnNvY2tldBABKo4CCgZPYmplY3QSCAoEbm9uZRAAEgsKB
  2FjY291bnQQARIJCgVhZ2VudBACEgsKB21lc3NhZ2UQAxIQCgxjb252ZXJzYXRpb24QBBIMCghwb3N0YmFjaxAFEgsKB2NvbnRlb
  nQQBhIJCgV0b3BpYxAHEgwKCHByZXNlbmNlEAgSCAoEdXNlchAKEhAKDHVucmVhZF90b3BpYxALEgsKB215X3VzZXIQDBIQCgxub
  3RpZmljYXRpb24QDhILCgdub3RpYm94EA8SDgoKYWdlbnRfcGVybRAQEhAKDGdyb3VwX21lbWJlchAREgkKBWdyb3VwEBISDwoLa
  W50ZWdyYXRpb24QHhIJCgVsaW1pdBATMosBCglQdWJsaXNoZXISPQoJU3Vic2NyaWJlEhMuZXZlbnQuU3Vic2NyaXB0aW9uGhsuZ
  XZlbnQuU3Vic2NyaXB0aW9uUmVzcG9uc2USPwoLVW5zdWJzY3JpYmUSEy5ldmVudC5TdWJzY3JpcHRpb24aGy5ldmVudC5TdWJzY
  3JpcHRpb25SZXNwb25zZTLjAgoIRXZlbnRNZ3ISPAoMU2VhcmNoRXZlbnRzEhguZXZlbnQuTGlzdEV2ZW50c1JlcXVlc3QaEC5ld
  mVudC5SYXdFdmVudHMiABIyCgtDcmVhdGVFdmVudBIQLmV2ZW50LlVzZXJFdmVudBoPLmV2ZW50LlJhd0V2ZW50IgASNAoJU3Vic
  2NyaWJlEhYudXNlci5TdWJzY3JpYmVSZXF1ZXN0Gg0uY29tbW9uLkVtcHR5IgASNgoLVW5zdWJzY3JpYmUSFi51c2VyLlN1YnNjc
  mliZVJlcXVlc3QaDS5jb21tb24uRW1wdHkiABI0CglSZWFkVG9waWMSFi51c2VyLlJlYWRUb3BpY1JlcXVlc3QaDS5jb21tb24uR
  W1wdHkiABJBCgxTZWFyY2hUb3BpY3MSFy51c2VyLkxpc3RUb3BpY3NSZXF1ZXN0GhYudXNlci5MaXN0VG9waWNzUmVzdWx0IgAy0
  QEKF0NvbnZlcnNhdGlvbkV2ZW50UmVhZGVyEi8KC1NlbmRNZXNzYWdlEg8uZXZlbnQuUmF3RXZlbnQaDy5ldmVudC5SYXdFdmVud
  BI/CgpMaXN0RXZlbnRzEh8uY29udmVyc2F0aW9uLkxpc3RFdmVudHNSZXF1ZXN0GhAuZXZlbnQuUmF3RXZlbnRzEkQKDFNlYXJja
  EV2ZW50cxIiLmNvbnZlcnNhdGlvbi5TZWFyY2hNZXNzYWdlUmVxdWVzdBoQLmV2ZW50LlJhd0V2ZW50c2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      common.CommonProto.javaDescriptor,
      account.AccountProto.javaDescriptor,
      conversation.ConversationProto.javaDescriptor,
      content.ContentProto.javaDescriptor,
      user.UserProto.javaDescriptor,
      notibox.NotiboxProto.javaDescriptor,
      payment.PaymentProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}