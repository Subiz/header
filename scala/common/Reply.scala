// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package common

@SerialVersionUID(0L)
final case class Reply(
    ctx: scala.Option[common.Context] = None,
    eventId: _root_.scala.Predef.String = "",
    state: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    service: _root_.scala.Predef.String = "",
    serviceId: _root_.scala.Predef.String = "",
    err: _root_.scala.Boolean = false,
    errDescription: _root_.scala.Predef.String = "",
    errCode: lang.T = lang.T.undefined,
    errClass: _root_.scala.Int = 0,
    errHash: _root_.scala.Predef.String = "",
    payload: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    published: _root_.scala.Long = 0L
    ) extends scalapb.GeneratedMessage with scalapb.Message[Reply] with scalapb.lenses.Updatable[Reply] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (ctx.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ctx.get.serializedSize) + ctx.get.serializedSize }
      if (eventId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, eventId) }
      if (state != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, state) }
      if (service != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, service) }
      if (serviceId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, serviceId) }
      if (err != false) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, err) }
      if (errDescription != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, errDescription) }
      if (errCode != lang.T.undefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(13, errCode.value) }
      if (errClass != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(15, errClass) }
      if (errHash != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, errHash) }
      if (payload != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, payload) }
      if (published != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(20, published) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      ctx.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = state
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = eventId
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = service
        if (__v != "") {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = serviceId
        if (__v != "") {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = payload
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(7, __v)
        }
      };
      {
        val __v = err
        if (__v != false) {
          _output__.writeBool(10, __v)
        }
      };
      {
        val __v = errDescription
        if (__v != "") {
          _output__.writeString(12, __v)
        }
      };
      {
        val __v = errCode
        if (__v != lang.T.undefined) {
          _output__.writeEnum(13, __v.value)
        }
      };
      {
        val __v = errClass
        if (__v != 0) {
          _output__.writeInt32(15, __v)
        }
      };
      {
        val __v = errHash
        if (__v != "") {
          _output__.writeString(16, __v)
        }
      };
      {
        val __v = published
        if (__v != 0L) {
          _output__.writeInt64(20, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): common.Reply = {
      var __ctx = this.ctx
      var __eventId = this.eventId
      var __state = this.state
      var __service = this.service
      var __serviceId = this.serviceId
      var __err = this.err
      var __errDescription = this.errDescription
      var __errCode = this.errCode
      var __errClass = this.errClass
      var __errHash = this.errHash
      var __payload = this.payload
      var __published = this.published
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __ctx = Option(_root_.scalapb.LiteParser.readMessage(_input__, __ctx.getOrElse(common.Context.defaultInstance)))
          case 26 =>
            __eventId = _input__.readString()
          case 18 =>
            __state = _input__.readBytes()
          case 42 =>
            __service = _input__.readString()
          case 50 =>
            __serviceId = _input__.readString()
          case 80 =>
            __err = _input__.readBool()
          case 98 =>
            __errDescription = _input__.readString()
          case 104 =>
            __errCode = lang.T.fromValue(_input__.readEnum())
          case 120 =>
            __errClass = _input__.readInt32()
          case 130 =>
            __errHash = _input__.readString()
          case 58 =>
            __payload = _input__.readBytes()
          case 160 =>
            __published = _input__.readInt64()
          case tag => _input__.skipField(tag)
        }
      }
      common.Reply(
          ctx = __ctx,
          eventId = __eventId,
          state = __state,
          service = __service,
          serviceId = __serviceId,
          err = __err,
          errDescription = __errDescription,
          errCode = __errCode,
          errClass = __errClass,
          errHash = __errHash,
          payload = __payload,
          published = __published
      )
    }
    def getCtx: common.Context = ctx.getOrElse(common.Context.defaultInstance)
    def clearCtx: Reply = copy(ctx = None)
    def withCtx(__v: common.Context): Reply = copy(ctx = Option(__v))
    def withEventId(__v: _root_.scala.Predef.String): Reply = copy(eventId = __v)
    def withState(__v: _root_.com.google.protobuf.ByteString): Reply = copy(state = __v)
    def withService(__v: _root_.scala.Predef.String): Reply = copy(service = __v)
    def withServiceId(__v: _root_.scala.Predef.String): Reply = copy(serviceId = __v)
    def withErr(__v: _root_.scala.Boolean): Reply = copy(err = __v)
    def withErrDescription(__v: _root_.scala.Predef.String): Reply = copy(errDescription = __v)
    def withErrCode(__v: lang.T): Reply = copy(errCode = __v)
    def withErrClass(__v: _root_.scala.Int): Reply = copy(errClass = __v)
    def withErrHash(__v: _root_.scala.Predef.String): Reply = copy(errHash = __v)
    def withPayload(__v: _root_.com.google.protobuf.ByteString): Reply = copy(payload = __v)
    def withPublished(__v: _root_.scala.Long): Reply = copy(published = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => ctx.orNull
        case 3 => {
          val __t = eventId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = state
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 5 => {
          val __t = service
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = serviceId
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = err
          if (__t != false) __t else null
        }
        case 12 => {
          val __t = errDescription
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = errCode.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 15 => {
          val __t = errClass
          if (__t != 0) __t else null
        }
        case 16 => {
          val __t = errHash
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = payload
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 20 => {
          val __t = published
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => ctx.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(eventId)
        case 2 => _root_.scalapb.descriptors.PByteString(state)
        case 5 => _root_.scalapb.descriptors.PString(service)
        case 6 => _root_.scalapb.descriptors.PString(serviceId)
        case 10 => _root_.scalapb.descriptors.PBoolean(err)
        case 12 => _root_.scalapb.descriptors.PString(errDescription)
        case 13 => _root_.scalapb.descriptors.PEnum(errCode.scalaValueDescriptor)
        case 15 => _root_.scalapb.descriptors.PInt(errClass)
        case 16 => _root_.scalapb.descriptors.PString(errHash)
        case 7 => _root_.scalapb.descriptors.PByteString(payload)
        case 20 => _root_.scalapb.descriptors.PLong(published)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = common.Reply
}

object Reply extends scalapb.GeneratedMessageCompanion[common.Reply] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[common.Reply] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): common.Reply = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    common.Reply(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[common.Context]],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(5), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(6), "").asInstanceOf[_root_.scala.Predef.String],
      lang.T.fromValue(__fieldsMap.getOrElse(__fields.get(7), lang.T.undefined.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(8), 0).asInstanceOf[_root_.scala.Int],
      __fieldsMap.getOrElse(__fields.get(9), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(10), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(11), 0L).asInstanceOf[_root_.scala.Long]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[common.Reply] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      common.Reply(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[common.Context]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        lang.T.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(lang.T.undefined.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = CommonProto.javaDescriptor.getMessageTypes.get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = CommonProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = common.Context
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 13 => lang.T
    }
  }
  lazy val defaultInstance = common.Reply(
  )
  implicit class ReplyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, common.Reply]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, common.Reply](_l) {
    def ctx: _root_.scalapb.lenses.Lens[UpperPB, common.Context] = field(_.getCtx)((c_, f_) => c_.copy(ctx = Option(f_)))
    def optionalCtx: _root_.scalapb.lenses.Lens[UpperPB, scala.Option[common.Context]] = field(_.ctx)((c_, f_) => c_.copy(ctx = f_))
    def eventId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.eventId)((c_, f_) => c_.copy(eventId = f_))
    def state: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def service: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.service)((c_, f_) => c_.copy(service = f_))
    def serviceId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.serviceId)((c_, f_) => c_.copy(serviceId = f_))
    def err: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.err)((c_, f_) => c_.copy(err = f_))
    def errDescription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.errDescription)((c_, f_) => c_.copy(errDescription = f_))
    def errCode: _root_.scalapb.lenses.Lens[UpperPB, lang.T] = field(_.errCode)((c_, f_) => c_.copy(errCode = f_))
    def errClass: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.errClass)((c_, f_) => c_.copy(errClass = f_))
    def errHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.errHash)((c_, f_) => c_.copy(errHash = f_))
    def payload: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.payload)((c_, f_) => c_.copy(payload = f_))
    def published: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.published)((c_, f_) => c_.copy(published = f_))
  }
  final val CTX_FIELD_NUMBER = 1
  final val EVENT_ID_FIELD_NUMBER = 3
  final val STATE_FIELD_NUMBER = 2
  final val SERVICE_FIELD_NUMBER = 5
  final val SERVICE_ID_FIELD_NUMBER = 6
  final val ERR_FIELD_NUMBER = 10
  final val ERR_DESCRIPTION_FIELD_NUMBER = 12
  final val ERR_CODE_FIELD_NUMBER = 13
  final val ERR_CLASS_FIELD_NUMBER = 15
  final val ERR_HASH_FIELD_NUMBER = 16
  final val PAYLOAD_FIELD_NUMBER = 7
  final val PUBLISHED_FIELD_NUMBER = 20
}
