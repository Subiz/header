// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package conversation

sealed trait Event extends _root_.scalapb.GeneratedEnum {
  type EnumType = Event
  def isConversationAssigned: _root_.scala.Boolean = false
  def isConversationWaiting: _root_.scala.Boolean = false
  def isConversationStartRequested: _root_.scala.Boolean = false
  def isConversationAccepted: _root_.scala.Boolean = false
  def isConversationDropped: _root_.scala.Boolean = false
  def isConversationEventCreated: _root_.scala.Boolean = false
  def isConversationJoinRequested: _root_.scala.Boolean = false
  def isConversationMessageRequested: _root_.scala.Boolean = false
  def isConversationLeaveRequested: _root_.scala.Boolean = false
  def isConversationCloseRequested: _root_.scala.Boolean = false
  def isConversationTagRequested: _root_.scala.Boolean = false
  def isConversationUntagRequested: _root_.scala.Boolean = false
  def isConversationReadRequested: _root_.scala.Boolean = false
  def isConversationListRequested: _root_.scala.Boolean = false
  def isConversationAcceptRequested: _root_.scala.Boolean = false
  def isConversationUpdateRuleRequested: _root_.scala.Boolean = false
  def isConversationCreateRuleRequested: _root_.scala.Boolean = false
  def isConversationDeleteRuleRequested: _root_.scala.Boolean = false
  def isConversationReadRuleRequested: _root_.scala.Boolean = false
  def isConversationListRuleRequested: _root_.scala.Boolean = false
  def isConversationUserRequestReply: _root_.scala.Boolean = false
  def isConversationLimitUpdated: _root_.scala.Boolean = false
  def isConversationRequestWaitTimeout: _root_.scala.Boolean = false
  def isConversationListEventsRequested: _root_.scala.Boolean = false
  def isChannelDeintegrateRequested: _root_.scala.Boolean = false
  def isChannelIntegrateRequested: _root_.scala.Boolean = false
  def isChannelIntegrationListRequested: _root_.scala.Boolean = false
  def isConnectorUpsertRequested: _root_.scala.Boolean = false
  def isConnectorListRequested: _root_.scala.Boolean = false
  def isCannedResponseCreateRequested: _root_.scala.Boolean = false
  def isCannedResponseUpdateRequested: _root_.scala.Boolean = false
  def isCannedResponseDeleteRequested: _root_.scala.Boolean = false
  def isCannedResponseReadRequested: _root_.scala.Boolean = false
  def isCannedResponseListRequested: _root_.scala.Boolean = false
  def isTagCreateRequested: _root_.scala.Boolean = false
  def isTagUpdateRequested: _root_.scala.Boolean = false
  def isTagReadRequested: _root_.scala.Boolean = false
  def isTagDeleteRequested: _root_.scala.Boolean = false
  def isTagListRequested: _root_.scala.Boolean = false
  def isTagCreated: _root_.scala.Boolean = false
  def isConversationUpserted: _root_.scala.Boolean = false
  def isConversationMessageSent: _root_.scala.Boolean = false
  def isConversationMessageAckRequested: _root_.scala.Boolean = false
  def isConversationMessageReceiveRequested: _root_.scala.Boolean = false
  def isConversationMessageSeeRequested: _root_.scala.Boolean = false
  def isChannelIntegrationAvailabilityCheck: _root_.scala.Boolean = false
  def isConversationMessageSearchRequest: _root_.scala.Boolean = false
  def isConversationRequested: _root_.scala.Boolean = false
  def isConversationSynced: _root_.scala.Boolean = false
  def isConversationV3Synced: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[Event] = conversation.Event
}

object Event extends _root_.scalapb.GeneratedEnumCompanion[Event] {
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Event] = this
  @SerialVersionUID(0L)
  case object ConversationAssigned extends Event {
    val value = 0
    val index = 0
    val name = "ConversationAssigned"
    override def isConversationAssigned: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationWaiting extends Event {
    val value = 2
    val index = 1
    val name = "ConversationWaiting"
    override def isConversationWaiting: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationStartRequested extends Event {
    val value = 3
    val index = 2
    val name = "ConversationStartRequested"
    override def isConversationStartRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationAccepted extends Event {
    val value = 4
    val index = 3
    val name = "ConversationAccepted"
    override def isConversationAccepted: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationDropped extends Event {
    val value = 5
    val index = 4
    val name = "ConversationDropped"
    override def isConversationDropped: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationEventCreated extends Event {
    val value = 6
    val index = 5
    val name = "ConversationEventCreated"
    override def isConversationEventCreated: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationJoinRequested extends Event {
    val value = 7
    val index = 6
    val name = "ConversationJoinRequested"
    override def isConversationJoinRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageRequested extends Event {
    val value = 8
    val index = 7
    val name = "ConversationMessageRequested"
    override def isConversationMessageRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationLeaveRequested extends Event {
    val value = 9
    val index = 8
    val name = "ConversationLeaveRequested"
    override def isConversationLeaveRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationCloseRequested extends Event {
    val value = 10
    val index = 9
    val name = "ConversationCloseRequested"
    override def isConversationCloseRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationTagRequested extends Event {
    val value = 11
    val index = 10
    val name = "ConversationTagRequested"
    override def isConversationTagRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationUntagRequested extends Event {
    val value = 12
    val index = 11
    val name = "ConversationUntagRequested"
    override def isConversationUntagRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationReadRequested extends Event {
    val value = 13
    val index = 12
    val name = "ConversationReadRequested"
    override def isConversationReadRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationListRequested extends Event {
    val value = 14
    val index = 13
    val name = "ConversationListRequested"
    override def isConversationListRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationAcceptRequested extends Event {
    val value = 15
    val index = 14
    val name = "ConversationAcceptRequested"
    override def isConversationAcceptRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationUpdateRuleRequested extends Event {
    val value = 20
    val index = 15
    val name = "ConversationUpdateRuleRequested"
    override def isConversationUpdateRuleRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationCreateRuleRequested extends Event {
    val value = 21
    val index = 16
    val name = "ConversationCreateRuleRequested"
    override def isConversationCreateRuleRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationDeleteRuleRequested extends Event {
    val value = 22
    val index = 17
    val name = "ConversationDeleteRuleRequested"
    override def isConversationDeleteRuleRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationReadRuleRequested extends Event {
    val value = 23
    val index = 18
    val name = "ConversationReadRuleRequested"
    override def isConversationReadRuleRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationListRuleRequested extends Event {
    val value = 24
    val index = 19
    val name = "ConversationListRuleRequested"
    override def isConversationListRuleRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationUserRequestReply extends Event {
    val value = 51
    val index = 20
    val name = "ConversationUserRequestReply"
    override def isConversationUserRequestReply: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationLimitUpdated extends Event {
    val value = 52
    val index = 21
    val name = "ConversationLimitUpdated"
    override def isConversationLimitUpdated: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationRequestWaitTimeout extends Event {
    val value = 60
    val index = 22
    val name = "ConversationRequestWaitTimeout"
    override def isConversationRequestWaitTimeout: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationListEventsRequested extends Event {
    val value = 61
    val index = 23
    val name = "ConversationListEventsRequested"
    override def isConversationListEventsRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ChannelDeintegrateRequested extends Event {
    val value = 65
    val index = 24
    val name = "ChannelDeintegrateRequested"
    override def isChannelDeintegrateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ChannelIntegrateRequested extends Event {
    val value = 66
    val index = 25
    val name = "ChannelIntegrateRequested"
    override def isChannelIntegrateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ChannelIntegrationListRequested extends Event {
    val value = 67
    val index = 26
    val name = "ChannelIntegrationListRequested"
    override def isChannelIntegrationListRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConnectorUpsertRequested extends Event {
    val value = 68
    val index = 27
    val name = "ConnectorUpsertRequested"
    override def isConnectorUpsertRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConnectorListRequested extends Event {
    val value = 69
    val index = 28
    val name = "ConnectorListRequested"
    override def isConnectorListRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CannedResponseCreateRequested extends Event {
    val value = 80
    val index = 29
    val name = "CannedResponseCreateRequested"
    override def isCannedResponseCreateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CannedResponseUpdateRequested extends Event {
    val value = 81
    val index = 30
    val name = "CannedResponseUpdateRequested"
    override def isCannedResponseUpdateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CannedResponseDeleteRequested extends Event {
    val value = 82
    val index = 31
    val name = "CannedResponseDeleteRequested"
    override def isCannedResponseDeleteRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CannedResponseReadRequested extends Event {
    val value = 83
    val index = 32
    val name = "CannedResponseReadRequested"
    override def isCannedResponseReadRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object CannedResponseListRequested extends Event {
    val value = 84
    val index = 33
    val name = "CannedResponseListRequested"
    override def isCannedResponseListRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagCreateRequested extends Event {
    val value = 85
    val index = 34
    val name = "TagCreateRequested"
    override def isTagCreateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagUpdateRequested extends Event {
    val value = 86
    val index = 35
    val name = "TagUpdateRequested"
    override def isTagUpdateRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagReadRequested extends Event {
    val value = 87
    val index = 36
    val name = "TagReadRequested"
    override def isTagReadRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagDeleteRequested extends Event {
    val value = 88
    val index = 37
    val name = "TagDeleteRequested"
    override def isTagDeleteRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagListRequested extends Event {
    val value = 89
    val index = 38
    val name = "TagListRequested"
    override def isTagListRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object TagCreated extends Event {
    val value = 95
    val index = 39
    val name = "TagCreated"
    override def isTagCreated: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationUpserted extends Event {
    val value = 97
    val index = 40
    val name = "ConversationUpserted"
    override def isConversationUpserted: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageSent extends Event {
    val value = 99
    val index = 41
    val name = "ConversationMessageSent"
    override def isConversationMessageSent: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageAckRequested extends Event {
    val value = 90
    val index = 42
    val name = "ConversationMessageAckRequested"
    override def isConversationMessageAckRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageReceiveRequested extends Event {
    val value = 91
    val index = 43
    val name = "ConversationMessageReceiveRequested"
    override def isConversationMessageReceiveRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageSeeRequested extends Event {
    val value = 92
    val index = 44
    val name = "ConversationMessageSeeRequested"
    override def isConversationMessageSeeRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ChannelIntegrationAvailabilityCheck extends Event {
    val value = 93
    val index = 45
    val name = "ChannelIntegrationAvailabilityCheck"
    override def isChannelIntegrationAvailabilityCheck: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationMessageSearchRequest extends Event {
    val value = 94
    val index = 46
    val name = "ConversationMessageSearchRequest"
    override def isConversationMessageSearchRequest: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationRequested extends Event {
    val value = 100
    val index = 47
    val name = "ConversationRequested"
    override def isConversationRequested: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationSynced extends Event {
    val value = 101
    val index = 48
    val name = "ConversationSynced"
    override def isConversationSynced: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ConversationV3Synced extends Event {
    val value = 102
    val index = 49
    val name = "ConversationV3Synced"
    override def isConversationV3Synced: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(value: _root_.scala.Int) extends Event with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.Seq(ConversationAssigned, ConversationWaiting, ConversationStartRequested, ConversationAccepted, ConversationDropped, ConversationEventCreated, ConversationJoinRequested, ConversationMessageRequested, ConversationLeaveRequested, ConversationCloseRequested, ConversationTagRequested, ConversationUntagRequested, ConversationReadRequested, ConversationListRequested, ConversationAcceptRequested, ConversationUpdateRuleRequested, ConversationCreateRuleRequested, ConversationDeleteRuleRequested, ConversationReadRuleRequested, ConversationListRuleRequested, ConversationUserRequestReply, ConversationLimitUpdated, ConversationRequestWaitTimeout, ConversationListEventsRequested, ChannelDeintegrateRequested, ChannelIntegrateRequested, ChannelIntegrationListRequested, ConnectorUpsertRequested, ConnectorListRequested, CannedResponseCreateRequested, CannedResponseUpdateRequested, CannedResponseDeleteRequested, CannedResponseReadRequested, CannedResponseListRequested, TagCreateRequested, TagUpdateRequested, TagReadRequested, TagDeleteRequested, TagListRequested, TagCreated, ConversationUpserted, ConversationMessageSent, ConversationMessageAckRequested, ConversationMessageReceiveRequested, ConversationMessageSeeRequested, ChannelIntegrationAvailabilityCheck, ConversationMessageSearchRequest, ConversationRequested, ConversationSynced, ConversationV3Synced)
  def fromValue(value: _root_.scala.Int): Event = value match {
    case 0 => ConversationAssigned
    case 2 => ConversationWaiting
    case 3 => ConversationStartRequested
    case 4 => ConversationAccepted
    case 5 => ConversationDropped
    case 6 => ConversationEventCreated
    case 7 => ConversationJoinRequested
    case 8 => ConversationMessageRequested
    case 9 => ConversationLeaveRequested
    case 10 => ConversationCloseRequested
    case 11 => ConversationTagRequested
    case 12 => ConversationUntagRequested
    case 13 => ConversationReadRequested
    case 14 => ConversationListRequested
    case 15 => ConversationAcceptRequested
    case 20 => ConversationUpdateRuleRequested
    case 21 => ConversationCreateRuleRequested
    case 22 => ConversationDeleteRuleRequested
    case 23 => ConversationReadRuleRequested
    case 24 => ConversationListRuleRequested
    case 51 => ConversationUserRequestReply
    case 52 => ConversationLimitUpdated
    case 60 => ConversationRequestWaitTimeout
    case 61 => ConversationListEventsRequested
    case 65 => ChannelDeintegrateRequested
    case 66 => ChannelIntegrateRequested
    case 67 => ChannelIntegrationListRequested
    case 68 => ConnectorUpsertRequested
    case 69 => ConnectorListRequested
    case 80 => CannedResponseCreateRequested
    case 81 => CannedResponseUpdateRequested
    case 82 => CannedResponseDeleteRequested
    case 83 => CannedResponseReadRequested
    case 84 => CannedResponseListRequested
    case 85 => TagCreateRequested
    case 86 => TagUpdateRequested
    case 87 => TagReadRequested
    case 88 => TagDeleteRequested
    case 89 => TagListRequested
    case 90 => ConversationMessageAckRequested
    case 91 => ConversationMessageReceiveRequested
    case 92 => ConversationMessageSeeRequested
    case 93 => ChannelIntegrationAvailabilityCheck
    case 94 => ConversationMessageSearchRequest
    case 95 => TagCreated
    case 97 => ConversationUpserted
    case 99 => ConversationMessageSent
    case 100 => ConversationRequested
    case 101 => ConversationSynced
    case 102 => ConversationV3Synced
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = ConversationProto.javaDescriptor.getEnumTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = ConversationProto.scalaDescriptor.enums(0)
}