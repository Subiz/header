// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dashboard

@SerialVersionUID(0L)
final case class SessionCookie(
    refreshToken: _root_.scala.Predef.String = "",
    expiredAt: _root_.scala.Long = 0L,
    issuedAt: _root_.scala.Long = 0L,
    `type`: _root_.scala.Predef.String = "",
    email: _root_.scala.Predef.String = "",
    rememberMe: _root_.scala.Boolean = false
    ) extends scalapb.GeneratedMessage with scalapb.Message[SessionCookie] with scalapb.lenses.Updatable[SessionCookie] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (refreshToken != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, refreshToken) }
      if (expiredAt != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, expiredAt) }
      if (issuedAt != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, issuedAt) }
      if (`type` != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, `type`) }
      if (email != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, email) }
      if (rememberMe != false) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(8, rememberMe) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = refreshToken
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = expiredAt
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = issuedAt
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = `type`
        if (__v != "") {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = email
        if (__v != "") {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = rememberMe
        if (__v != false) {
          _output__.writeBool(8, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dashboard.SessionCookie = {
      var __refreshToken = this.refreshToken
      var __expiredAt = this.expiredAt
      var __issuedAt = this.issuedAt
      var __type = this.`type`
      var __email = this.email
      var __rememberMe = this.rememberMe
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 26 =>
            __refreshToken = _input__.readString()
          case 32 =>
            __expiredAt = _input__.readInt64()
          case 40 =>
            __issuedAt = _input__.readInt64()
          case 50 =>
            __type = _input__.readString()
          case 58 =>
            __email = _input__.readString()
          case 64 =>
            __rememberMe = _input__.readBool()
          case tag => _input__.skipField(tag)
        }
      }
      dashboard.SessionCookie(
          refreshToken = __refreshToken,
          expiredAt = __expiredAt,
          issuedAt = __issuedAt,
          `type` = __type,
          email = __email,
          rememberMe = __rememberMe
      )
    }
    def withRefreshToken(__v: _root_.scala.Predef.String): SessionCookie = copy(refreshToken = __v)
    def withExpiredAt(__v: _root_.scala.Long): SessionCookie = copy(expiredAt = __v)
    def withIssuedAt(__v: _root_.scala.Long): SessionCookie = copy(issuedAt = __v)
    def withType(__v: _root_.scala.Predef.String): SessionCookie = copy(`type` = __v)
    def withEmail(__v: _root_.scala.Predef.String): SessionCookie = copy(email = __v)
    def withRememberMe(__v: _root_.scala.Boolean): SessionCookie = copy(rememberMe = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 3 => {
          val __t = refreshToken
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = expiredAt
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = issuedAt
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = `type`
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = email
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = rememberMe
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 3 => _root_.scalapb.descriptors.PString(refreshToken)
        case 4 => _root_.scalapb.descriptors.PLong(expiredAt)
        case 5 => _root_.scalapb.descriptors.PLong(issuedAt)
        case 6 => _root_.scalapb.descriptors.PString(`type`)
        case 7 => _root_.scalapb.descriptors.PString(email)
        case 8 => _root_.scalapb.descriptors.PBoolean(rememberMe)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = dashboard.SessionCookie
}

object SessionCookie extends scalapb.GeneratedMessageCompanion[dashboard.SessionCookie] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dashboard.SessionCookie] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): dashboard.SessionCookie = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    dashboard.SessionCookie(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(5), false).asInstanceOf[_root_.scala.Boolean]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dashboard.SessionCookie] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      dashboard.SessionCookie(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DashboardProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DashboardProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dashboard.SessionCookie(
  )
  implicit class SessionCookieLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dashboard.SessionCookie]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dashboard.SessionCookie](_l) {
    def refreshToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.refreshToken)((c_, f_) => c_.copy(refreshToken = f_))
    def expiredAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.expiredAt)((c_, f_) => c_.copy(expiredAt = f_))
    def issuedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.issuedAt)((c_, f_) => c_.copy(issuedAt = f_))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def email: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.email)((c_, f_) => c_.copy(email = f_))
    def rememberMe: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.rememberMe)((c_, f_) => c_.copy(rememberMe = f_))
  }
  final val REFRESH_TOKEN_FIELD_NUMBER = 3
  final val EXPIRED_AT_FIELD_NUMBER = 4
  final val ISSUED_AT_FIELD_NUMBER = 5
  final val TYPE_FIELD_NUMBER = 6
  final val EMAIL_FIELD_NUMBER = 7
  final val REMEMBER_ME_FIELD_NUMBER = 8
}
