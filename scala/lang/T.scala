// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package lang

sealed trait T extends _root_.scalapb.GeneratedEnum {
  type EnumType = T
  def isundefined: _root_.scala.Boolean = false
  def isuserhasalreadyinconversation: _root_.scala.Boolean = false
  def isconversationclosed: _root_.scala.Boolean = false
  def isinvalidinvite: _root_.scala.Boolean = false
  def isinvalidagent: _root_.scala.Boolean = false
  def ismemberisnotinconversation: _root_.scala.Boolean = false
  def isconversationnotfound: _root_.scala.Boolean = false
  def isinternalerror: _root_.scala.Boolean = false
  def isinvalidinput: _root_.scala.Boolean = false
  def isinvalidform: _root_.scala.Boolean = false
  def isaccesstokenexpired: _root_.scala.Boolean = false
  def iscredentialnotset: _root_.scala.Boolean = false
  def iswrongaccountincredential: _root_.scala.Boolean = false
  def isaccessdeny: _root_.scala.Boolean = false
  def iswronguserincredential: _root_.scala.Boolean = false
  def isunabletosendmessage: _root_.scala.Boolean = false
  def istopicisempty: _root_.scala.Boolean = false
  def isinvalidcredential: _root_.scala.Boolean = false
  def isinvalidleft: _root_.scala.Boolean = false
  def isinvalidjson: _root_.scala.Boolean = false
  def isinvalidprotobuf: _root_.scala.Boolean = false
  def isinvalidpassword: _root_.scala.Boolean = false
  def iswrongpassword: _root_.scala.Boolean = false
  def isinvalidagentstate: _root_.scala.Boolean = false
  def isunabletolock: _root_.scala.Boolean = false
  def isempty: _root_.scala.Boolean = false
  def iswrongtype: _root_.scala.Boolean = false
  def isinvalidkafkatopic: _root_.scala.Boolean = false
  def isdatabaseerror: _root_.scala.Boolean = false
  def istimeout: _root_.scala.Boolean = false
  def iswebsocketerror: _root_.scala.Boolean = false
  def iskafkaerror: _root_.scala.Boolean = false
  def isinvalidtoken: _root_.scala.Boolean = false
  def isaccountnotfound: _root_.scala.Boolean = false
  def isagentnotfound: _root_.scala.Boolean = false
  def isinvalidemail: _root_.scala.Boolean = false
  def isplannotfound: _root_.scala.Boolean = false
  def isagentgroupnotfound: _root_.scala.Boolean = false
  def isemptyclienttype: _root_.scala.Boolean = false
  def isemptyurl: _root_.scala.Boolean = false
  def isemptyname: _root_.scala.Boolean = false
  def isclientnotfound: _root_.scala.Boolean = false
  def isemptyaccount: _root_.scala.Boolean = false
  def isinvalidconversationstate: _root_.scala.Boolean = false
  def isinvalidmessageid: _root_.scala.Boolean = false
  def isinvalidmask: _root_.scala.Boolean = false
  def israndomizeerror: _root_.scala.Boolean = false
  def isduplicatedmessagereceivederror: _root_.scala.Boolean = false
  def isnetworkerror: _root_.scala.Boolean = false
  def isrsakeynotfound: _root_.scala.Boolean = false
  def isjwtsignerror: _root_.scala.Boolean = false
  def isenvconfigerror: _root_.scala.Boolean = false
  def isscrypterror: _root_.scala.Boolean = false
  def ischallengenotfound: _root_.scala.Boolean = false
  def iswronganswer: _root_.scala.Boolean = false
  def isserverlistenerror: _root_.scala.Boolean = false
  def isscryptfilenotfound: _root_.scala.Boolean = false
  def isinvalidtopic: _root_.scala.Boolean = false
  def isfilenotfound: _root_.scala.Boolean = false
  def isusernotfound: _root_.scala.Boolean = false
  def isemptymd5: _root_.scala.Boolean = false
  def isbaseconverterror: _root_.scala.Boolean = false
  def iss3error: _root_.scala.Boolean = false
  def isawscredentialerror: _root_.scala.Boolean = false
  def isawssenderror: _root_.scala.Boolean = false
  def iselasticsearcherror: _root_.scala.Boolean = false
  def isinvalidtemplate: _root_.scala.Boolean = false
  def issendgridsenderror: _root_.scala.Boolean = false
  def iswhitelistdomainnotfound: _root_.scala.Boolean = false
  def isblacklistipnotfound: _root_.scala.Boolean = false
  def isblockedusernotfound: _root_.scala.Boolean = false
  def isinvalidcontenttype: _root_.scala.Boolean = false
  def isparsefileerror: _root_.scala.Boolean = false
  def isinvalidintegrationid: _root_.scala.Boolean = false
  def isinvalidintegration: _root_.scala.Boolean = false
  def iswebhooknotfound: _root_.scala.Boolean = false
  def istempfileerror: _root_.scala.Boolean = false
  def iswritefileerror: _root_.scala.Boolean = false
  def isclosefileerror: _root_.scala.Boolean = false
  def isexecuteshellerror: _root_.scala.Boolean = false
  def isinvalidcss: _root_.scala.Boolean = false
  def isinvalidhmac: _root_.scala.Boolean = false
  def isconsulerror: _root_.scala.Boolean = false
  def ismaxminddberr: _root_.scala.Boolean = false
  def isinvalidconditionkey: _root_.scala.Boolean = false
  def isinvalidpofile: _root_.scala.Boolean = false
  def isintegrationnotfound: _root_.scala.Boolean = false
  def iswebhookisdisabled: _root_.scala.Boolean = false
  def isagentnotactivated: _root_.scala.Boolean = false
  def isemptymessage: _root_.scala.Boolean = false
  def ismessagetoolarge: _root_.scala.Boolean = false
  def isunknownmessageformat: _root_.scala.Boolean = false
  def istoomanyattachments: _root_.scala.Boolean = false
  def istoomanyfields: _root_.scala.Boolean = false
  def isattachmenttoolarge: _root_.scala.Boolean = false
  def isinvalidend: _root_.scala.Boolean = false
  def isinvalidack: _root_.scala.Boolean = false
  def ismessagenotfound: _root_.scala.Boolean = false
  def isinvalidapikey: _root_.scala.Boolean = false
  def isinvalidaccesstoken: _root_.scala.Boolean = false
  def isfieldtoolong: _root_.scala.Boolean = false
  def isinvalidjoin: _root_.scala.Boolean = false
  def isautomationnotfound: _root_.scala.Boolean = false
  def isinvalidautomationcondition: _root_.scala.Boolean = false
  def isautomationcachemiss: _root_.scala.Boolean = false
  def issegmentloopduplicated: _root_.scala.Boolean = false
  def issegmentloopstale: _root_.scala.Boolean = false
  def issegmentnotfound: _root_.scala.Boolean = false
  def isdomainisblocked: _root_.scala.Boolean = false
  def isuserisblocked: _root_.scala.Boolean = false
  def isipisblocked: _root_.scala.Boolean = false
  def isstripeerror: _root_.scala.Boolean = false
  def ismissingstripetoken: _root_.scala.Boolean = false
  def ismissingstripecustomerid: _root_.scala.Boolean = false
  def ispaymentmethodnotfound: _root_.scala.Boolean = false
  def isnotenoughmoney: _root_.scala.Boolean = false
  def isinvalidaccount: _root_.scala.Boolean = false
  def isinvalidpaymentmethod: _root_.scala.Boolean = false
  def isinvalidsubscription: _root_.scala.Boolean = false
  def isinvalidplan: _root_.scala.Boolean = false
  def isinvoicenotfound: _root_.scala.Boolean = false
  def isbillingnotfound: _root_.scala.Boolean = false
  def isexchangeratenotfound: _root_.scala.Boolean = false
  def isinvalidjoinfree: _root_.scala.Boolean = false
  def isinvalidactivefree: _root_.scala.Boolean = false
  def iskvnotfound: _root_.scala.Boolean = false
  def isattributenotfound: _root_.scala.Boolean = false
  def isattributekeynotfound: _root_.scala.Boolean = false
  def isattributemaxallowed: _root_.scala.Boolean = false
  def isinvalidattribute: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[T] = lang.T
}

object T extends _root_.scalapb.GeneratedEnumCompanion[T] {
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[T] = this
  @SerialVersionUID(0L)
  case object undefined extends T {
    val value = 0
    val index = 0
    val name = "undefined"
    override def isundefined: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object user_has_already_in_conversation extends T {
    val value = 1
    val index = 1
    val name = "user_has_already_in_conversation"
    override def isuserhasalreadyinconversation: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object conversation_closed extends T {
    val value = 2
    val index = 2
    val name = "conversation_closed"
    override def isconversationclosed: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_invite extends T {
    val value = 3
    val index = 3
    val name = "invalid_invite"
    override def isinvalidinvite: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_agent extends T {
    val value = 4
    val index = 4
    val name = "invalid_agent"
    override def isinvalidagent: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object member_is_not_in_conversation extends T {
    val value = 5
    val index = 5
    val name = "member_is_not_in_conversation"
    override def ismemberisnotinconversation: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object conversation_not_found extends T {
    val value = 6
    val index = 6
    val name = "conversation_not_found"
    override def isconversationnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object internal_error extends T {
    val value = 30
    val index = 7
    val name = "internal_error"
    override def isinternalerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_input extends T {
    val value = 22
    val index = 8
    val name = "invalid_input"
    override def isinvalidinput: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_form extends T {
    val value = 20
    val index = 9
    val name = "invalid_form"
    override def isinvalidform: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object access_token_expired extends T {
    val value = 21
    val index = 10
    val name = "access_token_expired"
    override def isaccesstokenexpired: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object credential_not_set extends T {
    val value = 7
    val index = 11
    val name = "credential_not_set"
    override def iscredentialnotset: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object wrong_account_in_credential extends T {
    val value = 8
    val index = 12
    val name = "wrong_account_in_credential"
    override def iswrongaccountincredential: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object access_deny extends T {
    val value = 9
    val index = 13
    val name = "access_deny"
    override def isaccessdeny: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object wrong_user_in_credential extends T {
    val value = 10
    val index = 14
    val name = "wrong_user_in_credential"
    override def iswronguserincredential: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object unable_to_send_message extends T {
    val value = 11
    val index = 15
    val name = "unable_to_send_message"
    override def isunabletosendmessage: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object topic_is_empty extends T {
    val value = 12
    val index = 16
    val name = "topic_is_empty"
    override def istopicisempty: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_credential extends T {
    val value = 13
    val index = 17
    val name = "invalid_credential"
    override def isinvalidcredential: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_left extends T {
    val value = 14
    val index = 18
    val name = "invalid_left"
    override def isinvalidleft: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_json extends T {
    val value = 15
    val index = 19
    val name = "invalid_json"
    override def isinvalidjson: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_protobuf extends T {
    val value = 16
    val index = 20
    val name = "invalid_protobuf"
    override def isinvalidprotobuf: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_password extends T {
    val value = 17
    val index = 21
    val name = "invalid_password"
    override def isinvalidpassword: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object wrong_password extends T {
    val value = 18
    val index = 22
    val name = "wrong_password"
    override def iswrongpassword: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_agent_state extends T {
    val value = 19
    val index = 23
    val name = "invalid_agent_state"
    override def isinvalidagentstate: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object unable_to_lock extends T {
    val value = 40
    val index = 24
    val name = "unable_to_lock"
    override def isunabletolock: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty extends T {
    val value = 41
    val index = 25
    val name = "empty"
    override def isempty: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object wrong_type extends T {
    val value = 42
    val index = 26
    val name = "wrong_type"
    override def iswrongtype: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_kafka_topic extends T {
    val value = 43
    val index = 27
    val name = "invalid_kafka_topic"
    override def isinvalidkafkatopic: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object database_error extends T {
    val value = 44
    val index = 28
    val name = "database_error"
    override def isdatabaseerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object timeout extends T {
    val value = 45
    val index = 29
    val name = "timeout"
    override def istimeout: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object websocket_error extends T {
    val value = 46
    val index = 30
    val name = "websocket_error"
    override def iswebsocketerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object kafka_error extends T {
    val value = 47
    val index = 31
    val name = "kafka_error"
    override def iskafkaerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_token extends T {
    val value = 48
    val index = 32
    val name = "invalid_token"
    override def isinvalidtoken: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object account_not_found extends T {
    val value = 49
    val index = 33
    val name = "account_not_found"
    override def isaccountnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object agent_not_found extends T {
    val value = 50
    val index = 34
    val name = "agent_not_found"
    override def isagentnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_email extends T {
    val value = 60
    val index = 35
    val name = "invalid_email"
    override def isinvalidemail: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object plan_not_found extends T {
    val value = 61
    val index = 36
    val name = "plan_not_found"
    override def isplannotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object agent_group_not_found extends T {
    val value = 62
    val index = 37
    val name = "agent_group_not_found"
    override def isagentgroupnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_client_type extends T {
    val value = 63
    val index = 38
    val name = "empty_client_type"
    override def isemptyclienttype: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_url extends T {
    val value = 64
    val index = 39
    val name = "empty_url"
    override def isemptyurl: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_name extends T {
    val value = 65
    val index = 40
    val name = "empty_name"
    override def isemptyname: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object client_not_found extends T {
    val value = 66
    val index = 41
    val name = "client_not_found"
    override def isclientnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_account extends T {
    val value = 70
    val index = 42
    val name = "empty_account"
    override def isemptyaccount: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_conversation_state extends T {
    val value = 71
    val index = 43
    val name = "invalid_conversation_state"
    override def isinvalidconversationstate: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_message_id extends T {
    val value = 80
    val index = 44
    val name = "invalid_message_id"
    override def isinvalidmessageid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_mask extends T {
    val value = 81
    val index = 45
    val name = "invalid_mask"
    override def isinvalidmask: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object randomize_error extends T {
    val value = 82
    val index = 46
    val name = "randomize_error"
    override def israndomizeerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object duplicated_message_received_error extends T {
    val value = 83
    val index = 47
    val name = "duplicated_message_received_error"
    override def isduplicatedmessagereceivederror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object network_error extends T {
    val value = 84
    val index = 48
    val name = "network_error"
    override def isnetworkerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object rsa_key_not_found extends T {
    val value = 85
    val index = 49
    val name = "rsa_key_not_found"
    override def isrsakeynotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object jwt_sign_error extends T {
    val value = 86
    val index = 50
    val name = "jwt_sign_error"
    override def isjwtsignerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object env_config_error extends T {
    val value = 87
    val index = 51
    val name = "env_config_error"
    override def isenvconfigerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object scrypt_error extends T {
    val value = 90
    val index = 52
    val name = "scrypt_error"
    override def isscrypterror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object challenge_not_found extends T {
    val value = 91
    val index = 53
    val name = "challenge_not_found"
    override def ischallengenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object wrong_answer extends T {
    val value = 92
    val index = 54
    val name = "wrong_answer"
    override def iswronganswer: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object server_listen_error extends T {
    val value = 93
    val index = 55
    val name = "server_listen_error"
    override def isserverlistenerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object scrypt_file_not_found extends T {
    val value = 94
    val index = 56
    val name = "scrypt_file_not_found"
    override def isscryptfilenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_topic extends T {
    val value = 95
    val index = 57
    val name = "invalid_topic"
    override def isinvalidtopic: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object file_not_found extends T {
    val value = 99
    val index = 58
    val name = "file_not_found"
    override def isfilenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object user_not_found extends T {
    val value = 100
    val index = 59
    val name = "user_not_found"
    override def isusernotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_md5 extends T {
    val value = 101
    val index = 60
    val name = "empty_md5"
    override def isemptymd5: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object base_convert_error extends T {
    val value = 102
    val index = 61
    val name = "base_convert_error"
    override def isbaseconverterror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object s3_error extends T {
    val value = 103
    val index = 62
    val name = "s3_error"
    override def iss3error: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object aws_credential_error extends T {
    val value = 104
    val index = 63
    val name = "aws_credential_error"
    override def isawscredentialerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object aws_send_error extends T {
    val value = 105
    val index = 64
    val name = "aws_send_error"
    override def isawssenderror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object elasticsearch_error extends T {
    val value = 200
    val index = 65
    val name = "elasticsearch_error"
    override def iselasticsearcherror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_template extends T {
    val value = 203
    val index = 66
    val name = "invalid_template"
    override def isinvalidtemplate: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object sendgrid_send_error extends T {
    val value = 204
    val index = 67
    val name = "sendgrid_send_error"
    override def issendgridsenderror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object whitelist_domain_not_found extends T {
    val value = 205
    val index = 68
    val name = "whitelist_domain_not_found"
    override def iswhitelistdomainnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object blacklist_ip_not_found extends T {
    val value = 206
    val index = 69
    val name = "blacklist_ip_not_found"
    override def isblacklistipnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object blocked_user_not_found extends T {
    val value = 207
    val index = 70
    val name = "blocked_user_not_found"
    override def isblockedusernotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_content_type extends T {
    val value = 210
    val index = 71
    val name = "invalid_content_type"
    override def isinvalidcontenttype: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object parse_file_error extends T {
    val value = 211
    val index = 72
    val name = "parse_file_error"
    override def isparsefileerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_integration_id extends T {
    val value = 220
    val index = 73
    val name = "invalid_integration_id"
    override def isinvalidintegrationid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_integration extends T {
    val value = 221
    val index = 74
    val name = "invalid_integration"
    override def isinvalidintegration: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object webhook_not_found extends T {
    val value = 222
    val index = 75
    val name = "webhook_not_found"
    override def iswebhooknotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object tempfile_error extends T {
    val value = 223
    val index = 76
    val name = "tempfile_error"
    override def istempfileerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object write_file_error extends T {
    val value = 224
    val index = 77
    val name = "write_file_error"
    override def iswritefileerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object close_file_error extends T {
    val value = 225
    val index = 78
    val name = "close_file_error"
    override def isclosefileerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object execute_shell_error extends T {
    val value = 226
    val index = 79
    val name = "execute_shell_error"
    override def isexecuteshellerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_css extends T {
    val value = 227
    val index = 80
    val name = "invalid_css"
    override def isinvalidcss: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_hmac extends T {
    val value = 228
    val index = 81
    val name = "invalid_hmac"
    override def isinvalidhmac: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object consul_error extends T {
    val value = 230
    val index = 82
    val name = "consul_error"
    override def isconsulerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object maxminddb_err extends T {
    val value = 231
    val index = 83
    val name = "maxminddb_err"
    override def ismaxminddberr: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_condition_key extends T {
    val value = 232
    val index = 84
    val name = "invalid_condition_key"
    override def isinvalidconditionkey: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_po_file extends T {
    val value = 233
    val index = 85
    val name = "invalid_po_file"
    override def isinvalidpofile: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object integration_not_found extends T {
    val value = 234
    val index = 86
    val name = "integration_not_found"
    override def isintegrationnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object webhook_is_disabled extends T {
    val value = 235
    val index = 87
    val name = "webhook_is_disabled"
    override def iswebhookisdisabled: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object agent_not_activated extends T {
    val value = 240
    val index = 88
    val name = "agent_not_activated"
    override def isagentnotactivated: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object empty_message extends T {
    val value = 242
    val index = 89
    val name = "empty_message"
    override def isemptymessage: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object message_too_large extends T {
    val value = 243
    val index = 90
    val name = "message_too_large"
    override def ismessagetoolarge: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object unknown_message_format extends T {
    val value = 244
    val index = 91
    val name = "unknown_message_format"
    override def isunknownmessageformat: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object too_many_attachments extends T {
    val value = 245
    val index = 92
    val name = "too_many_attachments"
    override def istoomanyattachments: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object too_many_fields extends T {
    val value = 246
    val index = 93
    val name = "too_many_fields"
    override def istoomanyfields: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object attachment_too_large extends T {
    val value = 247
    val index = 94
    val name = "attachment_too_large"
    override def isattachmenttoolarge: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_end extends T {
    val value = 248
    val index = 95
    val name = "invalid_end"
    override def isinvalidend: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_ack extends T {
    val value = 249
    val index = 96
    val name = "invalid_ack"
    override def isinvalidack: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object message_not_found extends T {
    val value = 250
    val index = 97
    val name = "message_not_found"
    override def ismessagenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_apikey extends T {
    val value = 255
    val index = 98
    val name = "invalid_apikey"
    override def isinvalidapikey: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_access_token extends T {
    val value = 256
    val index = 99
    val name = "invalid_access_token"
    override def isinvalidaccesstoken: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object field_too_long extends T {
    val value = 257
    val index = 100
    val name = "field_too_long"
    override def isfieldtoolong: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_join extends T {
    val value = 258
    val index = 101
    val name = "invalid_join"
    override def isinvalidjoin: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object automation_not_found extends T {
    val value = 259
    val index = 102
    val name = "automation_not_found"
    override def isautomationnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_automation_condition extends T {
    val value = 260
    val index = 103
    val name = "invalid_automation_condition"
    override def isinvalidautomationcondition: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object automation_cache_miss extends T {
    val value = 261
    val index = 104
    val name = "automation_cache_miss"
    override def isautomationcachemiss: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object segment_loop_duplicated extends T {
    val value = 262
    val index = 105
    val name = "segment_loop_duplicated"
    override def issegmentloopduplicated: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object segment_loop_stale extends T {
    val value = 263
    val index = 106
    val name = "segment_loop_stale"
    override def issegmentloopstale: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object segment_not_found extends T {
    val value = 264
    val index = 107
    val name = "segment_not_found"
    override def issegmentnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object domain_is_blocked extends T {
    val value = 265
    val index = 108
    val name = "domain_is_blocked"
    override def isdomainisblocked: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object user_is_blocked extends T {
    val value = 266
    val index = 109
    val name = "user_is_blocked"
    override def isuserisblocked: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ip_is_blocked extends T {
    val value = 267
    val index = 110
    val name = "ip_is_blocked"
    override def isipisblocked: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object stripe_error extends T {
    val value = 270
    val index = 111
    val name = "stripe_error"
    override def isstripeerror: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object missing_stripe_token extends T {
    val value = 271
    val index = 112
    val name = "missing_stripe_token"
    override def ismissingstripetoken: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object missing_stripe_customer_id extends T {
    val value = 272
    val index = 113
    val name = "missing_stripe_customer_id"
    override def ismissingstripecustomerid: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object payment_method_not_found extends T {
    val value = 273
    val index = 114
    val name = "payment_method_not_found"
    override def ispaymentmethodnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object not_enough_money extends T {
    val value = 274
    val index = 115
    val name = "not_enough_money"
    override def isnotenoughmoney: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_account extends T {
    val value = 275
    val index = 116
    val name = "invalid_account"
    override def isinvalidaccount: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_payment_method extends T {
    val value = 276
    val index = 117
    val name = "invalid_payment_method"
    override def isinvalidpaymentmethod: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_subscription extends T {
    val value = 278
    val index = 118
    val name = "invalid_subscription"
    override def isinvalidsubscription: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_plan extends T {
    val value = 279
    val index = 119
    val name = "invalid_plan"
    override def isinvalidplan: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invoice_not_found extends T {
    val value = 280
    val index = 120
    val name = "invoice_not_found"
    override def isinvoicenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object billing_not_found extends T {
    val value = 281
    val index = 121
    val name = "billing_not_found"
    override def isbillingnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object exchange_rate_not_found extends T {
    val value = 282
    val index = 122
    val name = "exchange_rate_not_found"
    override def isexchangeratenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_join_free extends T {
    val value = 283
    val index = 123
    val name = "invalid_join_free"
    override def isinvalidjoinfree: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_active_free extends T {
    val value = 284
    val index = 124
    val name = "invalid_active_free"
    override def isinvalidactivefree: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object kv_not_found extends T {
    val value = 285
    val index = 125
    val name = "kv_not_found"
    override def iskvnotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object attribute_not_found extends T {
    val value = 286
    val index = 126
    val name = "attribute_not_found"
    override def isattributenotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object attribute_key_not_found extends T {
    val value = 287
    val index = 127
    val name = "attribute_key_not_found"
    override def isattributekeynotfound: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object attribute_max_allowed extends T {
    val value = 288
    val index = 128
    val name = "attribute_max_allowed"
    override def isattributemaxallowed: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object invalid_attribute extends T {
    val value = 289
    val index = 129
    val name = "invalid_attribute"
    override def isinvalidattribute: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(value: _root_.scala.Int) extends T with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.Seq(undefined, user_has_already_in_conversation, conversation_closed, invalid_invite, invalid_agent, member_is_not_in_conversation, conversation_not_found, internal_error, invalid_input, invalid_form, access_token_expired, credential_not_set, wrong_account_in_credential, access_deny, wrong_user_in_credential, unable_to_send_message, topic_is_empty, invalid_credential, invalid_left, invalid_json, invalid_protobuf, invalid_password, wrong_password, invalid_agent_state, unable_to_lock, empty, wrong_type, invalid_kafka_topic, database_error, timeout, websocket_error, kafka_error, invalid_token, account_not_found, agent_not_found, invalid_email, plan_not_found, agent_group_not_found, empty_client_type, empty_url, empty_name, client_not_found, empty_account, invalid_conversation_state, invalid_message_id, invalid_mask, randomize_error, duplicated_message_received_error, network_error, rsa_key_not_found, jwt_sign_error, env_config_error, scrypt_error, challenge_not_found, wrong_answer, server_listen_error, scrypt_file_not_found, invalid_topic, file_not_found, user_not_found, empty_md5, base_convert_error, s3_error, aws_credential_error, aws_send_error, elasticsearch_error, invalid_template, sendgrid_send_error, whitelist_domain_not_found, blacklist_ip_not_found, blocked_user_not_found, invalid_content_type, parse_file_error, invalid_integration_id, invalid_integration, webhook_not_found, tempfile_error, write_file_error, close_file_error, execute_shell_error, invalid_css, invalid_hmac, consul_error, maxminddb_err, invalid_condition_key, invalid_po_file, integration_not_found, webhook_is_disabled, agent_not_activated, empty_message, message_too_large, unknown_message_format, too_many_attachments, too_many_fields, attachment_too_large, invalid_end, invalid_ack, message_not_found, invalid_apikey, invalid_access_token, field_too_long, invalid_join, automation_not_found, invalid_automation_condition, automation_cache_miss, segment_loop_duplicated, segment_loop_stale, segment_not_found, domain_is_blocked, user_is_blocked, ip_is_blocked, stripe_error, missing_stripe_token, missing_stripe_customer_id, payment_method_not_found, not_enough_money, invalid_account, invalid_payment_method, invalid_subscription, invalid_plan, invoice_not_found, billing_not_found, exchange_rate_not_found, invalid_join_free, invalid_active_free, kv_not_found, attribute_not_found, attribute_key_not_found, attribute_max_allowed, invalid_attribute)
  def fromValue(value: _root_.scala.Int): T = value match {
    case 0 => undefined
    case 1 => user_has_already_in_conversation
    case 2 => conversation_closed
    case 3 => invalid_invite
    case 4 => invalid_agent
    case 5 => member_is_not_in_conversation
    case 6 => conversation_not_found
    case 7 => credential_not_set
    case 8 => wrong_account_in_credential
    case 9 => access_deny
    case 10 => wrong_user_in_credential
    case 11 => unable_to_send_message
    case 12 => topic_is_empty
    case 13 => invalid_credential
    case 14 => invalid_left
    case 15 => invalid_json
    case 16 => invalid_protobuf
    case 17 => invalid_password
    case 18 => wrong_password
    case 19 => invalid_agent_state
    case 20 => invalid_form
    case 21 => access_token_expired
    case 22 => invalid_input
    case 30 => internal_error
    case 40 => unable_to_lock
    case 41 => empty
    case 42 => wrong_type
    case 43 => invalid_kafka_topic
    case 44 => database_error
    case 45 => timeout
    case 46 => websocket_error
    case 47 => kafka_error
    case 48 => invalid_token
    case 49 => account_not_found
    case 50 => agent_not_found
    case 60 => invalid_email
    case 61 => plan_not_found
    case 62 => agent_group_not_found
    case 63 => empty_client_type
    case 64 => empty_url
    case 65 => empty_name
    case 66 => client_not_found
    case 70 => empty_account
    case 71 => invalid_conversation_state
    case 80 => invalid_message_id
    case 81 => invalid_mask
    case 82 => randomize_error
    case 83 => duplicated_message_received_error
    case 84 => network_error
    case 85 => rsa_key_not_found
    case 86 => jwt_sign_error
    case 87 => env_config_error
    case 90 => scrypt_error
    case 91 => challenge_not_found
    case 92 => wrong_answer
    case 93 => server_listen_error
    case 94 => scrypt_file_not_found
    case 95 => invalid_topic
    case 99 => file_not_found
    case 100 => user_not_found
    case 101 => empty_md5
    case 102 => base_convert_error
    case 103 => s3_error
    case 104 => aws_credential_error
    case 105 => aws_send_error
    case 200 => elasticsearch_error
    case 203 => invalid_template
    case 204 => sendgrid_send_error
    case 205 => whitelist_domain_not_found
    case 206 => blacklist_ip_not_found
    case 207 => blocked_user_not_found
    case 210 => invalid_content_type
    case 211 => parse_file_error
    case 220 => invalid_integration_id
    case 221 => invalid_integration
    case 222 => webhook_not_found
    case 223 => tempfile_error
    case 224 => write_file_error
    case 225 => close_file_error
    case 226 => execute_shell_error
    case 227 => invalid_css
    case 228 => invalid_hmac
    case 230 => consul_error
    case 231 => maxminddb_err
    case 232 => invalid_condition_key
    case 233 => invalid_po_file
    case 234 => integration_not_found
    case 235 => webhook_is_disabled
    case 240 => agent_not_activated
    case 242 => empty_message
    case 243 => message_too_large
    case 244 => unknown_message_format
    case 245 => too_many_attachments
    case 246 => too_many_fields
    case 247 => attachment_too_large
    case 248 => invalid_end
    case 249 => invalid_ack
    case 250 => message_not_found
    case 255 => invalid_apikey
    case 256 => invalid_access_token
    case 257 => field_too_long
    case 258 => invalid_join
    case 259 => automation_not_found
    case 260 => invalid_automation_condition
    case 261 => automation_cache_miss
    case 262 => segment_loop_duplicated
    case 263 => segment_loop_stale
    case 264 => segment_not_found
    case 265 => domain_is_blocked
    case 266 => user_is_blocked
    case 267 => ip_is_blocked
    case 270 => stripe_error
    case 271 => missing_stripe_token
    case 272 => missing_stripe_customer_id
    case 273 => payment_method_not_found
    case 274 => not_enough_money
    case 275 => invalid_account
    case 276 => invalid_payment_method
    case 278 => invalid_subscription
    case 279 => invalid_plan
    case 280 => invoice_not_found
    case 281 => billing_not_found
    case 282 => exchange_rate_not_found
    case 283 => invalid_join_free
    case 284 => invalid_active_free
    case 285 => kv_not_found
    case 286 => attribute_not_found
    case 287 => attribute_key_not_found
    case 288 => attribute_max_allowed
    case 289 => invalid_attribute
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = LangProto.javaDescriptor.getEnumTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = LangProto.scalaDescriptor.enums(0)
}