// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: common.proto

package common

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Type int32

const (
	Type_unknown   Type = 0
	Type_user      Type = 1
	Type_agent     Type = 2
	Type_subiz     Type = 3
	Type_app       Type = 4 // dashboard, accmgr
	Type_connector Type = 6 // fabikon, mailkon
	Type_bot       Type = 7 // subiz bot
	Type_dummy     Type = 8 // agent that cannot handle action
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "unknown",
		1: "user",
		2: "agent",
		3: "subiz",
		4: "app",
		6: "connector",
		7: "bot",
		8: "dummy",
	}
	Type_value = map[string]int32{
		"unknown":   0,
		"user":      1,
		"agent":     2,
		"subiz":     3,
		"app":       4,
		"connector": 6,
		"bot":       7,
		"dummy":     8,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type Device_DeviceType int32

const (
	Device_unknown Device_DeviceType = 0
	Device_mobile  Device_DeviceType = 1
	Device_tablet  Device_DeviceType = 2
	Device_desktop Device_DeviceType = 3
)

// Enum value maps for Device_DeviceType.
var (
	Device_DeviceType_name = map[int32]string{
		0: "unknown",
		1: "mobile",
		2: "tablet",
		3: "desktop",
	}
	Device_DeviceType_value = map[string]int32{
		"unknown": 0,
		"mobile":  1,
		"tablet":  2,
		"desktop": 3,
	}
)

func (x Device_DeviceType) Enum() *Device_DeviceType {
	p := new(Device_DeviceType)
	*p = x
	return p
}

func (x Device_DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (Device_DeviceType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x Device_DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device_DeviceType.Descriptor instead.
func (Device_DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1, 0}
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *Credential `protobuf:"bytes,6,opt,name=credential,proto3" json:"credential,omitempty"`
	ByDevice   *Device     `protobuf:"bytes,10,opt,name=by_device,json=byDevice,proto3" json:"by_device,omitempty"`
	// for kafka
	SubTopic string `protobuf:"bytes,11,opt,name=sub_topic,json=subTopic,proto3" json:"sub_topic,omitempty"`
	// list of used fields in the object
	Fields string `protobuf:"bytes,21,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetCredential() *Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *Context) GetByDevice() *Device {
	if x != nil {
		return x.ByDevice
	}
	return nil
}

func (x *Context) GetSubTopic() string {
	if x != nil {
		return x.SubTopic
	}
	return ""
}

func (x *Context) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip               string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	UserAgent        string   `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"` // code
	ScreenResolution string   `protobuf:"bytes,5,opt,name=screen_resolution,json=screenResolution,proto3" json:"screen_resolution,omitempty"`
	Timezone         string   `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Language         string   `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Referrer         string   `protobuf:"bytes,8,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Type             string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Platform         string   `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	SourceReferrer   string   `protobuf:"bytes,11,opt,name=source_referrer,json=sourceReferrer,proto3" json:"source_referrer,omitempty"` // referrer of referrer
	GaTrackingIds    []string `protobuf:"bytes,12,rep,name=ga_tracking_ids,json=gaTrackingIds,proto3" json:"ga_tracking_ids,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Device) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Device) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Device) GetScreenResolution() string {
	if x != nil {
		return x.ScreenResolution
	}
	return ""
}

func (x *Device) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Device) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Device) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Device) GetSourceReferrer() string {
	if x != nil {
		return x.SourceReferrer
	}
	return ""
}

func (x *Device) GetGaTrackingIds() []string {
	if x != nil {
		return x.GaTrackingIds
	}
	return nil
}

type By struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      *Device `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Id          string  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	ClientId    string  `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Type        string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"` // agent, user, bot, dummy
	DisplayId   string  `protobuf:"bytes,7,opt,name=display_id,json=displayId,proto3" json:"display_id,omitempty"`
	DisplayType string  `protobuf:"bytes,8,opt,name=display_type,json=displayType,proto3" json:"display_type,omitempty"` // agent, user, bot
}

func (x *By) Reset() {
	*x = By{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *By) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*By) ProtoMessage() {}

func (x *By) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use By.ProtoReflect.Descriptor instead.
func (*By) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *By) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *By) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *By) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *By) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *By) GetDisplayId() string {
	if x != nil {
		return x.DisplayId
	}
	return ""
}

func (x *By) GetDisplayType() string {
	if x != nil {
		return x.DisplayType
	}
	return ""
}

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string      `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Issuer    string      `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Type      Type        `protobuf:"varint,4,opt,name=type,proto3,enum=common.Type" json:"type,omitempty"` // should be agent, user or connector
	Perm      *Permission `protobuf:"bytes,6,opt,name=perm,proto3" json:"perm,omitempty"`
	ClientId  string      `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scopes    []string    `protobuf:"bytes,8,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *Credential) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Credential) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Credential) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_unknown
}

func (x *Credential) GetPerm() *Permission {
	if x != nil {
		return x.Perm
	}
	return nil
}

func (x *Credential) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Credential) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account               int32 `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"` //    ogu
	Agent                 int32 `protobuf:"varint,3,opt,name=agent,proto3" json:"agent,omitempty"`     // 0x0777
	AgentPassword         int32 `protobuf:"varint,4,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	Permission            int32 `protobuf:"varint,6,opt,name=permission,proto3" json:"permission,omitempty"`
	AgentGroup            int32 `protobuf:"varint,7,opt,name=agent_group,json=agentGroup,proto3" json:"agent_group,omitempty"`
	Segmentation          int32 `protobuf:"varint,10,opt,name=segmentation,proto3" json:"segmentation,omitempty"`
	Client                int32 `protobuf:"varint,12,opt,name=client,proto3" json:"client,omitempty"`
	Rule                  int32 `protobuf:"varint,13,opt,name=rule,proto3" json:"rule,omitempty"`
	Conversation          int32 `protobuf:"varint,14,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Integration           int32 `protobuf:"varint,15,opt,name=integration,proto3" json:"integration,omitempty"`
	CannedResponse        int32 `protobuf:"varint,16,opt,name=canned_response,json=cannedResponse,proto3" json:"canned_response,omitempty"`
	Tag                   int32 `protobuf:"varint,17,opt,name=tag,proto3" json:"tag,omitempty"`
	WhitelistIp           int32 `protobuf:"varint,20,opt,name=whitelist_ip,json=whitelistIp,proto3" json:"whitelist_ip,omitempty"`
	WhitelistUser         int32 `protobuf:"varint,21,opt,name=whitelist_user,json=whitelistUser,proto3" json:"whitelist_user,omitempty"`
	WhitelistDomain       int32 `protobuf:"varint,22,opt,name=whitelist_domain,json=whitelistDomain,proto3" json:"whitelist_domain,omitempty"`
	Widget                int32 `protobuf:"varint,23,opt,name=widget,proto3" json:"widget,omitempty"`
	Subscription          int32 `protobuf:"varint,24,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Invoice               int32 `protobuf:"varint,25,opt,name=invoice,proto3" json:"invoice,omitempty"`
	PaymentMethod         int32 `protobuf:"varint,26,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Bill                  int32 `protobuf:"varint,27,opt,name=bill,proto3" json:"bill,omitempty"`
	PaymentLog            int32 `protobuf:"varint,28,opt,name=payment_log,json=paymentLog,proto3" json:"payment_log,omitempty"`
	PaymentComment        int32 `protobuf:"varint,29,opt,name=payment_comment,json=paymentComment,proto3" json:"payment_comment,omitempty"`
	User                  int32 `protobuf:"varint,30,opt,name=user,proto3" json:"user,omitempty"`
	Automation            int32 `protobuf:"varint,31,opt,name=automation,proto3" json:"automation,omitempty"`
	Ping                  int32 `protobuf:"varint,32,opt,name=ping,proto3" json:"ping,omitempty"`
	Attribute             int32 `protobuf:"varint,33,opt,name=attribute,proto3" json:"attribute,omitempty"`
	AgentNotification     int32 `protobuf:"varint,34,opt,name=agent_notification,json=agentNotification,proto3" json:"agent_notification,omitempty"`
	ConversationExport    int32 `protobuf:"varint,35,opt,name=conversation_export,json=conversationExport,proto3" json:"conversation_export,omitempty"`
	ConversationReport    int32 `protobuf:"varint,36,opt,name=conversation_report,json=conversationReport,proto3" json:"conversation_report,omitempty"`
	Content               int32 `protobuf:"varint,37,opt,name=content,proto3" json:"content,omitempty"`
	Pipeline              int32 `protobuf:"varint,38,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Currency              int32 `protobuf:"varint,39,opt,name=currency,proto3" json:"currency,omitempty"`
	ServiceLevelAgreement int32 `protobuf:"varint,40,opt,name=service_level_agreement,json=serviceLevelAgreement,proto3" json:"service_level_agreement,omitempty"`
	MessageTemplate       int32 `protobuf:"varint,41,opt,name=message_template,json=messageTemplate,proto3" json:"message_template,omitempty"`
	AgentPresence         int32 `protobuf:"varint,42,opt,name=agent_presence,json=agentPresence,proto3" json:"agent_presence,omitempty"`
	AgentPreference       int32 `protobuf:"varint,43,opt,name=agent_preference,json=agentPreference,proto3" json:"agent_preference,omitempty"`
	PromotionCode         int32 `protobuf:"varint,44,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	Referral              int32 `protobuf:"varint,45,opt,name=referral,proto3" json:"referral,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Permission) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *Permission) GetAgent() int32 {
	if x != nil {
		return x.Agent
	}
	return 0
}

func (x *Permission) GetAgentPassword() int32 {
	if x != nil {
		return x.AgentPassword
	}
	return 0
}

func (x *Permission) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *Permission) GetAgentGroup() int32 {
	if x != nil {
		return x.AgentGroup
	}
	return 0
}

func (x *Permission) GetSegmentation() int32 {
	if x != nil {
		return x.Segmentation
	}
	return 0
}

func (x *Permission) GetClient() int32 {
	if x != nil {
		return x.Client
	}
	return 0
}

func (x *Permission) GetRule() int32 {
	if x != nil {
		return x.Rule
	}
	return 0
}

func (x *Permission) GetConversation() int32 {
	if x != nil {
		return x.Conversation
	}
	return 0
}

func (x *Permission) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *Permission) GetCannedResponse() int32 {
	if x != nil {
		return x.CannedResponse
	}
	return 0
}

func (x *Permission) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *Permission) GetWhitelistIp() int32 {
	if x != nil {
		return x.WhitelistIp
	}
	return 0
}

func (x *Permission) GetWhitelistUser() int32 {
	if x != nil {
		return x.WhitelistUser
	}
	return 0
}

func (x *Permission) GetWhitelistDomain() int32 {
	if x != nil {
		return x.WhitelistDomain
	}
	return 0
}

func (x *Permission) GetWidget() int32 {
	if x != nil {
		return x.Widget
	}
	return 0
}

func (x *Permission) GetSubscription() int32 {
	if x != nil {
		return x.Subscription
	}
	return 0
}

func (x *Permission) GetInvoice() int32 {
	if x != nil {
		return x.Invoice
	}
	return 0
}

func (x *Permission) GetPaymentMethod() int32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

func (x *Permission) GetBill() int32 {
	if x != nil {
		return x.Bill
	}
	return 0
}

func (x *Permission) GetPaymentLog() int32 {
	if x != nil {
		return x.PaymentLog
	}
	return 0
}

func (x *Permission) GetPaymentComment() int32 {
	if x != nil {
		return x.PaymentComment
	}
	return 0
}

func (x *Permission) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *Permission) GetAutomation() int32 {
	if x != nil {
		return x.Automation
	}
	return 0
}

func (x *Permission) GetPing() int32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *Permission) GetAttribute() int32 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Permission) GetAgentNotification() int32 {
	if x != nil {
		return x.AgentNotification
	}
	return 0
}

func (x *Permission) GetConversationExport() int32 {
	if x != nil {
		return x.ConversationExport
	}
	return 0
}

func (x *Permission) GetConversationReport() int32 {
	if x != nil {
		return x.ConversationReport
	}
	return 0
}

func (x *Permission) GetContent() int32 {
	if x != nil {
		return x.Content
	}
	return 0
}

func (x *Permission) GetPipeline() int32 {
	if x != nil {
		return x.Pipeline
	}
	return 0
}

func (x *Permission) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *Permission) GetServiceLevelAgreement() int32 {
	if x != nil {
		return x.ServiceLevelAgreement
	}
	return 0
}

func (x *Permission) GetMessageTemplate() int32 {
	if x != nil {
		return x.MessageTemplate
	}
	return 0
}

func (x *Permission) GetAgentPresence() int32 {
	if x != nil {
		return x.AgentPresence
	}
	return 0
}

func (x *Permission) GetAgentPreference() int32 {
	if x != nil {
		return x.AgentPreference
	}
	return 0
}

func (x *Permission) GetPromotionCode() int32 {
	if x != nil {
		return x.PromotionCode
	}
	return 0
}

func (x *Permission) GetReferral() int32 {
	if x != nil {
		return x.Referral
	}
	return 0
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x09, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x62, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f,
	0x67, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x10, 0x03, 0x22, 0xaf, 0x01, 0x0a, 0x02, 0x42, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x86, 0x0a, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x10, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6c, 0x6c, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x36, 0x0a, 0x17,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x2a, 0x5f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x73, 0x75, 0x62, 0x69, 0x7a, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x62, 0x6f, 0x74, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x75,
	0x6d, 0x6d, 0x79, 0x10, 0x08, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_common_proto_goTypes = []interface{}{
	(Type)(0),              // 0: common.Type
	(Device_DeviceType)(0), // 1: common.Device.DeviceType
	(*Context)(nil),        // 2: common.Context
	(*Device)(nil),         // 3: common.Device
	(*By)(nil),             // 4: common.By
	(*Credential)(nil),     // 5: common.Credential
	(*Permission)(nil),     // 6: common.Permission
}
var file_common_proto_depIdxs = []int32{
	5, // 0: common.Context.credential:type_name -> common.Credential
	3, // 1: common.Context.by_device:type_name -> common.Device
	3, // 2: common.By.device:type_name -> common.Device
	0, // 3: common.Credential.type:type_name -> common.Type
	6, // 4: common.Credential.perm:type_name -> common.Permission
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*By); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
