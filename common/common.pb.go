// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common/common.proto

It has these top-level messages:
	Empty
	Id
	Ids
	Context
	Reply
	Error
	Device
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import lang "bitbucket.org/subiz/header/lang"
import auth "bitbucket.org/subiz/header/auth"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_Send_    Event = 0
	Event_ApiReply Event = 2
)

var Event_name = map[int32]string{
	0: "Send_",
	2: "ApiReply",
}
var Event_value = map[string]int32{
	"Send_":    0,
	"ApiReply": 2,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Id struct {
	Ctx       *Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId string   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        string   `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Id) GetCtx() *Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Id) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Ids struct {
	Ctx       *Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId string   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ids       []string `protobuf:"bytes,3,rep,name=ids" json:"ids,omitempty"`
}

func (m *Ids) Reset()                    { *m = Ids{} }
func (m *Ids) String() string            { return proto.CompactTextString(m) }
func (*Ids) ProtoMessage()               {}
func (*Ids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Ids) GetCtx() *Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Ids) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Ids) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Context struct {
	EventId    string `protobuf:"bytes,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	State      []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Node       string `protobuf:"bytes,3,opt,name=node" json:"node,omitempty"`
	ReplyTopic string `protobuf:"bytes,4,opt,name=reply_topic,json=replyTopic" json:"reply_topic,omitempty"`
	// 	optional int32 reply_partition = 5;
	Credential *auth.Credential `protobuf:"bytes,6,opt,name=credential" json:"credential,omitempty"`
	Tracing    []byte           `protobuf:"bytes,7,opt,name=tracing,proto3" json:"tracing,omitempty"`
	ReplyKey   string           `protobuf:"bytes,8,opt,name=reply_key,json=replyKey" json:"reply_key,omitempty"`
	ByDevice   *Device          `protobuf:"bytes,10,opt,name=by_device,json=byDevice" json:"by_device,omitempty"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Context) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Context) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Context) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Context) GetReplyTopic() string {
	if m != nil {
		return m.ReplyTopic
	}
	return ""
}

func (m *Context) GetCredential() *auth.Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *Context) GetTracing() []byte {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *Context) GetReplyKey() string {
	if m != nil {
		return m.ReplyKey
	}
	return ""
}

func (m *Context) GetByDevice() *Device {
	if m != nil {
		return m.ByDevice
	}
	return nil
}

type Reply struct {
	Ctx            *Context `protobuf:"bytes,3,opt,name=ctx" json:"ctx,omitempty"`
	EventId        string   `protobuf:"bytes,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	State          []byte   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Service        string   `protobuf:"bytes,5,opt,name=service" json:"service,omitempty"`
	ServiceId      string   `protobuf:"bytes,6,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	Err            bool     `protobuf:"varint,10,opt,name=err" json:"err,omitempty"`
	ErrDescription string   `protobuf:"bytes,12,opt,name=err_description,json=errDescription" json:"err_description,omitempty"`
	ErrCode        lang.T   `protobuf:"varint,13,opt,name=err_code,json=errCode,enum=lang.T" json:"err_code,omitempty"`
	ErrClass       int32    `protobuf:"varint,15,opt,name=err_class,json=errClass" json:"err_class,omitempty"`
	ErrHash        string   `protobuf:"bytes,16,opt,name=err_hash,json=errHash" json:"err_hash,omitempty"`
	Payload        []byte   `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Published      int64    `protobuf:"varint,20,opt,name=published" json:"published,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Reply) GetCtx() *Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Reply) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Reply) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Reply) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Reply) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *Reply) GetErr() bool {
	if m != nil {
		return m.Err
	}
	return false
}

func (m *Reply) GetErrDescription() string {
	if m != nil {
		return m.ErrDescription
	}
	return ""
}

func (m *Reply) GetErrCode() lang.T {
	if m != nil {
		return m.ErrCode
	}
	return lang.T_undefined
}

func (m *Reply) GetErrClass() int32 {
	if m != nil {
		return m.ErrClass
	}
	return 0
}

func (m *Reply) GetErrHash() string {
	if m != nil {
		return m.ErrHash
	}
	return ""
}

func (m *Reply) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Reply) GetPublished() int64 {
	if m != nil {
		return m.Published
	}
	return 0
}

type Error struct {
	Error       string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	RequestId   string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Hash        string `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Error) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Error) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Error) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Device struct {
	Ip               string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	UserAgent        string `protobuf:"bytes,4,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	ScreenResolution string `protobuf:"bytes,5,opt,name=screen_resolution,json=screenResolution" json:"screen_resolution,omitempty"`
	Timezone         string `protobuf:"bytes,6,opt,name=timezone" json:"timezone,omitempty"`
	Language         string `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Device) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Device) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Device) GetScreenResolution() string {
	if m != nil {
		return m.ScreenResolution
	}
	return ""
}

func (m *Device) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Device) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "common.Empty")
	proto.RegisterType((*Id)(nil), "common.Id")
	proto.RegisterType((*Ids)(nil), "common.Ids")
	proto.RegisterType((*Context)(nil), "common.Context")
	proto.RegisterType((*Reply)(nil), "common.Reply")
	proto.RegisterType((*Error)(nil), "common.Error")
	proto.RegisterType((*Device)(nil), "common.Device")
	proto.RegisterEnum("common.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("common/common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x6e, 0xdb, 0x3c,
	0x10, 0xfd, 0x64, 0x45, 0x96, 0x34, 0xc9, 0x67, 0xbb, 0x6c, 0x16, 0x6a, 0xd2, 0xa2, 0xaa, 0x36,
	0x35, 0x12, 0xc0, 0x2e, 0xd2, 0x13, 0x04, 0x4e, 0x80, 0xba, 0xdd, 0xa9, 0x41, 0x81, 0xae, 0x04,
	0x5a, 0x1c, 0xd8, 0x44, 0x6c, 0x49, 0x25, 0xa9, 0x20, 0xce, 0x59, 0x72, 0xbb, 0x5e, 0xa4, 0xe0,
	0x50, 0x76, 0xb2, 0x0a, 0x50, 0xa0, 0x1b, 0x79, 0xde, 0xe3, 0x70, 0x7e, 0xde, 0x0c, 0x0d, 0xaf,
	0xcb, 0x7a, 0xb3, 0xa9, 0xab, 0xa9, 0xfb, 0x99, 0x34, 0xaa, 0x36, 0x35, 0xeb, 0x3b, 0x74, 0x72,
	0xb6, 0x90, 0x66, 0xd1, 0x96, 0xb7, 0x68, 0x26, 0xb5, 0x5a, 0x4e, 0x75, 0xbb, 0x90, 0x0f, 0xd3,
	0x15, 0x72, 0x81, 0x6a, 0xba, 0xe6, 0xd5, 0x92, 0x3e, 0xee, 0xce, 0x8b, 0xbe, 0xbc, 0x35, 0x2b,
	0xfa, 0x38, 0xdf, 0x2c, 0x84, 0xe0, 0x7a, 0xd3, 0x98, 0x6d, 0xf6, 0x03, 0x7a, 0x73, 0xc1, 0x3e,
	0x80, 0x5f, 0x9a, 0xfb, 0xc4, 0x4b, 0xbd, 0xf1, 0xe1, 0xc5, 0x70, 0xd2, 0x95, 0x32, 0xab, 0x2b,
	0x83, 0xf7, 0x26, 0xb7, 0x67, 0xec, 0x1d, 0x00, 0x2f, 0xcb, 0xba, 0xad, 0x4c, 0x21, 0x45, 0xd2,
	0x4b, 0xbd, 0x71, 0x9c, 0xc7, 0x1d, 0x33, 0x17, 0x6c, 0x00, 0x3d, 0x29, 0x12, 0x9f, 0xe8, 0x9e,
	0x14, 0xd9, 0x4f, 0xf0, 0xe7, 0x42, 0xff, 0x83, 0xc0, 0x23, 0xf0, 0xa5, 0xd0, 0x89, 0x9f, 0xfa,
	0xe3, 0x38, 0xb7, 0x66, 0xf6, 0xd8, 0x83, 0xb0, 0x8b, 0xc0, 0xde, 0x40, 0x84, 0x77, 0xe8, 0xae,
	0x7a, 0x74, 0x35, 0x24, 0x3c, 0x17, 0xec, 0x18, 0x02, 0x6d, 0xb8, 0x41, 0x0a, 0x79, 0x94, 0x3b,
	0xc0, 0x18, 0x1c, 0x54, 0xb5, 0xc0, 0xae, 0x52, 0xb2, 0xd9, 0x7b, 0x38, 0x54, 0xd8, 0xac, 0xb7,
	0x85, 0xa9, 0x1b, 0x59, 0x26, 0x07, 0x74, 0x04, 0x44, 0xdd, 0x58, 0x86, 0x7d, 0x02, 0x28, 0x15,
	0x0a, 0xac, 0x8c, 0xe4, 0xeb, 0xa4, 0x4f, 0xcd, 0x8c, 0x26, 0x24, 0xe7, 0x6c, 0xcf, 0xe7, 0xcf,
	0x7c, 0x58, 0x02, 0xa1, 0x51, 0xbc, 0x94, 0xd5, 0x32, 0x09, 0x29, 0xfd, 0x0e, 0xb2, 0x53, 0x88,
	0x5d, 0xb2, 0x5b, 0xdc, 0x26, 0x11, 0xa5, 0x8a, 0x88, 0xf8, 0x86, 0x5b, 0x76, 0x0e, 0xf1, 0x62,
	0x5b, 0x08, 0xbc, 0x93, 0x25, 0x26, 0x40, 0x79, 0x06, 0x3b, 0xd1, 0xae, 0x88, 0xcd, 0xa3, 0xc5,
	0xd6, 0x59, 0x5f, 0x0f, 0xa2, 0x60, 0xd4, 0xcf, 0x87, 0x2e, 0x5a, 0xc3, 0x95, 0x91, 0x46, 0xd6,
	0x55, 0xf6, 0xbb, 0x07, 0x41, 0x6e, 0xb9, 0x9d, 0xf8, 0xfe, 0x0b, 0xe2, 0xff, 0xb5, 0x7e, 0x09,
	0x84, 0x1a, 0x15, 0xd5, 0x17, 0x38, 0xff, 0x0e, 0xda, 0x39, 0x76, 0xa6, 0x0d, 0xd6, 0x77, 0x73,
	0xec, 0x18, 0x37, 0x47, 0x54, 0x8a, 0x9a, 0x8a, 0x72, 0x6b, 0xb2, 0x8f, 0x30, 0x44, 0xa5, 0x0a,
	0x81, 0xba, 0x54, 0xb2, 0xb1, 0xb5, 0x27, 0x47, 0x74, 0x6b, 0x80, 0x4a, 0x5d, 0x3d, 0xb1, 0x2c,
	0x83, 0xc8, 0x3a, 0x96, 0x76, 0x6e, 0xff, 0xa7, 0xde, 0x78, 0x70, 0x11, 0x4e, 0x68, 0xef, 0x6f,
	0xf2, 0x10, 0x95, 0x9a, 0xd9, 0x19, 0x9e, 0x42, 0x4c, 0x3e, 0x6b, 0xae, 0x75, 0x32, 0x4c, 0xbd,
	0x71, 0x90, 0xdb, 0x4b, 0x33, 0x8b, 0xa9, 0x4b, 0xa5, 0x8a, 0x15, 0xd7, 0xab, 0x64, 0xd4, 0x75,
	0xa9, 0xd4, 0x17, 0xae, 0x57, 0xb6, 0x9f, 0x86, 0x6f, 0xd7, 0x35, 0x17, 0xbb, 0x41, 0x75, 0x90,
	0xbd, 0x85, 0xb8, 0x69, 0x17, 0x6b, 0xa9, 0x57, 0x28, 0x92, 0xe3, 0xd4, 0x1b, 0xfb, 0xf9, 0x13,
	0x91, 0x29, 0x08, 0xae, 0x95, 0xaa, 0x95, 0x95, 0x09, 0xad, 0xd1, 0x6d, 0xae, 0x03, 0x56, 0x0c,
	0x85, 0xbf, 0x5a, 0xd4, 0xa4, 0xac, 0x5b, 0xb6, 0xb8, 0x63, 0xe6, 0x82, 0xa5, 0x70, 0xf8, 0xbc,
	0x6d, 0xb7, 0x71, 0xcf, 0x29, 0xbb, 0xa7, 0x54, 0xae, 0x13, 0x99, 0xec, 0xec, 0xd1, 0x83, 0xbe,
	0x9b, 0x3d, 0x3d, 0xb7, 0x66, 0xff, 0xdc, 0x1a, 0x9b, 0xaf, 0xd5, 0xa8, 0x0a, 0xbe, 0xc4, 0xca,
	0x74, 0xf1, 0x62, 0xcb, 0x5c, 0x5a, 0x82, 0x9d, 0xc3, 0x2b, 0x5d, 0x2a, 0xc4, 0xaa, 0x50, 0xa8,
	0xeb, 0x75, 0x4b, 0x59, 0x5d, 0xe8, 0x91, 0x3b, 0xc8, 0xf7, 0x3c, 0x3b, 0x81, 0xc8, 0xc8, 0x0d,
	0x3e, 0xd4, 0x15, 0x76, 0x63, 0xdc, 0x63, 0x7b, 0x66, 0x95, 0x6f, 0xf9, 0x12, 0x49, 0xaf, 0x38,
	0xdf, 0xe3, 0xb3, 0x14, 0x82, 0x6b, 0xbb, 0x3b, 0x2c, 0x86, 0xe0, 0x3b, 0x56, 0xa2, 0x18, 0xfd,
	0xc7, 0x8e, 0x20, 0xba, 0x6c, 0x24, 0xad, 0xe3, 0xa8, 0xb7, 0xe8, 0xd3, 0x9f, 0xcf, 0xe7, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x48, 0x2f, 0xfe, 0x61, 0xf3, 0x04, 0x00, 0x00,
}
