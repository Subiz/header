// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common/common.proto

It has these top-level messages:
	Empty
	Id
	Ids
	Context
	Device
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import auth "bitbucket.org/subiz/header/auth"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Id struct {
	Ctx       *Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId string   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        string   `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Id) GetCtx() *Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Id) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Ids struct {
	Ctx       *Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId string   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ids       []string `protobuf:"bytes,3,rep,name=ids" json:"ids,omitempty"`
}

func (m *Ids) Reset()                    { *m = Ids{} }
func (m *Ids) String() string            { return proto.CompactTextString(m) }
func (*Ids) ProtoMessage()               {}
func (*Ids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Ids) GetCtx() *Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Ids) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Ids) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Context struct {
	EventId    string `protobuf:"bytes,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	State      []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Node       string `protobuf:"bytes,3,opt,name=node" json:"node,omitempty"`
	ReplyTopic string `protobuf:"bytes,4,opt,name=reply_topic,json=replyTopic" json:"reply_topic,omitempty"`
	// 	optional int32 reply_partition = 5;
	Credential *auth.Credential `protobuf:"bytes,6,opt,name=credential" json:"credential,omitempty"`
	Tracing    []byte           `protobuf:"bytes,7,opt,name=tracing,proto3" json:"tracing,omitempty"`
	ReplyKey   string           `protobuf:"bytes,8,opt,name=reply_key,json=replyKey" json:"reply_key,omitempty"`
	ByDevice   *Device          `protobuf:"bytes,10,opt,name=by_device,json=byDevice" json:"by_device,omitempty"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Context) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Context) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Context) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Context) GetReplyTopic() string {
	if m != nil {
		return m.ReplyTopic
	}
	return ""
}

func (m *Context) GetCredential() *auth.Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *Context) GetTracing() []byte {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *Context) GetReplyKey() string {
	if m != nil {
		return m.ReplyKey
	}
	return ""
}

func (m *Context) GetByDevice() *Device {
	if m != nil {
		return m.ByDevice
	}
	return nil
}

type Device struct {
	Ip               string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	UserAgent        string `protobuf:"bytes,4,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	ScreenResolution string `protobuf:"bytes,5,opt,name=screen_resolution,json=screenResolution" json:"screen_resolution,omitempty"`
	Timezone         string `protobuf:"bytes,6,opt,name=timezone" json:"timezone,omitempty"`
	Language         string `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Device) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Device) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Device) GetScreenResolution() string {
	if m != nil {
		return m.ScreenResolution
	}
	return ""
}

func (m *Device) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Device) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "common.Empty")
	proto.RegisterType((*Id)(nil), "common.Id")
	proto.RegisterType((*Ids)(nil), "common.Ids")
	proto.RegisterType((*Context)(nil), "common.Context")
	proto.RegisterType((*Device)(nil), "common.Device")
}

func init() { proto.RegisterFile("common/common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0xb5, 0x9b, 0x6e, 0xfe, 0x4c, 0x51, 0xbb, 0x18, 0x0e, 0xa6, 0x08, 0xb1, 0xe4, 0xb4,
	0xa2, 0xd2, 0x2e, 0x82, 0x27, 0x40, 0x85, 0xc3, 0xc2, 0xcd, 0x42, 0x48, 0x9c, 0x22, 0xc7, 0x1e,
	0xa5, 0x56, 0x77, 0xed, 0xc8, 0x71, 0xaa, 0xa6, 0xcf, 0xd2, 0x87, 0x45, 0x19, 0xa7, 0x11, 0x0f,
	0xc0, 0x25, 0xf1, 0xf7, 0x9b, 0x99, 0x6f, 0x32, 0xe3, 0xc0, 0x2b, 0xe5, 0x4e, 0x27, 0x67, 0xf7,
	0xf1, 0xb5, 0x6b, 0xbd, 0x0b, 0x8e, 0xa5, 0x51, 0x5d, 0x7d, 0xac, 0x4d, 0xa8, 0x7b, 0x75, 0x87,
	0x61, 0xe7, 0x7c, 0xb3, 0xef, 0xfa, 0xda, 0x3c, 0xee, 0x6f, 0x51, 0x6a, 0xf4, 0x7b, 0xd9, 0x87,
	0x5b, 0x7a, 0xc4, 0x9a, 0x32, 0x83, 0xd5, 0xf7, 0x53, 0x1b, 0x86, 0xf2, 0x37, 0x2c, 0x0f, 0x9a,
	0x7d, 0x80, 0x44, 0x85, 0x07, 0xbe, 0xd8, 0x2c, 0xb6, 0xe7, 0x9f, 0x2f, 0x77, 0x93, 0xfd, 0x8d,
	0xb3, 0x01, 0x1f, 0x82, 0x18, 0x63, 0xec, 0x1d, 0x80, 0x54, 0xca, 0xf5, 0x36, 0x54, 0x46, 0xf3,
	0xe5, 0x66, 0xb1, 0x2d, 0x44, 0x31, 0x91, 0x83, 0x66, 0x17, 0xb0, 0x34, 0x9a, 0x27, 0x84, 0x97,
	0x46, 0x97, 0x7f, 0x20, 0x39, 0xe8, 0xee, 0x3f, 0x18, 0xaf, 0x21, 0x31, 0xba, 0xe3, 0xc9, 0x26,
	0xd9, 0x16, 0x62, 0x3c, 0x96, 0x4f, 0x4b, 0xc8, 0x26, 0x07, 0xf6, 0x06, 0x72, 0xbc, 0xc7, 0x58,
	0xba, 0xa0, 0xd2, 0x8c, 0xf4, 0x41, 0xb3, 0xd7, 0xb0, 0xea, 0x82, 0x0c, 0x48, 0x96, 0x2f, 0x44,
	0x14, 0x8c, 0xc1, 0x99, 0x75, 0x1a, 0xa7, 0x2f, 0xa5, 0x33, 0x7b, 0x0f, 0xe7, 0x1e, 0xdb, 0xe3,
	0x50, 0x05, 0xd7, 0x1a, 0xc5, 0xcf, 0x28, 0x04, 0x84, 0x7e, 0x8d, 0x84, 0x7d, 0x02, 0x50, 0x1e,
	0x35, 0xda, 0x60, 0xe4, 0x91, 0xa7, 0x34, 0xcc, 0x7a, 0x47, 0xeb, 0xbc, 0x99, 0xb9, 0xf8, 0x27,
	0x87, 0x71, 0xc8, 0x82, 0x97, 0xca, 0xd8, 0x86, 0x67, 0xd4, 0xfe, 0x59, 0xb2, 0xb7, 0x50, 0xc4,
	0x66, 0x77, 0x38, 0xf0, 0x9c, 0x5a, 0xe5, 0x04, 0x7e, 0xe2, 0xc0, 0xae, 0xa1, 0xa8, 0x87, 0x4a,
	0xe3, 0xbd, 0x51, 0xc8, 0x81, 0xfa, 0x5c, 0x3c, 0x2f, 0xed, 0x1b, 0x51, 0x91, 0xd7, 0x43, 0x3c,
	0xfd, 0x38, 0xcb, 0x57, 0xeb, 0x54, 0x5c, 0x46, 0xb7, 0x56, 0xfa, 0x60, 0x82, 0x71, 0xb6, 0x7c,
	0x5a, 0x40, 0x1a, 0x33, 0xe8, 0x52, 0xda, 0xf9, 0x52, 0xda, 0x71, 0xd5, 0x7d, 0x87, 0xbe, 0x92,
	0x0d, 0xda, 0x30, 0xcd, 0x59, 0x8c, 0xe4, 0xeb, 0x08, 0xd8, 0x35, 0xbc, 0xec, 0x94, 0x47, 0xb4,
	0x95, 0xc7, 0xce, 0x1d, 0xfb, 0xd1, 0x8e, 0xaf, 0x28, 0x6b, 0x1d, 0x03, 0x62, 0xe6, 0xec, 0x0a,
	0xf2, 0x60, 0x4e, 0xf8, 0xe8, 0x2c, 0xd2, 0x46, 0x0a, 0x31, 0xeb, 0x31, 0x76, 0x94, 0xb6, 0xe9,
	0x65, 0x83, 0x34, 0x7e, 0x21, 0x66, 0x5d, 0xa7, 0xf4, 0x03, 0x7e, 0xf9, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0xf2, 0x1d, 0x6b, 0x32, 0xcb, 0x02, 0x00, 0x00,
}
