syntax = "proto3";

package common;

import "bitbucket.org/subiz/header/lang/lang.proto";
import "bitbucket.org/subiz/header/auth/auth.proto";

message Empty {
	Context ctx = 1;
}

message Id {
	Context ctx = 1;
	string account_id = 2;
	string id = 3;
}

message Ids {
	Context ctx = 1;
	string account_id = 2;
	repeated string ids = 3;
}

message Context {
	string event_id = 1;
	bytes state = 2;
	string node = 3;
	string reply_topic = 4;
	//	optional int32 reply_partition = 5;
	auth.Credential credential = 6;
	bytes tracing = 7;
	string reply_key = 8;

	Device by_device = 10;

	// for kafka
	string topic = 11;
	int32 partition = 13;
	int64 offset = 14;
	uint64 term = 15;
	string router_topic = 16;
}

message Reply {
	common.Context ctx = 1;
	string event_id = 3;
	bytes state = 2;

	string service = 5;
	string service_id = 6;

	bool err = 10;
	string err_description = 12;
	lang.T err_code = 13;
	int32 err_class = 15;
	string err_hash = 16;

	bytes payload = 7;

	int64 published = 20;
}

message Error {
	string error = 2;
	string request_id = 3;
	string description = 4;
	string hash = 5;
	string debug = 6;
}

message Device {
	string ip = 3;
	string user_agent = 4; // code
	string screen_resolution = 5;
	string timezone = 6;
	string language = 7;
	string referrer = 8;
	string type = 9;
	enum DeviceType {
		unknown = 0;
		mobile = 1;
		tablet = 2;
		desktop = 3;
	}
}

enum Event {
	Send_ = 0;
	ApiReply = 2;
}

message PingRequest {
	string message = 2;
}

message Pong {
	string message = 3;
}

service Agent {
	rpc Ping(PingRequest) returns (Pong);
}
