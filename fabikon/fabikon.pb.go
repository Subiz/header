// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fabikon/fabikon.proto

/*
Package fabikon is a generated protocol buffer package.

It is generated from these files:
	fabikon/fabikon.proto

It has these top-level messages:
	FacebookPage
	HttpChunk
	Job
*/
package fabikon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_FabikonRequested              Event = 1000
	Event_FabikonSynced                 Event = 1001
	Event_FabikonJob                    Event = 2
	Event_FabikonCreateAccountRequested Event = 0
)

var Event_name = map[int32]string{
	1000: "FabikonRequested",
	1001: "FabikonSynced",
	2:    "FabikonJob",
	0:    "FabikonCreateAccountRequested",
}
var Event_value = map[string]int32{
	"FabikonRequested":              1000,
	"FabikonSynced":                 1001,
	"FabikonJob":                    2,
	"FabikonCreateAccountRequested": 0,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JobType int32

const (
	JobType_facebook_hook JobType = 0
	JobType_subiz_event   JobType = 3
)

var JobType_name = map[int32]string{
	0: "facebook_hook",
	3: "subiz_event",
}
var JobType_value = map[string]int32{
	"facebook_hook": 0,
	"subiz_event":   3,
}

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}
func (x JobType) String() string {
	return proto.EnumName(JobType_name, int32(x))
}
func (x *JobType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JobType_value, data, "JobType")
	if err != nil {
		return err
	}
	*x = JobType(value)
	return nil
}
func (JobType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type FacebookPage struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Created          *int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	PictureUrl       *string `protobuf:"bytes,4,opt,name=picture_url,json=pictureUrl" json:"picture_url,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FacebookPage) Reset()                    { *m = FacebookPage{} }
func (m *FacebookPage) String() string            { return proto.CompactTextString(m) }
func (*FacebookPage) ProtoMessage()               {}
func (*FacebookPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FacebookPage) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *FacebookPage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *FacebookPage) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *FacebookPage) GetPictureUrl() string {
	if m != nil && m.PictureUrl != nil {
		return *m.PictureUrl
	}
	return ""
}

func (m *FacebookPage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type HttpChunk struct {
	Id               *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	ChunkId          *int32  `protobuf:"varint,4,opt,name=chunk_id,json=chunkId" json:"chunk_id,omitempty"`
	Data             []byte  `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	ChunkSize        *int32  `protobuf:"varint,6,opt,name=chunk_size,json=chunkSize" json:"chunk_size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HttpChunk) Reset()                    { *m = HttpChunk{} }
func (m *HttpChunk) String() string            { return proto.CompactTextString(m) }
func (*HttpChunk) ProtoMessage()               {}
func (*HttpChunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HttpChunk) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *HttpChunk) GetChunkId() int32 {
	if m != nil && m.ChunkId != nil {
		return *m.ChunkId
	}
	return 0
}

func (m *HttpChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HttpChunk) GetChunkSize() int32 {
	if m != nil && m.ChunkSize != nil {
		return *m.ChunkSize
	}
	return 0
}

type Job struct {
	Topic            *string `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Partition        *int32  `protobuf:"varint,3,opt,name=partition" json:"partition,omitempty"`
	Offset           *int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	ContentType      *string `protobuf:"bytes,5,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Type             *string `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	RequestId        *string `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Job) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Job) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

func (m *Job) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Job) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *Job) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Job) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func init() {
	proto.RegisterType((*FacebookPage)(nil), "fabikon.FacebookPage")
	proto.RegisterType((*HttpChunk)(nil), "fabikon.HttpChunk")
	proto.RegisterType((*Job)(nil), "fabikon.Job")
	proto.RegisterEnum("fabikon.Event", Event_name, Event_value)
	proto.RegisterEnum("fabikon.JobType", JobType_name, JobType_value)
}

func init() { proto.RegisterFile("fabikon/fabikon.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x92, 0x51, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x37, 0xc9, 0xa6, 0x21, 0xd3, 0xee, 0x12, 0x46, 0x2c, 0x0a, 0x12, 0x2b, 0x76, 0xfb,
	0x54, 0x55, 0x02, 0xce, 0x80, 0x2a, 0x2a, 0xda, 0x27, 0x94, 0xc2, 0x73, 0xe4, 0xd8, 0x13, 0x6a,
	0xa5, 0xd8, 0x21, 0x71, 0x90, 0xda, 0x33, 0x70, 0x0f, 0xae, 0x06, 0xb7, 0x40, 0x76, 0xdc, 0xed,
	0x53, 0xe6, 0xff, 0x26, 0x1e, 0xff, 0x33, 0x63, 0xb8, 0xab, 0x59, 0x25, 0x1b, 0xad, 0x3e, 0xf8,
	0xef, 0xfb, 0xb6, 0xd3, 0x46, 0x63, 0xe2, 0xe5, 0xfc, 0x77, 0x00, 0xb3, 0x35, 0xe3, 0x54, 0x69,
	0xdd, 0x7c, 0x61, 0xdf, 0x09, 0xef, 0x01, 0x18, 0xe7, 0x7a, 0x50, 0xa6, 0x94, 0x22, 0x0f, 0x1e,
	0x82, 0x45, 0x5a, 0xa4, 0x9e, 0x6c, 0x04, 0xde, 0x42, 0x28, 0x45, 0x1e, 0x3a, 0x1c, 0x4a, 0x81,
	0x39, 0x24, 0xbc, 0x23, 0x66, 0x48, 0xe4, 0xd1, 0x43, 0xb0, 0x88, 0x8a, 0xb3, 0xc4, 0xb7, 0x30,
	0x6d, 0x25, 0x37, 0x43, 0x47, 0xe5, 0xd0, 0x1d, 0xf2, 0x6b, 0x77, 0x04, 0x3c, 0xfa, 0xd6, 0x1d,
	0x10, 0xe1, 0x5a, 0xb1, 0x1f, 0x94, 0xc7, 0x2e, 0xe3, 0xe2, 0xb9, 0x84, 0xf4, 0xb3, 0x31, 0xed,
	0x6a, 0x3f, 0xa8, 0xc6, 0xdf, 0x15, 0x3d, 0xdd, 0xf5, 0x1a, 0x9e, 0x71, 0x9b, 0xb0, 0xc6, 0x6c,
	0xb9, 0xb8, 0x48, 0x9c, 0xde, 0x08, 0x5b, 0x4b, 0x30, 0xc3, 0x5c, 0xad, 0x59, 0xe1, 0x62, 0xdb,
	0xc9, 0xf8, 0x7b, 0x2f, 0x4f, 0x94, 0x4f, 0xdc, 0x81, 0xd4, 0x91, 0x9d, 0x3c, 0xd1, 0xfc, 0x4f,
	0x00, 0xd1, 0x56, 0x57, 0xf8, 0x12, 0x62, 0xa3, 0x5b, 0xc9, 0x7d, 0x53, 0xa3, 0xc0, 0x37, 0x90,
	0xb6, 0xac, 0x33, 0xd2, 0x48, 0xad, 0x9c, 0x85, 0xb8, 0xb8, 0x00, 0x7c, 0x05, 0x13, 0x5d, 0xd7,
	0x3d, 0x19, 0xe7, 0x23, 0x2a, 0xbc, 0xc2, 0x47, 0x98, 0x71, 0xad, 0x0c, 0x29, 0x53, 0x9a, 0x63,
	0x7b, 0x6e, 0x6d, 0xea, 0xd9, 0xd7, 0x63, 0x4b, 0xd6, 0xa9, 0x4b, 0x4d, 0xc6, 0xae, 0x6d, 0x6c,
	0x9d, 0x76, 0xf4, 0x73, 0xa0, 0xde, 0xcd, 0x3c, 0x19, 0x67, 0xee, 0xc9, 0x46, 0x2c, 0x09, 0xe2,
	0x4f, 0xbf, 0x48, 0x19, 0xbc, 0x83, 0x6c, 0x3d, 0xee, 0xad, 0x18, 0x93, 0x24, 0xb2, 0xbf, 0x09,
	0x22, 0xdc, 0x78, 0xbc, 0x3b, 0x2a, 0x4e, 0x22, 0xfb, 0x97, 0xe0, 0x2d, 0x80, 0x67, 0x5b, 0x5d,
	0x65, 0x21, 0x3e, 0xc2, 0xbd, 0xd7, 0x2b, 0xb7, 0x9f, 0x8f, 0xe3, 0x46, 0x2f, 0x75, 0xae, 0x96,
	0xef, 0x20, 0xd9, 0xea, 0xca, 0x99, 0x7c, 0x01, 0x37, 0xb5, 0x7f, 0x14, 0xe5, 0x5e, 0xeb, 0x26,
	0xbb, 0xc2, 0xe7, 0x30, 0xed, 0x87, 0x4a, 0x9e, 0x4a, 0xb2, 0x56, 0xb2, 0xe8, 0x7f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x71, 0x49, 0x0c, 0x23, 0x5a, 0x02, 0x00, 0x00,
}
