// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fabikon/fabikon.proto

/*
Package fabikon is a generated protocol buffer package.

It is generated from these files:
	fabikon/fabikon.proto

It has these top-level messages:
	FacebookPage
	HttpChunk
	Job
	FbWebhookEvent
	FbEntry
	FbMessaging
	FbMessage
	FbSender
	FbRecipient
	FbAttachment
	FbPayload
	FbRead
	FbDelivery
	FbSendResponse
	Conversation
	CurrentConvo
	UserAvail
	FbPagePicture
	FbPagePictureData
	FbPageEntry
	FbPageRet
	FacebookUser
	Fb2SbEvent
	LongLivedAccessToken
*/
package fabikon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_FabikonRequested              Event = 1000
	Event_FabikonSynced                 Event = 1001
	Event_FabikonJob                    Event = 2
	Event_FabikonCreateAccountRequested Event = 0
)

var Event_name = map[int32]string{
	1000: "FabikonRequested",
	1001: "FabikonSynced",
	2:    "FabikonJob",
	0:    "FabikonCreateAccountRequested",
}
var Event_value = map[string]int32{
	"FabikonRequested":              1000,
	"FabikonSynced":                 1001,
	"FabikonJob":                    2,
	"FabikonCreateAccountRequested": 0,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type JobType int32

const (
	JobType_facebook_hook JobType = 0
	JobType_subiz_event   JobType = 3
)

var JobType_name = map[int32]string{
	0: "facebook_hook",
	3: "subiz_event",
}
var JobType_value = map[string]int32{
	"facebook_hook": 0,
	"subiz_event":   3,
}

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}
func (x JobType) String() string {
	return proto.EnumName(JobType_name, int32(x))
}
func (x *JobType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JobType_value, data, "JobType")
	if err != nil {
		return err
	}
	*x = JobType(value)
	return nil
}
func (JobType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type FacebookPage struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Created          *int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	PictureUrl       *string `protobuf:"bytes,4,opt,name=picture_url,json=pictureUrl" json:"picture_url,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	AccessToken      *string `protobuf:"bytes,6,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FacebookPage) Reset()                    { *m = FacebookPage{} }
func (m *FacebookPage) String() string            { return proto.CompactTextString(m) }
func (*FacebookPage) ProtoMessage()               {}
func (*FacebookPage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FacebookPage) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *FacebookPage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *FacebookPage) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *FacebookPage) GetPictureUrl() string {
	if m != nil && m.PictureUrl != nil {
		return *m.PictureUrl
	}
	return ""
}

func (m *FacebookPage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FacebookPage) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

type HttpChunk struct {
	Id               *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	ChunkId          *int32  `protobuf:"varint,4,opt,name=chunk_id,json=chunkId" json:"chunk_id,omitempty"`
	Data             []byte  `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	ChunkSize        *int32  `protobuf:"varint,6,opt,name=chunk_size,json=chunkSize" json:"chunk_size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HttpChunk) Reset()                    { *m = HttpChunk{} }
func (m *HttpChunk) String() string            { return proto.CompactTextString(m) }
func (*HttpChunk) ProtoMessage()               {}
func (*HttpChunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HttpChunk) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *HttpChunk) GetChunkId() int32 {
	if m != nil && m.ChunkId != nil {
		return *m.ChunkId
	}
	return 0
}

func (m *HttpChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HttpChunk) GetChunkSize() int32 {
	if m != nil && m.ChunkSize != nil {
		return *m.ChunkSize
	}
	return 0
}

type Job struct {
	Topic            *string `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Partition        *int32  `protobuf:"varint,3,opt,name=partition" json:"partition,omitempty"`
	Offset           *int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Type             *string `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	RequestId        *string `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Job) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Job) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

func (m *Job) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Job) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Job) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

type FbWebhookEvent struct {
	Object           *string    `protobuf:"bytes,2,opt,name=object" json:"object,omitempty"`
	Entry            []*FbEntry `protobuf:"bytes,3,rep,name=entry" json:"entry,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *FbWebhookEvent) Reset()                    { *m = FbWebhookEvent{} }
func (m *FbWebhookEvent) String() string            { return proto.CompactTextString(m) }
func (*FbWebhookEvent) ProtoMessage()               {}
func (*FbWebhookEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FbWebhookEvent) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *FbWebhookEvent) GetEntry() []*FbEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type FbEntry struct {
	Id               *string        `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Time             *int64         `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Messaging        []*FbMessaging `protobuf:"bytes,6,rep,name=messaging" json:"messaging,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FbEntry) Reset()                    { *m = FbEntry{} }
func (m *FbEntry) String() string            { return proto.CompactTextString(m) }
func (*FbEntry) ProtoMessage()               {}
func (*FbEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FbEntry) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *FbEntry) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *FbEntry) GetMessaging() []*FbMessaging {
	if m != nil {
		return m.Messaging
	}
	return nil
}

type FbMessaging struct {
	Sender           *FbSender    `protobuf:"bytes,2,opt,name=sender" json:"sender,omitempty"`
	Recipient        *FbRecipient `protobuf:"bytes,3,opt,name=recipient" json:"recipient,omitempty"`
	Timestamp        *int64       `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Message          *FbMessage   `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Delivery         *FbDelivery  `protobuf:"bytes,6,opt,name=delivery" json:"delivery,omitempty"`
	MessageType      *string      `protobuf:"bytes,7,opt,name=message_type,json=messageType" json:"message_type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *FbMessaging) Reset()                    { *m = FbMessaging{} }
func (m *FbMessaging) String() string            { return proto.CompactTextString(m) }
func (*FbMessaging) ProtoMessage()               {}
func (*FbMessaging) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FbMessaging) GetSender() *FbSender {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *FbMessaging) GetRecipient() *FbRecipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *FbMessaging) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *FbMessaging) GetMessage() *FbMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *FbMessaging) GetDelivery() *FbDelivery {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (m *FbMessaging) GetMessageType() string {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return ""
}

type FbMessage struct {
	Mid              *string         `protobuf:"bytes,2,opt,name=mid" json:"mid,omitempty"`
	Text             *string         `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Attachments      []*FbAttachment `protobuf:"bytes,4,rep,name=attachments" json:"attachments,omitempty"`
	Read             *FbRead         `protobuf:"bytes,5,opt,name=read" json:"read,omitempty"`
	Attachment       *FbAttachment   `protobuf:"bytes,6,opt,name=attachment" json:"attachment,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *FbMessage) Reset()                    { *m = FbMessage{} }
func (m *FbMessage) String() string            { return proto.CompactTextString(m) }
func (*FbMessage) ProtoMessage()               {}
func (*FbMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FbMessage) GetMid() string {
	if m != nil && m.Mid != nil {
		return *m.Mid
	}
	return ""
}

func (m *FbMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *FbMessage) GetAttachments() []*FbAttachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *FbMessage) GetRead() *FbRead {
	if m != nil {
		return m.Read
	}
	return nil
}

func (m *FbMessage) GetAttachment() *FbAttachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

type FbSender struct {
	Id               *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FbSender) Reset()                    { *m = FbSender{} }
func (m *FbSender) String() string            { return proto.CompactTextString(m) }
func (*FbSender) ProtoMessage()               {}
func (*FbSender) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FbSender) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type FbRecipient struct {
	Id               *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FbRecipient) Reset()                    { *m = FbRecipient{} }
func (m *FbRecipient) String() string            { return proto.CompactTextString(m) }
func (*FbRecipient) ProtoMessage()               {}
func (*FbRecipient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FbRecipient) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type FbAttachment struct {
	Type             *string    `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Payload          *FbPayload `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	Title            *string    `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	URL              *string    `protobuf:"bytes,5,opt,name=URL" json:"URL,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *FbAttachment) Reset()                    { *m = FbAttachment{} }
func (m *FbAttachment) String() string            { return proto.CompactTextString(m) }
func (*FbAttachment) ProtoMessage()               {}
func (*FbAttachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *FbAttachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *FbAttachment) GetPayload() *FbPayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FbAttachment) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *FbAttachment) GetURL() string {
	if m != nil && m.URL != nil {
		return *m.URL
	}
	return ""
}

type FbPayload struct {
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	IsReuseable      *bool   `protobuf:"varint,3,opt,name=is_reuseable,json=isReuseable" json:"is_reuseable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FbPayload) Reset()                    { *m = FbPayload{} }
func (m *FbPayload) String() string            { return proto.CompactTextString(m) }
func (*FbPayload) ProtoMessage()               {}
func (*FbPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *FbPayload) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *FbPayload) GetIsReuseable() bool {
	if m != nil && m.IsReuseable != nil {
		return *m.IsReuseable
	}
	return false
}

type FbRead struct {
	Watermark        *int64 `protobuf:"varint,2,opt,name=watermark" json:"watermark,omitempty"`
	Seq              *int32 `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FbRead) Reset()                    { *m = FbRead{} }
func (m *FbRead) String() string            { return proto.CompactTextString(m) }
func (*FbRead) ProtoMessage()               {}
func (*FbRead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FbRead) GetWatermark() int64 {
	if m != nil && m.Watermark != nil {
		return *m.Watermark
	}
	return 0
}

func (m *FbRead) GetSeq() int32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

type FbDelivery struct {
	Mids             []string `protobuf:"bytes,2,rep,name=mids" json:"mids,omitempty"`
	Watermark        *int64   `protobuf:"varint,3,opt,name=watermark" json:"watermark,omitempty"`
	Seq              *int32   `protobuf:"varint,4,opt,name=seq" json:"seq,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FbDelivery) Reset()                    { *m = FbDelivery{} }
func (m *FbDelivery) String() string            { return proto.CompactTextString(m) }
func (*FbDelivery) ProtoMessage()               {}
func (*FbDelivery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FbDelivery) GetMids() []string {
	if m != nil {
		return m.Mids
	}
	return nil
}

func (m *FbDelivery) GetWatermark() int64 {
	if m != nil && m.Watermark != nil {
		return *m.Watermark
	}
	return 0
}

func (m *FbDelivery) GetSeq() int32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

type FbSendResponse struct {
	RecipientId      *string `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId" json:"recipient_id,omitempty"`
	MessageId        *string `protobuf:"bytes,3,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FbSendResponse) Reset()                    { *m = FbSendResponse{} }
func (m *FbSendResponse) String() string            { return proto.CompactTextString(m) }
func (*FbSendResponse) ProtoMessage()               {}
func (*FbSendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FbSendResponse) GetRecipientId() string {
	if m != nil && m.RecipientId != nil {
		return *m.RecipientId
	}
	return ""
}

func (m *FbSendResponse) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

type Conversation struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	PageId           *string `protobuf:"bytes,4,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	Created          *int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Fbuserid         *string `protobuf:"bytes,6,opt,name=fbuserid" json:"fbuserid,omitempty"`
	Sbuserid         *string `protobuf:"bytes,7,opt,name=sbuserid" json:"sbuserid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetPageId() string {
	if m != nil && m.PageId != nil {
		return *m.PageId
	}
	return ""
}

func (m *Conversation) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Conversation) GetFbuserid() string {
	if m != nil && m.Fbuserid != nil {
		return *m.Fbuserid
	}
	return ""
}

func (m *Conversation) GetSbuserid() string {
	if m != nil && m.Sbuserid != nil {
		return *m.Sbuserid
	}
	return ""
}

type CurrentConvo struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConvoId          *string `protobuf:"bytes,3,opt,name=convo_id,json=convoId" json:"convo_id,omitempty"`
	PageId           *string `protobuf:"bytes,4,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	FbuserId         *string `protobuf:"bytes,5,opt,name=fbuser_id,json=fbuserId" json:"fbuser_id,omitempty"`
	SbuserId         *string `protobuf:"bytes,6,opt,name=sbuser_id,json=sbuserId" json:"sbuser_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CurrentConvo) Reset()                    { *m = CurrentConvo{} }
func (m *CurrentConvo) String() string            { return proto.CompactTextString(m) }
func (*CurrentConvo) ProtoMessage()               {}
func (*CurrentConvo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CurrentConvo) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CurrentConvo) GetConvoId() string {
	if m != nil && m.ConvoId != nil {
		return *m.ConvoId
	}
	return ""
}

func (m *CurrentConvo) GetPageId() string {
	if m != nil && m.PageId != nil {
		return *m.PageId
	}
	return ""
}

func (m *CurrentConvo) GetFbuserId() string {
	if m != nil && m.FbuserId != nil {
		return *m.FbuserId
	}
	return ""
}

func (m *CurrentConvo) GetSbuserId() string {
	if m != nil && m.SbuserId != nil {
		return *m.SbuserId
	}
	return ""
}

type UserAvail struct {
	AccountId        *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FbuserId         *string `protobuf:"bytes,5,opt,name=fbuser_id,json=fbuserId" json:"fbuser_id,omitempty"`
	Availability     *bool   `protobuf:"varint,6,opt,name=availability" json:"availability,omitempty"`
	Updated          *int64  `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAvail) Reset()                    { *m = UserAvail{} }
func (m *UserAvail) String() string            { return proto.CompactTextString(m) }
func (*UserAvail) ProtoMessage()               {}
func (*UserAvail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *UserAvail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserAvail) GetFbuserId() string {
	if m != nil && m.FbuserId != nil {
		return *m.FbuserId
	}
	return ""
}

func (m *UserAvail) GetAvailability() bool {
	if m != nil && m.Availability != nil {
		return *m.Availability
	}
	return false
}

func (m *UserAvail) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type FbPagePicture struct {
	Data             *FbPagePictureData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *FbPagePicture) Reset()                    { *m = FbPagePicture{} }
func (m *FbPagePicture) String() string            { return proto.CompactTextString(m) }
func (*FbPagePicture) ProtoMessage()               {}
func (*FbPagePicture) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *FbPagePicture) GetData() *FbPagePictureData {
	if m != nil {
		return m.Data
	}
	return nil
}

type FbPagePictureData struct {
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FbPagePictureData) Reset()                    { *m = FbPagePictureData{} }
func (m *FbPagePictureData) String() string            { return proto.CompactTextString(m) }
func (*FbPagePictureData) ProtoMessage()               {}
func (*FbPagePictureData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *FbPagePictureData) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type FbPageEntry struct {
	Name             *string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Picture          *FbPagePicture `protobuf:"bytes,3,opt,name=picture" json:"picture,omitempty"`
	Id               *string        `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	AccessToken      *string        `protobuf:"bytes,6,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FbPageEntry) Reset()                    { *m = FbPageEntry{} }
func (m *FbPageEntry) String() string            { return proto.CompactTextString(m) }
func (*FbPageEntry) ProtoMessage()               {}
func (*FbPageEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *FbPageEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FbPageEntry) GetPicture() *FbPagePicture {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *FbPageEntry) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *FbPageEntry) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

type FbPageRet struct {
	Data             []*FbPageEntry `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FbPageRet) Reset()                    { *m = FbPageRet{} }
func (m *FbPageRet) String() string            { return proto.CompactTextString(m) }
func (*FbPageRet) ProtoMessage()               {}
func (*FbPageRet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *FbPageRet) GetData() []*FbPageEntry {
	if m != nil {
		return m.Data
	}
	return nil
}

type FacebookUser struct {
	FirstName        *string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName         *string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	ProfilePic       *string `protobuf:"bytes,5,opt,name=profile_pic,json=profilePic" json:"profile_pic,omitempty"`
	Locale           *string `protobuf:"bytes,6,opt,name=locale" json:"locale,omitempty"`
	Timezone         *int32  `protobuf:"varint,7,opt,name=timezone" json:"timezone,omitempty"`
	Gender           *string `protobuf:"bytes,8,opt,name=gender" json:"gender,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FacebookUser) Reset()                    { *m = FacebookUser{} }
func (m *FacebookUser) String() string            { return proto.CompactTextString(m) }
func (*FacebookUser) ProtoMessage()               {}
func (*FacebookUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *FacebookUser) GetFirstName() string {
	if m != nil && m.FirstName != nil {
		return *m.FirstName
	}
	return ""
}

func (m *FacebookUser) GetLastName() string {
	if m != nil && m.LastName != nil {
		return *m.LastName
	}
	return ""
}

func (m *FacebookUser) GetProfilePic() string {
	if m != nil && m.ProfilePic != nil {
		return *m.ProfilePic
	}
	return ""
}

func (m *FacebookUser) GetLocale() string {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return ""
}

func (m *FacebookUser) GetTimezone() int32 {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return 0
}

func (m *FacebookUser) GetGender() string {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return ""
}

type Fb2SbEvent struct {
	Fbmid            *string `protobuf:"bytes,2,opt,name=fbmid" json:"fbmid,omitempty"`
	AccountId        *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Sbmid            *string `protobuf:"bytes,5,opt,name=sbmid" json:"sbmid,omitempty"`
	PageId           *string `protobuf:"bytes,6,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Fb2SbEvent) Reset()                    { *m = Fb2SbEvent{} }
func (m *Fb2SbEvent) String() string            { return proto.CompactTextString(m) }
func (*Fb2SbEvent) ProtoMessage()               {}
func (*Fb2SbEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Fb2SbEvent) GetFbmid() string {
	if m != nil && m.Fbmid != nil {
		return *m.Fbmid
	}
	return ""
}

func (m *Fb2SbEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Fb2SbEvent) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Fb2SbEvent) GetSbmid() string {
	if m != nil && m.Sbmid != nil {
		return *m.Sbmid
	}
	return ""
}

func (m *Fb2SbEvent) GetPageId() string {
	if m != nil && m.PageId != nil {
		return *m.PageId
	}
	return ""
}

type LongLivedAccessToken struct {
	AccessToken      *string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	TokenType        *string `protobuf:"bytes,3,opt,name=token_type,json=tokenType" json:"token_type,omitempty"`
	ExpiresIn        *int32  `protobuf:"varint,5,opt,name=expires_in,json=expiresIn" json:"expires_in,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LongLivedAccessToken) Reset()                    { *m = LongLivedAccessToken{} }
func (m *LongLivedAccessToken) String() string            { return proto.CompactTextString(m) }
func (*LongLivedAccessToken) ProtoMessage()               {}
func (*LongLivedAccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *LongLivedAccessToken) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func (m *LongLivedAccessToken) GetTokenType() string {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return ""
}

func (m *LongLivedAccessToken) GetExpiresIn() int32 {
	if m != nil && m.ExpiresIn != nil {
		return *m.ExpiresIn
	}
	return 0
}

func init() {
	proto.RegisterType((*FacebookPage)(nil), "fabikon.FacebookPage")
	proto.RegisterType((*HttpChunk)(nil), "fabikon.HttpChunk")
	proto.RegisterType((*Job)(nil), "fabikon.Job")
	proto.RegisterType((*FbWebhookEvent)(nil), "fabikon.FbWebhookEvent")
	proto.RegisterType((*FbEntry)(nil), "fabikon.FbEntry")
	proto.RegisterType((*FbMessaging)(nil), "fabikon.FbMessaging")
	proto.RegisterType((*FbMessage)(nil), "fabikon.FbMessage")
	proto.RegisterType((*FbSender)(nil), "fabikon.FbSender")
	proto.RegisterType((*FbRecipient)(nil), "fabikon.FbRecipient")
	proto.RegisterType((*FbAttachment)(nil), "fabikon.FbAttachment")
	proto.RegisterType((*FbPayload)(nil), "fabikon.FbPayload")
	proto.RegisterType((*FbRead)(nil), "fabikon.FbRead")
	proto.RegisterType((*FbDelivery)(nil), "fabikon.FbDelivery")
	proto.RegisterType((*FbSendResponse)(nil), "fabikon.FbSendResponse")
	proto.RegisterType((*Conversation)(nil), "fabikon.Conversation")
	proto.RegisterType((*CurrentConvo)(nil), "fabikon.CurrentConvo")
	proto.RegisterType((*UserAvail)(nil), "fabikon.UserAvail")
	proto.RegisterType((*FbPagePicture)(nil), "fabikon.FbPagePicture")
	proto.RegisterType((*FbPagePictureData)(nil), "fabikon.FbPagePictureData")
	proto.RegisterType((*FbPageEntry)(nil), "fabikon.FbPageEntry")
	proto.RegisterType((*FbPageRet)(nil), "fabikon.FbPageRet")
	proto.RegisterType((*FacebookUser)(nil), "fabikon.FacebookUser")
	proto.RegisterType((*Fb2SbEvent)(nil), "fabikon.Fb2SbEvent")
	proto.RegisterType((*LongLivedAccessToken)(nil), "fabikon.LongLivedAccessToken")
	proto.RegisterEnum("fabikon.Event", Event_name, Event_value)
	proto.RegisterEnum("fabikon.JobType", JobType_name, JobType_value)
}

func init() { proto.RegisterFile("fabikon/fabikon.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x6e, 0x1b, 0xc5,
	0x17, 0xaf, 0xbd, 0x59, 0xaf, 0x7d, 0x9c, 0xa6, 0xee, 0xfc, 0xd3, 0xfe, 0x4d, 0x4b, 0x45, 0xba,
	0x08, 0x08, 0x55, 0x69, 0x51, 0xa4, 0x0a, 0xee, 0x20, 0x6a, 0x1b, 0xe1, 0xaa, 0xa0, 0x68, 0xd2,
	0x8a, 0x4b, 0x6b, 0x76, 0xf7, 0xd8, 0x1d, 0xb2, 0xde, 0xdd, 0xee, 0x8c, 0xd3, 0x24, 0xd7, 0xc0,
	0x15, 0x2f, 0x80, 0x78, 0x01, 0xee, 0xb8, 0xe4, 0x0d, 0x78, 0x16, 0x78, 0x0b, 0x74, 0x66, 0x66,
	0x3f, 0x1c, 0xf7, 0x83, 0xab, 0x9d, 0xf3, 0xb1, 0x67, 0x7e, 0xe7, 0x7b, 0xe0, 0xda, 0x4c, 0x44,
	0xf2, 0x38, 0xcf, 0xee, 0xbb, 0xef, 0xbd, 0xa2, 0xcc, 0x75, 0xce, 0x02, 0x47, 0x86, 0x7f, 0x74,
	0x60, 0xf3, 0x40, 0xc4, 0x18, 0xe5, 0xf9, 0xf1, 0xa1, 0x98, 0x23, 0xbb, 0x05, 0x20, 0xe2, 0x38,
	0x5f, 0x66, 0x7a, 0x2a, 0x93, 0x71, 0x67, 0xa7, 0xb3, 0x3b, 0xe0, 0x03, 0xc7, 0x99, 0x24, 0x6c,
	0x0b, 0xba, 0x32, 0x19, 0x77, 0x0d, 0xbb, 0x2b, 0x13, 0x36, 0x86, 0x20, 0x2e, 0x51, 0x68, 0x4c,
	0xc6, 0xde, 0x4e, 0x67, 0xd7, 0xe3, 0x15, 0xc9, 0x3e, 0x80, 0x61, 0x21, 0x63, 0xbd, 0x2c, 0x71,
	0xba, 0x2c, 0xd3, 0xf1, 0x86, 0xf9, 0x05, 0x1c, 0xeb, 0x79, 0x99, 0x32, 0x06, 0x1b, 0x99, 0x58,
	0xe0, 0xd8, 0x37, 0x12, 0x73, 0x66, 0xb7, 0x61, 0x53, 0xc4, 0x31, 0x2a, 0x35, 0xd5, 0xf9, 0x31,
	0x66, 0xe3, 0x9e, 0x91, 0x0d, 0x2d, 0xef, 0x19, 0xb1, 0x42, 0x09, 0x83, 0x6f, 0xb4, 0x2e, 0x1e,
	0xbe, 0x58, 0x66, 0xc7, 0x0e, 0x8e, 0x57, 0xc3, 0x79, 0x0f, 0xfa, 0x31, 0x09, 0x08, 0x3b, 0xdd,
	0xe8, 0xf3, 0xc0, 0xd0, 0x93, 0x84, 0xae, 0x4b, 0x84, 0x16, 0xe6, 0xba, 0x4d, 0x6e, 0xce, 0xe4,
	0xac, 0x55, 0x57, 0xf2, 0x1c, 0xcd, 0x65, 0x3e, 0x1f, 0x18, 0xce, 0x91, 0x3c, 0xc7, 0xf0, 0xc7,
	0x0e, 0x78, 0x4f, 0xf2, 0x88, 0x6d, 0x83, 0xaf, 0xf3, 0x42, 0xc6, 0xce, 0x6f, 0x4b, 0xb0, 0xf7,
	0x61, 0x50, 0x88, 0x52, 0x4b, 0x2d, 0xf3, 0xcc, 0x40, 0xf0, 0x79, 0xc3, 0x60, 0xd7, 0xa1, 0x97,
	0xcf, 0x66, 0x0a, 0xb5, 0xc1, 0xe1, 0x71, 0x47, 0x11, 0x0c, 0x7d, 0x56, 0xa0, 0xf3, 0xcc, 0x9c,
	0x09, 0x46, 0x89, 0x2f, 0x97, 0xa8, 0x4c, 0xcc, 0x03, 0x1b, 0x73, 0xc7, 0x99, 0x24, 0xe1, 0x21,
	0x6c, 0x1d, 0x44, 0xdf, 0x63, 0xf4, 0x22, 0xcf, 0x8f, 0x1f, 0x9f, 0x60, 0xa6, 0x8d, 0xf1, 0xe8,
	0x07, 0x8c, 0xb5, 0x43, 0xe4, 0x28, 0xf6, 0x31, 0xf8, 0x98, 0xe9, 0xf2, 0x6c, 0xec, 0xed, 0x78,
	0xbb, 0xc3, 0xbd, 0xd1, 0xbd, 0x2a, 0xeb, 0x07, 0xd1, 0x63, 0xe2, 0x73, 0x2b, 0x0e, 0x05, 0x04,
	0x8e, 0xb3, 0x16, 0x41, 0xc2, 0x27, 0x5d, 0x56, 0x3c, 0x6e, 0xce, 0x6c, 0x0f, 0x06, 0x0b, 0x54,
	0x4a, 0xcc, 0x65, 0x36, 0x1f, 0xf7, 0x8c, 0xe9, 0xed, 0x96, 0xe9, 0x6f, 0x2b, 0x19, 0x6f, 0xd4,
	0xc2, 0x5f, 0xba, 0x30, 0x6c, 0x89, 0xd8, 0xa7, 0xd0, 0x53, 0x98, 0x25, 0x58, 0x1a, 0xc8, 0xc3,
	0xbd, 0xab, 0x2d, 0x03, 0x47, 0x46, 0xc0, 0x9d, 0x02, 0x5d, 0x57, 0x62, 0x2c, 0x0b, 0x89, 0x99,
	0x36, 0xc8, 0x56, 0xaf, 0xe3, 0x95, 0x8c, 0x37, 0x6a, 0x94, 0x0c, 0x82, 0xaa, 0xb4, 0x58, 0x14,
	0x2e, 0xe2, 0x0d, 0x83, 0xdd, 0x85, 0xc0, 0x22, 0xb3, 0x7e, 0x0d, 0xf7, 0xd8, 0x1a, 0x7c, 0xe4,
	0x95, 0x0a, 0xbb, 0x0f, 0xfd, 0x04, 0x53, 0x79, 0x82, 0xe5, 0x99, 0x49, 0xd3, 0x70, 0xef, 0x7f,
	0x2d, 0xf5, 0x47, 0x4e, 0xc4, 0x6b, 0x25, 0xaa, 0x5a, 0xf7, 0xef, 0xd4, 0xe4, 0xd6, 0x66, 0x70,
	0xe8, 0x78, 0xcf, 0xce, 0x0a, 0x0c, 0xff, 0xea, 0xc0, 0xa0, 0xbe, 0x8a, 0x8d, 0xc0, 0x5b, 0xd4,
	0x6d, 0x44, 0x47, 0x13, 0x76, 0x3c, 0xd5, 0x2e, 0x11, 0xe6, 0xcc, 0xbe, 0x80, 0xa1, 0xd0, 0x5a,
	0xc4, 0x2f, 0x16, 0x98, 0x69, 0x35, 0xde, 0x30, 0x81, 0xbf, 0xd6, 0x82, 0xb2, 0x5f, 0x4b, 0x79,
	0x5b, 0x93, 0x7d, 0x08, 0x1b, 0x25, 0x8a, 0xc4, 0xf9, 0x7a, 0x65, 0x25, 0x76, 0x22, 0xe1, 0x46,
	0xc8, 0x1e, 0x00, 0x34, 0xff, 0x38, 0x3f, 0xdf, 0x60, 0xbc, 0xa5, 0x18, 0xde, 0x80, 0x7e, 0x95,
	0xb0, 0x8b, 0xc3, 0x20, 0xbc, 0x45, 0x29, 0xaf, 0xd3, 0xb3, 0x26, 0x3e, 0x85, 0xcd, 0xb6, 0xd9,
	0xba, 0x15, 0xba, 0xad, 0x56, 0xb8, 0x0b, 0x41, 0x21, 0xce, 0xd2, 0x5c, 0x24, 0x2e, 0xf3, 0xed,
	0x4c, 0x1d, 0x5a, 0x09, 0xaf, 0x54, 0x4c, 0x63, 0x4a, 0x9d, 0xa2, 0x9b, 0x2e, 0x96, 0xa0, 0xe8,
	0x3e, 0xe7, 0x4f, 0xdd, 0x5c, 0xa1, 0x63, 0xf8, 0x35, 0x05, 0xdf, 0xfd, 0x4d, 0x62, 0x1a, 0x48,
	0x2e, 0xf8, 0xcb, 0x32, 0xa5, 0xfc, 0x49, 0x35, 0x2d, 0x71, 0xa9, 0x50, 0x44, 0x29, 0x9a, 0x9b,
	0xfb, 0x7c, 0x28, 0x15, 0xaf, 0x58, 0xe1, 0x97, 0xd0, 0xb3, 0xd1, 0xa3, 0x4a, 0x7b, 0x25, 0x34,
	0x96, 0x0b, 0x51, 0x1e, 0x1b, 0x23, 0x1e, 0x6f, 0x18, 0x64, 0x5c, 0xe1, 0x4b, 0x37, 0x0e, 0xe8,
	0x18, 0x1e, 0x02, 0x34, 0x45, 0x43, 0x3e, 0x2f, 0x64, 0xa2, 0xc6, 0xdd, 0x1d, 0x8f, 0x7c, 0xa6,
	0xf3, 0xaa, 0x45, 0xef, 0x0d, 0x16, 0x37, 0x1a, 0x8b, 0x9c, 0xe6, 0x01, 0xa5, 0x80, 0xa3, 0x2a,
	0xf2, 0x4c, 0x99, 0xb1, 0x59, 0xb7, 0xc2, 0xb4, 0x8e, 0xf9, 0xb0, 0xe6, 0x4d, 0x12, 0x9a, 0x31,
	0x55, 0x8d, 0xd6, 0xfd, 0xee, 0xda, 0x15, 0x27, 0x49, 0xf8, 0x7b, 0x07, 0x36, 0x1f, 0xe6, 0xd9,
	0x09, 0x96, 0x4a, 0x98, 0xf9, 0xb5, 0xba, 0x07, 0xba, 0xaf, 0xdf, 0x03, 0xcd, 0xd8, 0xf8, 0x3f,
	0xe5, 0xcd, 0xda, 0xb6, 0xb9, 0xe8, 0x15, 0xc6, 0x70, 0x7b, 0x41, 0xf8, 0xab, 0x0b, 0xe2, 0x06,
	0xf4, 0x67, 0xd1, 0x52, 0x61, 0x29, 0x13, 0x37, 0x0d, 0x6b, 0x9a, 0x64, 0xaa, 0x92, 0xd9, 0x6e,
	0xaa, 0xe9, 0xf0, 0x37, 0x82, 0xba, 0x2c, 0x4b, 0xcc, 0x34, 0x21, 0xce, 0xdf, 0x05, 0x95, 0x76,
	0x02, 0xe9, 0x35, 0x7e, 0x07, 0x86, 0x9e, 0xbc, 0x05, 0xf5, 0x4d, 0x18, 0x58, 0x2c, 0x24, 0xf2,
	0xdb, 0xe0, 0xac, 0x50, 0xd5, 0xc2, 0x5e, 0x1b, 0xdd, 0x24, 0x09, 0x7f, 0xea, 0xc0, 0xe0, 0xb9,
	0xc2, 0x72, 0xff, 0x44, 0xc8, 0xf4, 0x02, 0x34, 0xef, 0x22, 0xb4, 0xb7, 0x5e, 0x13, 0xc2, 0xa6,
	0x20, 0x23, 0x22, 0x92, 0xa9, 0xd4, 0x76, 0x14, 0xf5, 0xf9, 0x0a, 0x8f, 0xa2, 0xbb, 0x2c, 0x12,
	0x13, 0xdd, 0xc0, 0x46, 0xd7, 0x91, 0xe1, 0x57, 0x70, 0x99, 0x4a, 0x7e, 0x8e, 0x87, 0x76, 0xe3,
	0xb2, 0x7b, 0x6e, 0xff, 0xd9, 0xf1, 0x7b, 0x63, 0xa5, 0xad, 0x6a, 0xad, 0x47, 0x42, 0x0b, 0xbb,
	0x1b, 0xc3, 0x8f, 0xe0, 0xea, 0x9a, 0x68, 0xbd, 0x77, 0xc2, 0x9f, 0x3b, 0xd4, 0xf4, 0xa4, 0x67,
	0xf7, 0x49, 0xb5, 0xd5, 0xbb, 0xad, 0xad, 0xfe, 0x39, 0x04, 0x6e, 0xef, 0xbb, 0xa6, 0xbe, 0xfe,
	0xfa, 0xdb, 0x79, 0xa5, 0xe6, 0xca, 0xcb, 0xaf, 0xcb, 0xeb, 0x3f, 0xbc, 0x0b, 0x1e, 0xd8, 0x1e,
	0x9f, 0x23, 0x47, 0xcd, 0x76, 0x6b, 0x67, 0x2f, 0x2e, 0xab, 0x1a, 0xa9, 0x73, 0xf3, 0xcf, 0xd6,
	0x03, 0x88, 0xf2, 0x46, 0x29, 0x9b, 0xc9, 0x52, 0xe9, 0x69, 0xcb, 0x8d, 0x81, 0xe1, 0x7c, 0x47,
	0xbe, 0xdc, 0x84, 0x41, 0x2a, 0x2a, 0xa9, 0x2d, 0x9a, 0x3e, 0x31, 0x8c, 0x90, 0xde, 0x3c, 0x65,
	0x3e, 0x93, 0x29, 0x4e, 0xe9, 0xb9, 0xe0, 0xbb, 0x37, 0x8f, 0x65, 0x1d, 0xca, 0x98, 0x16, 0x77,
	0x9a, 0xc7, 0x22, 0xad, 0xf6, 0xbf, 0xa3, 0xa8, 0xde, 0x69, 0x5b, 0x9d, 0xe7, 0x99, 0xdd, 0x1e,
	0x3e, 0xaf, 0x69, 0xfa, 0x67, 0x6e, 0x37, 0x67, 0xdf, 0xfe, 0x63, 0xa9, 0xf0, 0xd7, 0x0e, 0x4d,
	0x96, 0xbd, 0xa3, 0xc8, 0xbe, 0x09, 0xb6, 0xc1, 0x9f, 0x45, 0xcd, 0x56, 0xb1, 0xc4, 0xbb, 0x0a,
	0xf0, 0x13, 0xb8, 0x12, 0xb7, 0xba, 0xbe, 0x69, 0x84, 0xad, 0x36, 0x7b, 0x62, 0x26, 0xad, 0x32,
	0xd6, 0xad, 0x4f, 0x96, 0x68, 0xf7, 0x4f, 0xaf, 0xdd, 0x3f, 0xe1, 0x2b, 0xd8, 0x7e, 0x9a, 0x67,
	0xf3, 0xa7, 0xf2, 0x04, 0x93, 0xfd, 0x26, 0x49, 0x6b, 0x79, 0xec, 0xae, 0xe5, 0x91, 0x10, 0x1b,
	0x99, 0x5d, 0xa5, 0x0e, 0xb1, 0xe1, 0x3c, 0x73, 0x6f, 0x25, 0x3c, 0x2d, 0x64, 0x89, 0x6a, 0x2a,
	0x33, 0x83, 0xc6, 0xe7, 0x03, 0xc7, 0x99, 0x64, 0x77, 0x10, 0x7c, 0x1b, 0x8e, 0x6b, 0x30, 0x3a,
	0xb0, 0x49, 0xe7, 0xf6, 0x21, 0x85, 0xc9, 0xe8, 0xef, 0x80, 0x31, 0xb8, 0xec, 0xd8, 0x47, 0x67,
	0x59, 0x8c, 0xc9, 0xe8, 0x9f, 0x80, 0x6d, 0x01, 0x38, 0xde, 0x93, 0x3c, 0x1a, 0x75, 0xd9, 0x6d,
	0xb8, 0xe5, 0xe8, 0x87, 0x66, 0x54, 0xed, 0xdb, 0x70, 0x35, 0x76, 0x2e, 0xdd, 0xf9, 0x0c, 0x82,
	0x27, 0x79, 0x64, 0x00, 0x5d, 0x85, 0xcb, 0x33, 0x57, 0x3f, 0x53, 0x7a, 0xa1, 0x8d, 0x2e, 0xb1,
	0x2b, 0x30, 0x54, 0xcb, 0x48, 0x9e, 0x4f, 0x91, 0xa0, 0x8c, 0xbc, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xa5, 0x91, 0x55, 0x6a, 0x86, 0x0b, 0x00, 0x00,
}
