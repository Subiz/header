// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ws/ws.proto

package ws

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_WsSynced    Event = 0
	Event_WsRequested Event = 1
	Event_WsSend      Event = 10
)

var Event_name = map[int32]string{
	0:  "WsSynced",
	1:  "WsRequested",
	10: "WsSend",
}

var Event_value = map[string]int32{
	"WsSynced":    0,
	"WsRequested": 1,
	"WsSend":      10,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_90b524bd1518e8e7, []int{0}
}

type AllType struct {
	Sub                  *Subscribe `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AllType) Reset()         { *m = AllType{} }
func (m *AllType) String() string { return proto.CompactTextString(m) }
func (*AllType) ProtoMessage()    {}
func (*AllType) Descriptor() ([]byte, []int) {
	return fileDescriptor_90b524bd1518e8e7, []int{0}
}

func (m *AllType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllType.Unmarshal(m, b)
}
func (m *AllType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllType.Marshal(b, m, deterministic)
}
func (m *AllType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllType.Merge(m, src)
}
func (m *AllType) XXX_Size() int {
	return xxx_messageInfo_AllType.Size(m)
}
func (m *AllType) XXX_DiscardUnknown() {
	xxx_messageInfo_AllType.DiscardUnknown(m)
}

var xxx_messageInfo_AllType proto.InternalMessageInfo

func (m *AllType) GetSub() *Subscribe {
	if m != nil {
		return m.Sub
	}
	return nil
}

type Subscribe struct {
	// common.Context ctx = 1;
	// optional string connection_id = 2;
	Events               []string `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	ConnectionId         string   `protobuf:"bytes,5,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}
func (*Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_90b524bd1518e8e7, []int{1}
}

func (m *Subscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscribe.Unmarshal(m, b)
}
func (m *Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscribe.Marshal(b, m, deterministic)
}
func (m *Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscribe.Merge(m, src)
}
func (m *Subscribe) XXX_Size() int {
	return xxx_messageInfo_Subscribe.Size(m)
}
func (m *Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Subscribe proto.InternalMessageInfo

func (m *Subscribe) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Subscribe) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

type ListRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	ConnectionId         string          `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_90b524bd1518e8e7, []int{2}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListRequest) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

type Payload struct {
	Id                   int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Error                string   `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_90b524bd1518e8e7, []int{3}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Payload) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Payload) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("ws.Event", Event_name, Event_value)
	proto.RegisterType((*AllType)(nil), "ws.AllType")
	proto.RegisterType((*Subscribe)(nil), "ws.Subscribe")
	proto.RegisterType((*ListRequest)(nil), "ws.ListRequest")
	proto.RegisterType((*Payload)(nil), "ws.Payload")
}

func init() { proto.RegisterFile("ws/ws.proto", fileDescriptor_90b524bd1518e8e7) }

var fileDescriptor_90b524bd1518e8e7 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x6b, 0xdb, 0x40,
	0x10, 0xc5, 0x2b, 0xc9, 0x7f, 0x47, 0x76, 0x6d, 0xb6, 0xa5, 0x08, 0x1f, 0x5a, 0xd5, 0xbd, 0xa8,
	0x2e, 0x48, 0xe0, 0x7e, 0x82, 0x90, 0x04, 0x62, 0x48, 0xc0, 0x48, 0x31, 0x3e, 0x06, 0x49, 0x3b,
	0xc8, 0x0b, 0xd6, 0xae, 0xb3, 0xbb, 0xb2, 0xac, 0x7c, 0xfa, 0x20, 0x5b, 0x76, 0x02, 0xc9, 0x69,
	0xf9, 0xbd, 0x61, 0xde, 0xbe, 0x99, 0x01, 0xbb, 0x54, 0x41, 0xa9, 0xfc, 0x9d, 0x14, 0x5a, 0x10,
	0xb3, 0x54, 0x93, 0x7f, 0x19, 0xd3, 0x9b, 0x22, 0xf1, 0x53, 0x91, 0x07, 0xaa, 0x48, 0xd8, 0x4b,
	0xb0, 0xc1, 0x98, 0xa2, 0x0c, 0x52, 0x91, 0xe7, 0x82, 0x37, 0xcf, 0xa9, 0x61, 0x3a, 0x83, 0xee,
	0xd5, 0x76, 0xfb, 0x58, 0xed, 0x90, 0xfc, 0x02, 0x4b, 0x15, 0x89, 0x63, 0xba, 0x86, 0x67, 0xcf,
	0x87, 0x7e, 0xa9, 0xfc, 0xa8, 0x48, 0x54, 0x2a, 0x59, 0x82, 0x61, 0x5d, 0x99, 0xde, 0x41, 0xff,
	0xa2, 0x90, 0x1f, 0xd0, 0xc1, 0x3d, 0x72, 0xad, 0x1c, 0xcb, 0xb5, 0xbc, 0x7e, 0xd8, 0x10, 0xf9,
	0x03, 0xc3, 0x54, 0x70, 0x8e, 0xa9, 0x66, 0x82, 0x3f, 0x31, 0xea, 0xb4, 0x5d, 0xc3, 0xeb, 0x87,
	0x83, 0x37, 0x71, 0x41, 0xa7, 0x2b, 0xb0, 0xef, 0x99, 0xd2, 0x21, 0x3e, 0x17, 0xa8, 0x34, 0xf9,
	0x0d, 0x56, 0xaa, 0x0f, 0x8e, 0x71, 0xfc, 0x79, 0xe4, 0x37, 0x01, 0xaf, 0x05, 0xd7, 0x78, 0xd0,
	0x61, 0x5d, 0xfb, 0x68, 0x6b, 0x7e, 0x62, 0xbb, 0x80, 0xee, 0x32, 0xae, 0xb6, 0x22, 0xa6, 0xe4,
	0x2b, 0x98, 0x8c, 0x3a, 0x96, 0x6b, 0x78, 0x56, 0x68, 0x32, 0x4a, 0x1c, 0xe8, 0xe6, 0xa8, 0x54,
	0x9c, 0xa1, 0xd3, 0x3a, 0x76, 0x9e, 0x91, 0x7c, 0x87, 0x36, 0x4a, 0x29, 0x64, 0x13, 0xf4, 0x04,
	0xb3, 0x39, 0xb4, 0x6f, 0xeb, 0x81, 0xc8, 0x00, 0x7a, 0x6b, 0x15, 0x55, 0x3c, 0x45, 0x3a, 0xfe,
	0x42, 0x46, 0x60, 0xaf, 0x55, 0x13, 0x1b, 0xe9, 0xd8, 0x20, 0x00, 0x9d, 0xb5, 0x8a, 0x90, 0xd3,
	0x31, 0xcc, 0x57, 0xd0, 0x7b, 0xa8, 0x22, 0x94, 0x7b, 0x94, 0xe4, 0x27, 0x98, 0x37, 0x82, 0xd8,
	0xf5, 0x16, 0x9b, 0xfd, 0x4e, 0xde, 0x03, 0xf9, 0x0b, 0xad, 0x25, 0xe3, 0x19, 0xf9, 0x76, 0x9e,
	0xb6, 0xa6, 0xc6, 0x78, 0x32, 0xb8, 0x88, 0x82, 0x67, 0x49, 0xe7, 0x78, 0xa9, 0xff, 0xaf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x76, 0xfb, 0xfc, 0x7c, 0xe9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MyServerClient is the client API for MyServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyServerClient interface {
	Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type myServerClient struct {
	cc *grpc.ClientConn
}

func NewMyServerClient(cc *grpc.ClientConn) MyServerClient {
	return &myServerClient{cc}
}

func (c *myServerClient) Do(ctx context.Context, in *AllType, opts ...grpc.CallOption) (*AllType, error) {
	out := new(AllType)
	err := c.cc.Invoke(ctx, "/ws.MyServer/Do", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myServerClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/ws.MyServer/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyServerServer is the server API for MyServer service.
type MyServerServer interface {
	Do(context.Context, *AllType) (*AllType, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterMyServerServer(s *grpc.Server, srv MyServerServer) {
	s.RegisterService(&_MyServer_serviceDesc, srv)
}

func _MyServer_Do_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServerServer).Do(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ws.MyServer/Do",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServerServer).Do(ctx, req.(*AllType))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyServer_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyServerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ws.MyServer/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyServerServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ws.MyServer",
	HandlerType: (*MyServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Do",
			Handler:    _MyServer_Do_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _MyServer_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ws/ws.proto",
}
