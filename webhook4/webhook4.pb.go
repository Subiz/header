// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webhook4/webhook4.proto

/*
Package webhook4 is a generated protocol buffer package.

It is generated from these files:
	webhook4/webhook4.proto

It has these top-level messages:
	Webhook
	WebhookFire
*/
package webhook4

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_Webhook4WebhookReadRequested   Event = 3
	Event_Webhook4WebhookUpserted        Event = 4
	Event_Webhook4WebhookVerifyRequested Event = 5
	Event_Webhook4Requested              Event = 6
	Event_Webhook4ClearBackoffRequested  Event = 7
	Event_Webhook4PurgeQueueRequested    Event = 8
	Event_Webhook4WebhookFire            Event = 11
	Event_Webhook4ShardSend              Event = 9
)

var Event_name = map[int32]string{
	3:  "Webhook4WebhookReadRequested",
	4:  "Webhook4WebhookUpserted",
	5:  "Webhook4WebhookVerifyRequested",
	6:  "Webhook4Requested",
	7:  "Webhook4ClearBackoffRequested",
	8:  "Webhook4PurgeQueueRequested",
	11: "Webhook4WebhookFire",
	9:  "Webhook4ShardSend",
}
var Event_value = map[string]int32{
	"Webhook4WebhookReadRequested":   3,
	"Webhook4WebhookUpserted":        4,
	"Webhook4WebhookVerifyRequested": 5,
	"Webhook4Requested":              6,
	"Webhook4ClearBackoffRequested":  7,
	"Webhook4PurgeQueueRequested":    8,
	"Webhook4WebhookFire":            11,
	"Webhook4ShardSend":              9,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Webhook_State int32

const (
	Webhook_normal   Webhook_State = 0
	Webhook_backoff  Webhook_State = 1
	Webhook_inactive Webhook_State = 2
)

var Webhook_State_name = map[int32]string{
	0: "normal",
	1: "backoff",
	2: "inactive",
}
var Webhook_State_value = map[string]int32{
	"normal":   0,
	"backoff":  1,
	"inactive": 2,
}

func (x Webhook_State) Enum() *Webhook_State {
	p := new(Webhook_State)
	*p = x
	return p
}
func (x Webhook_State) String() string {
	return proto.EnumName(Webhook_State_name, int32(x))
}
func (x *Webhook_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Webhook_State_value, data, "Webhook_State")
	if err != nil {
		return err
	}
	*x = Webhook_State(value)
	return nil
}
func (Webhook_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Webhook struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,12,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ClientId         *string         `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Url              *string         `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Secret           *string         `protobuf:"bytes,4,opt,name=secret" json:"secret,omitempty"`
	Events           []string        `protobuf:"bytes,6,rep,name=events" json:"events,omitempty"`
	State            *string         `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	LastHookAt       *int64          `protobuf:"varint,9,opt,name=last_hook_at,json=lastHookAt" json:"last_hook_at,omitempty"`
	LastHookId       *int64          `protobuf:"varint,10,opt,name=last_hook_id,json=lastHookId" json:"last_hook_id,omitempty"`
	EventsCount      *int64          `protobuf:"varint,13,opt,name=events_count,json=eventsCount" json:"events_count,omitempty"`
	LastHookResponse *string         `protobuf:"bytes,14,opt,name=last_hook_response,json=lastHookResponse" json:"last_hook_response,omitempty"`
	LastHookStatus   *int32          `protobuf:"varint,15,opt,name=last_hook_status,json=lastHookStatus" json:"last_hook_status,omitempty"`
	LastHookPayload  *string         `protobuf:"bytes,16,opt,name=last_hook_payload,json=lastHookPayload" json:"last_hook_payload,omitempty"`
	BackoffsCount    *int64          `protobuf:"varint,17,opt,name=backoffs_count,json=backoffsCount" json:"backoffs_count,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Webhook) Reset()                    { *m = Webhook{} }
func (m *Webhook) String() string            { return proto.CompactTextString(m) }
func (*Webhook) ProtoMessage()               {}
func (*Webhook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Webhook) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Webhook) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Webhook) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Webhook) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Webhook) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Webhook) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Webhook) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Webhook) GetLastHookAt() int64 {
	if m != nil && m.LastHookAt != nil {
		return *m.LastHookAt
	}
	return 0
}

func (m *Webhook) GetLastHookId() int64 {
	if m != nil && m.LastHookId != nil {
		return *m.LastHookId
	}
	return 0
}

func (m *Webhook) GetEventsCount() int64 {
	if m != nil && m.EventsCount != nil {
		return *m.EventsCount
	}
	return 0
}

func (m *Webhook) GetLastHookResponse() string {
	if m != nil && m.LastHookResponse != nil {
		return *m.LastHookResponse
	}
	return ""
}

func (m *Webhook) GetLastHookStatus() int32 {
	if m != nil && m.LastHookStatus != nil {
		return *m.LastHookStatus
	}
	return 0
}

func (m *Webhook) GetLastHookPayload() string {
	if m != nil && m.LastHookPayload != nil {
		return *m.LastHookPayload
	}
	return ""
}

func (m *Webhook) GetBackoffsCount() int64 {
	if m != nil && m.BackoffsCount != nil {
		return *m.BackoffsCount
	}
	return 0
}

type WebhookFire struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	ClientId         *string         `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Payload          []byte          `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *WebhookFire) Reset()                    { *m = WebhookFire{} }
func (m *WebhookFire) String() string            { return proto.CompactTextString(m) }
func (*WebhookFire) ProtoMessage()               {}
func (*WebhookFire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WebhookFire) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *WebhookFire) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *WebhookFire) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Webhook)(nil), "webhook4.Webhook")
	proto.RegisterType((*WebhookFire)(nil), "webhook4.WebhookFire")
	proto.RegisterEnum("webhook4.Event", Event_name, Event_value)
	proto.RegisterEnum("webhook4.Webhook_State", Webhook_State_name, Webhook_State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WebhookService service

type WebhookServiceClient interface {
	Read(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Webhook, error)
	ClearBackoff(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	PurgeQueue(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
}

type webhookServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebhookServiceClient(cc *grpc.ClientConn) WebhookServiceClient {
	return &webhookServiceClient{cc}
}

func (c *webhookServiceClient) Read(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Webhook, error) {
	out := new(Webhook)
	err := grpc.Invoke(ctx, "/webhook4.WebhookService/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookServiceClient) ClearBackoff(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := grpc.Invoke(ctx, "/webhook4.WebhookService/ClearBackoff", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookServiceClient) PurgeQueue(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := grpc.Invoke(ctx, "/webhook4.WebhookService/PurgeQueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WebhookService service

type WebhookServiceServer interface {
	Read(context.Context, *common.Id) (*Webhook, error)
	ClearBackoff(context.Context, *common.Id) (*common.Empty, error)
	PurgeQueue(context.Context, *common.Id) (*common.Empty, error)
}

func RegisterWebhookServiceServer(s *grpc.Server, srv WebhookServiceServer) {
	s.RegisterService(&_WebhookService_serviceDesc, srv)
}

func _WebhookService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhook4.WebhookService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServiceServer).Read(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookService_ClearBackoff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServiceServer).ClearBackoff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhook4.WebhookService/ClearBackoff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServiceServer).ClearBackoff(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookService_PurgeQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServiceServer).PurgeQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhook4.WebhookService/PurgeQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServiceServer).PurgeQueue(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebhookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webhook4.WebhookService",
	HandlerType: (*WebhookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _WebhookService_Read_Handler,
		},
		{
			MethodName: "ClearBackoff",
			Handler:    _WebhookService_ClearBackoff_Handler,
		},
		{
			MethodName: "PurgeQueue",
			Handler:    _WebhookService_PurgeQueue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webhook4/webhook4.proto",
}

func init() { proto.RegisterFile("webhook4/webhook4.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6e, 0xd3, 0x4c,
	0x10, 0xc0, 0xeb, 0xe6, 0xff, 0x24, 0x4d, 0x9d, 0xf9, 0x3e, 0xe8, 0xaa, 0xa5, 0xe0, 0x46, 0x42,
	0x84, 0x82, 0x12, 0xa9, 0xea, 0x0b, 0x40, 0x55, 0x44, 0x6e, 0xc5, 0x11, 0x70, 0x8c, 0x36, 0xde,
	0x69, 0x6b, 0xc5, 0xf1, 0x86, 0xf5, 0xba, 0xb4, 0x1c, 0x79, 0x03, 0x1e, 0x96, 0x3b, 0xda, 0xb5,
	0x17, 0xb7, 0x39, 0x54, 0x9c, 0xbc, 0xf3, 0x9b, 0xdf, 0xee, 0xce, 0x8c, 0x6d, 0xd8, 0xfb, 0x4e,
	0x8b, 0x6b, 0x29, 0x97, 0xa7, 0x13, 0xb7, 0x18, 0xaf, 0x95, 0xd4, 0x12, 0xdb, 0x2e, 0xde, 0x1f,
	0x2f, 0x62, 0xbd, 0xc8, 0xa3, 0x25, 0xe9, 0xb1, 0x54, 0x57, 0x93, 0x2c, 0x5f, 0xc4, 0x3f, 0x26,
	0xd7, 0xc4, 0x05, 0xa9, 0x49, 0x24, 0x57, 0x2b, 0x99, 0x96, 0x8f, 0x62, 0xe7, 0xf0, 0x67, 0x1d,
	0x5a, 0x5f, 0x8b, 0xcd, 0x78, 0x04, 0xb5, 0x48, 0xdf, 0x32, 0x2f, 0xf0, 0x46, 0xdd, 0x93, 0xdd,
	0x71, 0xe9, 0x9d, 0xc9, 0x54, 0xd3, 0xad, 0x0e, 0x4d, 0x0e, 0x0f, 0x01, 0x78, 0x14, 0xc9, 0x3c,
	0xd5, 0xf3, 0x58, 0xb0, 0x5e, 0xe0, 0x8d, 0x3a, 0x61, 0xa7, 0x24, 0x53, 0x81, 0x07, 0xd0, 0x89,
	0x92, 0x98, 0x8a, 0xec, 0xb6, 0xcd, 0xb6, 0x0b, 0x30, 0x15, 0xe8, 0x43, 0x2d, 0x57, 0x09, 0xab,
	0x59, 0x6c, 0x96, 0xf8, 0x14, 0x9a, 0x19, 0x45, 0x8a, 0x34, 0xab, 0x5b, 0x58, 0x46, 0x86, 0xd3,
	0x0d, 0xa5, 0x3a, 0x63, 0xcd, 0xa0, 0x66, 0x78, 0x11, 0xe1, 0xff, 0xd0, 0xc8, 0x34, 0xd7, 0xc4,
	0x5a, 0x56, 0x2f, 0x02, 0x0c, 0xa0, 0x97, 0xf0, 0x4c, 0xcf, 0x4d, 0x0f, 0x73, 0xae, 0x59, 0x27,
	0xf0, 0x46, 0xb5, 0x10, 0x0c, 0xfb, 0x28, 0xe5, 0xf2, 0x9d, 0x7e, 0x68, 0xc4, 0x82, 0xc1, 0x43,
	0x63, 0x2a, 0xf0, 0x08, 0x7a, 0xc5, 0x1d, 0x73, 0xdb, 0x0a, 0xdb, 0xb1, 0x46, 0xb7, 0x60, 0x67,
	0x06, 0xe1, 0x5b, 0xc0, 0xea, 0x10, 0x45, 0xd9, 0x5a, 0xa6, 0x19, 0xb1, 0xbe, 0xad, 0xc4, 0x77,
	0x47, 0x85, 0x25, 0xc7, 0x11, 0xf8, 0x95, 0x6d, 0xea, 0xcc, 0x33, 0xb6, 0x1b, 0x78, 0xa3, 0x46,
	0xd8, 0x77, 0xee, 0xcc, 0x52, 0x3c, 0x86, 0x41, 0x65, 0xae, 0xf9, 0x5d, 0x22, 0xb9, 0x60, 0xbe,
	0x3d, 0x76, 0xd7, 0xa9, 0x17, 0x05, 0xc6, 0x97, 0xd0, 0x5f, 0xf0, 0x68, 0x29, 0x2f, 0x2f, 0x5d,
	0xa1, 0x03, 0x5b, 0xe8, 0x8e, 0xa3, 0xb6, 0xd4, 0xe1, 0x18, 0x1a, 0x33, 0x3b, 0x1a, 0x80, 0x66,
	0x2a, 0xd5, 0x8a, 0x27, 0xfe, 0x16, 0x76, 0xa1, 0x55, 0x5a, 0xbe, 0x87, 0x3d, 0x68, 0xc7, 0x29,
	0x8f, 0x74, 0x7c, 0x43, 0xfe, 0xf6, 0xf0, 0x0a, 0xba, 0xe5, 0x37, 0xf0, 0x21, 0x56, 0xf4, 0x2f,
	0xdf, 0xc1, 0xa3, 0x2f, 0x9a, 0x41, 0xcb, 0xf5, 0x61, 0x5e, 0x76, 0x2f, 0x74, 0xe1, 0xf1, 0x6f,
	0x0f, 0x1a, 0xe7, 0x66, 0xa6, 0x18, 0xc0, 0xb3, 0xf2, 0xca, 0xd3, 0xf2, 0x19, 0x12, 0x17, 0x21,
	0x7d, 0xcb, 0x29, 0xd3, 0x24, 0xfc, 0x1a, 0x1e, 0xc0, 0xde, 0x86, 0xf1, 0x79, 0x9d, 0x91, 0x32,
	0xc9, 0x3a, 0x0e, 0xe1, 0xf9, 0x46, 0xf2, 0x0b, 0xa9, 0xf8, 0xf2, 0xae, 0x3a, 0xa0, 0x81, 0x4f,
	0x60, 0xe0, 0x9c, 0x0a, 0x37, 0xf1, 0x08, 0x0e, 0x1d, 0x3e, 0x4b, 0x88, 0xab, 0xf7, 0xc5, 0x50,
	0x2a, 0xa5, 0x85, 0x2f, 0xe0, 0xc0, 0x29, 0x17, 0xb9, 0xba, 0xa2, 0x4f, 0x39, 0xe5, 0x54, 0x09,
	0x6d, 0xdc, 0x83, 0xff, 0x36, 0xae, 0x37, 0x83, 0xf3, 0xbb, 0xf7, 0xef, 0x9c, 0x5d, 0x73, 0x25,
	0x66, 0x94, 0x0a, 0xbf, 0x73, 0xf2, 0xcb, 0x83, 0x7e, 0xc9, 0x67, 0xa4, 0x6e, 0xe2, 0x88, 0xf0,
	0x15, 0xd4, 0x4d, 0xc7, 0x08, 0x6e, 0xbe, 0x53, 0xb1, 0x3f, 0x18, 0xff, 0xfd, 0xaf, 0x4b, 0x7b,
	0xb8, 0x85, 0x6f, 0xa0, 0x77, 0xbf, 0xce, 0x07, 0x1b, 0x76, 0xdc, 0xfa, 0x7c, 0xb5, 0xd6, 0x77,
	0xc3, 0x2d, 0x7c, 0x0d, 0x50, 0x55, 0xfc, 0xa8, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x18, 0xe3,
	0xff, 0xaf, 0x4d, 0x04, 0x00, 0x00,
}
