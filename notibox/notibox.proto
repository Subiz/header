syntax = "proto3";

// notibox store all notification in subiz
// it DOESN'T take care of pushing notification to user
import "github.com/subiz/header/common/common.proto";

package notibox;

// Notification represent an user's notification
message Notification {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string topic = 10;
	string type = 5; // type
	string data = 8; //json
	int64 created = 6;
	int64 read = 9;
	int64 seen = 12;
	bool view = 11;
}

message Subscription {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	bool trial_expired = 4;
	bool system_maintainance_scheduled_1 = 5;
	bool system_maintainance_scheduled_2 = 6;
	bool system_maintainance_completed = 7;
	bool agent_activated = 8;
	bool conversation_unassigned = 9;
	bool agent_permission_updated = 10;
	bool account_created = 11;
	bool trial_almost_expired = 12;
}

enum Type {
	account_created = 0;
	trial_almost_expired = 2;
	trial_expired = 3;
	system_maintainance_scheduled_1 = 4;
	system_maintainance_scheduled_2 = 5;
	system_maintainance_completed = 6;
	agent_activated = 7;
	conversation_unassigned = 8;
	agent_permission_updated = 9;
}

message AddNotificationRequest {
	common.Context ctx = 1;
	repeated string account_ids = 2;
	repeated string agent_ids = 4;
	Notification notification = 3;
}

message ListRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string anchor = 4;
	int32 limit = 5;
}

message TopicRequest {
	common.Context ctx = 1;
	string account_id = 2;
	string agent_id = 3;
	string topics = 4;
}

message Notifications {
	common.Context ctx = 1;
	Notification notifications = 2;
	string anchor = 3;
}

message Box {
	common.Context ctx = 1;
	string account_id = 2;
	int64 new_count = 3;
	string agent_id = 4;
}

enum Event {
	NotiboxRequested = 0;

	NotiUpsertRequested = 1;
	NotiReadRequested = 2;
	NotiUnreadRequested = 4;
	NotiListRequested = 5;
	NotiDecreaseNewRequested = 6;
	NotiNewReadRequested = 7;

	NotiboxSynced = 101;
}
