// Code generated by protoc-gen-go.
// source: email/email.proto
// DO NOT EDIT!

/*
Package email is a generated protocol buffer package.

It is generated from these files:
	email/email.proto

It has these top-level messages:
	Email
	Empty
*/
package email

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Email struct {
	From        string   `protobuf:"bytes,1,opt,name=From,json=from" json:"From"`
	To          string   `protobuf:"bytes,2,opt,name=To,json=to" json:"To"`
	Subject     string   `protobuf:"bytes,3,opt,name=Subject,json=subject" json:"Subject"`
	Body        string   `protobuf:"bytes,4,opt,name=Body,json=body" json:"Body"`
	JSONData    string   `protobuf:"bytes,5,opt,name=JSONData,json=jSONData" json:"JSONData"`
	AttachLinks []string `protobuf:"bytes,6,rep,name=AttachLinks,json=attachLinks" json:"AttachLinks"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Email) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Email) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Email) GetJSONData() string {
	if m != nil {
		return m.JSONData
	}
	return ""
}

func (m *Email) GetAttachLinks() []string {
	if m != nil {
		return m.AttachLinks
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Email)(nil), "email.Email")
	proto.RegisterType((*Empty)(nil), "email.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EmailSender service

type EmailSenderClient interface {
	Send(ctx context.Context, in *Email, opts ...grpc.CallOption) (*Empty, error)
}

type emailSenderClient struct {
	cc *grpc.ClientConn
}

func NewEmailSenderClient(cc *grpc.ClientConn) EmailSenderClient {
	return &emailSenderClient{cc}
}

func (c *emailSenderClient) Send(ctx context.Context, in *Email, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/email.EmailSender/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EmailSender service

type EmailSenderServer interface {
	Send(context.Context, *Email) (*Empty, error)
}

func RegisterEmailSenderServer(s *grpc.Server, srv EmailSenderServer) {
	s.RegisterService(&_EmailSender_serviceDesc, srv)
}

func _EmailSender_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailSenderServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/email.EmailSender/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailSenderServer).Send(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "email.EmailSender",
	HandlerType: (*EmailSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _EmailSender_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email/email.proto",
}

func init() { proto.RegisterFile("email/email.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xcd, 0x4d, 0xcc,
	0xcc, 0xd1, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x8e, 0xd2, 0x74,
	0x46, 0x2e, 0x56, 0x57, 0x10, 0x4b, 0x48, 0x88, 0x8b, 0xc5, 0xad, 0x28, 0x3f, 0x57, 0x82, 0x51,
	0x81, 0x51, 0x83, 0x33, 0x88, 0x25, 0xad, 0x28, 0x3f, 0x57, 0x88, 0x8f, 0x8b, 0x29, 0x24, 0x5f,
	0x82, 0x09, 0x2c, 0xc2, 0x54, 0x92, 0x2f, 0x24, 0xc1, 0xc5, 0x1e, 0x5c, 0x9a, 0x94, 0x95, 0x9a,
	0x5c, 0x22, 0xc1, 0x0c, 0x16, 0x64, 0x2f, 0x86, 0x70, 0x41, 0xba, 0x9d, 0xf2, 0x53, 0x2a, 0x25,
	0x58, 0x20, 0xba, 0x93, 0xf2, 0x53, 0x2a, 0x85, 0xa4, 0xb8, 0x38, 0xbc, 0x82, 0xfd, 0xfd, 0x5c,
	0x12, 0x4b, 0x12, 0x25, 0x58, 0xc1, 0xe2, 0x1c, 0x59, 0x50, 0xbe, 0x90, 0x02, 0x17, 0xb7, 0x63,
	0x49, 0x49, 0x62, 0x72, 0x86, 0x4f, 0x66, 0x5e, 0x76, 0xb1, 0x04, 0x9b, 0x02, 0xb3, 0x06, 0x67,
	0x10, 0x77, 0x22, 0x42, 0x48, 0x89, 0x1d, 0xe4, 0xb0, 0x82, 0x92, 0x4a, 0x23, 0x63, 0x2e, 0x6e,
	0xb0, 0x0b, 0x83, 0x53, 0xf3, 0x52, 0x52, 0x8b, 0x84, 0x54, 0xb8, 0x58, 0x40, 0x2c, 0x21, 0x1e,
	0x3d, 0x88, 0x77, 0xc0, 0x72, 0x52, 0x08, 0x5e, 0x41, 0x49, 0xa5, 0x12, 0x43, 0x12, 0x1b, 0xd8,
	0x97, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0xd2, 0x2f, 0x05, 0xfa, 0x00, 0x00, 0x00,
}
