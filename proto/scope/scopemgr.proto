syntax = "proto3";

package scope;

message ScopeCreateResponse {	
	string id = 3;
}

enum ErrorCode {
	no_error = 0;
	resource_notfoud = 1;
	invalid_request = 2;
	unauthorized = 3;
	internal_error = 4;
}

message Method {
	// trigger
	bool UpdateTrigger = 50;
	bool DeleteTrigger = 51;
	bool CreateTrigger = 52;
	bool ReadTrigger = 53;
	bool ListTrigger = 54;
	bool ReadAllTrigger = 55;
	bool ListAllTrigger = 56;
	bool UpdateAllTrigger = 57;
	bool DeleteAllTrigger = 58;
	bool CreateAllTrigger = 59;

	// agents
	bool InviteAgent = 70;
	bool UpdateOthersAccAgentPermission = 71;
	bool UpdateOthersAccAgentProfile = 72;
	bool UpdateAccAgentProfile = 73;
	bool UpdateAccAgentAvailableState = 74;

	bool UpdateOthersAccAgentAvailableState = 76;
	
	bool ReateOthersAccAgent = 77;
	bool ReadAccAgentProfile = 78;
	bool ReadOthersAccAgentProfile = 79;
	bool ReadOthersAccAgentPermission = 80;
	bool ReadAccAgentPermission = 81;
	bool ReadAccAgentHistory = 82;
	bool ReadAccAgentRate = 83;
	bool ReadAccAgentAvaialbeState = 84;

	bool ListAgentClient = 85;
	bool UpdateAgentProfile = 86;
	bool CloseAgentProfile = 87;
	bool JoinAccount = 88;
	bool RegisterAgentClient = 89;
	bool RevokeAgentClient = 90;
	bool DeleteAgent = 91;
	bool DeleteOthersAgent = 92;

	// clients
	bool ReadClient = 101;
	bool ListClient = 102;
	bool UpdateClientInfo = 103;
	bool PublishClient = 104;
	bool RegenerateClientSecret = 105;
	bool VerifyClient = 106;
	bool DeleteClient = 107;

	// acounts
	bool ReadAccount = 120;
	bool ListAccountClient = 121;
	bool UpdateAccountInfo = 122;
	bool UpdateAccountBilling = 123;
	bool CloseAccount = 124;
	bool ViewAccountReport = 125;
	bool RegistryAccountClient = 126;
	bool RevokeAccountClient = 127;
	bool UpdateAccountType = 128;
	bool DeleteAccount = 129;
	bool OpenAccount = 130;
	
}

message Scope {
	string Id = 1;
	string Name = 2;
	string LogoUrl = 3;
	string Title = 4;
	string Description = 5;
	repeated string Method = 6;
}

message IdRequest {
	string Id = 1;
}

message IdsRequest {
	repeated string Ids = 1;
}

message ScopesResponse {
	repeated Scope Scopes = 1;
}

message EmptyResponse {}

message Empty {}

service ScopeMgt {
	rpc Create(Scope) returns (ScopeCreateResponse) {}
	rpc Read(IdRequest) returns (Scope) {}
	rpc BatchRead(IdsRequest) returns (ScopesResponse) {}
	rpc List(Empty) returns (ScopesResponse) {}
	rpc Delete(IdRequest) returns (EmptyResponse) {}
	rpc Update(Scope) returns (EmptyResponse) {}
}