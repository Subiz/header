// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation/conversation.proto

/*
Package conversation is a generated protocol buffer package.

It is generated from these files:
	conversation/conversation.proto

It has these top-level messages:
	Id
	AgentId
	AgentInGroup
	AgentStatus
	Account
	Bool
	Limit
	Rule
	Condition
	Route
	RouteResult
	GroupDeleteEvent
	GroupUpdateEvent
	AgentDeletedEvent
	AgentUpdateEvent
	Ids
	Conversation
	Previews
	Preview
	Attachment
	ChatEvents
	ChatEvent
	ChatRequest
	Conversations
	ChatStart
	AcceptRequest
	ListUnassignChatsRequest
	UnassignChat
	Bools
	ListUsersUnreadRequest
	Unread
	UsersUnread
	ListChatEventRequest
	ListChatsByUserRequest
	OEChatDropped
	OEChatAccepted
	OEChatStarted
	EvChatResult
	EvChatUserInfoRequested
	FileTemplate
	QuickRepliesTemplate
	GenericElement
	GenericTemplate
	Button
	UrlButton
	PostbackButton
	CallButton
	LoginButton
	EventButton
	SurveyForm
	RateFormTemplate
	RequestState
*/
package conversation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import event "bitbucket.org/subiz/servicespec/proto/event"
import common "bitbucket.org/subiz/servicespec/proto/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JoinOperator int32

const (
	JoinOperator_none JoinOperator = 0
	JoinOperator_and  JoinOperator = 1
	JoinOperator_or   JoinOperator = 2
)

var JoinOperator_name = map[int32]string{
	0: "none",
	1: "and",
	2: "or",
}
var JoinOperator_value = map[string]int32{
	"none": 0,
	"and":  1,
	"or":   2,
}

func (x JoinOperator) Enum() *JoinOperator {
	p := new(JoinOperator)
	*p = x
	return p
}
func (x JoinOperator) String() string {
	return proto.EnumName(JoinOperator_name, int32(x))
}
func (x *JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JoinOperator_value, data, "JoinOperator")
	if err != nil {
		return err
	}
	*x = JoinOperator(value)
	return nil
}
func (JoinOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AssignStrategy int32

const (
	AssignStrategy_ALLAGENTS           AssignStrategy = 0
	AssignStrategy_AGENTGROUP          AssignStrategy = 2
	AssignStrategy_AGENTS              AssignStrategy = 3
	AssignStrategy_MOSTRECENT          AssignStrategy = 4
	AssignStrategy_ROUNDROBINALLAGENTS AssignStrategy = 5
	AssignStrategy_ROUNDROBINAGENTS    AssignStrategy = 6
)

var AssignStrategy_name = map[int32]string{
	0: "ALLAGENTS",
	2: "AGENTGROUP",
	3: "AGENTS",
	4: "MOSTRECENT",
	5: "ROUNDROBINALLAGENTS",
	6: "ROUNDROBINAGENTS",
}
var AssignStrategy_value = map[string]int32{
	"ALLAGENTS":           0,
	"AGENTGROUP":          2,
	"AGENTS":              3,
	"MOSTRECENT":          4,
	"ROUNDROBINALLAGENTS": 5,
	"ROUNDROBINAGENTS":    6,
}

func (x AssignStrategy) Enum() *AssignStrategy {
	p := new(AssignStrategy)
	*p = x
	return p
}
func (x AssignStrategy) String() string {
	return proto.EnumName(AssignStrategy_name, int32(x))
}
func (x *AssignStrategy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssignStrategy_value, data, "AssignStrategy")
	if err != nil {
		return err
	}
	*x = AssignStrategy(value)
	return nil
}
func (AssignStrategy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ConversationState int32

const (
	ConversationState_conversation_none ConversationState = 0
	ConversationState_assigning         ConversationState = 1
	ConversationState_unassigned        ConversationState = 2
	ConversationState_opened            ConversationState = 3
	ConversationState_closed            ConversationState = 4
)

var ConversationState_name = map[int32]string{
	0: "conversation_none",
	1: "assigning",
	2: "unassigned",
	3: "opened",
	4: "closed",
}
var ConversationState_value = map[string]int32{
	"conversation_none": 0,
	"assigning":         1,
	"unassigned":        2,
	"opened":            3,
	"closed":            4,
}

func (x ConversationState) Enum() *ConversationState {
	p := new(ConversationState)
	*p = x
	return p
}
func (x ConversationState) String() string {
	return proto.EnumName(ConversationState_name, int32(x))
}
func (x *ConversationState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConversationState_value, data, "ConversationState")
	if err != nil {
		return err
	}
	*x = ConversationState(value)
	return nil
}
func (ConversationState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// ChateEventType
type ChatEventType int32

const (
	ChatEventType_NONE    ChatEventType = 0
	ChatEventType_MESSAGE ChatEventType = 1
	ChatEventType_CLOSED  ChatEventType = 3
	ChatEventType_ADD     ChatEventType = 4
	// JOINED = 4; // SenderId: senderid || could be null, Content: joinner id, Attachmemts: null
	ChatEventType_LEFT ChatEventType = 5
	// 	SEEN = 6; // Content = event id, attachment = null
	ChatEventType_RATED      ChatEventType = 7
	ChatEventType_INPUT      ChatEventType = 8
	ChatEventType_TAG        ChatEventType = 9
	ChatEventType_UNTAG      ChatEventType = 10
	ChatEventType_TRANSFER   ChatEventType = 11
	ChatEventType_ACK        ChatEventType = 12
	ChatEventType_TYPING     ChatEventType = 13
	ChatEventType_STOPTYPING ChatEventType = 14
)

var ChatEventType_name = map[int32]string{
	0:  "NONE",
	1:  "MESSAGE",
	3:  "CLOSED",
	4:  "ADD",
	5:  "LEFT",
	7:  "RATED",
	8:  "INPUT",
	9:  "TAG",
	10: "UNTAG",
	11: "TRANSFER",
	12: "ACK",
	13: "TYPING",
	14: "STOPTYPING",
}
var ChatEventType_value = map[string]int32{
	"NONE":       0,
	"MESSAGE":    1,
	"CLOSED":     3,
	"ADD":        4,
	"LEFT":       5,
	"RATED":      7,
	"INPUT":      8,
	"TAG":        9,
	"UNTAG":      10,
	"TRANSFER":   11,
	"ACK":        12,
	"TYPING":     13,
	"STOPTYPING": 14,
}

func (x ChatEventType) Enum() *ChatEventType {
	p := new(ChatEventType)
	*p = x
	return p
}
func (x ChatEventType) String() string {
	return proto.EnumName(ChatEventType_name, int32(x))
}
func (x *ChatEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatEventType_value, data, "ChatEventType")
	if err != nil {
		return err
	}
	*x = ChatEventType(value)
	return nil
}
func (ChatEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeviceType int32

const (
	DeviceType_UNKNOWN DeviceType = 0
	DeviceType_MOBILE  DeviceType = 1
	DeviceType_TABLET  DeviceType = 2
	DeviceType_DESKTOP DeviceType = 3
)

var DeviceType_name = map[int32]string{
	0: "UNKNOWN",
	1: "MOBILE",
	2: "TABLET",
	3: "DESKTOP",
}
var DeviceType_value = map[string]int32{
	"UNKNOWN": 0,
	"MOBILE":  1,
	"TABLET":  2,
	"DESKTOP": 3,
}

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}
func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (x *DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceType_value, data, "DeviceType")
	if err != nil {
		return err
	}
	*x = DeviceType(value)
	return nil
}
func (DeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Event int32

const (
	Event_ConversationAssigned            Event = 0
	Event_ConversationWaiting             Event = 2
	Event_ConversationStartRequested      Event = 3
	Event_ConversationAccepted            Event = 4
	Event_ConversationDropped             Event = 5
	Event_ConversationEventCreated        Event = 6
	Event_ConversationJoinRequested       Event = 7
	Event_ConversationMessageRequested    Event = 8
	Event_ConversationLeaveRequested      Event = 9
	Event_ConversationCloseRequested      Event = 10
	Event_ConversationTagRequested        Event = 11
	Event_ConversationUntagRequested      Event = 12
	Event_ConversationUpdateRuleRequested Event = 20
	Event_ConversationCreateRuleRequested Event = 21
	Event_ConversationDeleteRuleRequested Event = 22
	Event_ConversationReadRuleRequested   Event = 23
	Event_ConversationListRuleRequested   Event = 24
	Event_ChatUserInfoRequested           Event = 18
	Event_ChatUserInfoReply               Event = 19
	Event_ConversationRequested           Event = 50
	Event_ConversationUserRequestReply    Event = 51
	Event_ConversationLimitUpdated        Event = 52
)

var Event_name = map[int32]string{
	0:  "ConversationAssigned",
	2:  "ConversationWaiting",
	3:  "ConversationStartRequested",
	4:  "ConversationAccepted",
	5:  "ConversationDropped",
	6:  "ConversationEventCreated",
	7:  "ConversationJoinRequested",
	8:  "ConversationMessageRequested",
	9:  "ConversationLeaveRequested",
	10: "ConversationCloseRequested",
	11: "ConversationTagRequested",
	12: "ConversationUntagRequested",
	20: "ConversationUpdateRuleRequested",
	21: "ConversationCreateRuleRequested",
	22: "ConversationDeleteRuleRequested",
	23: "ConversationReadRuleRequested",
	24: "ConversationListRuleRequested",
	18: "ChatUserInfoRequested",
	19: "ChatUserInfoReply",
	50: "ConversationRequested",
	51: "ConversationUserRequestReply",
	52: "ConversationLimitUpdated",
}
var Event_value = map[string]int32{
	"ConversationAssigned":            0,
	"ConversationWaiting":             2,
	"ConversationStartRequested":      3,
	"ConversationAccepted":            4,
	"ConversationDropped":             5,
	"ConversationEventCreated":        6,
	"ConversationJoinRequested":       7,
	"ConversationMessageRequested":    8,
	"ConversationLeaveRequested":      9,
	"ConversationCloseRequested":      10,
	"ConversationTagRequested":        11,
	"ConversationUntagRequested":      12,
	"ConversationUpdateRuleRequested": 20,
	"ConversationCreateRuleRequested": 21,
	"ConversationDeleteRuleRequested": 22,
	"ConversationReadRuleRequested":   23,
	"ConversationListRuleRequested":   24,
	"ChatUserInfoRequested":           18,
	"ChatUserInfoReply":               19,
	"ConversationRequested":           50,
	"ConversationUserRequestReply":    51,
	"ConversationLimitUpdated":        52,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Id struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Id) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Id) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type AgentId struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentId) Reset()                    { *m = AgentId{} }
func (m *AgentId) String() string            { return proto.CompactTextString(m) }
func (*AgentId) ProtoMessage()               {}
func (*AgentId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AgentId) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentId) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type AgentInGroup struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	GroupId          *string `protobuf:"bytes,3,opt,name=GroupId" json:"GroupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentInGroup) Reset()                    { *m = AgentInGroup{} }
func (m *AgentInGroup) String() string            { return proto.CompactTextString(m) }
func (*AgentInGroup) ProtoMessage()               {}
func (*AgentInGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AgentInGroup) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentInGroup) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentInGroup) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

type AgentStatus struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	IsActive         *bool   `protobuf:"varint,3,opt,name=IsActive" json:"IsActive,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentStatus) Reset()                    { *m = AgentStatus{} }
func (m *AgentStatus) String() string            { return proto.CompactTextString(m) }
func (*AgentStatus) ProtoMessage()               {}
func (*AgentStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AgentStatus) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentStatus) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentStatus) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

type Account struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=Id" json:"Id,omitempty"`
	MaxRules         *int32          `protobuf:"varint,3,opt,name=MaxRules" json:"MaxRules,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Account) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Account) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Account) GetMaxRules() int32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Bool struct {
	Bool             *bool  `protobuf:"varint,1,opt,name=Bool" json:"Bool,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Bool) Reset()                    { *m = Bool{} }
func (m *Bool) String() string            { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()               {}
func (*Bool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Bool) GetBool() bool {
	if m != nil && m.Bool != nil {
		return *m.Bool
	}
	return false
}

type Limit struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxRules         *int32          `protobuf:"varint,7,opt,name=max_rules,json=maxRules" json:"max_rules,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Limit) Reset()                    { *m = Limit{} }
func (m *Limit) String() string            { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()               {}
func (*Limit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Limit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Limit) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Limit) GetMaxRules() int32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Rule struct {
	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	// @inject_tag: name:"ip"
	Id        *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// optional string priority = 4;
	Strategy         *AssignStrategy `protobuf:"varint,5,opt,name=strategy,enum=conversation.AssignStrategy" json:"strategy,omitempty"`
	AssignTos        []string        `protobuf:"bytes,6,rep,name=assign_tos,json=assignTos" json:"assign_tos,omitempty"`
	Conditions       []*Condition    `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty"`
	Enabled          *bool           `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,9,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	PrevId           *string         `protobuf:"bytes,10,opt,name=prev_id,json=prevId" json:"prev_id,omitempty"`
	NextId           *string         `protobuf:"bytes,11,opt,name=next_id,json=nextId" json:"next_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Rule) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Rule) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Rule) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Rule) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *Rule) GetAssignTos() []string {
	if m != nil {
		return m.AssignTos
	}
	return nil
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Rule) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Rule) GetPrevId() string {
	if m != nil && m.PrevId != nil {
		return *m.PrevId
	}
	return ""
}

func (m *Rule) GetNextId() string {
	if m != nil && m.NextId != nil {
		return *m.NextId
	}
	return ""
}

type Condition struct {
	Join             *JoinOperator `protobuf:"varint,1,opt,name=join,enum=conversation.JoinOperator" json:"join,omitempty"`
	Key              *string       `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Operator         *string       `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value            *string       `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Condition) GetJoin() JoinOperator {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return JoinOperator_none
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Route struct {
	Rules            []*Rule `protobuf:"bytes,1,rep,name=Rules" json:"Rules,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Route) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type RouteResult struct {
	RuleId           *string         `protobuf:"bytes,1,opt,name=RuleId" json:"RuleId,omitempty"`
	Strategy         *AssignStrategy `protobuf:"varint,3,opt,name=Strategy,enum=conversation.AssignStrategy" json:"Strategy,omitempty"`
	AgentIds         []string        `protobuf:"bytes,4,rep,name=AgentIds" json:"AgentIds,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RouteResult) Reset()                    { *m = RouteResult{} }
func (m *RouteResult) String() string            { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()               {}
func (*RouteResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RouteResult) GetRuleId() string {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return ""
}

func (m *RouteResult) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *RouteResult) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

type GroupDeleteEvent struct {
	GroupId          *string `protobuf:"bytes,1,opt,name=GroupId" json:"GroupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupDeleteEvent) Reset()                    { *m = GroupDeleteEvent{} }
func (m *GroupDeleteEvent) String() string            { return proto.CompactTextString(m) }
func (*GroupDeleteEvent) ProtoMessage()               {}
func (*GroupDeleteEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GroupDeleteEvent) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

type GroupUpdateEvent struct {
	GroupId          *string  `protobuf:"bytes,1,opt,name=GroupId" json:"GroupId,omitempty"`
	MemberIds        []string `protobuf:"bytes,2,rep,name=MemberIds" json:"MemberIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupUpdateEvent) Reset()                    { *m = GroupUpdateEvent{} }
func (m *GroupUpdateEvent) String() string            { return proto.CompactTextString(m) }
func (*GroupUpdateEvent) ProtoMessage()               {}
func (*GroupUpdateEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GroupUpdateEvent) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *GroupUpdateEvent) GetMemberIds() []string {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

type AgentDeletedEvent struct {
	AgentId          *string `protobuf:"bytes,1,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentDeletedEvent) Reset()                    { *m = AgentDeletedEvent{} }
func (m *AgentDeletedEvent) String() string            { return proto.CompactTextString(m) }
func (*AgentDeletedEvent) ProtoMessage()               {}
func (*AgentDeletedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AgentDeletedEvent) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type AgentUpdateEvent struct {
	AgentId          *string `protobuf:"bytes,1,opt,name=AgentId" json:"AgentId,omitempty"`
	IsActive         *bool   `protobuf:"varint,2,opt,name=IsActive" json:"IsActive,omitempty"`
	IsConfirmed      *bool   `protobuf:"varint,3,opt,name=IsConfirmed" json:"IsConfirmed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentUpdateEvent) Reset()                    { *m = AgentUpdateEvent{} }
func (m *AgentUpdateEvent) String() string            { return proto.CompactTextString(m) }
func (*AgentUpdateEvent) ProtoMessage()               {}
func (*AgentUpdateEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AgentUpdateEvent) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentUpdateEvent) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *AgentUpdateEvent) GetIsConfirmed() bool {
	if m != nil && m.IsConfirmed != nil {
		return *m.IsConfirmed
	}
	return false
}

type Ids struct {
	Ids              []string `protobuf:"bytes,1,rep,name=Ids" json:"Ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Ids) Reset()                    { *m = Ids{} }
func (m *Ids) String() string            { return proto.CompactTextString(m) }
func (*Ids) ProtoMessage()               {}
func (*Ids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Ids) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// get number of unread message
type Conversation struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Creation time
	CreatedTime *int64 `protobuf:"varint,4,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	// Last active time
	LastActiveTime *int64 `protobuf:"varint,5,opt,name=last_active_time,json=lastActiveTime" json:"last_active_time,omitempty"`
	// Closed time
	ClosedTime       *int64             `protobuf:"varint,6,opt,name=closed_time,json=closedTime" json:"closed_time,omitempty"`
	Users            []*event.User      `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
	ChannelId        *string            `protobuf:"bytes,9,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Tags             []string           `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	State            *ConversationState `protobuf:"varint,11,opt,name=state,enum=conversation.ConversationState" json:"state,omitempty"`
	RequestId        *string            `protobuf:"bytes,13,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Conversation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Conversation) GetLastActiveTime() int64 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

func (m *Conversation) GetClosedTime() int64 {
	if m != nil && m.ClosedTime != nil {
		return *m.ClosedTime
	}
	return 0
}

func (m *Conversation) GetUsers() []*event.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Conversation) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Conversation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Conversation) GetState() ConversationState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ConversationState_conversation_none
}

func (m *Conversation) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

type Previews struct {
	Previews         []*Preview `protobuf:"bytes,1,rep,name=previews" json:"previews,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Previews) Reset()                    { *m = Previews{} }
func (m *Previews) String() string            { return proto.CompactTextString(m) }
func (*Previews) ProtoMessage()               {}
func (*Previews) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Previews) GetPreviews() []*Preview {
	if m != nil {
		return m.Previews
	}
	return nil
}

// ChatPreview is a chat header with some events in it
type Preview struct {
	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	Events       []*ChatEvent  `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
	// Unread number of unread event
	Unread           *int64 `protobuf:"varint,3,opt,name=Unread" json:"Unread,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Preview) Reset()                    { *m = Preview{} }
func (m *Preview) String() string            { return proto.CompactTextString(m) }
func (*Preview) ProtoMessage()               {}
func (*Preview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Preview) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Preview) GetEvents() []*ChatEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Preview) GetUnread() int64 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type Attachment struct {
	// Type show type of attachment
	// Value:
	//   Template
	//     - file
	//       + video
	//       + audio
	//       + image
	//     - preview (preview for link)
	//     - content
	//     - template
	//
	//       + receipt, ticket, ...
	//     - quick_replies
	//       + ask_form
	//       + generic_template
	//       + list_template
	//   Input control
	//     - button           -> send list of event to chat
	//     - url
	//     - postback_button (single button)
	//     - textbox           -> contains value
	//     - ratebox            -> rate the chat (like 5 buttons but have beautiful display)
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Payload          *string `protobuf:"bytes,2,opt,name=Payload" json:"Payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Attachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Attachment) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

type ChatEvents struct {
	Events           []*ChatEvent `protobuf:"bytes,1,rep,name=Events" json:"Events,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ChatEvents) Reset()                    { *m = ChatEvents{} }
func (m *ChatEvents) String() string            { return proto.CompactTextString(m) }
func (*ChatEvents) ProtoMessage()               {}
func (*ChatEvents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ChatEvents) GetEvents() []*ChatEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type ChatEvent struct {
	// ID of chat evet
	Id *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	// Type indicates type of chat event
	Type *ChatEventType `protobuf:"varint,2,opt,name=Type,enum=conversation.ChatEventType" json:"Type,omitempty"`
	// AccountId refer to ID of account
	AccountId *string `protobuf:"bytes,4,opt,name=AccountId" json:"AccountId,omitempty"`
	// ChatId refer to ID of chat which contains this chat event
	ChatId *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	// CreatedTime is a RFC3339 string, tell when was event sent
	CreatedTime *string `protobuf:"bytes,5,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	// SenderId refer to who has sent the event, could be Agent, User or System
	SenderId *string `protobuf:"bytes,6,opt,name=SenderId" json:"SenderId,omitempty"`
	// SenderType indicate type of sender
	SenderType *event.UserType `protobuf:"varint,7,opt,name=SenderType,enum=event.UserType" json:"SenderType,omitempty"`
	// Content could be raw text, could be JSON data based on type
	Text *string `protobuf:"bytes,8,opt,name=Text" json:"Text,omitempty"`
	// Could be "", "raw" or "markdown", "html"
	Format           *string       `protobuf:"bytes,9,opt,name=Format" json:"Format,omitempty"`
	Attachments      []*Attachment `protobuf:"bytes,10,rep,name=Attachments" json:"Attachments,omitempty"`
	State            *string       `protobuf:"bytes,11,opt,name=State" json:"State,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ChatEvent) Reset()                    { *m = ChatEvent{} }
func (m *ChatEvent) String() string            { return proto.CompactTextString(m) }
func (*ChatEvent) ProtoMessage()               {}
func (*ChatEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ChatEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ChatEvent) GetType() ChatEventType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ChatEventType_NONE
}

func (m *ChatEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatEvent) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *ChatEvent) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

func (m *ChatEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *ChatEvent) GetSenderType() event.UserType {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return event.UserType_NONE
}

func (m *ChatEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *ChatEvent) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *ChatEvent) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *ChatEvent) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

type ChatRequest struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelId        *string         `protobuf:"bytes,4,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	MessageTo        *string         `protobuf:"bytes,5,opt,name=message_to,json=messageTo" json:"message_to,omitempty"`
	PageUrl          *string         `protobuf:"bytes,6,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	PageTitle        *string         `protobuf:"bytes,7,opt,name=page_title,json=pageTitle" json:"page_title,omitempty"`
	Message          *string         `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	BrowserLanguage  *string         `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	Language         *string         `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	DeviceType       *DeviceType     `protobuf:"varint,11,opt,name=device_type,json=deviceType,enum=conversation.DeviceType" json:"device_type,omitempty"`
	UserId           *string         `protobuf:"bytes,12,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,13,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	ConversationId   *string         `protobuf:"bytes,14,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Ip               *string         `protobuf:"bytes,15,opt,name=ip" json:"ip,omitempty"`
	Country          *string         `protobuf:"bytes,16,opt,name=country" json:"country,omitempty"`
	CountryCode      *string         `protobuf:"bytes,17,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	City             *string         `protobuf:"bytes,18,opt,name=city" json:"city,omitempty"`
	TimeZone         *string         `protobuf:"bytes,19,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ChatRequest) Reset()                    { *m = ChatRequest{} }
func (m *ChatRequest) String() string            { return proto.CompactTextString(m) }
func (*ChatRequest) ProtoMessage()               {}
func (*ChatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ChatRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ChatRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ChatRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ChatRequest) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *ChatRequest) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *ChatRequest) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *ChatRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ChatRequest) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *ChatRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *ChatRequest) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *ChatRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ChatRequest) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *ChatRequest) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *ChatRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ChatRequest) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *ChatRequest) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *ChatRequest) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *ChatRequest) GetTimeZone() string {
	if m != nil && m.TimeZone != nil {
		return *m.TimeZone
	}
	return ""
}

type Conversations struct {
	Conversations    []*Conversation `protobuf:"bytes,1,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Conversations) Reset()                    { *m = Conversations{} }
func (m *Conversations) String() string            { return proto.CompactTextString(m) }
func (*Conversations) ProtoMessage()               {}
func (*Conversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Conversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type ChatStart struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId           *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ChannelId        *string         `protobuf:"bytes,5,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ChatStart) Reset()                    { *m = ChatStart{} }
func (m *ChatStart) String() string            { return proto.CompactTextString(m) }
func (*ChatStart) ProtoMessage()               {}
func (*ChatStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ChatStart) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ChatStart) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatStart) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ChatStart) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ChatStart) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type AcceptRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AcceptRequest) Reset()                    { *m = AcceptRequest{} }
func (m *AcceptRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptRequest) ProtoMessage()               {}
func (*AcceptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *AcceptRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AcceptRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AcceptRequest) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

type ListUnassignChatsRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	StartId          *string `protobuf:"bytes,2,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,3,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListUnassignChatsRequest) Reset()                    { *m = ListUnassignChatsRequest{} }
func (m *ListUnassignChatsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUnassignChatsRequest) ProtoMessage()               {}
func (*ListUnassignChatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ListUnassignChatsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListUnassignChatsRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListUnassignChatsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type UnassignChat struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	IsAssigned       *bool    `protobuf:"varint,2,opt,name=IsAssigned" json:"IsAssigned,omitempty"`
	Message          *string  `protobuf:"bytes,3,opt,name=Message" json:"Message,omitempty"`
	Ip               *string  `protobuf:"bytes,4,opt,name=Ip" json:"Ip,omitempty"`
	Name             *string  `protobuf:"bytes,5,opt,name=Name" json:"Name,omitempty"`
	Emails           []string `protobuf:"bytes,6,rep,name=Emails" json:"Emails,omitempty"`
	Phones           []string `protobuf:"bytes,7,rep,name=Phones" json:"Phones,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UnassignChat) Reset()                    { *m = UnassignChat{} }
func (m *UnassignChat) String() string            { return proto.CompactTextString(m) }
func (*UnassignChat) ProtoMessage()               {}
func (*UnassignChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *UnassignChat) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UnassignChat) GetIsAssigned() bool {
	if m != nil && m.IsAssigned != nil {
		return *m.IsAssigned
	}
	return false
}

func (m *UnassignChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UnassignChat) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *UnassignChat) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UnassignChat) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *UnassignChat) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

type Bools struct {
	Bools            []bool `protobuf:"varint,1,rep,name=Bools" json:"Bools,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Bools) Reset()                    { *m = Bools{} }
func (m *Bools) String() string            { return proto.CompactTextString(m) }
func (*Bools) ProtoMessage()               {}
func (*Bools) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *Bools) GetBools() []bool {
	if m != nil {
		return m.Bools
	}
	return nil
}

type ListUsersUnreadRequest struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string  `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	UserIds          []string `protobuf:"bytes,3,rep,name=UserIds" json:"UserIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ListUsersUnreadRequest) Reset()                    { *m = ListUsersUnreadRequest{} }
func (m *ListUsersUnreadRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersUnreadRequest) ProtoMessage()               {}
func (*ListUsersUnreadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ListUsersUnreadRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type Unread struct {
	UserId           *string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Unread           *int32  `protobuf:"varint,2,opt,name=Unread" json:"Unread,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Unread) Reset()                    { *m = Unread{} }
func (m *Unread) String() string            { return proto.CompactTextString(m) }
func (*Unread) ProtoMessage()               {}
func (*Unread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *Unread) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Unread) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type UsersUnread struct {
	Unreads          []*Unread `protobuf:"bytes,1,rep,name=Unreads" json:"Unreads,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UsersUnread) Reset()                    { *m = UsersUnread{} }
func (m *UsersUnread) String() string            { return proto.CompactTextString(m) }
func (*UsersUnread) ProtoMessage()               {}
func (*UsersUnread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *UsersUnread) GetUnreads() []*Unread {
	if m != nil {
		return m.Unreads
	}
	return nil
}

type ListChatEventRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	StartId          *string `protobuf:"bytes,3,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,4,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListChatEventRequest) Reset()                    { *m = ListChatEventRequest{} }
func (m *ListChatEventRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChatEventRequest) ProtoMessage()               {}
func (*ListChatEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ListChatEventRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListChatEventRequest) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *ListChatEventRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListChatEventRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListChatsByUserRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string `protobuf:"bytes,2,opt,name=ChannelId" json:"ChannelId,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=UserId" json:"UserId,omitempty"`
	StartId          *string `protobuf:"bytes,4,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,5,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListChatsByUserRequest) Reset()                    { *m = ListChatsByUserRequest{} }
func (m *ListChatsByUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChatsByUserRequest) ProtoMessage()               {}
func (*ListChatsByUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ListChatsByUserRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type OEChatDropped struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	ChannelId        *string `protobuf:"bytes,3,opt,name=ChannelId" json:"ChannelId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatDropped) Reset()                    { *m = OEChatDropped{} }
func (m *OEChatDropped) String() string            { return proto.CompactTextString(m) }
func (*OEChatDropped) ProtoMessage()               {}
func (*OEChatDropped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *OEChatDropped) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatDropped) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatDropped) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type OEChatAccepted struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	AgentId          *string `protobuf:"bytes,4,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatAccepted) Reset()                    { *m = OEChatAccepted{} }
func (m *OEChatAccepted) String() string            { return proto.CompactTextString(m) }
func (*OEChatAccepted) ProtoMessage()               {}
func (*OEChatAccepted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *OEChatAccepted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatAccepted) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatAccepted) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type OEChatStarted struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	ChannelId        *string `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	CreatedTime      *string `protobuf:"bytes,5,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatStarted) Reset()                    { *m = OEChatStarted{} }
func (m *OEChatStarted) String() string            { return proto.CompactTextString(m) }
func (*OEChatStarted) ProtoMessage()               {}
func (*OEChatStarted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *OEChatStarted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatStarted) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatStarted) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *OEChatStarted) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type EvChatResult struct {
	RequestId        *string `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	Ok               *bool   `protobuf:"varint,2,opt,name=Ok" json:"Ok,omitempty"`
	Code             *int32  `protobuf:"varint,3,opt,name=Code" json:"Code,omitempty"`
	CreatedTime      *string `protobuf:"bytes,4,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	Description      *string `protobuf:"bytes,5,opt,name=Description" json:"Description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EvChatResult) Reset()                    { *m = EvChatResult{} }
func (m *EvChatResult) String() string            { return proto.CompactTextString(m) }
func (*EvChatResult) ProtoMessage()               {}
func (*EvChatResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *EvChatResult) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatResult) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *EvChatResult) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *EvChatResult) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

func (m *EvChatResult) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type EvChatUserInfoRequested struct {
	RequestId        *string     `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	ChatId           *string     `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId        *string     `protobuf:"bytes,3,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=MessageTo" json:"MessageTo,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=PageUrl" json:"PageUrl,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=PageTitle" json:"PageTitle,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=BrowserLanguage" json:"BrowserLanguage,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=DeviceType,enum=conversation.DeviceType" json:"DeviceType,omitempty"`
	UserId           *string     `protobuf:"bytes,12,opt,name=UserId" json:"UserId,omitempty"`
	CreatedTime      *string     `protobuf:"bytes,13,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *EvChatUserInfoRequested) Reset()                    { *m = EvChatUserInfoRequested{} }
func (m *EvChatUserInfoRequested) String() string            { return proto.CompactTextString(m) }
func (*EvChatUserInfoRequested) ProtoMessage()               {}
func (*EvChatUserInfoRequested) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *EvChatUserInfoRequested) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *EvChatUserInfoRequested) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type FileTemplate struct {
	Id               *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FileTemplate) Reset()                    { *m = FileTemplate{} }
func (m *FileTemplate) String() string            { return proto.CompactTextString(m) }
func (*FileTemplate) ProtoMessage()               {}
func (*FileTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *FileTemplate) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type QuickRepliesTemplate struct {
	Text             *string   `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
	ContentType      *string   `protobuf:"bytes,4,opt,name=ContentType" json:"ContentType,omitempty"`
	Replies          []*Button `protobuf:"bytes,5,rep,name=Replies" json:"Replies,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *QuickRepliesTemplate) Reset()                    { *m = QuickRepliesTemplate{} }
func (m *QuickRepliesTemplate) String() string            { return proto.CompactTextString(m) }
func (*QuickRepliesTemplate) ProtoMessage()               {}
func (*QuickRepliesTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *QuickRepliesTemplate) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *QuickRepliesTemplate) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *QuickRepliesTemplate) GetReplies() []*Button {
	if m != nil {
		return m.Replies
	}
	return nil
}

type GenericElement struct {
	Title            *string   `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	ImageUrl         *string   `protobuf:"bytes,2,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	Subtitle         *string   `protobuf:"bytes,3,opt,name=Subtitle" json:"Subtitle,omitempty"`
	DefaultAction    *Button   `protobuf:"bytes,4,opt,name=DefaultAction" json:"DefaultAction,omitempty"`
	Buttons          []*Button `protobuf:"bytes,5,rep,name=Buttons" json:"Buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GenericElement) Reset()                    { *m = GenericElement{} }
func (m *GenericElement) String() string            { return proto.CompactTextString(m) }
func (*GenericElement) ProtoMessage()               {}
func (*GenericElement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *GenericElement) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *GenericElement) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *GenericElement) GetSubtitle() string {
	if m != nil && m.Subtitle != nil {
		return *m.Subtitle
	}
	return ""
}

func (m *GenericElement) GetDefaultAction() *Button {
	if m != nil {
		return m.DefaultAction
	}
	return nil
}

func (m *GenericElement) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type GenericTemplate struct {
	Elements         []*GenericElement `protobuf:"bytes,1,rep,name=Elements" json:"Elements,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GenericTemplate) Reset()                    { *m = GenericTemplate{} }
func (m *GenericTemplate) String() string            { return proto.CompactTextString(m) }
func (*GenericTemplate) ProtoMessage()               {}
func (*GenericTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *GenericTemplate) GetElements() []*GenericElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type Button struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Button) Reset()                    { *m = Button{} }
func (m *Button) String() string            { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()               {}
func (*Button) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *Button) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type UrlButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=Url" json:"Url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UrlButton) Reset()                    { *m = UrlButton{} }
func (m *UrlButton) String() string            { return proto.CompactTextString(m) }
func (*UrlButton) ProtoMessage()               {}
func (*UrlButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *UrlButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UrlButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *UrlButton) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type PostbackButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Payload          *string `protobuf:"bytes,3,opt,name=Payload" json:"Payload,omitempty"`
	ImageUrl         *string `protobuf:"bytes,4,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostbackButton) Reset()                    { *m = PostbackButton{} }
func (m *PostbackButton) String() string            { return proto.CompactTextString(m) }
func (*PostbackButton) ProtoMessage()               {}
func (*PostbackButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *PostbackButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PostbackButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PostbackButton) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *PostbackButton) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

type CallButton struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CallButton) Reset()                    { *m = CallButton{} }
func (m *CallButton) String() string            { return proto.CompactTextString(m) }
func (*CallButton) ProtoMessage()               {}
func (*CallButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

type LoginButton struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginButton) Reset()                    { *m = LoginButton{} }
func (m *LoginButton) String() string            { return proto.CompactTextString(m) }
func (*LoginButton) ProtoMessage()               {}
func (*LoginButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

type EventButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	ImageUrl         *string `protobuf:"bytes,4,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	Event            *string `protobuf:"bytes,3,opt,name=Event" json:"Event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EventButton) Reset()                    { *m = EventButton{} }
func (m *EventButton) String() string            { return proto.CompactTextString(m) }
func (*EventButton) ProtoMessage()               {}
func (*EventButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *EventButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *EventButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *EventButton) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *EventButton) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

type SurveyForm struct {
	Placeholder      *string `protobuf:"bytes,1,opt,name=Placeholder" json:"Placeholder,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SurveyForm) Reset()                    { *m = SurveyForm{} }
func (m *SurveyForm) String() string            { return proto.CompactTextString(m) }
func (*SurveyForm) ProtoMessage()               {}
func (*SurveyForm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *SurveyForm) GetPlaceholder() string {
	if m != nil && m.Placeholder != nil {
		return *m.Placeholder
	}
	return ""
}

type RateFormTemplate struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RateFormTemplate) Reset()                    { *m = RateFormTemplate{} }
func (m *RateFormTemplate) String() string            { return proto.CompactTextString(m) }
func (*RateFormTemplate) ProtoMessage()               {}
func (*RateFormTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *RateFormTemplate) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type RequestState struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId   *string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	ChannelId        *string `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestState) Reset()                    { *m = RequestState{} }
func (m *RequestState) String() string            { return proto.CompactTextString(m) }
func (*RequestState) ProtoMessage()               {}
func (*RequestState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *RequestState) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RequestState) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RequestState) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func init() {
	proto.RegisterType((*Id)(nil), "conversation.Id")
	proto.RegisterType((*AgentId)(nil), "conversation.AgentId")
	proto.RegisterType((*AgentInGroup)(nil), "conversation.AgentInGroup")
	proto.RegisterType((*AgentStatus)(nil), "conversation.AgentStatus")
	proto.RegisterType((*Account)(nil), "conversation.Account")
	proto.RegisterType((*Bool)(nil), "conversation.Bool")
	proto.RegisterType((*Limit)(nil), "conversation.Limit")
	proto.RegisterType((*Rule)(nil), "conversation.Rule")
	proto.RegisterType((*Condition)(nil), "conversation.Condition")
	proto.RegisterType((*Route)(nil), "conversation.Route")
	proto.RegisterType((*RouteResult)(nil), "conversation.RouteResult")
	proto.RegisterType((*GroupDeleteEvent)(nil), "conversation.GroupDeleteEvent")
	proto.RegisterType((*GroupUpdateEvent)(nil), "conversation.GroupUpdateEvent")
	proto.RegisterType((*AgentDeletedEvent)(nil), "conversation.AgentDeletedEvent")
	proto.RegisterType((*AgentUpdateEvent)(nil), "conversation.AgentUpdateEvent")
	proto.RegisterType((*Ids)(nil), "conversation.Ids")
	proto.RegisterType((*Conversation)(nil), "conversation.Conversation")
	proto.RegisterType((*Previews)(nil), "conversation.Previews")
	proto.RegisterType((*Preview)(nil), "conversation.Preview")
	proto.RegisterType((*Attachment)(nil), "conversation.Attachment")
	proto.RegisterType((*ChatEvents)(nil), "conversation.ChatEvents")
	proto.RegisterType((*ChatEvent)(nil), "conversation.ChatEvent")
	proto.RegisterType((*ChatRequest)(nil), "conversation.ChatRequest")
	proto.RegisterType((*Conversations)(nil), "conversation.Conversations")
	proto.RegisterType((*ChatStart)(nil), "conversation.ChatStart")
	proto.RegisterType((*AcceptRequest)(nil), "conversation.AcceptRequest")
	proto.RegisterType((*ListUnassignChatsRequest)(nil), "conversation.ListUnassignChatsRequest")
	proto.RegisterType((*UnassignChat)(nil), "conversation.UnassignChat")
	proto.RegisterType((*Bools)(nil), "conversation.Bools")
	proto.RegisterType((*ListUsersUnreadRequest)(nil), "conversation.ListUsersUnreadRequest")
	proto.RegisterType((*Unread)(nil), "conversation.Unread")
	proto.RegisterType((*UsersUnread)(nil), "conversation.UsersUnread")
	proto.RegisterType((*ListChatEventRequest)(nil), "conversation.ListChatEventRequest")
	proto.RegisterType((*ListChatsByUserRequest)(nil), "conversation.ListChatsByUserRequest")
	proto.RegisterType((*OEChatDropped)(nil), "conversation.OEChatDropped")
	proto.RegisterType((*OEChatAccepted)(nil), "conversation.OEChatAccepted")
	proto.RegisterType((*OEChatStarted)(nil), "conversation.OEChatStarted")
	proto.RegisterType((*EvChatResult)(nil), "conversation.EvChatResult")
	proto.RegisterType((*EvChatUserInfoRequested)(nil), "conversation.EvChatUserInfoRequested")
	proto.RegisterType((*FileTemplate)(nil), "conversation.FileTemplate")
	proto.RegisterType((*QuickRepliesTemplate)(nil), "conversation.QuickRepliesTemplate")
	proto.RegisterType((*GenericElement)(nil), "conversation.GenericElement")
	proto.RegisterType((*GenericTemplate)(nil), "conversation.GenericTemplate")
	proto.RegisterType((*Button)(nil), "conversation.Button")
	proto.RegisterType((*UrlButton)(nil), "conversation.UrlButton")
	proto.RegisterType((*PostbackButton)(nil), "conversation.PostbackButton")
	proto.RegisterType((*CallButton)(nil), "conversation.CallButton")
	proto.RegisterType((*LoginButton)(nil), "conversation.LoginButton")
	proto.RegisterType((*EventButton)(nil), "conversation.EventButton")
	proto.RegisterType((*SurveyForm)(nil), "conversation.SurveyForm")
	proto.RegisterType((*RateFormTemplate)(nil), "conversation.RateFormTemplate")
	proto.RegisterType((*RequestState)(nil), "conversation.RequestState")
	proto.RegisterEnum("conversation.JoinOperator", JoinOperator_name, JoinOperator_value)
	proto.RegisterEnum("conversation.AssignStrategy", AssignStrategy_name, AssignStrategy_value)
	proto.RegisterEnum("conversation.ConversationState", ConversationState_name, ConversationState_value)
	proto.RegisterEnum("conversation.ChatEventType", ChatEventType_name, ChatEventType_value)
	proto.RegisterEnum("conversation.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("conversation.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("conversation/conversation.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x18, 0x4d, 0x6f, 0xe3, 0xc6,
	0x75, 0x45, 0x4a, 0x96, 0xf4, 0xf4, 0x61, 0xee, 0xc4, 0xbb, 0xd6, 0x3a, 0xde, 0xac, 0x97, 0x05,
	0x5a, 0xc7, 0x68, 0x6d, 0xc4, 0x6d, 0x91, 0x4d, 0x80, 0x04, 0x95, 0x6d, 0xad, 0xa1, 0xac, 0x2c,
	0x29, 0x94, 0xd4, 0xb4, 0xbd, 0x38, 0x34, 0x39, 0x6b, 0x33, 0xa6, 0x48, 0x95, 0xa4, 0x1c, 0x3b,
	0x2d, 0xd0, 0x53, 0xff, 0x40, 0xd1, 0x63, 0x0f, 0x45, 0xcf, 0xbd, 0xf6, 0xd2, 0x9f, 0xd0, 0x1f,
	0x50, 0xa0, 0xbf, 0xa2, 0xf7, 0x9e, 0x8a, 0xf7, 0x66, 0x48, 0x91, 0xb4, 0xbd, 0x76, 0xb6, 0xcd,
	0x45, 0x9a, 0xf7, 0x31, 0xf3, 0xde, 0xbc, 0xaf, 0x79, 0x8f, 0xf0, 0xcc, 0xf2, 0xbd, 0x0b, 0x1e,
	0x84, 0x66, 0xe4, 0xf8, 0xde, 0x4e, 0x1a, 0xd8, 0x9e, 0x05, 0x7e, 0xe4, 0xb3, 0x7a, 0x1a, 0xb7,
	0xf6, 0xe1, 0x89, 0x13, 0x9d, 0xcc, 0xad, 0x73, 0x1e, 0x6d, 0xfb, 0xc1, 0xe9, 0x4e, 0x38, 0x3f,
	0x71, 0xbe, 0xd9, 0x09, 0x79, 0x70, 0xe1, 0x58, 0x3c, 0x9c, 0x71, 0x6b, 0x87, 0x36, 0xed, 0xf0,
	0x0b, 0xee, 0x45, 0xe2, 0x57, 0x1c, 0xb3, 0xf6, 0xd1, 0xfd, 0x36, 0x5a, 0xfe, 0x74, 0x4a, 0x7a,
	0xe0, 0x9f, 0xd8, 0xaa, 0xff, 0x1c, 0x94, 0xae, 0xcd, 0x9e, 0x83, 0x6a, 0x45, 0x97, 0xad, 0xc2,
	0x46, 0x61, 0xb3, 0xb6, 0xbb, 0xbc, 0x2d, 0x39, 0xf6, 0x7d, 0x2f, 0xe2, 0x97, 0x91, 0x81, 0x34,
	0xf6, 0x14, 0xc0, 0xb4, 0x2c, 0x7f, 0xee, 0x45, 0xc7, 0x8e, 0xdd, 0x52, 0x36, 0x0a, 0x9b, 0x55,
	0xa3, 0x2a, 0x31, 0x5d, 0x9b, 0x35, 0x41, 0x71, 0xec, 0x96, 0x4a, 0x68, 0xc5, 0xb1, 0xf5, 0x36,
	0x94, 0xdb, 0xa7, 0x9c, 0x48, 0xeb, 0x50, 0x6d, 0xc7, 0x7c, 0x24, 0xa2, 0x6a, 0x2c, 0x10, 0xac,
	0x95, 0x30, 0xca, 0x43, 0x63, 0x50, 0xff, 0x12, 0xea, 0x62, 0xe9, 0x1d, 0x06, 0xfe, 0x7c, 0xf6,
	0xb6, 0xe7, 0x20, 0x85, 0x0e, 0xe8, 0xc6, 0xfa, 0xc5, 0xa0, 0x6e, 0x42, 0x8d, 0x98, 0x46, 0x91,
	0x19, 0xcd, 0xc3, 0xb7, 0x16, 0xb0, 0x06, 0x95, 0x6e, 0xd8, 0xb6, 0x22, 0xe7, 0x82, 0x93, 0x84,
	0x8a, 0x91, 0xc0, 0xfa, 0x2f, 0xa0, 0x2c, 0x8f, 0xb8, 0x8f, 0x91, 0x9b, 0xe8, 0x0d, 0x79, 0xbc,
	0x22, 0x4e, 0x3e, 0x32, 0x2f, 0x8d, 0xb9, 0xcb, 0x43, 0x3a, 0xb9, 0x64, 0x24, 0xb0, 0xbe, 0x06,
	0xc5, 0x3d, 0xdf, 0x77, 0x19, 0x13, 0xff, 0x74, 0x6e, 0xc5, 0xa0, 0xb5, 0xfe, 0x1a, 0x4a, 0x3d,
	0x67, 0xea, 0x44, 0xdf, 0xde, 0xb1, 0x6a, 0xde, 0xb1, 0xef, 0x42, 0x75, 0x6a, 0x5e, 0x1e, 0x07,
	0xa4, 0x43, 0x59, 0xe8, 0x30, 0x8d, 0x75, 0xf8, 0x97, 0x02, 0x45, 0x5c, 0xdd, 0xf3, 0x6e, 0x49,
	0xe0, 0x28, 0x8e, 0x7d, 0x97, 0xdc, 0x17, 0x50, 0x09, 0xa3, 0xc0, 0x8c, 0xf8, 0xe9, 0x55, 0xab,
	0xb4, 0x51, 0xd8, 0x6c, 0xee, 0xae, 0x6f, 0x67, 0x32, 0xa8, 0x1d, 0x86, 0xce, 0xa9, 0x37, 0x92,
	0x3c, 0x46, 0xc2, 0x4d, 0x07, 0x13, 0xed, 0x38, 0xf2, 0xc3, 0xd6, 0xd2, 0x86, 0x4a, 0x07, 0x13,
	0x66, 0xec, 0x87, 0xec, 0x43, 0x00, 0xcb, 0xf7, 0x6c, 0x07, 0x0f, 0xc1, 0x1b, 0xa9, 0x9b, 0xb5,
	0xdd, 0xd5, 0xec, 0xd1, 0xfb, 0x31, 0xdd, 0x48, 0xb1, 0x62, 0x00, 0x70, 0xcf, 0x3c, 0x71, 0xb9,
	0xdd, 0xaa, 0x90, 0xad, 0x63, 0x90, 0x3d, 0x87, 0xba, 0x15, 0x70, 0x33, 0xe2, 0xf6, 0x71, 0xe4,
	0x4c, 0x79, 0xab, 0xba, 0x51, 0xd8, 0x54, 0x8d, 0x9a, 0xc4, 0x8d, 0x9d, 0x29, 0x67, 0xab, 0x50,
	0x9e, 0x05, 0xfc, 0x02, 0xaf, 0x0a, 0x74, 0xd5, 0x25, 0x04, 0xbb, 0x36, 0x12, 0x3c, 0x7e, 0x49,
	0x36, 0xa8, 0x09, 0x02, 0x82, 0x5d, 0x5b, 0xff, 0x1d, 0x54, 0x13, 0x3d, 0xd8, 0x36, 0x14, 0xbf,
	0xf2, 0x1d, 0x8f, 0x0c, 0xdc, 0xdc, 0x5d, 0xcb, 0xaa, 0xfb, 0x99, 0xef, 0x78, 0x83, 0x19, 0x0f,
	0xcc, 0xc8, 0x0f, 0x0c, 0xe2, 0x63, 0x1a, 0xa8, 0xe7, 0xfc, 0x4a, 0x5a, 0x1b, 0x97, 0x18, 0x4a,
	0xbe, 0xe4, 0x91, 0xc6, 0x4e, 0x60, 0xb6, 0x02, 0xa5, 0x0b, 0xd3, 0x9d, 0xf3, 0x56, 0x91, 0x08,
	0x02, 0xd0, 0x3f, 0x80, 0x92, 0xe1, 0xcf, 0x23, 0xce, 0x36, 0xa1, 0x24, 0x42, 0xb0, 0x40, 0xc6,
	0x62, 0x59, 0xe9, 0x48, 0x32, 0x04, 0x83, 0xfe, 0x1b, 0xa8, 0xd1, 0x16, 0x83, 0x87, 0x73, 0x37,
	0x62, 0x8f, 0x61, 0x09, 0xf1, 0x49, 0x36, 0x49, 0x08, 0x7d, 0x1b, 0xfb, 0x8d, 0x74, 0xb9, 0xd3,
	0xb7, 0xf1, 0x0a, 0x6f, 0x21, 0xb3, 0x2e, 0x6c, 0x15, 0xc9, 0xb3, 0x09, 0xac, 0xff, 0x10, 0x34,
	0x4a, 0xec, 0x03, 0xee, 0xf2, 0x88, 0x77, 0xb0, 0x3e, 0xa6, 0x73, 0xbf, 0x90, 0xcd, 0xfd, 0xcf,
	0x24, 0xf7, 0x64, 0x66, 0x9b, 0x77, 0x72, 0x63, 0x69, 0x38, 0xe2, 0xd3, 0x13, 0x1e, 0xa0, 0x60,
	0x45, 0x84, 0x54, 0x82, 0xd0, 0x7f, 0x04, 0x0f, 0x49, 0x0b, 0x21, 0xd9, 0x4e, 0x0e, 0x8b, 0xeb,
	0x45, 0x21, 0x5b, 0xd8, 0xbe, 0x02, 0x8d, 0x96, 0x39, 0xd1, 0x37, 0x73, 0x67, 0xaa, 0x8b, 0x92,
	0xad, 0x2e, 0x6c, 0x03, 0x6a, 0xdd, 0x70, 0xdf, 0xf7, 0x5e, 0x3b, 0xc1, 0x94, 0xdb, 0xb2, 0xf8,
	0xa4, 0x51, 0xfa, 0x2a, 0xa8, 0x5d, 0x3b, 0xc4, 0x78, 0x40, 0xcd, 0x0b, 0xa4, 0x39, 0x2e, 0xf5,
	0xff, 0x28, 0x50, 0xdf, 0x4f, 0xd9, 0xfc, 0x3b, 0x48, 0xe1, 0x7c, 0x5a, 0x14, 0xaf, 0xa7, 0xc5,
	0x26, 0x68, 0xae, 0x19, 0x46, 0xc7, 0x26, 0xdd, 0x47, 0xb0, 0x95, 0x88, 0xad, 0x89, 0x78, 0x71,
	0x4d, 0xe2, 0x7c, 0x06, 0x35, 0xcb, 0xf5, 0xc3, 0xf8, 0xac, 0x25, 0x62, 0x02, 0x81, 0x22, 0x86,
	0xe7, 0x50, 0x9a, 0x87, 0x3c, 0x88, 0x53, 0xba, 0xb6, 0x2d, 0x5e, 0xc8, 0x49, 0xc8, 0x03, 0x43,
	0x50, 0x50, 0x5f, 0xeb, 0xcc, 0xf4, 0x3c, 0xee, 0xa2, 0xbe, 0x55, 0xa1, 0xaf, 0xc4, 0x74, 0x6d,
	0xac, 0xa4, 0x91, 0x79, 0x1a, 0xb6, 0x80, 0xac, 0x44, 0x6b, 0xf6, 0x53, 0x28, 0x85, 0x91, 0x19,
	0x71, 0x4a, 0xce, 0xe6, 0xee, 0xb3, 0x6b, 0x85, 0x22, 0x01, 0xf0, 0x11, 0xe1, 0x86, 0xe0, 0x46,
	0x49, 0x01, 0xff, 0xf5, 0x9c, 0x87, 0x64, 0x99, 0x86, 0x90, 0x24, 0x31, 0x5d, 0x5b, 0xff, 0x04,
	0x2a, 0xc3, 0x80, 0x5f, 0x38, 0xfc, 0xeb, 0x90, 0x7d, 0x00, 0x95, 0x99, 0x5c, 0xcb, 0x04, 0x7b,
	0x94, 0x15, 0x22, 0x39, 0x8d, 0x84, 0x4d, 0xff, 0x43, 0x01, 0xca, 0x12, 0xcb, 0x3e, 0x85, 0x4c,
	0x13, 0x21, 0xfd, 0xb7, 0x76, 0xbb, 0x9e, 0x46, 0x86, 0x9f, 0xed, 0xc0, 0x12, 0x19, 0x4a, 0x84,
	0xf5, 0xf5, 0x52, 0x78, 0x66, 0x46, 0x14, 0xa1, 0x86, 0x64, 0xc3, 0xa4, 0x9e, 0x78, 0x01, 0x37,
	0x85, 0xc3, 0x55, 0x43, 0x42, 0xfa, 0xc7, 0x00, 0xed, 0x28, 0x32, 0xad, 0xb3, 0x29, 0xc6, 0x33,
	0x83, 0xe2, 0xf8, 0x6a, 0xc6, 0x65, 0x30, 0xd3, 0x1a, 0x63, 0x7c, 0x68, 0x5e, 0xb9, 0xbe, 0x99,
	0xbc, 0xa0, 0x12, 0xd4, 0x3f, 0x01, 0x48, 0x04, 0x85, 0xa8, 0x92, 0x58, 0x49, 0x7b, 0xdc, 0xae,
	0x92, 0x60, 0xd3, 0xff, 0xad, 0x40, 0x35, 0xc1, 0xca, 0x47, 0xb4, 0x90, 0x3c, 0xa2, 0x3b, 0x52,
	0x15, 0x85, 0x3c, 0xf8, 0xee, 0x2d, 0x87, 0x21, 0x8b, 0xd4, 0x33, 0xd3, 0x07, 0x14, 0xf3, 0x7d,
	0xc0, 0x63, 0x58, 0xc2, 0x4d, 0x49, 0x37, 0x21, 0x21, 0xcc, 0xc5, 0xfd, 0x45, 0x64, 0x53, 0x14,
	0x57, 0x8d, 0x34, 0x0a, 0x33, 0x79, 0xc4, 0x3d, 0x1b, 0x6b, 0x06, 0xc5, 0x6f, 0xd5, 0x48, 0x60,
	0xb6, 0x03, 0x20, 0xd6, 0xa4, 0x6a, 0x99, 0x54, 0x5d, 0x4e, 0x85, 0x30, 0xa9, 0x97, 0x62, 0x21,
	0x03, 0xf3, 0xcb, 0x88, 0x9e, 0x22, 0x34, 0x30, 0xbf, 0xa4, 0x7a, 0xfb, 0xd2, 0x0f, 0xa6, 0x66,
	0x24, 0x63, 0x5b, 0x42, 0xec, 0x63, 0xa8, 0x2d, 0x5c, 0x23, 0xe2, 0xbb, 0xb6, 0xdb, 0xca, 0x95,
	0xdc, 0x84, 0xc1, 0x48, 0x33, 0xe3, 0xdb, 0x30, 0x4a, 0x12, 0xa0, 0x6a, 0x08, 0x40, 0xff, 0x67,
	0x11, 0x6a, 0x78, 0x6f, 0x43, 0x84, 0xf4, 0x77, 0x50, 0x3c, 0xb2, 0xb9, 0x5a, 0xcc, 0xe7, 0xea,
	0x53, 0x80, 0x29, 0x0f, 0x43, 0xf3, 0x94, 0x1f, 0x47, 0xbe, 0x34, 0x76, 0x55, 0x62, 0xc6, 0x3e,
	0x7b, 0x02, 0x95, 0x19, 0xd2, 0xe6, 0x81, 0x2b, 0x4d, 0x5d, 0x46, 0x78, 0x12, 0xb8, 0xb8, 0x93,
	0x48, 0x91, 0x13, 0xb9, 0xc2, 0xd2, 0x55, 0xa3, 0x8a, 0x98, 0x31, 0x22, 0x30, 0x48, 0xe5, 0x31,
	0xd2, 0xb4, 0x31, 0xc8, 0xde, 0x07, 0xed, 0x24, 0xf0, 0xbf, 0x0e, 0x79, 0x70, 0xec, 0x9a, 0xde,
	0xe9, 0x1c, 0x59, 0x84, 0x9d, 0x97, 0x25, 0xbe, 0x27, 0xd1, 0xe8, 0xe9, 0x84, 0x45, 0x3c, 0xf7,
	0x09, 0xcc, 0x3e, 0x82, 0x9a, 0xcd, 0xb1, 0x33, 0x3f, 0x8e, 0xd0, 0xd5, 0xa2, 0xae, 0xe4, 0x9c,
	0x71, 0x40, 0x0c, 0xc2, 0xe7, 0x76, 0xb2, 0xc6, 0x5e, 0x01, 0x0b, 0x19, 0x1a, 0xa4, 0x2e, 0x1c,
	0x8c, 0xe0, 0x0d, 0x95, 0xb6, 0x71, 0xbd, 0xd2, 0xfe, 0x00, 0x96, 0xd3, 0x22, 0xf0, 0x8c, 0x26,
	0x9d, 0xd1, 0x4c, 0xa3, 0x65, 0x27, 0x3f, 0x6b, 0x2d, 0x4b, 0x3f, 0xcd, 0xd0, 0x20, 0xe4, 0x93,
	0xe0, 0xaa, 0xa5, 0x09, 0x83, 0x48, 0x90, 0xa4, 0x8a, 0xe5, 0xb1, 0xe5, 0xdb, 0xbc, 0xf5, 0x50,
	0x84, 0xbc, 0xc4, 0xed, 0xfb, 0x36, 0x45, 0xa9, 0xe5, 0x44, 0x57, 0x2d, 0x26, 0xa2, 0x14, 0xd7,
	0xd8, 0x51, 0xa2, 0x92, 0xc7, 0xdf, 0xf8, 0x1e, 0x6f, 0xbd, 0x23, 0xac, 0x83, 0x88, 0x5f, 0xf9,
	0x1e, 0xd7, 0x3f, 0x87, 0x46, 0xba, 0x58, 0x85, 0xec, 0x67, 0xd0, 0x48, 0x2b, 0x18, 0xd7, 0x84,
	0x37, 0x15, 0xb8, 0xec, 0x06, 0xfd, 0xcf, 0x05, 0x51, 0x1d, 0x46, 0x91, 0x19, 0x44, 0xff, 0x87,
	0x51, 0xe7, 0x09, 0x54, 0x4c, 0x7c, 0x9b, 0x17, 0x61, 0x5b, 0x36, 0xe5, 0x5b, 0x9d, 0x72, 0x50,
	0x31, 0xe3, 0xa0, 0x6c, 0x34, 0x97, 0x72, 0xd1, 0xac, 0x1f, 0x43, 0xa3, 0x6d, 0x59, 0x7c, 0x96,
	0xe4, 0xd3, 0xdb, 0x8e, 0x22, 0xb7, 0x14, 0x27, 0xfd, 0x0c, 0x5a, 0x3d, 0x27, 0x8c, 0x26, 0x9e,
	0xe8, 0x83, 0x11, 0x1b, 0xde, 0x5b, 0x16, 0x19, 0x6e, 0x21, 0x4b, 0x82, 0x58, 0x19, 0x68, 0xc8,
	0x90, 0x93, 0x89, 0x00, 0xf4, 0xbf, 0x17, 0xa0, 0x9e, 0x16, 0x73, 0xc7, 0xf1, 0xef, 0x01, 0x74,
	0x43, 0xd1, 0xee, 0x71, 0x5b, 0xf6, 0x37, 0x29, 0x0c, 0x8a, 0x3f, 0x92, 0xe9, 0x28, 0x6d, 0x2d,
	0x41, 0x2a, 0xf3, 0x33, 0x69, 0x66, 0xa5, 0x3b, 0xc3, 0x50, 0xeb, 0x9b, 0x49, 0xe1, 0xa5, 0x35,
	0x9a, 0xa3, 0x33, 0x35, 0x1d, 0x37, 0x1e, 0x03, 0x24, 0x84, 0xf8, 0xe1, 0x99, 0xef, 0x71, 0xd1,
	0x2c, 0x54, 0x0d, 0x09, 0xe9, 0x4f, 0xa1, 0x84, 0xf3, 0x13, 0x55, 0x3d, 0x5a, 0x50, 0xb4, 0x55,
	0x0c, 0x01, 0xe8, 0x5f, 0xc1, 0x63, 0xb2, 0x22, 0x36, 0x13, 0xe2, 0xd5, 0xfb, 0x5f, 0xfd, 0xd5,
	0x82, 0xf2, 0x24, 0x14, 0x5d, 0xa5, 0x4a, 0x9a, 0xc4, 0xa0, 0xfe, 0x22, 0x7e, 0x66, 0xe9, 0xc1,
	0x25, 0x64, 0xdc, 0x45, 0x0b, 0x28, 0xf5, 0x10, 0x2b, 0xe4, 0x80, 0xf8, 0x21, 0xfe, 0x04, 0x6a,
	0x29, 0x0d, 0xd9, 0x36, 0x94, 0xc5, 0x2a, 0x4e, 0x9d, 0x95, 0x6c, 0xea, 0xc8, 0x8b, 0xc4, 0x4c,
	0xfa, 0x6f, 0x61, 0x05, 0x2f, 0xb9, 0x78, 0x65, 0xef, 0x75, 0xc5, 0x45, 0xe0, 0x29, 0x99, 0x57,
	0x31, 0x15, 0x3e, 0xea, 0x2d, 0xe1, 0x53, 0x4c, 0x87, 0xcf, 0x9f, 0x0a, 0xc2, 0xc6, 0x14, 0xa1,
	0x7b, 0x57, 0xd4, 0xbd, 0xdd, 0x4b, 0x81, 0x75, 0x4a, 0x72, 0x91, 0x4f, 0x71, 0xce, 0x26, 0x88,
	0x94, 0x0d, 0xd5, 0x8c, 0x0d, 0x53, 0xea, 0x15, 0x6f, 0x51, 0xaf, 0x94, 0x56, 0xcf, 0x82, 0xc6,
	0xa0, 0x83, 0xba, 0x1d, 0x04, 0xfe, 0x6c, 0xc6, 0xed, 0xb7, 0xb4, 0x4a, 0x46, 0x59, 0x35, 0xa7,
	0xac, 0xfe, 0x25, 0x34, 0x85, 0x10, 0x51, 0x13, 0xf2, 0x52, 0x94, 0xfb, 0x76, 0x24, 0xa9, 0xb0,
	0x2b, 0x66, 0x27, 0x90, 0xdf, 0x17, 0xe2, 0x7b, 0xd0, 0x75, 0xdf, 0x5a, 0x42, 0xe6, 0x1e, 0xc5,
	0xbc, 0xd1, 0xef, 0xec, 0x88, 0xf4, 0x3f, 0x16, 0xa0, 0xde, 0xb9, 0x10, 0x8d, 0x04, 0x4d, 0x8c,
	0xeb, 0x50, 0x35, 0xe2, 0x2e, 0x39, 0x36, 0x67, 0x82, 0xc0, 0x94, 0x1f, 0x9c, 0xcb, 0x22, 0xa1,
	0x0c, 0xce, 0x31, 0xe5, 0xf1, 0x95, 0x91, 0x05, 0x88, 0xd6, 0x79, 0xa1, 0xc5, 0xeb, 0x6d, 0xd8,
	0x06, 0xd4, 0x0e, 0x78, 0x68, 0x05, 0xce, 0x8c, 0x1a, 0x66, 0xa9, 0x56, 0x0a, 0xa5, 0xff, 0x4d,
	0x85, 0x55, 0xa1, 0x16, 0x85, 0x89, 0xf7, 0xda, 0x97, 0x3a, 0x08, 0x43, 0xbd, 0x41, 0xc3, 0x37,
	0x38, 0x7c, 0x61, 0x5e, 0xf5, 0x8d, 0xb1, 0x7b, 0xcd, 0x8c, 0x34, 0x7b, 0xca, 0xc6, 0x26, 0x7e,
	0x3a, 0x12, 0x84, 0x68, 0xaa, 0xa9, 0xb3, 0x89, 0x1b, 0x1d, 0x09, 0xe2, 0xbe, 0x61, 0xdc, 0xd6,
	0xc4, 0x7d, 0xce, 0x30, 0xdd, 0xe7, 0x1c, 0x65, 0xfb, 0x9c, 0xb8, 0xb0, 0x6e, 0xc2, 0xf2, 0x5e,
	0xb6, 0x9f, 0x89, 0xdb, 0x9c, 0xbd, 0xeb, 0x6d, 0x4e, 0x2f, 0xd7, 0xe6, 0x24, 0xb4, 0x17, 0x00,
	0x8b, 0x2e, 0xe6, 0xee, 0x2e, 0x67, 0xb1, 0x4e, 0xe5, 0x6a, 0x3d, 0x93, 0xab, 0x39, 0xcf, 0x36,
	0xae, 0x87, 0xd3, 0x7b, 0x50, 0x7f, 0xe9, 0xb8, 0x7c, 0xcc, 0xa7, 0x33, 0x17, 0xa7, 0xb0, 0xdc,
	0x24, 0x80, 0xa5, 0xed, 0xf3, 0xb9, 0x63, 0x9d, 0x1b, 0x7c, 0xe6, 0x3a, 0x3c, 0x4c, 0xf8, 0xe2,
	0x5e, 0xba, 0x90, 0xea, 0xa5, 0x51, 0x1a, 0x36, 0x05, 0x62, 0x32, 0x48, 0xe2, 0x68, 0x81, 0xc2,
	0xc2, 0x2a, 0x0f, 0x6a, 0x95, 0x6e, 0x2a, 0xac, 0x7b, 0xf3, 0x28, 0xf2, 0x3d, 0x23, 0x66, 0xd2,
	0xff, 0x51, 0x80, 0xe6, 0x21, 0xf7, 0x78, 0xe0, 0x58, 0x1d, 0x97, 0xd3, 0x94, 0xb4, 0x02, 0x25,
	0xe1, 0x1e, 0x21, 0x59, 0x00, 0x34, 0xf1, 0x4f, 0xa5, 0x4f, 0x45, 0x18, 0x25, 0x30, 0xcd, 0x10,
	0xf3, 0x13, 0xd1, 0xbb, 0xca, 0xcf, 0x38, 0x31, 0xcc, 0x3e, 0x86, 0xc6, 0x01, 0x7f, 0x6d, 0xce,
	0x5d, 0x9a, 0x9b, 0x7d, 0x8f, 0x94, 0xbe, 0x4d, 0xad, 0x2c, 0x2b, 0x5e, 0x46, 0x10, 0xee, 0xb8,
	0x8c, 0x64, 0xd2, 0x5f, 0xc1, 0xb2, 0xbc, 0x4b, 0x62, 0xc5, 0x17, 0x50, 0x91, 0xf7, 0x8a, 0x5f,
	0x9a, 0xdc, 0x57, 0x9d, 0xec, 0xe5, 0x8d, 0x84, 0x5b, 0x5f, 0x87, 0x25, 0x71, 0xee, 0x4d, 0x63,
	0xa3, 0x7e, 0x08, 0xd5, 0x49, 0xe0, 0xde, 0xce, 0xb0, 0xb0, 0xa2, 0x92, 0xb6, 0xa2, 0x06, 0x2a,
	0x1a, 0x50, 0x18, 0x09, 0x97, 0xfa, 0x0c, 0x9a, 0x43, 0x3f, 0x8c, 0x4e, 0x4c, 0xeb, 0xfc, 0x5b,
	0x9f, 0x96, 0x9a, 0x5d, 0xd5, 0xcc, 0xec, 0x9a, 0xf1, 0x56, 0x31, 0xeb, 0x2d, 0xbd, 0x0e, 0xb0,
	0x6f, 0xba, 0x52, 0x77, 0xbd, 0x01, 0xb5, 0x9e, 0x7f, 0xea, 0x78, 0x12, 0x74, 0xa0, 0x46, 0x0f,
	0xec, 0xb7, 0xd6, 0xe5, 0x0d, 0x12, 0x71, 0x07, 0x1d, 0x2a, 0xb5, 0x14, 0x80, 0xbe, 0x0d, 0x30,
	0x9a, 0x07, 0x17, 0xfc, 0x0a, 0x07, 0x42, 0x0c, 0xed, 0xa1, 0x6b, 0x5a, 0xfc, 0xcc, 0x77, 0x6d,
	0x1e, 0x48, 0x81, 0x69, 0x94, 0xfe, 0x7d, 0xd0, 0x0c, 0x33, 0xe2, 0xc8, 0x9d, 0x49, 0x92, 0xbc,
	0x6b, 0xe6, 0x50, 0x97, 0xb5, 0x6f, 0x14, 0x7f, 0xf6, 0x48, 0x75, 0xce, 0x85, 0x7c, 0xe7, 0x7c,
	0xc3, 0x0c, 0xa2, 0xdc, 0x38, 0x83, 0x64, 0xdb, 0x65, 0x35, 0xd7, 0x2e, 0x6f, 0xbd, 0x0f, 0xf5,
	0xf4, 0x37, 0x4f, 0x56, 0x81, 0xa2, 0xe7, 0x7b, 0x5c, 0x7b, 0xc0, 0xca, 0xa0, 0x9a, 0x9e, 0xad,
	0x15, 0xd8, 0x12, 0x28, 0x7e, 0xa0, 0x29, 0x5b, 0xdf, 0x40, 0x33, 0xfb, 0x31, 0x91, 0x35, 0xa0,
	0xda, 0xee, 0xf5, 0xda, 0x87, 0x9d, 0xfe, 0x78, 0xa4, 0x3d, 0x60, 0x4d, 0x00, 0x5a, 0x1f, 0x1a,
	0x83, 0xc9, 0x50, 0x53, 0x18, 0xc0, 0x92, 0xa4, 0xa9, 0x48, 0x3b, 0x1a, 0x8c, 0xc6, 0x46, 0x67,
	0xbf, 0xd3, 0x1f, 0x6b, 0x45, 0xb6, 0x0a, 0xef, 0x18, 0x83, 0x49, 0xff, 0xc0, 0x18, 0xec, 0x75,
	0xfb, 0x8b, 0x43, 0x4a, 0x6c, 0x05, 0xb4, 0x14, 0x41, 0x60, 0x97, 0xb6, 0x4c, 0x78, 0x78, 0xed,
	0x03, 0x11, 0x7b, 0x04, 0x0f, 0x33, 0x36, 0x90, 0x8a, 0x37, 0x40, 0x7e, 0xa2, 0x76, 0xbc, 0x53,
	0xad, 0x80, 0x92, 0xe7, 0xb2, 0x89, 0xe6, 0xb6, 0xd0, 0xca, 0x9f, 0x71, 0x5c, 0xab, 0xb8, 0x16,
	0x9f, 0xbd, 0xb4, 0xe2, 0xd6, 0x5f, 0x0a, 0xd0, 0xc8, 0x7c, 0xc2, 0x40, 0x5b, 0xf4, 0x07, 0xfd,
	0x8e, 0xf6, 0x80, 0xd5, 0xa0, 0x7c, 0xd4, 0x19, 0x8d, 0xda, 0x87, 0x1d, 0xad, 0x80, 0x9b, 0xf6,
	0x7b, 0x83, 0x51, 0xe7, 0x40, 0x53, 0xd1, 0x48, 0xed, 0x83, 0x03, 0xad, 0x88, 0xbc, 0xbd, 0xce,
	0xcb, 0xb1, 0x56, 0x62, 0x55, 0x28, 0x19, 0xed, 0x71, 0xe7, 0x40, 0x2b, 0xe3, 0xb2, 0xdb, 0x1f,
	0x4e, 0xc6, 0x5a, 0x05, 0x19, 0xc7, 0xed, 0x43, 0xad, 0x8a, 0xb8, 0x49, 0x1f, 0x97, 0xc0, 0xea,
	0x50, 0x19, 0x1b, 0xed, 0xfe, 0xe8, 0x65, 0xc7, 0xd0, 0x6a, 0x74, 0xd4, 0xfe, 0x2b, 0xad, 0x8e,
	0xe7, 0x8f, 0x7f, 0x39, 0xec, 0xf6, 0x0f, 0xb5, 0x06, 0x2a, 0x3f, 0x1a, 0x0f, 0x86, 0x12, 0x6e,
	0x6e, 0x7d, 0x9a, 0x7e, 0x0a, 0x50, 0xad, 0x49, 0xff, 0x55, 0x7f, 0xf0, 0x45, 0x5f, 0x7b, 0x80,
	0xdb, 0x8e, 0x06, 0x7b, 0xdd, 0x9e, 0x54, 0x71, 0xdc, 0xde, 0xeb, 0x75, 0xc6, 0x9a, 0x82, 0x4c,
	0x07, 0x9d, 0xd1, 0xab, 0xf1, 0x60, 0xa8, 0xa9, 0x5b, 0x7f, 0x2d, 0xc9, 0xa0, 0x66, 0x2d, 0x58,
	0x49, 0x5b, 0x34, 0x9e, 0x12, 0xb4, 0x07, 0xe8, 0x9a, 0x34, 0xe5, 0x0b, 0xd3, 0x89, 0xd0, 0x92,
	0x0a, 0x7b, 0x0f, 0xd6, 0x72, 0x4e, 0x08, 0xa2, 0xe4, 0x35, 0xd7, 0xd4, 0x6b, 0x47, 0xca, 0x96,
	0x4b, 0x78, 0x3b, 0x4d, 0x91, 0x1d, 0x9f, 0x56, 0x62, 0xeb, 0xd0, 0x4a, 0x13, 0x48, 0x35, 0xf9,
	0x0c, 0x69, 0x4b, 0xec, 0x29, 0x3c, 0x49, 0x53, 0x31, 0x50, 0x17, 0xf2, 0xca, 0x6c, 0x03, 0xd6,
	0xd3, 0x64, 0xf9, 0xe8, 0x2e, 0x38, 0x2a, 0x79, 0x8d, 0x7b, 0xdc, 0xbc, 0x48, 0xd1, 0xab, 0x79,
	0xfa, 0x3e, 0xc6, 0xc2, 0x82, 0x0e, 0x79, 0xf5, 0xc6, 0xe6, 0xe9, 0x82, 0x5a, 0xcb, 0xef, 0x9e,
	0x78, 0x51, 0x9a, 0x5e, 0x67, 0xdf, 0x83, 0x67, 0x19, 0x3a, 0x7d, 0xa3, 0xa6, 0x6f, 0xfc, 0x09,
	0xd3, 0x4a, 0x9e, 0x49, 0x5c, 0x3e, 0xcb, 0xf4, 0x28, 0xcf, 0x24, 0x3e, 0x8e, 0x67, 0x99, 0x1e,
	0xb3, 0xe7, 0xf0, 0x34, 0x33, 0xbb, 0xe3, 0x28, 0x92, 0x61, 0x59, 0xcd, 0xb3, 0xe0, 0x74, 0x90,
	0x65, 0x69, 0xb1, 0x27, 0xf0, 0xe8, 0xc6, 0x6e, 0x4d, 0x63, 0x98, 0x6f, 0x59, 0xd2, 0xcc, 0xbd,
	0xd2, 0xde, 0xa1, 0x1d, 0x19, 0xb9, 0xf1, 0x8e, 0xdd, 0xbc, 0x87, 0x52, 0x23, 0x88, 0xd8, 0xfc,
	0xe3, 0xbc, 0x85, 0x69, 0x34, 0x10, 0x86, 0xb2, 0xb5, 0x9f, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x2d, 0x1a, 0x7f, 0x3e, 0xf6, 0x1d, 0x00, 0x00,
}
