// Code generated by protoc-gen-go.
// source: oauth/oauth.proto
// DO NOT EDIT!

/*
Package oauth is a generated protocol buffer package.

It is generated from these files:
	oauth/oauth.proto

It has these top-level messages:
	RevokeRequest
	IdRequest
	Registration
	EmptyResponse
	Registrations
*/
package oauth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import auth "bitbucket.org/subiz/servicespec/proto/auth"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error int32

const (
	Error_OK                        Error = 0
	Error_NOTFOUND                  Error = 404
	Error_INVALID_REQUEST           Error = 400
	Error_UNAUTHORIZED              Error = 401
	Error_invalide_client           Error = 4
	Error_invalid_grant             Error = 5
	Error_unauthorized_client       Error = 6
	Error_unsupported_grant_type    Error = 7
	Error_invalid_scope             Error = 8
	Error_access_denied             Error = 9
	Error_unsupported_response_type Error = 10
	Error_server_error              Error = 11
	Error_temporarily_unavailable   Error = 12
	Error_INTERNAL_ERROR            Error = 500
)

var Error_name = map[int32]string{
	0:   "OK",
	404: "NOTFOUND",
	400: "INVALID_REQUEST",
	401: "UNAUTHORIZED",
	4:   "invalide_client",
	5:   "invalid_grant",
	6:   "unauthorized_client",
	7:   "unsupported_grant_type",
	8:   "invalid_scope",
	9:   "access_denied",
	10:  "unsupported_response_type",
	11:  "server_error",
	12:  "temporarily_unavailable",
	500: "INTERNAL_ERROR",
}
var Error_value = map[string]int32{
	"OK":                        0,
	"NOTFOUND":                  404,
	"INVALID_REQUEST":           400,
	"UNAUTHORIZED":              401,
	"invalide_client":           4,
	"invalid_grant":             5,
	"unauthorized_client":       6,
	"unsupported_grant_type":    7,
	"invalid_scope":             8,
	"access_denied":             9,
	"unsupported_response_type": 10,
	"server_error":              11,
	"temporarily_unavailable":   12,
	"INTERNAL_ERROR":            500,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}
func (Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RevokeRequest struct {
	ClientId  string `protobuf:"bytes,1,opt,name=ClientId,json=clientId" json:"ClientId"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId,json=userId" json:"UserId"`
	AccountId string `protobuf:"bytes,3,opt,name=AccountId,json=accountId" json:"AccountId"`
}

func (m *RevokeRequest) Reset()                    { *m = RevokeRequest{} }
func (m *RevokeRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeRequest) ProtoMessage()               {}
func (*RevokeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RevokeRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RevokeRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RevokeRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type IdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id"`
}

func (m *IdRequest) Reset()                    { *m = IdRequest{} }
func (m *IdRequest) String() string            { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()               {}
func (*IdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Registration struct {
	ClientId      string        `protobuf:"bytes,1,opt,name=ClientId,json=clientId" json:"ClientId"`
	ClientName    string        `protobuf:"bytes,2,opt,name=ClientName,json=clientName" json:"ClientName"`
	ClientLogoUrl string        `protobuf:"bytes,3,opt,name=ClientLogoUrl,json=clientLogoUrl" json:"ClientLogoUrl"`
	Scopes        []*auth.Scope `protobuf:"bytes,4,rep,name=Scopes,json=scopes" json:"Scopes"`
	RegisterDate  string        `protobuf:"bytes,5,opt,name=RegisterDate,json=registerDate" json:"RegisterDate"`
	RegisterId    string        `protobuf:"bytes,6,opt,name=RegisterId,json=registerId" json:"RegisterId"`
}

func (m *Registration) Reset()                    { *m = Registration{} }
func (m *Registration) String() string            { return proto.CompactTextString(m) }
func (*Registration) ProtoMessage()               {}
func (*Registration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Registration) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Registration) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *Registration) GetClientLogoUrl() string {
	if m != nil {
		return m.ClientLogoUrl
	}
	return ""
}

func (m *Registration) GetScopes() []*auth.Scope {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Registration) GetRegisterDate() string {
	if m != nil {
		return m.RegisterDate
	}
	return ""
}

func (m *Registration) GetRegisterId() string {
	if m != nil {
		return m.RegisterId
	}
	return ""
}

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Registrations struct {
	Registrations []*Registration `protobuf:"bytes,1,rep,name=Registrations,json=registrations" json:"Registrations"`
}

func (m *Registrations) Reset()                    { *m = Registrations{} }
func (m *Registrations) String() string            { return proto.CompactTextString(m) }
func (*Registrations) ProtoMessage()               {}
func (*Registrations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Registrations) GetRegistrations() []*Registration {
	if m != nil {
		return m.Registrations
	}
	return nil
}

func init() {
	proto.RegisterType((*RevokeRequest)(nil), "oauth.RevokeRequest")
	proto.RegisterType((*IdRequest)(nil), "oauth.IdRequest")
	proto.RegisterType((*Registration)(nil), "oauth.Registration")
	proto.RegisterType((*EmptyResponse)(nil), "oauth.EmptyResponse")
	proto.RegisterType((*Registrations)(nil), "oauth.Registrations")
	proto.RegisterEnum("oauth.Error", Error_name, Error_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Oauth2 service

type Oauth2Client interface {
	Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	ListAccountRegistration(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Registrations, error)
	ListUserRegistration(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Registrations, error)
}

type oauth2Client struct {
	cc *grpc.ClientConn
}

func NewOauth2Client(cc *grpc.ClientConn) Oauth2Client {
	return &oauth2Client{cc}
}

func (c *oauth2Client) Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/oauth.Oauth2/Revoke", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oauth2Client) ListAccountRegistration(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Registrations, error) {
	out := new(Registrations)
	err := grpc.Invoke(ctx, "/oauth.Oauth2/ListAccountRegistration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oauth2Client) ListUserRegistration(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Registrations, error) {
	out := new(Registrations)
	err := grpc.Invoke(ctx, "/oauth.Oauth2/ListUserRegistration", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Oauth2 service

type Oauth2Server interface {
	Revoke(context.Context, *RevokeRequest) (*EmptyResponse, error)
	ListAccountRegistration(context.Context, *IdRequest) (*Registrations, error)
	ListUserRegistration(context.Context, *IdRequest) (*Registrations, error)
}

func RegisterOauth2Server(s *grpc.Server, srv Oauth2Server) {
	s.RegisterService(&_Oauth2_serviceDesc, srv)
}

func _Oauth2_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Oauth2Server).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oauth.Oauth2/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Oauth2Server).Revoke(ctx, req.(*RevokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Oauth2_ListAccountRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Oauth2Server).ListAccountRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oauth.Oauth2/ListAccountRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Oauth2Server).ListAccountRegistration(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Oauth2_ListUserRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Oauth2Server).ListUserRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oauth.Oauth2/ListUserRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Oauth2Server).ListUserRegistration(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Oauth2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oauth.Oauth2",
	HandlerType: (*Oauth2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Revoke",
			Handler:    _Oauth2_Revoke_Handler,
		},
		{
			MethodName: "ListAccountRegistration",
			Handler:    _Oauth2_ListAccountRegistration_Handler,
		},
		{
			MethodName: "ListUserRegistration",
			Handler:    _Oauth2_ListUserRegistration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "oauth/oauth.proto",
}

func init() { proto.RegisterFile("oauth/oauth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0x41, 0x6e, 0xd3, 0x40,
	0x14, 0x6d, 0x92, 0xc6, 0x24, 0xbf, 0x71, 0x3b, 0x9d, 0x44, 0x6d, 0x48, 0x01, 0x55, 0x86, 0x45,
	0xc5, 0x22, 0x91, 0x8a, 0x40, 0x62, 0x47, 0xd4, 0x18, 0x61, 0x88, 0x1c, 0xe1, 0x26, 0x2c, 0xd8,
	0x58, 0x8e, 0xfd, 0x15, 0x46, 0x4d, 0x3d, 0x66, 0x66, 0x1c, 0x29, 0x3d, 0x05, 0x48, 0x5c, 0x83,
	0x73, 0x70, 0x06, 0xee, 0xc1, 0x01, 0x90, 0xc7, 0x4e, 0xea, 0x22, 0xc4, 0x82, 0x8d, 0xa5, 0x79,
	0xef, 0xff, 0xe7, 0x37, 0x6f, 0xfe, 0x87, 0x43, 0x1e, 0xa4, 0xea, 0xd3, 0x40, 0x7f, 0xfb, 0x89,
	0xe0, 0x8a, 0xd3, 0xba, 0x3e, 0xf4, 0x9e, 0xcf, 0x99, 0x9a, 0xa7, 0xe1, 0x15, 0xaa, 0x3e, 0x17,
	0x8b, 0x81, 0x4c, 0xe7, 0xec, 0x66, 0x20, 0x51, 0xac, 0x58, 0x88, 0x32, 0xc1, 0x70, 0xa0, 0xab,
	0x07, 0xba, 0xfd, 0xb6, 0xdb, 0x0a, 0xc0, 0xf4, 0x70, 0xc5, 0xaf, 0xd0, 0xc3, 0xcf, 0x29, 0x4a,
	0x45, 0x7b, 0xd0, 0xb8, 0x58, 0x32, 0x8c, 0x95, 0x13, 0x75, 0x2b, 0xa7, 0x95, 0xb3, 0xa6, 0xd7,
	0x08, 0x8b, 0x33, 0x3d, 0x02, 0x63, 0x26, 0x51, 0x38, 0x51, 0xb7, 0xaa, 0x19, 0x23, 0xd5, 0x27,
	0xfa, 0x00, 0x9a, 0xc3, 0x30, 0xe4, 0xa9, 0x6e, 0xaa, 0x69, 0xaa, 0x19, 0x6c, 0x00, 0xeb, 0x04,
	0x9a, 0x4e, 0xb4, 0x91, 0xdf, 0x87, 0xea, 0x56, 0xb8, 0xca, 0x22, 0xeb, 0x67, 0x05, 0x5a, 0x1e,
	0x2e, 0x98, 0x54, 0x22, 0x50, 0x8c, 0xc7, 0xff, 0xfc, 0xff, 0x23, 0x80, 0x9c, 0x73, 0x83, 0x6b,
	0x2c, 0x3c, 0x40, 0xb8, 0x45, 0xe8, 0x13, 0x30, 0x73, 0x7e, 0xcc, 0x17, 0x7c, 0x26, 0x96, 0x85,
	0x17, 0x33, 0x2c, 0x83, 0xf4, 0x31, 0x18, 0x97, 0x21, 0x4f, 0x50, 0x76, 0x77, 0x4f, 0x6b, 0x67,
	0x7b, 0xe7, 0x7b, 0x7d, 0x9d, 0x87, 0xc6, 0x3c, 0x43, 0x6a, 0x8a, 0x5a, 0x1b, 0x5b, 0x28, 0x46,
	0x81, 0xc2, 0x6e, 0x5d, 0x2b, 0xb5, 0x44, 0x09, 0xcb, 0xec, 0x6c, 0x6a, 0x9c, 0xa8, 0x6b, 0xe4,
	0x76, 0xc4, 0x16, 0xb1, 0x0e, 0xc0, 0xb4, 0xaf, 0x13, 0xb5, 0xf6, 0x50, 0x26, 0x3c, 0x96, 0x68,
	0xbd, 0xcd, 0xc2, 0xbe, 0xbd, 0xab, 0xa4, 0x2f, 0xff, 0x00, 0xba, 0x15, 0xed, 0xa8, 0xdd, 0xcf,
	0x1f, 0xb8, 0xcc, 0x79, 0xa6, 0x28, 0x57, 0x3e, 0xfd, 0x5e, 0x85, 0xba, 0x2d, 0x04, 0x17, 0xd4,
	0x80, 0xea, 0xe4, 0x1d, 0xd9, 0xa1, 0x26, 0x34, 0xdc, 0xc9, 0xf4, 0xf5, 0x64, 0xe6, 0x8e, 0xc8,
	0xb7, 0x1a, 0xed, 0xc0, 0x81, 0xe3, 0x7e, 0x18, 0x8e, 0x9d, 0x91, 0xef, 0xd9, 0xef, 0x67, 0xf6,
	0xe5, 0x94, 0x7c, 0xa9, 0xd1, 0x43, 0x68, 0xcd, 0xdc, 0xe1, 0x6c, 0xfa, 0x66, 0xe2, 0x39, 0x1f,
	0xed, 0x11, 0xf9, 0x5a, 0xa3, 0x6d, 0x38, 0x60, 0xf1, 0x2a, 0x58, 0xb2, 0x08, 0xfd, 0x3c, 0x29,
	0xb2, 0x4b, 0x0f, 0xc1, 0x2c, 0x40, 0x7f, 0x21, 0x82, 0x58, 0x91, 0x3a, 0x3d, 0x86, 0x76, 0x1a,
	0x67, 0xbe, 0xb8, 0x60, 0x37, 0x18, 0x6d, 0x6a, 0x0d, 0xda, 0x83, 0xa3, 0x34, 0x96, 0x69, 0x92,
	0x70, 0xa1, 0xb0, 0xa8, 0xf7, 0xd5, 0x3a, 0x41, 0x72, 0xaf, 0xac, 0xa3, 0x93, 0x25, 0x8d, 0x0c,
	0x0a, 0xc2, 0x10, 0xa5, 0xf4, 0x23, 0x8c, 0x19, 0x46, 0xa4, 0x49, 0x1f, 0xc2, 0xfd, 0xb2, 0x82,
	0x28, 0x02, 0xcb, 0x45, 0x80, 0x12, 0x68, 0x65, 0x93, 0x8c, 0xc2, 0xc7, 0xec, 0xc6, 0x64, 0x8f,
	0x9e, 0xc0, 0xb1, 0xc2, 0xeb, 0x84, 0x8b, 0x40, 0xb0, 0xe5, 0xda, 0x4f, 0xe3, 0x60, 0x15, 0xb0,
	0x65, 0x30, 0x5f, 0x22, 0x69, 0xd1, 0x36, 0xec, 0x3b, 0xee, 0xd4, 0xf6, 0xdc, 0xe1, 0xd8, 0xb7,
	0x3d, 0x6f, 0xe2, 0x91, 0x5f, 0xb5, 0xf3, 0x1f, 0x15, 0x30, 0x26, 0x99, 0xfb, 0x73, 0xfa, 0x02,
	0x8c, 0x7c, 0xe6, 0x69, 0x67, 0x1b, 0x74, 0x69, 0x05, 0x7a, 0x1b, 0xf4, 0xee, 0xe3, 0xed, 0xd0,
	0x0b, 0x38, 0x1e, 0x33, 0xa9, 0x8a, 0x51, 0xbf, 0x33, 0xb5, 0xa4, 0x68, 0xd9, 0x0e, 0x7a, 0xaf,
	0xf3, 0x97, 0x37, 0x94, 0xd6, 0x0e, 0x7d, 0x05, 0x9d, 0x4c, 0x24, 0xdb, 0xa3, 0xff, 0x53, 0x98,
	0x1b, 0x7a, 0x73, 0x9f, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xc1, 0x6f, 0xfe, 0x0c, 0x04,
	0x00, 0x00,
}
