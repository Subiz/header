// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/chat.proto

/*
Package chat is a generated protocol buffer package.

It is generated from these files:
	chat/chat.proto

It has these top-level messages:
	UnassignedConversation
	UnassignedChats
	Id
	Permission
	AgentId
	AgentInGroup
	AgentStatus
	Account
	Bool
	RuleId
	Idx
	Rule
	Condition
	Route
	RouteResult
	GroupDeleteEvent
	GroupUpdateEvent
	AgentDeletedEvent
	AgentUpdateEvent
	Ids
	Conversation
	Previews
	Preview
	Attachment
	ChatEvents
	ChatEvent
	UserInfo
	ChatRequestAck
	ChatRequest
	Conversations
	ChatStart
	AcceptRequest
	ListUnassignChatsRequest
	UnassignChat
	Bools
	ListUsersUnreadRequest
	Unread
	UsersUnread
	ListChatEventRequest
	ListChatsByUserRequest
	OEChatAssigned
	OEChatWaiting
	EvChatCreated
	OEChatDropped
	OEChatAccepted
	OEChatStarted
	EvChatResult
	EvChatUserInfoRequested
	EvChatUserInfoReply
	FileTemplate
	QuickRepliesTemplate
	GenericElement
	GenericTemplate
	Button
	UrlButton
	PostbackButton
	CallButton
	LoginButton
	EventButton
	SurveyForm
	RateFormTemplate
*/
package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import auth "bitbucket.org/subiz/servicespec/proto/auth"
import event "bitbucket.org/subiz/servicespec/proto/event"
import common "bitbucket.org/subiz/servicespec/proto/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JoinOperator int32

const (
	JoinOperator_None JoinOperator = 0
	JoinOperator_And  JoinOperator = 1
	JoinOperator_Or   JoinOperator = 2
)

var JoinOperator_name = map[int32]string{
	0: "None",
	1: "And",
	2: "Or",
}
var JoinOperator_value = map[string]int32{
	"None": 0,
	"And":  1,
	"Or":   2,
}

func (x JoinOperator) Enum() *JoinOperator {
	p := new(JoinOperator)
	*p = x
	return p
}
func (x JoinOperator) String() string {
	return proto.EnumName(JoinOperator_name, int32(x))
}
func (x *JoinOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JoinOperator_value, data, "JoinOperator")
	if err != nil {
		return err
	}
	*x = JoinOperator(value)
	return nil
}
func (JoinOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AssignStrategy int32

const (
	AssignStrategy_ALLAGENTS           AssignStrategy = 0
	AssignStrategy_AGENTGROUP          AssignStrategy = 2
	AssignStrategy_AGENTS              AssignStrategy = 3
	AssignStrategy_MOSTRECENT          AssignStrategy = 4
	AssignStrategy_ROUNDROBINALLAGENTS AssignStrategy = 5
	AssignStrategy_ROUNDROBINAGENTS    AssignStrategy = 6
)

var AssignStrategy_name = map[int32]string{
	0: "ALLAGENTS",
	2: "AGENTGROUP",
	3: "AGENTS",
	4: "MOSTRECENT",
	5: "ROUNDROBINALLAGENTS",
	6: "ROUNDROBINAGENTS",
}
var AssignStrategy_value = map[string]int32{
	"ALLAGENTS":           0,
	"AGENTGROUP":          2,
	"AGENTS":              3,
	"MOSTRECENT":          4,
	"ROUNDROBINALLAGENTS": 5,
	"ROUNDROBINAGENTS":    6,
}

func (x AssignStrategy) Enum() *AssignStrategy {
	p := new(AssignStrategy)
	*p = x
	return p
}
func (x AssignStrategy) String() string {
	return proto.EnumName(AssignStrategy_name, int32(x))
}
func (x *AssignStrategy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssignStrategy_value, data, "AssignStrategy")
	if err != nil {
		return err
	}
	*x = AssignStrategy(value)
	return nil
}
func (AssignStrategy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// ChateEventType
type ChatEventType int32

const (
	ChatEventType_NONE    ChatEventType = 0
	ChatEventType_MESSAGE ChatEventType = 1
	ChatEventType_CLOSED  ChatEventType = 3
	ChatEventType_ADD     ChatEventType = 4
	// JOINED = 4; // SenderId: senderid || could be null, Content: joinner id, Attachmemts: null
	ChatEventType_LEFT ChatEventType = 5
	// 	SEEN = 6; // Content = event id, attachment = null
	ChatEventType_RATED      ChatEventType = 7
	ChatEventType_INPUT      ChatEventType = 8
	ChatEventType_TAG        ChatEventType = 9
	ChatEventType_UNTAG      ChatEventType = 10
	ChatEventType_TRANSFER   ChatEventType = 11
	ChatEventType_ACK        ChatEventType = 12
	ChatEventType_TYPING     ChatEventType = 13
	ChatEventType_STOPTYPING ChatEventType = 14
)

var ChatEventType_name = map[int32]string{
	0:  "NONE",
	1:  "MESSAGE",
	3:  "CLOSED",
	4:  "ADD",
	5:  "LEFT",
	7:  "RATED",
	8:  "INPUT",
	9:  "TAG",
	10: "UNTAG",
	11: "TRANSFER",
	12: "ACK",
	13: "TYPING",
	14: "STOPTYPING",
}
var ChatEventType_value = map[string]int32{
	"NONE":       0,
	"MESSAGE":    1,
	"CLOSED":     3,
	"ADD":        4,
	"LEFT":       5,
	"RATED":      7,
	"INPUT":      8,
	"TAG":        9,
	"UNTAG":      10,
	"TRANSFER":   11,
	"ACK":        12,
	"TYPING":     13,
	"STOPTYPING": 14,
}

func (x ChatEventType) Enum() *ChatEventType {
	p := new(ChatEventType)
	*p = x
	return p
}
func (x ChatEventType) String() string {
	return proto.EnumName(ChatEventType_name, int32(x))
}
func (x *ChatEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatEventType_value, data, "ChatEventType")
	if err != nil {
		return err
	}
	*x = ChatEventType(value)
	return nil
}
func (ChatEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type DeviceType int32

const (
	DeviceType_UNKNOWN DeviceType = 0
	DeviceType_MOBILE  DeviceType = 1
	DeviceType_TABLET  DeviceType = 2
	DeviceType_DESKTOP DeviceType = 3
)

var DeviceType_name = map[int32]string{
	0: "UNKNOWN",
	1: "MOBILE",
	2: "TABLET",
	3: "DESKTOP",
}
var DeviceType_value = map[string]int32{
	"UNKNOWN": 0,
	"MOBILE":  1,
	"TABLET":  2,
	"DESKTOP": 3,
}

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}
func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (x *DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceType_value, data, "DeviceType")
	if err != nil {
		return err
	}
	*x = DeviceType(value)
	return nil
}
func (DeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Event int32

const (
	Event_ConversationAssigned         Event = 0
	Event_ConversationWaiting          Event = 2
	Event_ConversationStartRequested   Event = 3
	Event_ConversationAccepted         Event = 4
	Event_ConversationDropped          Event = 5
	Event_ConversationEventCreated     Event = 6
	Event_ConversationJoinRequested    Event = 7
	Event_ConversationMessageRequested Event = 8
	Event_ConversationLeaveRequested   Event = 9
	Event_ConversationCloseRequested   Event = 10
	Event_ConversationTagRequested     Event = 11
	Event_ConversationUntagRequested   Event = 12
	Event_RuleUpdated                  Event = 20
	Event_RuleCreated                  Event = 21
	Event_RuleDeleted                  Event = 22
	Event_RuleRead                     Event = 23
	Event_RuleList                     Event = 24
	Event_ChatUserInfoRequested        Event = 18
	Event_ChatUserInfoReply            Event = 19
	Event_ConversationSubscribe        Event = 30
	Event_ConversationUnsubscribe      Event = 31
)

var Event_name = map[int32]string{
	0:  "ConversationAssigned",
	2:  "ConversationWaiting",
	3:  "ConversationStartRequested",
	4:  "ConversationAccepted",
	5:  "ConversationDropped",
	6:  "ConversationEventCreated",
	7:  "ConversationJoinRequested",
	8:  "ConversationMessageRequested",
	9:  "ConversationLeaveRequested",
	10: "ConversationCloseRequested",
	11: "ConversationTagRequested",
	12: "ConversationUntagRequested",
	20: "RuleUpdated",
	21: "RuleCreated",
	22: "RuleDeleted",
	23: "RuleRead",
	24: "RuleList",
	18: "ChatUserInfoRequested",
	19: "ChatUserInfoReply",
	30: "ConversationSubscribe",
	31: "ConversationUnsubscribe",
}
var Event_value = map[string]int32{
	"ConversationAssigned":         0,
	"ConversationWaiting":          2,
	"ConversationStartRequested":   3,
	"ConversationAccepted":         4,
	"ConversationDropped":          5,
	"ConversationEventCreated":     6,
	"ConversationJoinRequested":    7,
	"ConversationMessageRequested": 8,
	"ConversationLeaveRequested":   9,
	"ConversationCloseRequested":   10,
	"ConversationTagRequested":     11,
	"ConversationUntagRequested":   12,
	"RuleUpdated":                  20,
	"RuleCreated":                  21,
	"RuleDeleted":                  22,
	"RuleRead":                     23,
	"RuleList":                     24,
	"ChatUserInfoRequested":        18,
	"ChatUserInfoReply":            19,
	"ConversationSubscribe":        30,
	"ConversationUnsubscribe":      31,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UnassignedConversation struct {
	AccountId        *string     `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=message_to,json=messageTo" json:"message_to,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=page_title,json=pageTitle" json:"page_title,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=message" json:"message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=browser_language,json=browserLanguage" json:"browser_language,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=device_type,json=deviceType,enum=chat.DeviceType" json:"device_type,omitempty"`
	User             *UserInfo   `protobuf:"bytes,12,opt,name=user" json:"user,omitempty"`
	CreatedTime      *int64      `protobuf:"varint,13,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UnassignedConversation) Reset()                    { *m = UnassignedConversation{} }
func (m *UnassignedConversation) String() string            { return proto.CompactTextString(m) }
func (*UnassignedConversation) ProtoMessage()               {}
func (*UnassignedConversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UnassignedConversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UnassignedConversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *UnassignedConversation) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *UnassignedConversation) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *UnassignedConversation) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *UnassignedConversation) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *UnassignedConversation) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UnassignedConversation) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *UnassignedConversation) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *UnassignedConversation) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *UnassignedConversation) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UnassignedConversation) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

type UnassignedChats struct {
	Chats            []*UnassignedConversation `protobuf:"bytes,1,rep,name=chats" json:"chats,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *UnassignedChats) Reset()                    { *m = UnassignedChats{} }
func (m *UnassignedChats) String() string            { return proto.CompactTextString(m) }
func (*UnassignedChats) ProtoMessage()               {}
func (*UnassignedChats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UnassignedChats) GetChats() []*UnassignedConversation {
	if m != nil {
		return m.Chats
	}
	return nil
}

type Id struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id               *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Id) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Id) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type Permission struct {
	AccountId        *string      `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string      `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	Method           *auth.Method `protobuf:"bytes,3,opt,name=Method" json:"Method,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Permission) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Permission) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *Permission) GetMethod() *auth.Method {
	if m != nil {
		return m.Method
	}
	return nil
}

type AgentId struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentId) Reset()                    { *m = AgentId{} }
func (m *AgentId) String() string            { return proto.CompactTextString(m) }
func (*AgentId) ProtoMessage()               {}
func (*AgentId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AgentId) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentId) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type AgentInGroup struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	GroupId          *string `protobuf:"bytes,3,opt,name=GroupId" json:"GroupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentInGroup) Reset()                    { *m = AgentInGroup{} }
func (m *AgentInGroup) String() string            { return proto.CompactTextString(m) }
func (*AgentInGroup) ProtoMessage()               {}
func (*AgentInGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AgentInGroup) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentInGroup) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentInGroup) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

type AgentStatus struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	IsActive         *bool   `protobuf:"varint,3,opt,name=IsActive" json:"IsActive,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentStatus) Reset()                    { *m = AgentStatus{} }
func (m *AgentStatus) String() string            { return proto.CompactTextString(m) }
func (*AgentStatus) ProtoMessage()               {}
func (*AgentStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AgentStatus) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentStatus) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentStatus) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

type Account struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,2,opt,name=Id" json:"Id,omitempty"`
	MaxRules         *int32          `protobuf:"varint,3,opt,name=MaxRules" json:"MaxRules,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Account) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Account) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Account) GetMaxRules() int32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Bool struct {
	Bool             *bool  `protobuf:"varint,1,opt,name=Bool" json:"Bool,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Bool) Reset()                    { *m = Bool{} }
func (m *Bool) String() string            { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()               {}
func (*Bool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Bool) GetBool() bool {
	if m != nil && m.Bool != nil {
		return *m.Bool
	}
	return false
}

type RuleId struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	Id               *string `protobuf:"bytes,2,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RuleId) Reset()                    { *m = RuleId{} }
func (m *RuleId) String() string            { return proto.CompactTextString(m) }
func (*RuleId) ProtoMessage()               {}
func (*RuleId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RuleId) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RuleId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type Idx struct {
	Id               *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Idx) Reset()                    { *m = Idx{} }
func (m *Idx) String() string            { return proto.CompactTextString(m) }
func (*Idx) ProtoMessage()               {}
func (*Idx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Idx) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type Rule struct {
	Ctx *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	// @inject_tag: name:"ip"
	Id               *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Priority         *string         `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	Strategy         *AssignStrategy `protobuf:"varint,5,opt,name=strategy,enum=chat.AssignStrategy" json:"strategy,omitempty"`
	AssignTos        []string        `protobuf:"bytes,6,rep,name=assign_tos,json=assignTos" json:"assign_tos,omitempty"`
	Conditions       []*Condition    `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty"`
	Enabled          *bool           `protobuf:"varint,8,opt,name=enabled" json:"enabled,omitempty"`
	CreatedTime      *int64          `protobuf:"varint,9,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Rule) Reset()                    { *m = Rule{} }
func (m *Rule) String() string            { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()               {}
func (*Rule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Rule) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Rule) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Rule) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Rule) GetPriority() string {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return ""
}

func (m *Rule) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *Rule) GetAssignTos() []string {
	if m != nil {
		return m.AssignTos
	}
	return nil
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Rule) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

type Condition struct {
	Join             *JoinOperator `protobuf:"varint,1,opt,name=Join,enum=chat.JoinOperator" json:"Join,omitempty"`
	Key              *string       `protobuf:"bytes,2,opt,name=Key" json:"Key,omitempty"`
	Operator         *string       `protobuf:"bytes,3,opt,name=Operator" json:"Operator,omitempty"`
	Value            *string       `protobuf:"bytes,4,opt,name=Value" json:"Value,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Condition) GetJoin() JoinOperator {
	if m != nil && m.Join != nil {
		return *m.Join
	}
	return JoinOperator_None
}

func (m *Condition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Condition) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Condition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Route struct {
	Rules            []*Rule `protobuf:"bytes,1,rep,name=Rules" json:"Rules,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Route) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type RouteResult struct {
	RuleId           *string         `protobuf:"bytes,1,opt,name=RuleId" json:"RuleId,omitempty"`
	Strategy         *AssignStrategy `protobuf:"varint,3,opt,name=Strategy,enum=chat.AssignStrategy" json:"Strategy,omitempty"`
	AgentIds         []string        `protobuf:"bytes,4,rep,name=AgentIds" json:"AgentIds,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RouteResult) Reset()                    { *m = RouteResult{} }
func (m *RouteResult) String() string            { return proto.CompactTextString(m) }
func (*RouteResult) ProtoMessage()               {}
func (*RouteResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RouteResult) GetRuleId() string {
	if m != nil && m.RuleId != nil {
		return *m.RuleId
	}
	return ""
}

func (m *RouteResult) GetStrategy() AssignStrategy {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return AssignStrategy_ALLAGENTS
}

func (m *RouteResult) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

type GroupDeleteEvent struct {
	GroupId          *string `protobuf:"bytes,1,opt,name=GroupId" json:"GroupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupDeleteEvent) Reset()                    { *m = GroupDeleteEvent{} }
func (m *GroupDeleteEvent) String() string            { return proto.CompactTextString(m) }
func (*GroupDeleteEvent) ProtoMessage()               {}
func (*GroupDeleteEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GroupDeleteEvent) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

type GroupUpdateEvent struct {
	GroupId          *string  `protobuf:"bytes,1,opt,name=GroupId" json:"GroupId,omitempty"`
	MemberIds        []string `protobuf:"bytes,2,rep,name=MemberIds" json:"MemberIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GroupUpdateEvent) Reset()                    { *m = GroupUpdateEvent{} }
func (m *GroupUpdateEvent) String() string            { return proto.CompactTextString(m) }
func (*GroupUpdateEvent) ProtoMessage()               {}
func (*GroupUpdateEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GroupUpdateEvent) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *GroupUpdateEvent) GetMemberIds() []string {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

type AgentDeletedEvent struct {
	AgentId          *string `protobuf:"bytes,1,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentDeletedEvent) Reset()                    { *m = AgentDeletedEvent{} }
func (m *AgentDeletedEvent) String() string            { return proto.CompactTextString(m) }
func (*AgentDeletedEvent) ProtoMessage()               {}
func (*AgentDeletedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AgentDeletedEvent) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type AgentUpdateEvent struct {
	AgentId          *string `protobuf:"bytes,1,opt,name=AgentId" json:"AgentId,omitempty"`
	IsActive         *bool   `protobuf:"varint,2,opt,name=IsActive" json:"IsActive,omitempty"`
	IsConfirmed      *bool   `protobuf:"varint,3,opt,name=IsConfirmed" json:"IsConfirmed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AgentUpdateEvent) Reset()                    { *m = AgentUpdateEvent{} }
func (m *AgentUpdateEvent) String() string            { return proto.CompactTextString(m) }
func (*AgentUpdateEvent) ProtoMessage()               {}
func (*AgentUpdateEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AgentUpdateEvent) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentUpdateEvent) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *AgentUpdateEvent) GetIsConfirmed() bool {
	if m != nil && m.IsConfirmed != nil {
		return *m.IsConfirmed
	}
	return false
}

type Ids struct {
	Ids              []string `protobuf:"bytes,1,rep,name=Ids" json:"Ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Ids) Reset()                    { *m = Ids{} }
func (m *Ids) String() string            { return proto.CompactTextString(m) }
func (*Ids) ProtoMessage()               {}
func (*Ids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Ids) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// get number of unread message
type Conversation struct {
	Id        *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Creation time
	CreatedTime *int64 `protobuf:"varint,4,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	// Last active time
	LastActiveTime *int64 `protobuf:"varint,5,opt,name=last_active_time,json=lastActiveTime" json:"last_active_time,omitempty"`
	// Closed time
	ClosedTime       *int64        `protobuf:"varint,6,opt,name=closed_time,json=closedTime" json:"closed_time,omitempty"`
	Users            []*event.User `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
	ChannelId        *string       `protobuf:"bytes,9,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Tags             []string      `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Conversation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Conversation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Conversation) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

func (m *Conversation) GetLastActiveTime() int64 {
	if m != nil && m.LastActiveTime != nil {
		return *m.LastActiveTime
	}
	return 0
}

func (m *Conversation) GetClosedTime() int64 {
	if m != nil && m.ClosedTime != nil {
		return *m.ClosedTime
	}
	return 0
}

func (m *Conversation) GetUsers() []*event.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Conversation) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Conversation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Previews struct {
	Previews         []*Preview `protobuf:"bytes,1,rep,name=previews" json:"previews,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Previews) Reset()                    { *m = Previews{} }
func (m *Previews) String() string            { return proto.CompactTextString(m) }
func (*Previews) ProtoMessage()               {}
func (*Previews) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Previews) GetPreviews() []*Preview {
	if m != nil {
		return m.Previews
	}
	return nil
}

// ChatPreview is a chat header with some events in it
type Preview struct {
	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	Events       []*ChatEvent  `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
	// Unread number of unread event
	Unread           *int64 `protobuf:"varint,3,opt,name=Unread" json:"Unread,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Preview) Reset()                    { *m = Preview{} }
func (m *Preview) String() string            { return proto.CompactTextString(m) }
func (*Preview) ProtoMessage()               {}
func (*Preview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Preview) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Preview) GetEvents() []*ChatEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Preview) GetUnread() int64 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type Attachment struct {
	// Type show type of attachment
	// Value:
	//   Template
	//     - file
	//       + video
	//       + audio
	//       + image
	//     - preview (preview for link)
	//     - content
	//     - template
	//
	//       + receipt, ticket, ...
	//     - quick_replies
	//       + ask_form
	//       + generic_template
	//       + list_template
	//   Input control
	//     - button           -> send list of event to chat
	//     - url
	//     - postback_button (single button)
	//     - textbox           -> contains value
	//     - ratebox            -> rate the chat (like 5 buttons but have beautiful display)
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Payload          *string `protobuf:"bytes,2,opt,name=Payload" json:"Payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Attachment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Attachment) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

type ChatEvents struct {
	Events           []*ChatEvent `protobuf:"bytes,1,rep,name=Events" json:"Events,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ChatEvents) Reset()                    { *m = ChatEvents{} }
func (m *ChatEvents) String() string            { return proto.CompactTextString(m) }
func (*ChatEvents) ProtoMessage()               {}
func (*ChatEvents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ChatEvents) GetEvents() []*ChatEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type ChatEvent struct {
	// ID of chat evet
	Id *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	// Type indicates type of chat event
	Type *ChatEventType `protobuf:"varint,2,opt,name=Type,enum=chat.ChatEventType" json:"Type,omitempty"`
	// AccountId refer to ID of account
	AccountId *string `protobuf:"bytes,4,opt,name=AccountId" json:"AccountId,omitempty"`
	// ChatId refer to ID of chat which contains this chat event
	ChatId *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	// CreatedTime is a RFC3339 string, tell when was event sent
	CreatedTime *string `protobuf:"bytes,5,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	// SenderId refer to who has sent the event, could be Agent, User or System
	SenderId *string `protobuf:"bytes,6,opt,name=SenderId" json:"SenderId,omitempty"`
	// SenderType indicate type of sender
	SenderType *event.UserType `protobuf:"varint,7,opt,name=SenderType,enum=event.UserType" json:"SenderType,omitempty"`
	// Content could be raw text, could be JSON data based on type
	Text *string `protobuf:"bytes,8,opt,name=Text" json:"Text,omitempty"`
	// Could be "", "raw" or "markdown", "html"
	Format           *string       `protobuf:"bytes,9,opt,name=Format" json:"Format,omitempty"`
	Attachments      []*Attachment `protobuf:"bytes,10,rep,name=Attachments" json:"Attachments,omitempty"`
	State            *string       `protobuf:"bytes,11,opt,name=State" json:"State,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ChatEvent) Reset()                    { *m = ChatEvent{} }
func (m *ChatEvent) String() string            { return proto.CompactTextString(m) }
func (*ChatEvent) ProtoMessage()               {}
func (*ChatEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ChatEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ChatEvent) GetType() ChatEventType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ChatEventType_NONE
}

func (m *ChatEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatEvent) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *ChatEvent) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

func (m *ChatEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *ChatEvent) GetSenderType() event.UserType {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return event.UserType_NONE
}

func (m *ChatEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *ChatEvent) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *ChatEvent) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *ChatEvent) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

type UserInfo struct {
	Id               *string  `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name             *string  `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Emails           []string `protobuf:"bytes,3,rep,name=Emails" json:"Emails,omitempty"`
	Phones           []string `protobuf:"bytes,4,rep,name=Phones" json:"Phones,omitempty"`
	Country          *string  `protobuf:"bytes,5,opt,name=Country" json:"Country,omitempty"`
	CountryCode      *string  `protobuf:"bytes,6,opt,name=CountryCode" json:"CountryCode,omitempty"`
	City             *string  `protobuf:"bytes,7,opt,name=City" json:"City,omitempty"`
	TimeZone         *string  `protobuf:"bytes,8,opt,name=TimeZone" json:"TimeZone,omitempty"`
	Segment          []string `protobuf:"bytes,9,rep,name=Segment" json:"Segment,omitempty"`
	Label            []string `protobuf:"bytes,10,rep,name=Label" json:"Label,omitempty"`
	Unsubscribed     *bool    `protobuf:"varint,11,opt,name=Unsubscribed" json:"Unsubscribed,omitempty"`
	MarkedSpam       *bool    `protobuf:"varint,12,opt,name=MarkedSpam" json:"MarkedSpam,omitempty"`
	HardBounced      *bool    `protobuf:"varint,13,opt,name=HardBounced" json:"HardBounced,omitempty"`
	TotalSessions    *int32   `protobuf:"varint,14,opt,name=TotalSessions" json:"TotalSessions,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *UserInfo) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *UserInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UserInfo) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *UserInfo) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *UserInfo) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *UserInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *UserInfo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *UserInfo) GetTimeZone() string {
	if m != nil && m.TimeZone != nil {
		return *m.TimeZone
	}
	return ""
}

func (m *UserInfo) GetSegment() []string {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (m *UserInfo) GetLabel() []string {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *UserInfo) GetUnsubscribed() bool {
	if m != nil && m.Unsubscribed != nil {
		return *m.Unsubscribed
	}
	return false
}

func (m *UserInfo) GetMarkedSpam() bool {
	if m != nil && m.MarkedSpam != nil {
		return *m.MarkedSpam
	}
	return false
}

func (m *UserInfo) GetHardBounced() bool {
	if m != nil && m.HardBounced != nil {
		return *m.HardBounced
	}
	return false
}

func (m *UserInfo) GetTotalSessions() int32 {
	if m != nil && m.TotalSessions != nil {
		return *m.TotalSessions
	}
	return 0
}

type ChatRequestAck struct {
	RequestId        *string     `protobuf:"bytes,15,opt,name=RequestId" json:"RequestId,omitempty"`
	ChatId           *string     `protobuf:"bytes,14,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId        *string     `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=MessageTo" json:"MessageTo,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=PageUrl" json:"PageUrl,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=PageTitle" json:"PageTitle,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=BrowserLanguage" json:"BrowserLanguage,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=DeviceType,enum=chat.DeviceType" json:"DeviceType,omitempty"`
	User             *UserInfo   `protobuf:"bytes,12,opt,name=User" json:"User,omitempty"`
	CreatedTime      *string     `protobuf:"bytes,13,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ChatRequestAck) Reset()                    { *m = ChatRequestAck{} }
func (m *ChatRequestAck) String() string            { return proto.CompactTextString(m) }
func (*ChatRequestAck) ProtoMessage()               {}
func (*ChatRequestAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ChatRequestAck) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *ChatRequestAck) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *ChatRequestAck) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatRequestAck) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ChatRequestAck) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *ChatRequestAck) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *ChatRequestAck) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *ChatRequestAck) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ChatRequestAck) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *ChatRequestAck) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *ChatRequestAck) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *ChatRequestAck) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChatRequestAck) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type ChatRequest struct {
	AccountId        *string     `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=MessageTo" json:"MessageTo,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=PageUrl" json:"PageUrl,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=PageTitle" json:"PageTitle,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=BrowserLanguage" json:"BrowserLanguage,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=DeviceType,enum=chat.DeviceType" json:"DeviceType,omitempty"`
	User             *UserInfo   `protobuf:"bytes,12,opt,name=User" json:"User,omitempty"`
	CreatedTime      *string     `protobuf:"bytes,13,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ChatRequest) Reset()                    { *m = ChatRequest{} }
func (m *ChatRequest) String() string            { return proto.CompactTextString(m) }
func (*ChatRequest) ProtoMessage()               {}
func (*ChatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ChatRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ChatRequest) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *ChatRequest) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *ChatRequest) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *ChatRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *ChatRequest) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *ChatRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *ChatRequest) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *ChatRequest) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChatRequest) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type Conversations struct {
	Conversations    []*Conversation `protobuf:"bytes,1,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Conversations) Reset()                    { *m = Conversations{} }
func (m *Conversations) String() string            { return proto.CompactTextString(m) }
func (*Conversations) ProtoMessage()               {}
func (*Conversations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Conversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type ChatStart struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId        *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId          *string         `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	UserId           *string         `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ChannelId        *string         `protobuf:"bytes,5,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ChatStart) Reset()                    { *m = ChatStart{} }
func (m *ChatStart) String() string            { return proto.CompactTextString(m) }
func (*ChatStart) ProtoMessage()               {}
func (*ChatStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ChatStart) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ChatStart) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ChatStart) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ChatStart) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ChatStart) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type AcceptRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AcceptRequest) Reset()                    { *m = AcceptRequest{} }
func (m *AcceptRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptRequest) ProtoMessage()               {}
func (*AcceptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AcceptRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AcceptRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AcceptRequest) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

type ListUnassignChatsRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	StartId          *string `protobuf:"bytes,2,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,3,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListUnassignChatsRequest) Reset()                    { *m = ListUnassignChatsRequest{} }
func (m *ListUnassignChatsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUnassignChatsRequest) ProtoMessage()               {}
func (*ListUnassignChatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ListUnassignChatsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListUnassignChatsRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListUnassignChatsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type UnassignChat struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	IsAssigned       *bool    `protobuf:"varint,2,opt,name=IsAssigned" json:"IsAssigned,omitempty"`
	Message          *string  `protobuf:"bytes,3,opt,name=Message" json:"Message,omitempty"`
	Ip               *string  `protobuf:"bytes,4,opt,name=Ip" json:"Ip,omitempty"`
	Name             *string  `protobuf:"bytes,5,opt,name=Name" json:"Name,omitempty"`
	Emails           []string `protobuf:"bytes,6,rep,name=Emails" json:"Emails,omitempty"`
	Phones           []string `protobuf:"bytes,7,rep,name=Phones" json:"Phones,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UnassignChat) Reset()                    { *m = UnassignChat{} }
func (m *UnassignChat) String() string            { return proto.CompactTextString(m) }
func (*UnassignChat) ProtoMessage()               {}
func (*UnassignChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *UnassignChat) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UnassignChat) GetIsAssigned() bool {
	if m != nil && m.IsAssigned != nil {
		return *m.IsAssigned
	}
	return false
}

func (m *UnassignChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *UnassignChat) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *UnassignChat) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UnassignChat) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *UnassignChat) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

type Bools struct {
	Bools            []bool `protobuf:"varint,1,rep,name=Bools" json:"Bools,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Bools) Reset()                    { *m = Bools{} }
func (m *Bools) String() string            { return proto.CompactTextString(m) }
func (*Bools) ProtoMessage()               {}
func (*Bools) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Bools) GetBools() []bool {
	if m != nil {
		return m.Bools
	}
	return nil
}

type ListUsersUnreadRequest struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	AgentId          *string  `protobuf:"bytes,2,opt,name=AgentId" json:"AgentId,omitempty"`
	UserIds          []string `protobuf:"bytes,3,rep,name=UserIds" json:"UserIds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ListUsersUnreadRequest) Reset()                    { *m = ListUsersUnreadRequest{} }
func (m *ListUsersUnreadRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersUnreadRequest) ProtoMessage()               {}
func (*ListUsersUnreadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ListUsersUnreadRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ListUsersUnreadRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type Unread struct {
	UserId           *string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Unread           *int32  `protobuf:"varint,2,opt,name=Unread" json:"Unread,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Unread) Reset()                    { *m = Unread{} }
func (m *Unread) String() string            { return proto.CompactTextString(m) }
func (*Unread) ProtoMessage()               {}
func (*Unread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Unread) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Unread) GetUnread() int32 {
	if m != nil && m.Unread != nil {
		return *m.Unread
	}
	return 0
}

type UsersUnread struct {
	Unreads          []*Unread `protobuf:"bytes,1,rep,name=Unreads" json:"Unreads,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UsersUnread) Reset()                    { *m = UsersUnread{} }
func (m *UsersUnread) String() string            { return proto.CompactTextString(m) }
func (*UsersUnread) ProtoMessage()               {}
func (*UsersUnread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *UsersUnread) GetUnreads() []*Unread {
	if m != nil {
		return m.Unreads
	}
	return nil
}

type ListChatEventRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	StartId          *string `protobuf:"bytes,3,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,4,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListChatEventRequest) Reset()                    { *m = ListChatEventRequest{} }
func (m *ListChatEventRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChatEventRequest) ProtoMessage()               {}
func (*ListChatEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ListChatEventRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListChatEventRequest) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *ListChatEventRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListChatEventRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type ListChatsByUserRequest struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string `protobuf:"bytes,2,opt,name=ChannelId" json:"ChannelId,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=UserId" json:"UserId,omitempty"`
	StartId          *string `protobuf:"bytes,4,opt,name=StartId" json:"StartId,omitempty"`
	Limit            *int32  `protobuf:"varint,5,opt,name=Limit" json:"Limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListChatsByUserRequest) Reset()                    { *m = ListChatsByUserRequest{} }
func (m *ListChatsByUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChatsByUserRequest) ProtoMessage()               {}
func (*ListChatsByUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ListChatsByUserRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetStartId() string {
	if m != nil && m.StartId != nil {
		return *m.StartId
	}
	return ""
}

func (m *ListChatsByUserRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

// Topic Chat.Assigned
type OEChatAssigned struct {
	ChatId           *string       `protobuf:"bytes,4,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId        *string       `protobuf:"bytes,3,opt,name=AccountId" json:"AccountId,omitempty"`
	CreatedTime      *string       `protobuf:"bytes,5,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	Users            []*event.User `protobuf:"bytes,6,rep,name=Users" json:"Users,omitempty"`
	ChannelId        *string       `protobuf:"bytes,7,opt,name=ChannelId" json:"ChannelId,omitempty"`
	Tags             []string      `protobuf:"bytes,8,rep,name=Tags" json:"Tags,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *OEChatAssigned) Reset()                    { *m = OEChatAssigned{} }
func (m *OEChatAssigned) String() string            { return proto.CompactTextString(m) }
func (*OEChatAssigned) ProtoMessage()               {}
func (*OEChatAssigned) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *OEChatAssigned) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatAssigned) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatAssigned) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

func (m *OEChatAssigned) GetUsers() []*event.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *OEChatAssigned) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *OEChatAssigned) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Topic Chat.Waiting
type OEChatWaiting struct {
	// string RequestId = 1;
	// string Event = 2;
	ChatId    *string `protobuf:"bytes,4,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId *string `protobuf:"bytes,3,opt,name=AccountId" json:"AccountId,omitempty"`
	// 	string CreatedTime = 5;
	User             *UserInfo `protobuf:"bytes,6,opt,name=User" json:"User,omitempty"`
	ChannelId        *string   `protobuf:"bytes,7,opt,name=ChannelId" json:"ChannelId,omitempty"`
	Tags             []string  `protobuf:"bytes,8,rep,name=Tags" json:"Tags,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *OEChatWaiting) Reset()                    { *m = OEChatWaiting{} }
func (m *OEChatWaiting) String() string            { return proto.CompactTextString(m) }
func (*OEChatWaiting) ProtoMessage()               {}
func (*OEChatWaiting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *OEChatWaiting) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatWaiting) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatWaiting) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OEChatWaiting) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *OEChatWaiting) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type EvChatCreated struct {
	RequestId        *string       `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	Ok               *bool         `protobuf:"varint,2,opt,name=Ok" json:"Ok,omitempty"`
	Event            *string       `protobuf:"bytes,3,opt,name=Event" json:"Event,omitempty"`
	AccountId        *string       `protobuf:"bytes,4,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string       `protobuf:"bytes,5,opt,name=ChatId" json:"ChatId,omitempty"`
	Users            []*event.User `protobuf:"bytes,6,rep,name=Users" json:"Users,omitempty"`
	ChannelId        *string       `protobuf:"bytes,7,opt,name=ChannelId" json:"ChannelId,omitempty"`
	CreatedTime      *string       `protobuf:"bytes,8,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *EvChatCreated) Reset()                    { *m = EvChatCreated{} }
func (m *EvChatCreated) String() string            { return proto.CompactTextString(m) }
func (*EvChatCreated) ProtoMessage()               {}
func (*EvChatCreated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *EvChatCreated) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatCreated) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *EvChatCreated) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

func (m *EvChatCreated) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *EvChatCreated) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *EvChatCreated) GetUsers() []*event.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *EvChatCreated) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *EvChatCreated) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type OEChatDropped struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	ChannelId        *string `protobuf:"bytes,3,opt,name=ChannelId" json:"ChannelId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatDropped) Reset()                    { *m = OEChatDropped{} }
func (m *OEChatDropped) String() string            { return proto.CompactTextString(m) }
func (*OEChatDropped) ProtoMessage()               {}
func (*OEChatDropped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *OEChatDropped) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatDropped) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatDropped) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type OEChatAccepted struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	AgentId          *string `protobuf:"bytes,4,opt,name=AgentId" json:"AgentId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatAccepted) Reset()                    { *m = OEChatAccepted{} }
func (m *OEChatAccepted) String() string            { return proto.CompactTextString(m) }
func (*OEChatAccepted) ProtoMessage()               {}
func (*OEChatAccepted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *OEChatAccepted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatAccepted) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatAccepted) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type OEChatStarted struct {
	AccountId        *string `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	ChatId           *string `protobuf:"bytes,3,opt,name=ChatId" json:"ChatId,omitempty"`
	ChannelId        *string `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	CreatedTime      *string `protobuf:"bytes,5,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEChatStarted) Reset()                    { *m = OEChatStarted{} }
func (m *OEChatStarted) String() string            { return proto.CompactTextString(m) }
func (*OEChatStarted) ProtoMessage()               {}
func (*OEChatStarted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *OEChatStarted) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEChatStarted) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *OEChatStarted) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *OEChatStarted) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type EvChatResult struct {
	RequestId        *string `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	Ok               *bool   `protobuf:"varint,2,opt,name=Ok" json:"Ok,omitempty"`
	Code             *int32  `protobuf:"varint,3,opt,name=Code" json:"Code,omitempty"`
	CreatedTime      *string `protobuf:"bytes,4,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	Description      *string `protobuf:"bytes,5,opt,name=Description" json:"Description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EvChatResult) Reset()                    { *m = EvChatResult{} }
func (m *EvChatResult) String() string            { return proto.CompactTextString(m) }
func (*EvChatResult) ProtoMessage()               {}
func (*EvChatResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *EvChatResult) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatResult) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *EvChatResult) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *EvChatResult) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

func (m *EvChatResult) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type EvChatUserInfoRequested struct {
	RequestId        *string     `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	ChatId           *string     `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId        *string     `protobuf:"bytes,3,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=MessageTo" json:"MessageTo,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=PageUrl" json:"PageUrl,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=PageTitle" json:"PageTitle,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=BrowserLanguage" json:"BrowserLanguage,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=DeviceType,enum=chat.DeviceType" json:"DeviceType,omitempty"`
	UserId           *string     `protobuf:"bytes,12,opt,name=UserId" json:"UserId,omitempty"`
	CreatedTime      *string     `protobuf:"bytes,13,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *EvChatUserInfoRequested) Reset()                    { *m = EvChatUserInfoRequested{} }
func (m *EvChatUserInfoRequested) String() string            { return proto.CompactTextString(m) }
func (*EvChatUserInfoRequested) ProtoMessage()               {}
func (*EvChatUserInfoRequested) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *EvChatUserInfoRequested) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *EvChatUserInfoRequested) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *EvChatUserInfoRequested) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type EvChatUserInfoReply struct {
	RequestId        *string     `protobuf:"bytes,1,opt,name=RequestId" json:"RequestId,omitempty"`
	ChatId           *string     `protobuf:"bytes,2,opt,name=ChatId" json:"ChatId,omitempty"`
	AccountId        *string     `protobuf:"bytes,3,opt,name=AccountId" json:"AccountId,omitempty"`
	ChannelId        *string     `protobuf:"bytes,4,opt,name=ChannelId" json:"ChannelId,omitempty"`
	MessageTo        *string     `protobuf:"bytes,5,opt,name=MessageTo" json:"MessageTo,omitempty"`
	PageUrl          *string     `protobuf:"bytes,6,opt,name=PageUrl" json:"PageUrl,omitempty"`
	PageTitle        *string     `protobuf:"bytes,7,opt,name=PageTitle" json:"PageTitle,omitempty"`
	Message          *string     `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	BrowserLanguage  *string     `protobuf:"bytes,9,opt,name=BrowserLanguage" json:"BrowserLanguage,omitempty"`
	Language         *string     `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
	DeviceType       *DeviceType `protobuf:"varint,11,opt,name=DeviceType,enum=chat.DeviceType" json:"DeviceType,omitempty"`
	User             *UserInfo   `protobuf:"bytes,12,opt,name=User" json:"User,omitempty"`
	CreatedTime      *string     `protobuf:"bytes,13,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *EvChatUserInfoReply) Reset()                    { *m = EvChatUserInfoReply{} }
func (m *EvChatUserInfoReply) String() string            { return proto.CompactTextString(m) }
func (*EvChatUserInfoReply) ProtoMessage()               {}
func (*EvChatUserInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *EvChatUserInfoReply) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *EvChatUserInfoReply) GetChatId() string {
	if m != nil && m.ChatId != nil {
		return *m.ChatId
	}
	return ""
}

func (m *EvChatUserInfoReply) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *EvChatUserInfoReply) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *EvChatUserInfoReply) GetMessageTo() string {
	if m != nil && m.MessageTo != nil {
		return *m.MessageTo
	}
	return ""
}

func (m *EvChatUserInfoReply) GetPageUrl() string {
	if m != nil && m.PageUrl != nil {
		return *m.PageUrl
	}
	return ""
}

func (m *EvChatUserInfoReply) GetPageTitle() string {
	if m != nil && m.PageTitle != nil {
		return *m.PageTitle
	}
	return ""
}

func (m *EvChatUserInfoReply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EvChatUserInfoReply) GetBrowserLanguage() string {
	if m != nil && m.BrowserLanguage != nil {
		return *m.BrowserLanguage
	}
	return ""
}

func (m *EvChatUserInfoReply) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *EvChatUserInfoReply) GetDeviceType() DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *EvChatUserInfoReply) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *EvChatUserInfoReply) GetCreatedTime() string {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return ""
}

type FileTemplate struct {
	Id               *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FileTemplate) Reset()                    { *m = FileTemplate{} }
func (m *FileTemplate) String() string            { return proto.CompactTextString(m) }
func (*FileTemplate) ProtoMessage()               {}
func (*FileTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *FileTemplate) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type QuickRepliesTemplate struct {
	Text             *string   `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
	ContentType      *string   `protobuf:"bytes,4,opt,name=ContentType" json:"ContentType,omitempty"`
	Replies          []*Button `protobuf:"bytes,5,rep,name=Replies" json:"Replies,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *QuickRepliesTemplate) Reset()                    { *m = QuickRepliesTemplate{} }
func (m *QuickRepliesTemplate) String() string            { return proto.CompactTextString(m) }
func (*QuickRepliesTemplate) ProtoMessage()               {}
func (*QuickRepliesTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *QuickRepliesTemplate) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *QuickRepliesTemplate) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *QuickRepliesTemplate) GetReplies() []*Button {
	if m != nil {
		return m.Replies
	}
	return nil
}

type GenericElement struct {
	Title            *string   `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	ImageUrl         *string   `protobuf:"bytes,2,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	Subtitle         *string   `protobuf:"bytes,3,opt,name=Subtitle" json:"Subtitle,omitempty"`
	DefaultAction    *Button   `protobuf:"bytes,4,opt,name=DefaultAction" json:"DefaultAction,omitempty"`
	Buttons          []*Button `protobuf:"bytes,5,rep,name=Buttons" json:"Buttons,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GenericElement) Reset()                    { *m = GenericElement{} }
func (m *GenericElement) String() string            { return proto.CompactTextString(m) }
func (*GenericElement) ProtoMessage()               {}
func (*GenericElement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *GenericElement) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *GenericElement) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *GenericElement) GetSubtitle() string {
	if m != nil && m.Subtitle != nil {
		return *m.Subtitle
	}
	return ""
}

func (m *GenericElement) GetDefaultAction() *Button {
	if m != nil {
		return m.DefaultAction
	}
	return nil
}

func (m *GenericElement) GetButtons() []*Button {
	if m != nil {
		return m.Buttons
	}
	return nil
}

type GenericTemplate struct {
	Elements         []*GenericElement `protobuf:"bytes,1,rep,name=Elements" json:"Elements,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GenericTemplate) Reset()                    { *m = GenericTemplate{} }
func (m *GenericTemplate) String() string            { return proto.CompactTextString(m) }
func (*GenericTemplate) ProtoMessage()               {}
func (*GenericTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *GenericTemplate) GetElements() []*GenericElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type Button struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Button) Reset()                    { *m = Button{} }
func (m *Button) String() string            { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()               {}
func (*Button) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *Button) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type UrlButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=Url" json:"Url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UrlButton) Reset()                    { *m = UrlButton{} }
func (m *UrlButton) String() string            { return proto.CompactTextString(m) }
func (*UrlButton) ProtoMessage()               {}
func (*UrlButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *UrlButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *UrlButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *UrlButton) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type PostbackButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Payload          *string `protobuf:"bytes,3,opt,name=Payload" json:"Payload,omitempty"`
	ImageUrl         *string `protobuf:"bytes,4,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostbackButton) Reset()                    { *m = PostbackButton{} }
func (m *PostbackButton) String() string            { return proto.CompactTextString(m) }
func (*PostbackButton) ProtoMessage()               {}
func (*PostbackButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *PostbackButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PostbackButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PostbackButton) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *PostbackButton) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

type CallButton struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CallButton) Reset()                    { *m = CallButton{} }
func (m *CallButton) String() string            { return proto.CompactTextString(m) }
func (*CallButton) ProtoMessage()               {}
func (*CallButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

type LoginButton struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginButton) Reset()                    { *m = LoginButton{} }
func (m *LoginButton) String() string            { return proto.CompactTextString(m) }
func (*LoginButton) ProtoMessage()               {}
func (*LoginButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

type EventButton struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	ImageUrl         *string `protobuf:"bytes,4,opt,name=ImageUrl" json:"ImageUrl,omitempty"`
	Event            *string `protobuf:"bytes,3,opt,name=Event" json:"Event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EventButton) Reset()                    { *m = EventButton{} }
func (m *EventButton) String() string            { return proto.CompactTextString(m) }
func (*EventButton) ProtoMessage()               {}
func (*EventButton) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *EventButton) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *EventButton) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *EventButton) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *EventButton) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

type SurveyForm struct {
	Placeholder      *string `protobuf:"bytes,1,opt,name=Placeholder" json:"Placeholder,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SurveyForm) Reset()                    { *m = SurveyForm{} }
func (m *SurveyForm) String() string            { return proto.CompactTextString(m) }
func (*SurveyForm) ProtoMessage()               {}
func (*SurveyForm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *SurveyForm) GetPlaceholder() string {
	if m != nil && m.Placeholder != nil {
		return *m.Placeholder
	}
	return ""
}

type RateFormTemplate struct {
	Type             *string `protobuf:"bytes,1,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RateFormTemplate) Reset()                    { *m = RateFormTemplate{} }
func (m *RateFormTemplate) String() string            { return proto.CompactTextString(m) }
func (*RateFormTemplate) ProtoMessage()               {}
func (*RateFormTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *RateFormTemplate) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*UnassignedConversation)(nil), "chat.UnassignedConversation")
	proto.RegisterType((*UnassignedChats)(nil), "chat.UnassignedChats")
	proto.RegisterType((*Id)(nil), "chat.Id")
	proto.RegisterType((*Permission)(nil), "chat.Permission")
	proto.RegisterType((*AgentId)(nil), "chat.AgentId")
	proto.RegisterType((*AgentInGroup)(nil), "chat.AgentInGroup")
	proto.RegisterType((*AgentStatus)(nil), "chat.AgentStatus")
	proto.RegisterType((*Account)(nil), "chat.Account")
	proto.RegisterType((*Bool)(nil), "chat.Bool")
	proto.RegisterType((*RuleId)(nil), "chat.RuleId")
	proto.RegisterType((*Idx)(nil), "chat.Idx")
	proto.RegisterType((*Rule)(nil), "chat.Rule")
	proto.RegisterType((*Condition)(nil), "chat.Condition")
	proto.RegisterType((*Route)(nil), "chat.Route")
	proto.RegisterType((*RouteResult)(nil), "chat.RouteResult")
	proto.RegisterType((*GroupDeleteEvent)(nil), "chat.GroupDeleteEvent")
	proto.RegisterType((*GroupUpdateEvent)(nil), "chat.GroupUpdateEvent")
	proto.RegisterType((*AgentDeletedEvent)(nil), "chat.AgentDeletedEvent")
	proto.RegisterType((*AgentUpdateEvent)(nil), "chat.AgentUpdateEvent")
	proto.RegisterType((*Ids)(nil), "chat.Ids")
	proto.RegisterType((*Conversation)(nil), "chat.Conversation")
	proto.RegisterType((*Previews)(nil), "chat.Previews")
	proto.RegisterType((*Preview)(nil), "chat.Preview")
	proto.RegisterType((*Attachment)(nil), "chat.Attachment")
	proto.RegisterType((*ChatEvents)(nil), "chat.ChatEvents")
	proto.RegisterType((*ChatEvent)(nil), "chat.ChatEvent")
	proto.RegisterType((*UserInfo)(nil), "chat.UserInfo")
	proto.RegisterType((*ChatRequestAck)(nil), "chat.ChatRequestAck")
	proto.RegisterType((*ChatRequest)(nil), "chat.ChatRequest")
	proto.RegisterType((*Conversations)(nil), "chat.Conversations")
	proto.RegisterType((*ChatStart)(nil), "chat.ChatStart")
	proto.RegisterType((*AcceptRequest)(nil), "chat.AcceptRequest")
	proto.RegisterType((*ListUnassignChatsRequest)(nil), "chat.ListUnassignChatsRequest")
	proto.RegisterType((*UnassignChat)(nil), "chat.UnassignChat")
	proto.RegisterType((*Bools)(nil), "chat.Bools")
	proto.RegisterType((*ListUsersUnreadRequest)(nil), "chat.ListUsersUnreadRequest")
	proto.RegisterType((*Unread)(nil), "chat.Unread")
	proto.RegisterType((*UsersUnread)(nil), "chat.UsersUnread")
	proto.RegisterType((*ListChatEventRequest)(nil), "chat.ListChatEventRequest")
	proto.RegisterType((*ListChatsByUserRequest)(nil), "chat.ListChatsByUserRequest")
	proto.RegisterType((*OEChatAssigned)(nil), "chat.OEChatAssigned")
	proto.RegisterType((*OEChatWaiting)(nil), "chat.OEChatWaiting")
	proto.RegisterType((*EvChatCreated)(nil), "chat.EvChatCreated")
	proto.RegisterType((*OEChatDropped)(nil), "chat.OEChatDropped")
	proto.RegisterType((*OEChatAccepted)(nil), "chat.OEChatAccepted")
	proto.RegisterType((*OEChatStarted)(nil), "chat.OEChatStarted")
	proto.RegisterType((*EvChatResult)(nil), "chat.EvChatResult")
	proto.RegisterType((*EvChatUserInfoRequested)(nil), "chat.EvChatUserInfoRequested")
	proto.RegisterType((*EvChatUserInfoReply)(nil), "chat.EvChatUserInfoReply")
	proto.RegisterType((*FileTemplate)(nil), "chat.FileTemplate")
	proto.RegisterType((*QuickRepliesTemplate)(nil), "chat.QuickRepliesTemplate")
	proto.RegisterType((*GenericElement)(nil), "chat.GenericElement")
	proto.RegisterType((*GenericTemplate)(nil), "chat.GenericTemplate")
	proto.RegisterType((*Button)(nil), "chat.Button")
	proto.RegisterType((*UrlButton)(nil), "chat.UrlButton")
	proto.RegisterType((*PostbackButton)(nil), "chat.PostbackButton")
	proto.RegisterType((*CallButton)(nil), "chat.CallButton")
	proto.RegisterType((*LoginButton)(nil), "chat.LoginButton")
	proto.RegisterType((*EventButton)(nil), "chat.EventButton")
	proto.RegisterType((*SurveyForm)(nil), "chat.SurveyForm")
	proto.RegisterType((*RateFormTemplate)(nil), "chat.RateFormTemplate")
	proto.RegisterEnum("chat.JoinOperator", JoinOperator_name, JoinOperator_value)
	proto.RegisterEnum("chat.AssignStrategy", AssignStrategy_name, AssignStrategy_value)
	proto.RegisterEnum("chat.ChatEventType", ChatEventType_name, ChatEventType_value)
	proto.RegisterEnum("chat.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("chat.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("chat/chat.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2798 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x39, 0xcd, 0x6f, 0xdb, 0xc8,
	0xf5, 0x91, 0xa8, 0xcf, 0xa7, 0x0f, 0x73, 0x27, 0x4e, 0xa2, 0xf8, 0x97, 0xcd, 0x3a, 0xc4, 0x62,
	0xd7, 0x09, 0x7e, 0x75, 0x52, 0x03, 0xd9, 0x6e, 0x7b, 0x28, 0x20, 0xcb, 0x8a, 0xab, 0x8d, 0x2d,
	0xa9, 0x94, 0xb4, 0xdb, 0xf6, 0xe2, 0xa5, 0xc5, 0x59, 0x9b, 0x6b, 0x8a, 0x54, 0x49, 0xca, 0x1b,
	0x2f, 0x7a, 0x69, 0x81, 0xf6, 0x2f, 0xe8, 0xa9, 0xed, 0xa1, 0x68, 0xcf, 0x05, 0x0a, 0x14, 0xbd,
	0x14, 0xe8, 0xdf, 0xd2, 0x7f, 0xa0, 0xf7, 0x5e, 0x8b, 0xf7, 0x66, 0x86, 0x22, 0xe9, 0xcf, 0x64,
	0x8b, 0xa2, 0x87, 0x5c, 0xec, 0x79, 0x1f, 0x9c, 0x79, 0xf3, 0xbe, 0xdf, 0x08, 0x56, 0xa6, 0xc7,
	0x56, 0xf4, 0x14, 0xff, 0x6c, 0xce, 0x03, 0x3f, 0xf2, 0x59, 0x01, 0xd7, 0x6b, 0xcf, 0x0f, 0x9d,
	0xe8, 0x70, 0x31, 0x3d, 0xe1, 0xd1, 0xa6, 0x1f, 0x1c, 0x3d, 0x0d, 0x17, 0x87, 0xce, 0xd7, 0x4f,
	0x43, 0x1e, 0x9c, 0x3a, 0x53, 0x1e, 0xce, 0xf9, 0xf4, 0x29, 0x31, 0x3f, 0xb5, 0x16, 0xd1, 0x31,
	0xfd, 0x11, 0x1f, 0xaf, 0x7d, 0xe7, 0x66, 0x9f, 0xf1, 0x53, 0xee, 0x45, 0xe2, 0xaf, 0xfc, 0xf0,
	0xbb, 0x37, 0xfb, 0x70, 0xea, 0xcf, 0x66, 0xbe, 0x27, 0xff, 0x89, 0x4f, 0x8d, 0xdf, 0x68, 0x70,
	0x77, 0xe2, 0x59, 0x61, 0xe8, 0x1c, 0x79, 0xdc, 0xee, 0xf8, 0xde, 0x29, 0x0f, 0x42, 0x2b, 0x72,
	0x7c, 0x8f, 0xbd, 0x0b, 0x60, 0x4d, 0xa7, 0xfe, 0xc2, 0x8b, 0x0e, 0x1c, 0xbb, 0x95, 0x5b, 0xcf,
	0x6d, 0x54, 0xcd, 0xaa, 0xc4, 0xf4, 0x6c, 0xd6, 0x84, 0xbc, 0x63, 0xb7, 0xf2, 0x84, 0xce, 0x3b,
	0x36, 0xb2, 0x4f, 0x8f, 0x2d, 0xcf, 0xe3, 0x2e, 0xb2, 0x17, 0x04, 0xbb, 0xc4, 0xf4, 0x88, 0x3c,
	0xe3, 0x61, 0x68, 0x1d, 0xf1, 0x83, 0xc8, 0x6f, 0x15, 0x05, 0x59, 0x62, 0xc6, 0x3e, 0xbb, 0x0f,
	0x95, 0x39, 0xd2, 0x16, 0x81, 0xdb, 0x2a, 0x11, 0xb1, 0x8c, 0xf0, 0x24, 0x70, 0xf1, 0x4b, 0x22,
	0x45, 0x4e, 0xe4, 0xf2, 0x56, 0x59, 0x7c, 0x89, 0x98, 0x31, 0x22, 0x58, 0x0b, 0xca, 0x72, 0x9b,
	0x56, 0x45, 0x7c, 0x28, 0x41, 0xf6, 0x18, 0xf4, 0xc3, 0xc0, 0xff, 0x2a, 0xe4, 0xc1, 0x81, 0x6b,
	0x79, 0x47, 0x0b, 0x64, 0xa9, 0x12, 0xcb, 0x8a, 0xc4, 0xef, 0x49, 0x34, 0x5b, 0x83, 0x4a, 0xcc,
	0x02, 0xc4, 0x12, 0xc3, 0xec, 0xdb, 0x50, 0xb3, 0x39, 0xaa, 0xf2, 0x20, 0x3a, 0x9b, 0xf3, 0x56,
	0x6d, 0x3d, 0xb7, 0xd1, 0xdc, 0xd2, 0x37, 0xc9, 0xea, 0x3b, 0x44, 0x18, 0x9f, 0xcd, 0xb9, 0x09,
	0x76, 0xbc, 0x66, 0x06, 0x14, 0x16, 0x21, 0x0f, 0x5a, 0xf5, 0xf5, 0xdc, 0x46, 0x6d, 0xab, 0x29,
	0x78, 0x27, 0x21, 0x0f, 0x7a, 0xde, 0x17, 0xbe, 0x49, 0x34, 0xf6, 0x08, 0xea, 0xd3, 0x80, 0x5b,
	0x11, 0xb7, 0x0f, 0x22, 0x67, 0xc6, 0x5b, 0x8d, 0xf5, 0xdc, 0x86, 0x66, 0xd6, 0x24, 0x6e, 0xec,
	0xcc, 0xb8, 0xd1, 0x85, 0x95, 0x84, 0x6d, 0x8e, 0xad, 0x28, 0x64, 0x5b, 0x50, 0xc4, 0xcd, 0xc2,
	0x56, 0x6e, 0x5d, 0xdb, 0xa8, 0x6d, 0x3d, 0x90, 0x5b, 0x5f, 0x68, 0x41, 0x53, 0xb0, 0x1a, 0x9f,
	0x42, 0xbe, 0x67, 0xb3, 0x47, 0xa0, 0x4d, 0xa3, 0x57, 0x64, 0xc7, 0xda, 0xd6, 0xca, 0xa6, 0xf4,
	0x82, 0x8e, 0xef, 0x45, 0xfc, 0x55, 0x64, 0x22, 0x2d, 0x63, 0xf1, 0xfc, 0xc5, 0x16, 0xd7, 0x94,
	0xc5, 0x8d, 0x2f, 0x01, 0x86, 0x3c, 0x98, 0x39, 0x61, 0x88, 0xee, 0xf2, 0x00, 0xaa, 0x6d, 0xc5,
	0xaa, 0xbc, 0x25, 0x46, 0xa0, 0x95, 0xda, 0x47, 0x9c, 0x68, 0x62, 0x5f, 0x05, 0xb2, 0xf7, 0xa1,
	0xb4, 0xcf, 0xa3, 0x63, 0x5f, 0xec, 0x5c, 0xdb, 0xaa, 0x6f, 0x52, 0x48, 0x08, 0x9c, 0x29, 0x69,
	0x46, 0x3b, 0xfe, 0xfe, 0x4d, 0x0f, 0x32, 0x3e, 0x87, 0xba, 0x58, 0x7a, 0xbb, 0x81, 0xbf, 0x98,
	0xbf, 0xb1, 0xc0, 0x2d, 0x28, 0xd3, 0x06, 0x3d, 0xa5, 0x0b, 0x05, 0x1a, 0x16, 0xd4, 0x88, 0x69,
	0x14, 0x59, 0xd1, 0x22, 0x7c, 0xe3, 0x03, 0xd6, 0xa0, 0xd2, 0x0b, 0xdb, 0xd3, 0xc8, 0x39, 0xe5,
	0x74, 0x42, 0xc5, 0x8c, 0x61, 0xe3, 0x47, 0x50, 0x96, 0x5b, 0xdc, 0xc4, 0xa0, 0x4d, 0xb4, 0xbc,
	0x8a, 0x51, 0xb1, 0xf3, 0xbe, 0xf5, 0xca, 0x5c, 0xb8, 0x3c, 0xa4, 0x9d, 0x8b, 0x66, 0x0c, 0x1b,
	0x6b, 0x50, 0xd8, 0xf6, 0x7d, 0x97, 0x31, 0xf1, 0x9f, 0xf6, 0xad, 0x98, 0xb4, 0x36, 0x3e, 0x82,
	0x12, 0x32, 0x5d, 0xab, 0xfc, 0xcc, 0x79, 0xc6, 0x1d, 0xd0, 0x7a, 0xb6, 0x12, 0x23, 0x17, 0xa3,
	0xff, 0x92, 0x87, 0x02, 0xee, 0x77, 0xc3, 0x2b, 0x64, 0xd3, 0x4c, 0xc2, 0x47, 0xb5, 0xac, 0x8f,
	0xae, 0x41, 0x65, 0x1e, 0x38, 0x7e, 0xe0, 0x44, 0x67, 0x32, 0x07, 0xc5, 0x30, 0x7b, 0x06, 0x95,
	0x30, 0x0a, 0xac, 0x88, 0x1f, 0x9d, 0x51, 0x02, 0x6a, 0x6e, 0xad, 0x8a, 0xf0, 0x69, 0x53, 0xf0,
	0x8c, 0x24, 0xcd, 0x8c, 0xb9, 0xe8, 0x30, 0xa2, 0x1d, 0x44, 0x7e, 0xd8, 0x2a, 0xad, 0x6b, 0x74,
	0x18, 0x61, 0xc6, 0x7e, 0xc8, 0x9e, 0x02, 0x4c, 0x7d, 0xcf, 0x76, 0x30, 0xd8, 0xc2, 0x56, 0x99,
	0x22, 0x72, 0x45, 0x6c, 0xd9, 0x51, 0x78, 0x33, 0xc1, 0x82, 0x36, 0xe7, 0x9e, 0x75, 0xe8, 0x72,
	0x9b, 0x72, 0x55, 0xc5, 0x54, 0xe0, 0xb9, 0x6c, 0x50, 0x3d, 0x9f, 0x0d, 0xbe, 0x82, 0x6a, 0xbc,
	0x2b, 0xfb, 0x00, 0x0a, 0x9f, 0xf8, 0x8e, 0x47, 0xaa, 0x6b, 0x6e, 0x31, 0x71, 0x28, 0x62, 0x06,
	0x73, 0x1e, 0x58, 0x91, 0x1f, 0x98, 0x44, 0x67, 0x3a, 0x68, 0x2f, 0xf9, 0x99, 0xd4, 0x1f, 0x2e,
	0x51, 0x43, 0x8a, 0x47, 0xaa, 0x2f, 0x86, 0xd9, 0x2a, 0x14, 0x3f, 0xb5, 0xdc, 0x05, 0x97, 0xaa,
	0x13, 0x80, 0xf1, 0x18, 0x8a, 0xa6, 0xbf, 0x88, 0x38, 0x5b, 0x87, 0xa2, 0xf0, 0x1d, 0x91, 0x7c,
	0x40, 0x9c, 0x8a, 0x28, 0x53, 0x10, 0x8c, 0x10, 0x6a, 0xc4, 0x6a, 0xf2, 0x70, 0xe1, 0x46, 0xec,
	0xae, 0xf2, 0x1b, 0x69, 0x7c, 0xe5, 0x45, 0xcf, 0xa0, 0xa2, 0xb4, 0x4d, 0x32, 0x5c, 0x6a, 0x09,
	0xb5, 0x42, 0xa9, 0x65, 0x78, 0x84, 0xad, 0x02, 0xd9, 0x21, 0x86, 0x8d, 0xff, 0x07, 0x9d, 0x22,
	0x70, 0x87, 0xbb, 0x3c, 0xe2, 0x5d, 0x2c, 0x8c, 0xc9, 0x20, 0xcd, 0xa5, 0x83, 0xf4, 0x13, 0xc9,
	0x3d, 0x99, 0xdb, 0xd6, 0xb5, 0xdc, 0xe8, 0xef, 0xfb, 0x7c, 0x76, 0xc8, 0x03, 0x3c, 0x38, 0x2f,
	0x1c, 0x20, 0x46, 0x18, 0xdf, 0x82, 0x77, 0x48, 0x0a, 0x71, 0xb2, 0x1d, 0x6f, 0xa6, 0x02, 0x3b,
	0x97, 0xce, 0x40, 0x5f, 0x82, 0x4e, 0xcb, 0xcc, 0xd1, 0x17, 0x73, 0xa7, 0xd2, 0x40, 0x3e, 0x9d,
	0x06, 0xd8, 0x3a, 0xd4, 0x7a, 0x61, 0xc7, 0xf7, 0xbe, 0x70, 0x82, 0x19, 0xb7, 0x65, 0x96, 0x48,
	0xa2, 0x8c, 0x7b, 0x18, 0x7a, 0x21, 0xda, 0x1f, 0x25, 0xcf, 0x91, 0xe4, 0xb8, 0x34, 0x7e, 0x9e,
	0x87, 0x7a, 0xaa, 0xce, 0xbf, 0x66, 0x84, 0x65, 0x3d, 0xb5, 0x70, 0xce, 0x53, 0xd9, 0x06, 0xe8,
	0xae, 0x15, 0x46, 0x07, 0x16, 0x09, 0x2b, 0xd8, 0x8a, 0xc4, 0xd6, 0x44, 0xbc, 0xb8, 0x03, 0x71,
	0xbe, 0x07, 0xb5, 0xa9, 0xeb, 0x87, 0x6a, 0xaf, 0x12, 0x31, 0x81, 0x40, 0x11, 0xc3, 0x23, 0x28,
	0x62, 0xb5, 0x54, 0xd1, 0x55, 0xdb, 0x14, 0x7d, 0x0f, 0xd6, 0x52, 0x53, 0x50, 0x32, 0x8d, 0x47,
	0x35, 0xdb, 0x78, 0x30, 0x28, 0x44, 0xd6, 0x51, 0xd8, 0x02, 0x52, 0x01, 0xad, 0x8d, 0xe7, 0x50,
	0x19, 0x06, 0xfc, 0xd4, 0xe1, 0x5f, 0x85, 0xec, 0x31, 0x66, 0x0c, 0xb1, 0x96, 0x7e, 0xdd, 0x10,
	0xbe, 0x28, 0x39, 0xcc, 0x98, 0x6c, 0xfc, 0x22, 0x07, 0x65, 0x89, 0x65, 0x1f, 0x41, 0x7d, 0x9a,
	0xd0, 0xa2, 0xcc, 0x61, 0x2c, 0x8e, 0xfe, 0x65, 0x15, 0x4e, 0xf1, 0xb1, 0x0f, 0xa1, 0x44, 0x57,
	0x10, 0xde, 0xb4, 0xcc, 0x17, 0xc7, 0x56, 0x44, 0x0e, 0x61, 0x4a, 0x32, 0xc6, 0xce, 0xc4, 0x0b,
	0xb8, 0x25, 0x4c, 0xa0, 0x99, 0x12, 0x32, 0xbe, 0x07, 0xd0, 0x8e, 0x22, 0x6b, 0x7a, 0x3c, 0x43,
	0xf7, 0x61, 0x50, 0xc0, 0x8e, 0x43, 0xfa, 0x0e, 0xad, 0xd1, 0xa5, 0x86, 0xd6, 0x99, 0xeb, 0x5b,
	0x71, 0x65, 0x91, 0xa0, 0xf1, 0x1c, 0x20, 0x3e, 0x28, 0x44, 0x51, 0xc4, 0x4a, 0xde, 0xfb, 0xbc,
	0x28, 0x82, 0x6c, 0xfc, 0x23, 0x0f, 0xd5, 0x18, 0x9b, 0xcd, 0xe6, 0xec, 0x43, 0x29, 0x42, 0x9e,
	0x02, 0xf9, 0x76, 0x66, 0x13, 0xea, 0x8d, 0x84, 0x5c, 0xa9, 0xda, 0x51, 0xc8, 0xd6, 0x8e, 0xbb,
	0x50, 0xc2, 0x8f, 0xe2, 0xaa, 0x2a, 0x21, 0x74, 0xf5, 0xce, 0xd2, 0xb7, 0x64, 0xe7, 0x98, 0x44,
	0x61, 0xa0, 0x8c, 0xb8, 0x67, 0x63, 0x48, 0xca, 0xde, 0x31, 0x86, 0x31, 0x45, 0x8b, 0x35, 0x89,
	0x58, 0x26, 0x11, 0x57, 0x12, 0x4e, 0x24, 0x5a, 0xb7, 0x25, 0x0b, 0x29, 0x94, 0xbf, 0x8a, 0x64,
	0x2f, 0x49, 0x6b, 0x14, 0xed, 0x85, 0x1f, 0xcc, 0xac, 0x48, 0x7a, 0x97, 0x84, 0xd8, 0x16, 0xd4,
	0x96, 0xa6, 0x10, 0x1e, 0x56, 0x53, 0x9d, 0xe1, 0x92, 0x60, 0x26, 0x99, 0x30, 0xc5, 0x62, 0x7b,
	0x20, 0xfa, 0xc8, 0xaa, 0x29, 0x00, 0xe3, 0x57, 0x1a, 0x54, 0x54, 0x7f, 0x78, 0x4e, 0xc1, 0x0c,
	0x0a, 0x7d, 0x6b, 0xc6, 0xa5, 0x31, 0x69, 0x8d, 0x22, 0x75, 0x67, 0x96, 0xe3, 0x62, 0x1d, 0x47,
	0xbf, 0x96, 0x10, 0xe2, 0x87, 0xc7, 0xbe, 0xc7, 0x55, 0x96, 0x94, 0x10, 0xfa, 0x44, 0x07, 0x15,
	0x1d, 0x9c, 0x49, 0x0d, 0x2a, 0x90, 0xf4, 0x2b, 0x96, 0x1d, 0xdf, 0xe6, 0x52, 0x81, 0x49, 0x14,
	0x9e, 0xdf, 0xc1, 0x7a, 0x2a, 0x5a, 0x6f, 0x5a, 0xa3, 0xce, 0x51, 0xf7, 0x3f, 0xf1, 0x3d, 0xd5,
	0x76, 0xc7, 0x30, 0x9e, 0x35, 0xe2, 0x47, 0x78, 0xdd, 0x56, 0x95, 0x84, 0x50, 0x20, 0x5e, 0x7e,
	0xcf, 0x3a, 0xe4, 0xae, 0x0c, 0x46, 0x01, 0x30, 0x03, 0xea, 0x13, 0x2f, 0x5c, 0x1c, 0x86, 0xd3,
	0xc0, 0x39, 0xe4, 0x36, 0x69, 0xa6, 0x62, 0xa6, 0x70, 0xec, 0x21, 0xc0, 0xbe, 0x15, 0x9c, 0x70,
	0x7b, 0x34, 0xb7, 0x66, 0xd4, 0x57, 0x57, 0xcc, 0x04, 0x06, 0x6f, 0xf1, 0x03, 0x2b, 0xb0, 0xb7,
	0xfd, 0x85, 0x37, 0xe5, 0x36, 0x35, 0xd3, 0x15, 0x33, 0x89, 0x62, 0xef, 0x43, 0x63, 0xec, 0x47,
	0x96, 0x3b, 0xe2, 0xd4, 0xaf, 0x86, 0xad, 0x26, 0x35, 0x40, 0x69, 0xa4, 0xf1, 0x67, 0x0d, 0x9a,
	0xe8, 0x78, 0x26, 0xff, 0xe9, 0x82, 0x63, 0xaa, 0x3a, 0x41, 0xb7, 0x95, 0x50, 0xcf, 0x6e, 0xad,
	0x08, 0xb7, 0x8d, 0x11, 0x09, 0xb7, 0x6d, 0xa6, 0xdc, 0xf6, 0xea, 0x46, 0xe9, 0x01, 0x05, 0x94,
	0xc8, 0x50, 0x2a, 0x14, 0x62, 0x84, 0x28, 0x3a, 0x72, 0x32, 0x52, 0xa3, 0x52, 0x8c, 0x10, 0xe1,
	0x4d, 0xa3, 0x91, 0x9a, 0x94, 0x24, 0x88, 0xdf, 0x0d, 0xd5, 0x5c, 0xa4, 0x06, 0xa5, 0x61, 0x72,
	0x50, 0xda, 0x4f, 0x0f, 0x4a, 0x12, 0x64, 0x1b, 0xb0, 0xb2, 0x9d, 0x1e, 0x88, 0xd4, 0x9c, 0xb4,
	0x7d, 0x7e, 0x4e, 0xda, 0xcb, 0xcc, 0x49, 0x31, 0xed, 0x19, 0xc0, 0x72, 0x1c, 0xba, 0x7c, 0x4c,
	0xda, 0x49, 0x8d, 0x49, 0x93, 0x2b, 0xc6, 0x24, 0x5c, 0x65, 0xc3, 0xbf, 0x71, 0x2e, 0xfc, 0x8d,
	0x7f, 0xe5, 0xa1, 0x96, 0x30, 0xd9, 0x5b, 0xcd, 0xff, 0xd7, 0x34, 0xdf, 0x83, 0x46, 0xb2, 0xd2,
	0x85, 0xec, 0x63, 0x68, 0x24, 0x8b, 0x9d, 0x2a, 0x2c, 0x17, 0x55, 0xc5, 0x34, 0xa3, 0xf1, 0xfb,
	0x9c, 0x28, 0x31, 0xa3, 0xc8, 0x0a, 0xa2, 0xff, 0xc0, 0xac, 0x7a, 0x1f, 0x2a, 0x16, 0xf6, 0x51,
	0xcb, 0x16, 0xa6, 0x6c, 0xc9, 0xbe, 0xea, 0x1e, 0x94, 0xb1, 0x71, 0x58, 0xbe, 0x52, 0x94, 0x10,
	0xec, 0x65, 0x5f, 0x30, 0x8a, 0x99, 0x46, 0xc2, 0x38, 0x80, 0x46, 0x7b, 0x3a, 0xe5, 0xf3, 0x1b,
	0x3a, 0xda, 0xe5, 0xf3, 0xdd, 0x25, 0x95, 0xce, 0x38, 0x86, 0xd6, 0x9e, 0x13, 0x46, 0x6a, 0x98,
	0xa7, 0x81, 0xff, 0xc6, 0x67, 0x91, 0xe2, 0x96, 0x67, 0x49, 0x90, 0x32, 0xae, 0x33, 0x73, 0x22,
	0x39, 0xee, 0x09, 0xc0, 0xf8, 0x5b, 0x0e, 0x53, 0xee, 0xf2, 0x98, 0x6b, 0xb6, 0x7f, 0x08, 0xd0,
	0x0b, 0xdb, 0xf2, 0x85, 0x41, 0xf6, 0xa2, 0x09, 0x4c, 0xd2, 0xbf, 0xb5, 0xb4, 0x7f, 0x63, 0x29,
	0x9b, 0x4b, 0x35, 0xe7, 0x7b, 0xf3, 0xb8, 0x94, 0x15, 0x2f, 0x2c, 0x65, 0xa5, 0x4b, 0x4a, 0x59,
	0x39, 0x59, 0xca, 0x8c, 0x77, 0xa1, 0x88, 0x43, 0x29, 0x95, 0x52, 0x5a, 0x90, 0x97, 0x55, 0x4c,
	0x01, 0x18, 0x5f, 0xc2, 0x5d, 0xd2, 0x22, 0xf6, 0x86, 0xa2, 0x65, 0xfa, 0xa6, 0xf6, 0x6a, 0x41,
	0x99, 0x42, 0xc3, 0x56, 0xc5, 0x56, 0x81, 0xc6, 0xc7, 0xaa, 0x47, 0xa3, 0x6e, 0x8d, 0x90, 0x6a,
	0xd2, 0x11, 0x50, 0xa2, 0x8b, 0xcb, 0x93, 0x01, 0x54, 0x17, 0xf7, 0x1c, 0x6a, 0x09, 0x09, 0xd9,
	0x07, 0x50, 0x16, 0x2b, 0x15, 0x32, 0x75, 0xf5, 0xb0, 0x43, 0x17, 0x50, 0x44, 0xe3, 0x67, 0xb0,
	0x8a, 0x97, 0x5b, 0xb6, 0x68, 0x37, 0xba, 0xda, 0xd2, 0xe1, 0xf2, 0xa9, 0x1a, 0x95, 0x70, 0x1b,
	0xed, 0x12, 0xb7, 0x29, 0x24, 0xdd, 0xe6, 0x77, 0x39, 0xa1, 0x5b, 0xf2, 0xcc, 0xed, 0x33, 0x6a,
	0xc2, 0x5f, 0x3f, 0xe9, 0xe6, 0xb3, 0x49, 0x77, 0xa9, 0x3b, 0x2d, 0xa5, 0xbb, 0x84, 0x78, 0x85,
	0x4b, 0xc4, 0x2b, 0x26, 0xc5, 0xfb, 0x7b, 0x0e, 0x9a, 0x83, 0x2e, 0x0a, 0x17, 0x7b, 0xe6, 0xf2,
	0xe6, 0x85, 0xcb, 0xab, 0xb3, 0x96, 0x15, 0xf7, 0xfa, 0x96, 0xf3, 0x11, 0x14, 0xc9, 0x7c, 0xe4,
	0xb2, 0xd9, 0xb1, 0x84, 0x28, 0xe9, 0x3b, 0x97, 0xb3, 0x77, 0xc6, 0x36, 0x13, 0xa7, 0x92, 0x8a,
	0x98, 0x4a, 0x70, 0x6d, 0xfc, 0x36, 0x07, 0x0d, 0x21, 0xff, 0x67, 0x96, 0x13, 0x39, 0xde, 0xd1,
	0x1b, 0x8a, 0xaf, 0x92, 0x7b, 0xe9, 0x8a, 0xe4, 0xfe, 0xfa, 0xd2, 0xfd, 0x33, 0x07, 0x8d, 0xee,
	0x29, 0x0a, 0x20, 0x15, 0x91, 0x6e, 0x8c, 0x72, 0xd9, 0xc6, 0xa8, 0x09, 0xf9, 0xc1, 0x89, 0x4c,
	0x16, 0xf9, 0xc1, 0x09, 0xda, 0x8c, 0x5c, 0x56, 0xca, 0x2b, 0x80, 0x1b, 0xcf, 0x04, 0xc5, 0xd4,
	0xfd, 0xbf, 0xb1, 0xfa, 0x33, 0x16, 0xae, 0x9c, 0xaf, 0x6d, 0x53, 0x65, 0x8b, 0x9d, 0xc0, 0x9f,
	0xcf, 0xb9, 0xfd, 0x86, 0x21, 0x96, 0x12, 0x43, 0xcb, 0x88, 0x61, 0x7c, 0x1e, 0x3b, 0x2c, 0x15,
	0x96, 0xec, 0x29, 0xf9, 0x9b, 0xce, 0x48, 0x89, 0xdc, 0x55, 0x48, 0x3f, 0x39, 0xfc, 0x32, 0xf6,
	0x29, 0x8a, 0x9d, 0x37, 0x3e, 0xe1, 0xea, 0xb6, 0xe9, 0xda, 0x80, 0x31, 0x7e, 0x9d, 0x83, 0xba,
	0xf0, 0x1e, 0xf9, 0x34, 0xf4, 0x7a, 0xce, 0x83, 0x23, 0x08, 0x4e, 0x27, 0xa2, 0x8a, 0xd1, 0x3a,
	0x7b, 0x68, 0xe1, 0x7c, 0x94, 0xae, 0x43, 0x6d, 0x87, 0xe3, 0x04, 0x31, 0xa7, 0x11, 0x5d, 0x8a,
	0x95, 0x40, 0x19, 0x7f, 0xd2, 0xe0, 0x9e, 0x10, 0x2b, 0x8e, 0x0f, 0x21, 0xc3, 0xb5, 0xee, 0x7d,
	0x85, 0xc1, 0xaf, 0x08, 0xcd, 0xb7, 0xdd, 0x27, 0x76, 0x9f, 0xcb, 0x84, 0x5f, 0x4f, 0x25, 0xfc,
	0xeb, 0x3b, 0xce, 0xbf, 0x6a, 0x70, 0x3b, 0x6b, 0xaf, 0xb9, 0x7b, 0xf6, 0xd6, 0x56, 0xff, 0xe3,
	0x93, 0xc2, 0x43, 0xa8, 0xbf, 0x70, 0x5c, 0x3e, 0xe6, 0xb3, 0xb9, 0x6b, 0x45, 0xfc, 0xdc, 0x2f,
	0x02, 0x11, 0xac, 0xfe, 0x70, 0xe1, 0x4c, 0x4f, 0xd0, 0x9a, 0x0e, 0x0f, 0x63, 0x3e, 0xf5, 0x1a,
	0x93, 0x4b, 0xbc, 0xc6, 0xd0, 0x83, 0x85, 0x17, 0xc9, 0xb7, 0xa5, 0x38, 0xee, 0x97, 0x28, 0xec,
	0xa6, 0xe4, 0x46, 0xad, 0x62, 0xb2, 0x9b, 0xda, 0x5e, 0x44, 0x91, 0xef, 0x99, 0x8a, 0x88, 0x6d,
	0x70, 0x73, 0x97, 0x7b, 0x3c, 0x70, 0xa6, 0x5d, 0x97, 0xab, 0x17, 0x0a, 0x61, 0x1a, 0x71, 0xa2,
	0x00, 0xe8, 0x29, 0x76, 0x26, 0xed, 0x29, 0x5c, 0x28, 0x86, 0xe9, 0xf5, 0x69, 0x71, 0x28, 0x7e,
	0x9c, 0x94, 0xef, 0xe9, 0x0a, 0x66, 0x5b, 0xd0, 0xd8, 0xe1, 0x5f, 0x58, 0x0b, 0x97, 0xde, 0x3c,
	0x7d, 0x8f, 0x84, 0xcd, 0x8a, 0x93, 0x66, 0x41, 0xe1, 0x05, 0xe1, 0x12, 0xe1, 0x25, 0xd1, 0xe8,
	0xc0, 0x8a, 0x94, 0x3d, 0xd6, 0xd6, 0x33, 0xa8, 0xc8, 0x7b, 0xa8, 0x36, 0x52, 0x3e, 0xab, 0xa7,
	0x2f, 0x69, 0xc6, 0x5c, 0xc6, 0x03, 0x28, 0x89, 0xfd, 0x2e, 0x7a, 0x48, 0x34, 0x76, 0xa1, 0x3a,
	0x09, 0xdc, 0xcb, 0x19, 0x96, 0xda, 0xca, 0x27, 0xb5, 0xa5, 0x83, 0x86, 0x8a, 0x12, 0xca, 0xc0,
	0xa5, 0x31, 0x87, 0xe6, 0xd0, 0x0f, 0xa3, 0x43, 0x6b, 0x7a, 0xf2, 0xda, 0xbb, 0x25, 0x5e, 0x33,
	0xb5, 0xd4, 0x6b, 0x66, 0xca, 0x2a, 0x85, 0xb4, 0x55, 0x8c, 0x3a, 0x40, 0xc7, 0x72, 0xa5, 0xec,
	0x46, 0x03, 0x6a, 0x7b, 0xfe, 0x91, 0xe3, 0x49, 0xd0, 0x81, 0x1a, 0x75, 0x1f, 0xaf, 0x2d, 0xcb,
	0x15, 0x27, 0x5e, 0xdc, 0xdf, 0x18, 0x9b, 0x00, 0xa3, 0x45, 0x70, 0xca, 0xcf, 0x5e, 0xf8, 0x01,
	0xbd, 0x52, 0x0d, 0x5d, 0x6b, 0xca, 0x8f, 0x7d, 0xd7, 0xe6, 0x81, 0x3c, 0x30, 0x89, 0x32, 0x3e,
	0x00, 0xdd, 0xb4, 0x22, 0x8e, 0xdc, 0xa9, 0x20, 0xc8, 0xc8, 0xf7, 0xe4, 0x31, 0xd4, 0x93, 0xbf,
	0xf6, 0xb0, 0x0a, 0x14, 0xfa, 0xbe, 0xc7, 0xf5, 0x5b, 0xac, 0x0c, 0x5a, 0xdb, 0xb3, 0xf5, 0x1c,
	0x2b, 0x41, 0x7e, 0x10, 0xe8, 0xf9, 0x27, 0x5f, 0x43, 0x33, 0xfd, 0xb3, 0x0a, 0x6b, 0x40, 0xb5,
	0xbd, 0xb7, 0xd7, 0xde, 0xed, 0xf6, 0xc7, 0x23, 0xfd, 0x16, 0x6b, 0x02, 0xd0, 0x7a, 0xd7, 0x1c,
	0x4c, 0x86, 0x7a, 0x9e, 0x01, 0x94, 0x24, 0x4d, 0x43, 0xda, 0xfe, 0x60, 0x34, 0x36, 0xbb, 0x9d,
	0x6e, 0x7f, 0xac, 0x17, 0xd8, 0x3d, 0xb8, 0x6d, 0x0e, 0x26, 0xfd, 0x1d, 0x73, 0xb0, 0xdd, 0xeb,
	0x2f, 0x37, 0x29, 0xb2, 0x55, 0xd0, 0x13, 0x04, 0x81, 0x2d, 0x3d, 0xf9, 0x43, 0x0e, 0x1a, 0xa9,
	0xa7, 0x60, 0x12, 0x74, 0xd0, 0xef, 0xea, 0xb7, 0x58, 0x0d, 0xca, 0xfb, 0xdd, 0xd1, 0xa8, 0xbd,
	0xdb, 0xd5, 0x73, 0x78, 0x66, 0x67, 0x6f, 0x30, 0xea, 0xee, 0xe8, 0x1a, 0xdd, 0x60, 0x67, 0x47,
	0x2f, 0x20, 0xef, 0x5e, 0xf7, 0xc5, 0x58, 0x2f, 0xb2, 0x2a, 0x14, 0xcd, 0xf6, 0xb8, 0xbb, 0xa3,
	0x97, 0x71, 0xd9, 0xeb, 0x0f, 0x27, 0x63, 0xbd, 0x82, 0x8c, 0xe3, 0xf6, 0xae, 0x5e, 0x45, 0xdc,
	0xa4, 0x8f, 0x4b, 0x60, 0x75, 0xa8, 0x8c, 0xcd, 0x76, 0x7f, 0xf4, 0xa2, 0x6b, 0xea, 0x35, 0xda,
	0xaa, 0xf3, 0x52, 0xaf, 0xe3, 0xfe, 0xe3, 0x1f, 0x0f, 0x7b, 0xfd, 0x5d, 0xbd, 0x81, 0x77, 0x1a,
	0x8d, 0x07, 0x43, 0x09, 0x37, 0x9f, 0x7c, 0x3f, 0x99, 0x14, 0x51, 0xac, 0x49, 0xff, 0x65, 0x7f,
	0xf0, 0x59, 0x5f, 0xbf, 0x85, 0x9f, 0xed, 0x0f, 0xb6, 0x7b, 0x7b, 0x52, 0xc4, 0x71, 0x7b, 0x7b,
	0xaf, 0x3b, 0xd6, 0xf3, 0xc8, 0xb4, 0xd3, 0x1d, 0xbd, 0x1c, 0x0f, 0x86, 0xba, 0xf6, 0xe4, 0x8f,
	0x05, 0x69, 0x7a, 0xd6, 0x82, 0xd5, 0xe4, 0x23, 0x87, 0x1a, 0x43, 0xf4, 0x5b, 0xa8, 0xb7, 0x24,
	0x45, 0x36, 0xf8, 0x7a, 0x9e, 0x3d, 0x84, 0xb5, 0x24, 0x81, 0xba, 0xb4, 0xb8, 0x07, 0xd1, 0xb5,
	0x73, 0x5b, 0xca, 0x46, 0x51, 0x98, 0x22, 0x49, 0x91, 0x7d, 0xaa, 0x5e, 0x64, 0x0f, 0xa0, 0x95,
	0x24, 0x90, 0x68, 0x32, 0x19, 0xeb, 0x25, 0xf6, 0x2e, 0xdc, 0x4f, 0x52, 0xd1, 0x8b, 0x96, 0xe7,
	0x95, 0xd9, 0x3a, 0x3c, 0x48, 0x92, 0x65, 0xf9, 0x59, 0x72, 0x54, 0xb2, 0x12, 0xef, 0x71, 0xeb,
	0x34, 0x41, 0xaf, 0x66, 0xe9, 0x1d, 0xd7, 0x0f, 0x13, 0x74, 0xc8, 0x8a, 0x37, 0xb6, 0x8e, 0x96,
	0xd4, 0x5a, 0xf6, 0xeb, 0x89, 0x17, 0x25, 0xe9, 0x75, 0xb6, 0x02, 0x35, 0x73, 0xe1, 0x72, 0xf1,
	0x13, 0x9a, 0xad, 0xaf, 0x2a, 0x84, 0xba, 0xe0, 0x1d, 0x85, 0x90, 0xbf, 0xc9, 0xe9, 0x77, 0xd1,
	0x25, 0xe8, 0x37, 0x4a, 0x6e, 0xd9, 0xfa, 0x3d, 0x05, 0xe1, 0x1c, 0xab, 0xb7, 0xd8, 0x7d, 0xb8,
	0x73, 0x61, 0xf7, 0xa7, 0x33, 0x76, 0x07, 0xde, 0x39, 0xd7, 0x68, 0xe8, 0xb7, 0xe9, 0x8b, 0xa4,
	0xc1, 0xd4, 0x1b, 0xb5, 0xfe, 0x90, 0xfd, 0x1f, 0xdc, 0x4b, 0xcb, 0x1e, 0x3f, 0x60, 0xeb, 0xef,
	0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x29, 0xaa, 0x7b, 0x2c, 0x24, 0x00, 0x00,
}
