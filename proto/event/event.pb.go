// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event/event.proto

/*
Package event is a generated protocol buffer package.

It is generated from these files:
	event/event.proto

It has these top-level messages:
	User
	RawEventCreatedPayload
	UnsubscribeMessage
	JSONEvent
	OEvent
	ChatSentUser
	ChatSent
	ChatAssigned
	ChatWaiting
	Chat_X_Sent
	RawEvent
	RawConversationJoinedEvent
	RawConversationStartedEvent
	RawConversationMessageEvent
	Event
	Channel
	Topic
	Message
	Attachment
	Sender
	Reply
	Error
	Subscription
*/
package event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/servicespec/proto/common"
import account "bitbucket.org/subiz/servicespec/proto/account"
import client "bitbucket.org/subiz/servicespec/proto/client"
import lang "bitbucket.org/subiz/servicespec/proto/lang"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserType int32

const (
	UserType_NONE   UserType = 0
	UserType_USER   UserType = 1
	UserType_AGENT  UserType = 2
	UserType_SYSTEM UserType = 3
)

var UserType_name = map[int32]string{
	0: "NONE",
	1: "USER",
	2: "AGENT",
	3: "SYSTEM",
}
var UserType_value = map[string]int32{
	"NONE":   0,
	"USER":   1,
	"AGENT":  2,
	"SYSTEM": 3,
}

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}
func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (x *UserType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserType_value, data, "UserType")
	if err != nil {
		return err
	}
	*x = UserType(value)
	return nil
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EVENT int32

const (
	EVENT_Out_EventCreated EVENT = 0
	EVENT_Send_            EVENT = 1
	EVENT_ApiReply         EVENT = 2
	EVENT_RawEventCreated  EVENT = 3
	EVENT_Subscribe        EVENT = 4
	EVENT_SubscribeReply   EVENT = 6
	EVENT_Unsubscribe      EVENT = 5
	EVENT_UnsubscribeReply EVENT = 7
)

var EVENT_name = map[int32]string{
	0: "Out_EventCreated",
	1: "Send_",
	2: "ApiReply",
	3: "RawEventCreated",
	4: "Subscribe",
	6: "SubscribeReply",
	5: "Unsubscribe",
	7: "UnsubscribeReply",
}
var EVENT_value = map[string]int32{
	"Out_EventCreated": 0,
	"Send_":            1,
	"ApiReply":         2,
	"RawEventCreated":  3,
	"Subscribe":        4,
	"SubscribeReply":   6,
	"Unsubscribe":      5,
	"UnsubscribeReply": 7,
}

func (x EVENT) Enum() *EVENT {
	p := new(EVENT)
	*p = x
	return p
}
func (x EVENT) String() string {
	return proto.EnumName(EVENT_name, int32(x))
}
func (x *EVENT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EVENT_value, data, "EVENT")
	if err != nil {
		return err
	}
	*x = EVENT(value)
	return nil
}
func (EVENT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EventType int32

const (
	EventType_conversation_started  EventType = 1
	EventType_conversation_joined   EventType = 2
	EventType_conversation_message  EventType = 3
	EventType_conversation_left     EventType = 4
	EventType_conversation_closed   EventType = 5
	EventType_conversation_tagged   EventType = 6
	EventType_conversation_untagged EventType = 7
)

var EventType_name = map[int32]string{
	1: "conversation_started",
	2: "conversation_joined",
	3: "conversation_message",
	4: "conversation_left",
	5: "conversation_closed",
	6: "conversation_tagged",
	7: "conversation_untagged",
}
var EventType_value = map[string]int32{
	"conversation_started":  1,
	"conversation_joined":   2,
	"conversation_message":  3,
	"conversation_left":     4,
	"conversation_closed":   5,
	"conversation_tagged":   6,
	"conversation_untagged": 7,
}

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}
func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (x *EventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventType_value, data, "EventType")
	if err != nil {
		return err
	}
	*x = EventType(value)
	return nil
}
func (EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SubscriberType int32

const (
	SubscriberType_user    SubscriberType = 0
	SubscriberType_channel SubscriberType = 1
)

var SubscriberType_name = map[int32]string{
	0: "user",
	1: "channel",
}
var SubscriberType_value = map[string]int32{
	"user":    0,
	"channel": 1,
}

func (x SubscriberType) Enum() *SubscriberType {
	p := new(SubscriberType)
	*p = x
	return p
}
func (x SubscriberType) String() string {
	return proto.EnumName(SubscriberType_name, int32(x))
}
func (x *SubscriberType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubscriberType_value, data, "SubscriberType")
	if err != nil {
		return err
	}
	*x = SubscriberType(value)
	return nil
}
func (SubscriberType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SubPrefix int32

const (
	SubPrefix_Webhook   SubPrefix = 0
	SubPrefix_Websocket SubPrefix = 1
)

var SubPrefix_name = map[int32]string{
	0: "Webhook",
	1: "Websocket",
}
var SubPrefix_value = map[string]int32{
	"Webhook":   0,
	"Websocket": 1,
}

func (x SubPrefix) Enum() *SubPrefix {
	p := new(SubPrefix)
	*p = x
	return p
}
func (x SubPrefix) String() string {
	return proto.EnumName(SubPrefix_name, int32(x))
}
func (x *SubPrefix) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubPrefix_value, data, "SubPrefix")
	if err != nil {
		return err
	}
	*x = SubPrefix(value)
	return nil
}
func (SubPrefix) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type User struct {
	Id               *string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type             *UserType `protobuf:"varint,2,opt,name=type,enum=event.UserType" json:"type,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetType() UserType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return UserType_NONE
}

type RawEventCreatedPayload struct {
	SubIds           []string `protobuf:"bytes,3,rep,name=sub_ids,json=subIds" json:"sub_ids,omitempty"`
	Topics           []string `protobuf:"bytes,4,rep,name=topics" json:"topics,omitempty"`
	Payload          *string  `protobuf:"bytes,5,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RawEventCreatedPayload) Reset()                    { *m = RawEventCreatedPayload{} }
func (m *RawEventCreatedPayload) String() string            { return proto.CompactTextString(m) }
func (*RawEventCreatedPayload) ProtoMessage()               {}
func (*RawEventCreatedPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RawEventCreatedPayload) GetSubIds() []string {
	if m != nil {
		return m.SubIds
	}
	return nil
}

func (m *RawEventCreatedPayload) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *RawEventCreatedPayload) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

type UnsubscribeMessage struct {
	Topic            *string `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	SubId            *string `protobuf:"bytes,4,opt,name=sub_id,json=subId" json:"sub_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnsubscribeMessage) Reset()                    { *m = UnsubscribeMessage{} }
func (m *UnsubscribeMessage) String() string            { return proto.CompactTextString(m) }
func (*UnsubscribeMessage) ProtoMessage()               {}
func (*UnsubscribeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UnsubscribeMessage) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *UnsubscribeMessage) GetSubId() string {
	if m != nil && m.SubId != nil {
		return *m.SubId
	}
	return ""
}

type JSONEvent struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Event            []byte          `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *JSONEvent) Reset()                    { *m = JSONEvent{} }
func (m *JSONEvent) String() string            { return proto.CompactTextString(m) }
func (*JSONEvent) ProtoMessage()               {}
func (*JSONEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JSONEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *JSONEvent) GetEvent() []byte {
	if m != nil {
		return m.Event
	}
	return nil
}

// OEEventCreated is a kafka event created when subiz want
// to send downstream
type OEvent struct {
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Event is name of the event see ./event.json
	Event     *string `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	AccountId *string `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Users is list of user that event need to be sent to. (3000 max)
	Users []*User `protobuf:"bytes,4,rep,name=Users" json:"Users,omitempty"`
	// Payload is content of event in JSON format, see ./event.json
	Payload          *string `protobuf:"bytes,7,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OEvent) Reset()                    { *m = OEvent{} }
func (m *OEvent) String() string            { return proto.CompactTextString(m) }
func (*OEvent) ProtoMessage()               {}
func (*OEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *OEvent) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

func (m *OEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *OEvent) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *OEvent) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

type ChatSentUser struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type             *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	LastSeenId       *string `protobuf:"bytes,3,opt,name=last_seen_id,json=lastSeenId" json:"last_seen_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatSentUser) Reset()                    { *m = ChatSentUser{} }
func (m *ChatSentUser) String() string            { return proto.CompactTextString(m) }
func (*ChatSentUser) ProtoMessage()               {}
func (*ChatSentUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ChatSentUser) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ChatSentUser) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *ChatSentUser) GetLastSeenId() string {
	if m != nil && m.LastSeenId != nil {
		return *m.LastSeenId
	}
	return ""
}

type ChatSent struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChatSent) Reset()                    { *m = ChatSent{} }
func (m *ChatSent) String() string            { return proto.CompactTextString(m) }
func (*ChatSent) ProtoMessage()               {}
func (*ChatSent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// An incomming chat is assigned to agent
type ChatAssigned struct {
	XMethods         *string `protobuf:"bytes,1,opt,name=_Methods,json=Methods" json:"_Methods,omitempty"`
	Timestamp        *string `protobuf:"bytes,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatAssigned) Reset()                    { *m = ChatAssigned{} }
func (m *ChatAssigned) String() string            { return proto.CompactTextString(m) }
func (*ChatAssigned) ProtoMessage()               {}
func (*ChatAssigned) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ChatAssigned) GetXMethods() string {
	if m != nil && m.XMethods != nil {
		return *m.XMethods
	}
	return ""
}

func (m *ChatAssigned) GetTimestamp() string {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return ""
}

type ChatWaiting struct {
	XMethods         *string `protobuf:"bytes,1,opt,name=_Methods,json=Methods" json:"_Methods,omitempty"`
	Timestamp        *string `protobuf:"bytes,2,opt,name=Timestamp" json:"Timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatWaiting) Reset()                    { *m = ChatWaiting{} }
func (m *ChatWaiting) String() string            { return proto.CompactTextString(m) }
func (*ChatWaiting) ProtoMessage()               {}
func (*ChatWaiting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ChatWaiting) GetXMethods() string {
	if m != nil && m.XMethods != nil {
		return *m.XMethods
	}
	return ""
}

func (m *ChatWaiting) GetTimestamp() string {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return ""
}

type Chat_X_Sent struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Chat_X_Sent) Reset()                    { *m = Chat_X_Sent{} }
func (m *Chat_X_Sent) String() string            { return proto.CompactTextString(m) }
func (*Chat_X_Sent) ProtoMessage()               {}
func (*Chat_X_Sent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type RawEvent struct {
	// optional common.Context ctx = 1;
	Id               *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId        *string  `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AppId            *string  `protobuf:"bytes,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SenderId         *string  `protobuf:"bytes,6,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderType       *string  `protobuf:"bytes,7,opt,name=sender_type,json=senderType" json:"sender_type,omitempty"`
	Timestamp        *int64   `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Type             *string  `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	ChannelId        *string  `protobuf:"bytes,10,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	TopicIds         []string `protobuf:"bytes,11,rep,name=topic_ids,json=topicIds" json:"topic_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RawEvent) Reset()                    { *m = RawEvent{} }
func (m *RawEvent) String() string            { return proto.CompactTextString(m) }
func (*RawEvent) ProtoMessage()               {}
func (*RawEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RawEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RawEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RawEvent) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *RawEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *RawEvent) GetSenderType() string {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return ""
}

func (m *RawEvent) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *RawEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RawEvent) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *RawEvent) GetTopicIds() []string {
	if m != nil {
		return m.TopicIds
	}
	return nil
}

type RawConversationJoinedEvent struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AppId            *string         `protobuf:"bytes,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SenderId         *string         `protobuf:"bytes,6,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderType       *string         `protobuf:"bytes,7,opt,name=sender_type,json=senderType" json:"sender_type,omitempty"`
	Timestamp        *int64          `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Type             *string         `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	ChannelId        *string         `protobuf:"bytes,10,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	TopicIds         []string        `protobuf:"bytes,11,rep,name=topic_ids,json=topicIds" json:"topic_ids,omitempty"`
	ConversationId   *string         `protobuf:"bytes,13,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	JoinerId         *string         `protobuf:"bytes,14,opt,name=joiner_id,json=joinerId" json:"joiner_id,omitempty"`
	JoinerType       *string         `protobuf:"bytes,15,opt,name=joiner_type,json=joinerType" json:"joiner_type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RawConversationJoinedEvent) Reset()                    { *m = RawConversationJoinedEvent{} }
func (m *RawConversationJoinedEvent) String() string            { return proto.CompactTextString(m) }
func (*RawConversationJoinedEvent) ProtoMessage()               {}
func (*RawConversationJoinedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RawConversationJoinedEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *RawConversationJoinedEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetSenderType() string {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *RawConversationJoinedEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetTopicIds() []string {
	if m != nil {
		return m.TopicIds
	}
	return nil
}

func (m *RawConversationJoinedEvent) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetJoinerId() string {
	if m != nil && m.JoinerId != nil {
		return *m.JoinerId
	}
	return ""
}

func (m *RawConversationJoinedEvent) GetJoinerType() string {
	if m != nil && m.JoinerType != nil {
		return *m.JoinerType
	}
	return ""
}

type RawConversationStartedEvent struct {
	Ctx        *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id         *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId  *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AppId      *string         `protobuf:"bytes,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SenderId   *string         `protobuf:"bytes,6,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderType *string         `protobuf:"bytes,7,opt,name=sender_type,json=senderType" json:"sender_type,omitempty"`
	Timestamp  *int64          `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Type       *string         `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	ChannelId  *string         `protobuf:"bytes,10,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	TopicIds   []string        `protobuf:"bytes,11,rep,name=topic_ids,json=topicIds" json:"topic_ids,omitempty"`
	// ---
	ConversationId   *string `protobuf:"bytes,15,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RawConversationStartedEvent) Reset()                    { *m = RawConversationStartedEvent{} }
func (m *RawConversationStartedEvent) String() string            { return proto.CompactTextString(m) }
func (*RawConversationStartedEvent) ProtoMessage()               {}
func (*RawConversationStartedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RawConversationStartedEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *RawConversationStartedEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RawConversationStartedEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RawConversationStartedEvent) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *RawConversationStartedEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *RawConversationStartedEvent) GetSenderType() string {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return ""
}

func (m *RawConversationStartedEvent) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *RawConversationStartedEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RawConversationStartedEvent) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *RawConversationStartedEvent) GetTopicIds() []string {
	if m != nil {
		return m.TopicIds
	}
	return nil
}

func (m *RawConversationStartedEvent) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

type RawConversationMessageEvent struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id               *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId        *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AppId            *string         `protobuf:"bytes,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SenderId         *string         `protobuf:"bytes,6,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderType       *string         `protobuf:"bytes,7,opt,name=sender_type,json=senderType" json:"sender_type,omitempty"`
	Timestamp        *int64          `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Type             *string         `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	ChannelId        *string         `protobuf:"bytes,10,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	TopicIds         []string        `protobuf:"bytes,11,rep,name=topic_ids,json=topicIds" json:"topic_ids,omitempty"`
	ConversationId   *string         `protobuf:"bytes,19,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	Attachments      []*Attachment   `protobuf:"bytes,20,rep,name=attachments" json:"attachments,omitempty"`
	Text             *string         `protobuf:"bytes,21,opt,name=text" json:"text,omitempty"`
	Format           *string         `protobuf:"bytes,22,opt,name=format" json:"format,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RawConversationMessageEvent) Reset()                    { *m = RawConversationMessageEvent{} }
func (m *RawConversationMessageEvent) String() string            { return proto.CompactTextString(m) }
func (*RawConversationMessageEvent) ProtoMessage()               {}
func (*RawConversationMessageEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RawConversationMessageEvent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *RawConversationMessageEvent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *RawConversationMessageEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *RawConversationMessageEvent) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *RawConversationMessageEvent) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *RawConversationMessageEvent) GetSenderType() string {
	if m != nil && m.SenderType != nil {
		return *m.SenderType
	}
	return ""
}

func (m *RawConversationMessageEvent) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *RawConversationMessageEvent) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RawConversationMessageEvent) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *RawConversationMessageEvent) GetTopicIds() []string {
	if m != nil {
		return m.TopicIds
	}
	return nil
}

func (m *RawConversationMessageEvent) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *RawConversationMessageEvent) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *RawConversationMessageEvent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *RawConversationMessageEvent) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

type Event struct {
	Ctx     *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id      *string          `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Account *account.Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	App     *client.Client   `protobuf:"bytes,4,opt,name=app" json:"app,omitempty"`
	// optional string access_token = 6;
	Sender    *Sender  `protobuf:"bytes,8,opt,name=sender" json:"sender,omitempty"`
	Timestamp *int64   `protobuf:"varint,12,opt,name=timestamp" json:"timestamp,omitempty"`
	Type      *string  `protobuf:"bytes,13,opt,name=type" json:"type,omitempty"`
	Channel   *Channel `protobuf:"bytes,15,opt,name=channel" json:"channel,omitempty"`
	// optional string channel_id = 17;
	Topics           []*Topic `protobuf:"bytes,19,rep,name=topics" json:"topics,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Event) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Event) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Event) GetAccount() *account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Event) GetApp() *client.Client {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Event) GetSender() *Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Event) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *Event) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Event) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *Event) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

type Channel struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Channel) Reset()                    { *m = Channel{} }
func (m *Channel) String() string            { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()               {}
func (*Channel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Channel) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Channel) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Topic struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Topic) Reset()                    { *m = Topic{} }
func (m *Topic) String() string            { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()               {}
func (*Topic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Topic) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Topic) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Message struct {
	Value            *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Format           *string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Message) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Message) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

type Attachment struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type Sender struct {
	Id               *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type             *string  `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name             *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Emails           []string `protobuf:"bytes,4,rep,name=emails" json:"emails,omitempty"`
	Phones           *string  `protobuf:"bytes,6,opt,name=phones" json:"phones,omitempty"`
	AvatarUrl        *string  `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Sender) Reset()                    { *m = Sender{} }
func (m *Sender) String() string            { return proto.CompactTextString(m) }
func (*Sender) ProtoMessage()               {}
func (*Sender) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Sender) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Sender) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Sender) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Sender) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *Sender) GetPhones() string {
	if m != nil && m.Phones != nil {
		return *m.Phones
	}
	return ""
}

func (m *Sender) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

type Reply struct {
	EventId          *string `protobuf:"bytes,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	State            []byte  `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Err              *bool   `protobuf:"varint,10,opt,name=err" json:"err,omitempty"`
	ErrDescription   *string `protobuf:"bytes,12,opt,name=err_description,json=errDescription" json:"err_description,omitempty"`
	ErrCode          *lang.T `protobuf:"varint,13,opt,name=err_code,json=errCode,enum=lang.T" json:"err_code,omitempty"`
	ErrClass         *int32  `protobuf:"varint,15,opt,name=err_class,json=errClass" json:"err_class,omitempty"`
	Payload          []byte  `protobuf:"bytes,7,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Reply) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *Reply) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Reply) GetErr() bool {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return false
}

func (m *Reply) GetErrDescription() string {
	if m != nil && m.ErrDescription != nil {
		return *m.ErrDescription
	}
	return ""
}

func (m *Reply) GetErrCode() lang.T {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return lang.T_undefined
}

func (m *Reply) GetErrClass() int32 {
	if m != nil && m.ErrClass != nil {
		return *m.ErrClass
	}
	return 0
}

func (m *Reply) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Error struct {
	Error            *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	RequestId        *string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Description      *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Error) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Error) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *Error) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type Subscription struct {
	Topic *string `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	// optional SubscribeScope scope = 5;
	// optional string account_id = 6;
	SubId *string `protobuf:"bytes,7,opt,name=sub_id,json=subId" json:"sub_id,omitempty"`
	// optional SubscriberType subscriber_type = 8;
	// optional string subscriber_id = 9;
	TargetTopic     *string `protobuf:"bytes,10,opt,name=target_topic,json=targetTopic" json:"target_topic,omitempty"`
	TargetKey       *string `protobuf:"bytes,11,opt,name=target_key,json=targetKey" json:"target_key,omitempty"`
	TargetPartition *string `protobuf:"bytes,13,opt,name=target_partition,json=targetPartition" json:"target_partition,omitempty"`
	// time to life in seconds
	Ttls             *int64 `protobuf:"varint,12,opt,name=ttls" json:"ttls,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Subscription) Reset()                    { *m = Subscription{} }
func (m *Subscription) String() string            { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()               {}
func (*Subscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Subscription) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Subscription) GetSubId() string {
	if m != nil && m.SubId != nil {
		return *m.SubId
	}
	return ""
}

func (m *Subscription) GetTargetTopic() string {
	if m != nil && m.TargetTopic != nil {
		return *m.TargetTopic
	}
	return ""
}

func (m *Subscription) GetTargetKey() string {
	if m != nil && m.TargetKey != nil {
		return *m.TargetKey
	}
	return ""
}

func (m *Subscription) GetTargetPartition() string {
	if m != nil && m.TargetPartition != nil {
		return *m.TargetPartition
	}
	return ""
}

func (m *Subscription) GetTtls() int64 {
	if m != nil && m.Ttls != nil {
		return *m.Ttls
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "event.User")
	proto.RegisterType((*RawEventCreatedPayload)(nil), "event.RawEventCreatedPayload")
	proto.RegisterType((*UnsubscribeMessage)(nil), "event.UnsubscribeMessage")
	proto.RegisterType((*JSONEvent)(nil), "event.JSONEvent")
	proto.RegisterType((*OEvent)(nil), "event.OEvent")
	proto.RegisterType((*ChatSentUser)(nil), "event.ChatSentUser")
	proto.RegisterType((*ChatSent)(nil), "event.ChatSent")
	proto.RegisterType((*ChatAssigned)(nil), "event.ChatAssigned")
	proto.RegisterType((*ChatWaiting)(nil), "event.ChatWaiting")
	proto.RegisterType((*Chat_X_Sent)(nil), "event.Chat_X_Sent")
	proto.RegisterType((*RawEvent)(nil), "event.RawEvent")
	proto.RegisterType((*RawConversationJoinedEvent)(nil), "event.RawConversationJoinedEvent")
	proto.RegisterType((*RawConversationStartedEvent)(nil), "event.RawConversationStartedEvent")
	proto.RegisterType((*RawConversationMessageEvent)(nil), "event.RawConversationMessageEvent")
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*Channel)(nil), "event.Channel")
	proto.RegisterType((*Topic)(nil), "event.Topic")
	proto.RegisterType((*Message)(nil), "event.Message")
	proto.RegisterType((*Attachment)(nil), "event.Attachment")
	proto.RegisterType((*Sender)(nil), "event.Sender")
	proto.RegisterType((*Reply)(nil), "event.Reply")
	proto.RegisterType((*Error)(nil), "event.Error")
	proto.RegisterType((*Subscription)(nil), "event.Subscription")
	proto.RegisterEnum("event.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("event.EVENT", EVENT_name, EVENT_value)
	proto.RegisterEnum("event.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("event.SubscriberType", SubscriberType_name, SubscriberType_value)
	proto.RegisterEnum("event.SubPrefix", SubPrefix_name, SubPrefix_value)
}

func init() { proto.RegisterFile("event/event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcf, 0x6e, 0xdb, 0x46,
	0x13, 0x37, 0x45, 0x51, 0x14, 0x87, 0xb2, 0xc4, 0xac, 0xed, 0x44, 0x49, 0x3e, 0xe3, 0x53, 0xd8,
	0x16, 0x71, 0x5d, 0x54, 0x06, 0x54, 0x04, 0x45, 0x91, 0x93, 0xa1, 0xa8, 0x81, 0x52, 0xc4, 0x0e,
	0x28, 0xb9, 0x69, 0x2f, 0x15, 0x56, 0xe4, 0x46, 0x66, 0x43, 0x91, 0xec, 0xee, 0xca, 0xb1, 0xfb,
	0x08, 0xbd, 0xf4, 0x54, 0xa0, 0xaf, 0xd1, 0x7b, 0x9e, 0xa1, 0x2f, 0xd0, 0x57, 0xe9, 0xa1, 0xd8,
	0x3f, 0xa2, 0x28, 0xdb, 0x45, 0x9d, 0x5e, 0x9b, 0x8b, 0xc8, 0xf9, 0xcd, 0xce, 0xee, 0xcc, 0xfc,
	0x66, 0xc4, 0x59, 0xb8, 0x45, 0xce, 0x48, 0xca, 0x0f, 0xe4, 0x6f, 0x37, 0xa7, 0x19, 0xcf, 0x90,
	0x25, 0x85, 0x7b, 0x5f, 0x4c, 0x63, 0x3e, 0x5d, 0x84, 0xaf, 0x09, 0xef, 0x66, 0x74, 0x76, 0xc0,
	0x16, 0xd3, 0xf8, 0xc7, 0x03, 0x46, 0xe8, 0x59, 0x1c, 0x12, 0x96, 0x93, 0xf0, 0x40, 0xae, 0x3e,
	0x08, 0xb3, 0xf9, 0x3c, 0x4b, 0xf5, 0x43, 0xed, 0x70, 0xef, 0xf1, 0xcd, 0x4c, 0x71, 0x18, 0x66,
	0x8b, 0x94, 0x2f, 0x9f, 0xda, 0xf8, 0xa6, 0xe7, 0x26, 0xb1, 0x70, 0x5c, 0x3d, 0xb4, 0xe9, 0xa3,
	0x9b, 0x99, 0x26, 0x38, 0x9d, 0xc9, 0x1f, 0x65, 0xe6, 0x3f, 0x86, 0xea, 0x09, 0x23, 0x14, 0x35,
	0xa1, 0x12, 0x47, 0x6d, 0xa3, 0x63, 0xec, 0x39, 0x41, 0x25, 0x8e, 0xd0, 0x07, 0x50, 0xe5, 0x17,
	0x39, 0x69, 0x57, 0x3a, 0xc6, 0x5e, 0xb3, 0xd7, 0xea, 0xaa, 0x24, 0x89, 0xa5, 0xe3, 0x8b, 0x9c,
	0x04, 0x52, 0xe9, 0x87, 0x70, 0x3b, 0xc0, 0x6f, 0x06, 0x42, 0xd5, 0xa7, 0x04, 0x73, 0x12, 0xbd,
	0xc0, 0x17, 0x49, 0x86, 0x23, 0x74, 0x07, 0x6c, 0xb6, 0x98, 0x4e, 0xe2, 0x88, 0xb5, 0xcd, 0x8e,
	0xb9, 0xe7, 0x04, 0x35, 0xb6, 0x98, 0x0e, 0x23, 0x86, 0x6e, 0x43, 0x8d, 0x67, 0x79, 0x1c, 0xb2,
	0x76, 0x55, 0xe1, 0x4a, 0x42, 0x6d, 0xb0, 0x73, 0x65, 0xdb, 0xb6, 0xa4, 0x13, 0x4b, 0xd1, 0x3f,
	0x04, 0x74, 0x92, 0xb2, 0xc5, 0x94, 0x85, 0x34, 0x9e, 0x92, 0xe7, 0x84, 0x31, 0x3c, 0x23, 0x68,
	0x1b, 0x2c, 0x69, 0xd9, 0x36, 0xe5, 0x6a, 0x25, 0xa0, 0x1d, 0xa8, 0xa9, 0x63, 0xdb, 0x55, 0x05,
	0xcb, 0x53, 0xfd, 0x27, 0xe0, 0x3c, 0x1b, 0x1d, 0x1f, 0x49, 0x47, 0xd1, 0x03, 0x30, 0x43, 0x7e,
	0x2e, 0x43, 0x75, 0x7b, 0xad, 0xae, 0x26, 0xaf, 0x9f, 0xa5, 0x9c, 0x9c, 0xf3, 0x40, 0xe8, 0xc4,
	0xe6, 0x32, 0x5e, 0x19, 0x7d, 0x23, 0x50, 0x82, 0xff, 0x93, 0x01, 0xb5, 0x63, 0xb5, 0xc7, 0xe5,
	0x6c, 0xad, 0x19, 0x38, 0xda, 0x00, 0xed, 0x02, 0x68, 0x7a, 0x85, 0x47, 0xca, 0x51, 0x47, 0x23,
	0xc3, 0x08, 0x3d, 0x00, 0x4b, 0xe4, 0x53, 0x65, 0xc2, 0xed, 0xb9, 0xa5, 0x1c, 0x07, 0x4a, 0x53,
	0xce, 0x8a, 0xbd, 0x9e, 0x95, 0x31, 0x34, 0xfa, 0xa7, 0x98, 0x8f, 0x48, 0xca, 0xaf, 0xe5, 0x0f,
	0x95, 0xf8, 0x73, 0x14, 0x5d, 0xa8, 0x03, 0x8d, 0x04, 0x33, 0x3e, 0x61, 0x84, 0xa4, 0x2b, 0x8f,
	0x40, 0x60, 0x23, 0x42, 0xd2, 0x61, 0xe4, 0x03, 0xd4, 0x97, 0xbb, 0xfa, 0x4f, 0xd5, 0x09, 0x87,
	0x8c, 0xc5, 0xb3, 0x94, 0x44, 0xe8, 0x2e, 0xd4, 0x27, 0xcf, 0x09, 0x3f, 0xcd, 0x22, 0xa6, 0xcf,
	0xb1, 0xb5, 0x88, 0xfe, 0x07, 0xce, 0x38, 0x9e, 0x13, 0xc6, 0xf1, 0x3c, 0xd7, 0x27, 0xae, 0x00,
	0xff, 0x4b, 0x70, 0xc5, 0x46, 0x2f, 0x71, 0xcc, 0xe3, 0x74, 0xf6, 0xef, 0xf7, 0xd9, 0x54, 0xfb,
	0x4c, 0xbe, 0x99, 0x48, 0xff, 0xfe, 0x34, 0xa0, 0xbe, 0xac, 0x3e, 0x1d, 0xbe, 0x59, 0x84, 0xbf,
	0x9e, 0xfa, 0xea, 0xe5, 0xd4, 0xef, 0x40, 0x0d, 0xe7, 0xb9, 0x50, 0xa9, 0x62, 0xb3, 0x70, 0x9e,
	0x0f, 0x23, 0x74, 0x1f, 0x1c, 0x46, 0xd2, 0x88, 0x50, 0xa1, 0xa9, 0x49, 0x4d, 0x5d, 0x01, 0xc3,
	0x08, 0xfd, 0x1f, 0x5c, 0xad, 0x94, 0x89, 0x55, 0x7c, 0x80, 0x82, 0x44, 0x4f, 0x08, 0xef, 0x79,
	0xe1, 0x7d, 0xbd, 0x63, 0xec, 0x99, 0xc1, 0x0a, 0x28, 0x08, 0x71, 0x4a, 0x84, 0xec, 0x02, 0x84,
	0xa7, 0x38, 0x4d, 0x49, 0x22, 0x0e, 0x04, 0xe5, 0xa5, 0x46, 0x94, 0x3b, 0xb2, 0xac, 0x65, 0x1b,
	0xb9, 0xb2, 0x5d, 0xea, 0x12, 0x18, 0x46, 0xcc, 0xff, 0xd5, 0x84, 0x7b, 0x01, 0x7e, 0xd3, 0xcf,
	0xd2, 0x33, 0x42, 0x19, 0xe6, 0x71, 0x96, 0x3e, 0xcb, 0xe2, 0x94, 0x44, 0x37, 0xae, 0xf2, 0xff,
	0x5c, 0xce, 0xd0, 0x43, 0x68, 0x85, 0xa5, 0x7c, 0x89, 0x0d, 0x36, 0xe5, 0x06, 0xcd, 0x32, 0xac,
	0x76, 0xf9, 0x5e, 0x24, 0x53, 0x06, 0xd5, 0x54, 0x41, 0x29, 0x40, 0x05, 0xa5, 0x95, 0xd2, 0xb9,
	0x96, 0x0a, 0x4a, 0x41, 0x22, 0x28, 0xff, 0x8f, 0x0a, 0xdc, 0xbf, 0x44, 0xcd, 0x88, 0x63, 0xca,
	0xdf, 0x73, 0xf3, 0x6e, 0xdc, 0xb4, 0xae, 0xe3, 0xc6, 0x7f, 0x6b, 0x5e, 0xc9, 0xae, 0xfe, 0x28,
	0xbc, 0xcf, 0xee, 0xbb, 0x64, 0x77, 0xeb, 0xda, 0xca, 0xff, 0x0c, 0x5c, 0xcc, 0x39, 0x0e, 0x4f,
	0xe7, 0x24, 0xe5, 0xac, 0xbd, 0x2d, 0x3f, 0x4d, 0xb7, 0xf4, 0xa7, 0xe9, 0xb0, 0xd0, 0x04, 0xe5,
	0x55, 0xd2, 0x5b, 0x72, 0xce, 0xdb, 0x3b, 0xda, 0x5b, 0x72, 0xce, 0xc5, 0x87, 0xfe, 0x55, 0x46,
	0xe7, 0x98, 0xb7, 0x6f, 0x4b, 0x54, 0x4b, 0xfe, 0x6f, 0x15, 0xb0, 0xde, 0x91, 0xa8, 0x4a, 0x41,
	0xd4, 0x3e, 0xd8, 0x9a, 0x16, 0xc9, 0x9e, 0xdb, 0xf3, 0xba, 0xcb, 0x01, 0xea, 0x50, 0x3d, 0x83,
	0xe5, 0x02, 0xd4, 0x01, 0x13, 0xe7, 0xb9, 0x64, 0xd3, 0xed, 0x35, 0xbb, 0x7a, 0x58, 0xea, 0xcb,
	0x47, 0x20, 0x54, 0xe8, 0x23, 0xa8, 0x29, 0x42, 0x64, 0xfe, 0xdd, 0xde, 0xa6, 0x0e, 0x73, 0x24,
	0xc1, 0x40, 0x2b, 0xd7, 0x99, 0x6a, 0xfc, 0x1d, 0x53, 0x9b, 0x25, 0xa6, 0xf6, 0xc0, 0xd6, 0xbc,
	0xc8, 0x1a, 0x16, 0xc7, 0xab, 0x9d, 0xfb, 0x0a, 0x0d, 0x96, 0x6a, 0xf4, 0x61, 0x31, 0x0e, 0x6d,
	0xc9, 0x4c, 0x37, 0xf4, 0xc2, 0xb1, 0x00, 0x97, 0xc3, 0x91, 0xff, 0x29, 0xd8, 0xda, 0xf2, 0xba,
	0xef, 0x7c, 0x8a, 0xe7, 0xc5, 0x77, 0x5e, 0xbc, 0xfb, 0x9f, 0x80, 0x25, 0xed, 0x6f, 0xb4, 0xf8,
	0x73, 0xb0, 0x4b, 0x33, 0xd5, 0x19, 0x4e, 0x16, 0x44, 0x5b, 0x28, 0xa1, 0x44, 0x64, 0x65, 0x8d,
	0xc8, 0x06, 0xc0, 0xaa, 0x1e, 0xfc, 0x9f, 0x0d, 0xa8, 0xa9, 0xbc, 0xdd, 0x68, 0x14, 0x59, 0x7a,
	0x62, 0xae, 0x3c, 0x11, 0x07, 0x91, 0x39, 0x8e, 0x93, 0x62, 0x34, 0x54, 0x92, 0xc0, 0xf3, 0xd3,
	0x2c, 0x25, 0x4c, 0x37, 0x99, 0x96, 0x64, 0xd7, 0x9e, 0x61, 0x8e, 0xe9, 0x64, 0x41, 0x13, 0xdd,
	0x61, 0x8e, 0x42, 0x4e, 0x68, 0xe2, 0xff, 0x6e, 0x80, 0x15, 0x90, 0x3c, 0xb9, 0x10, 0x13, 0x87,
	0xcc, 0xea, 0xa4, 0x70, 0xcb, 0x96, 0xf2, 0x50, 0x0e, 0x6e, 0x8c, 0x63, 0x4e, 0x96, 0x93, 0x9e,
	0x14, 0x90, 0x07, 0x26, 0xa1, 0x54, 0xb6, 0x58, 0x3d, 0x10, 0xaf, 0xa2, 0x7f, 0x08, 0xa5, 0x93,
	0x88, 0x88, 0x29, 0x34, 0x17, 0xbd, 0x22, 0x2b, 0xc1, 0x09, 0x9a, 0x84, 0xd2, 0x27, 0x2b, 0x14,
	0xf9, 0x50, 0x17, 0x0b, 0xc3, 0x2c, 0x52, 0x25, 0xd1, 0xec, 0xd9, 0x5d, 0x39, 0x6e, 0x8f, 0x03,
	0x9b, 0x50, 0xda, 0xcf, 0x22, 0x22, 0x3a, 0x55, 0xae, 0x49, 0x30, 0x63, 0xb2, 0x40, 0xac, 0x40,
	0x18, 0xf5, 0x85, 0x7c, 0x79, 0xe4, 0x6b, 0xac, 0x46, 0xbe, 0xef, 0xc0, 0x1a, 0x50, 0x9a, 0x51,
	0x39, 0x6d, 0x8a, 0x97, 0x62, 0xda, 0x94, 0xe8, 0x2e, 0x00, 0x25, 0x3f, 0x2c, 0x08, 0x2b, 0x4f,
	0x9b, 0x1a, 0x19, 0x46, 0xa8, 0x03, 0x6e, 0xd9, 0x7b, 0xf5, 0x27, 0x57, 0x86, 0xfc, 0xb7, 0x06,
	0x34, 0x46, 0x6a, 0xce, 0x56, 0xb1, 0xfc, 0xd3, 0x8c, 0x6d, 0x97, 0x66, 0x6c, 0xf4, 0x00, 0x1a,
	0x1c, 0xd3, 0x19, 0xe1, 0x13, 0x65, 0xa3, 0xfe, 0x9f, 0x5c, 0x85, 0xa9, 0x72, 0xdc, 0x05, 0xd0,
	0x4b, 0x5e, 0x93, 0x8b, 0xb6, 0xab, 0x3c, 0x54, 0xc8, 0x57, 0xe4, 0x02, 0x7d, 0x0c, 0x9e, 0x56,
	0xe7, 0x98, 0xf2, 0x58, 0xba, 0xa9, 0xba, 0xaa, 0xa5, 0xf0, 0x17, 0x4b, 0x58, 0x96, 0x14, 0x4f,
	0x98, 0xee, 0x46, 0xf9, 0xbe, 0xff, 0x08, 0xea, 0xcb, 0xeb, 0x09, 0xaa, 0x43, 0xf5, 0xe8, 0xf8,
	0x68, 0xe0, 0x6d, 0x88, 0xb7, 0x93, 0xd1, 0x20, 0xf0, 0x0c, 0xe4, 0x80, 0x75, 0xf8, 0x74, 0x70,
	0x34, 0xf6, 0x2a, 0x08, 0xa0, 0x36, 0xfa, 0x76, 0x34, 0x1e, 0x3c, 0xf7, 0xcc, 0xfd, 0x5f, 0x0c,
	0xb0, 0x06, 0x5f, 0x0f, 0x8e, 0xc6, 0x68, 0x1b, 0xbc, 0xe3, 0x05, 0x9f, 0x94, 0xaf, 0x33, 0xde,
	0x86, 0x30, 0x13, 0x75, 0x3d, 0xf1, 0x0c, 0xd4, 0x80, 0xfa, 0x61, 0x1e, 0xcb, 0x9a, 0xf2, 0x2a,
	0x68, 0x0b, 0x5a, 0x97, 0x2e, 0x3f, 0x9e, 0x89, 0x36, 0xc1, 0x19, 0x2d, 0xaf, 0x2a, 0x5e, 0x15,
	0x21, 0x68, 0x16, 0xa2, 0xb2, 0xab, 0xa1, 0x16, 0xb8, 0xa5, 0xfb, 0x8c, 0x67, 0x89, 0x73, 0x4b,
	0x80, 0x5a, 0x66, 0xef, 0xbf, 0x35, 0xc0, 0x91, 0x9b, 0xcb, 0x80, 0xda, 0xb0, 0xbd, 0xf6, 0xff,
	0xcd, 0xd4, 0x3c, 0xe1, 0x19, 0xe8, 0x0e, 0x6c, 0xad, 0x69, 0xe4, 0x1c, 0x12, 0x79, 0x95, 0x2b,
	0x26, 0x73, 0xd5, 0xe5, 0x9e, 0x89, 0x76, 0xe0, 0xd6, 0x9a, 0x26, 0x21, 0xaf, 0xb8, 0x57, 0xbd,
	0xb2, 0x53, 0x98, 0x64, 0x8c, 0x44, 0x9e, 0x75, 0x45, 0xc1, 0xf1, 0x6c, 0x46, 0x22, 0xaf, 0x86,
	0xee, 0xc2, 0xce, 0x9a, 0x62, 0x91, 0x6a, 0x95, 0xbd, 0xff, 0xb0, 0x14, 0x79, 0xc1, 0xc9, 0x82,
	0x11, 0xea, 0x6d, 0x20, 0xb7, 0xf8, 0x7b, 0xf4, 0x8c, 0xfd, 0x87, 0x32, 0x63, 0x2f, 0x28, 0x79,
	0x15, 0x9f, 0x0b, 0xcd, 0x4b, 0x32, 0x3d, 0xcd, 0xb2, 0xd7, 0xde, 0x86, 0xc8, 0xe5, 0x4b, 0x32,
	0x65, 0x99, 0xb8, 0xd3, 0x7a, 0xc6, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0x61, 0x4a, 0x15,
	0xae, 0x0f, 0x00, 0x00,
}
