// Code generated by protoc-gen-go.
// source: event/event.proto
// DO NOT EDIT!

/*
Package event is a generated protocol buffer package.

It is generated from these files:
	event/event.proto

It has these top-level messages:
	User
	OEvent
*/
package event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserType int32

const (
	UserType_NONE    UserType = 0
	UserType_VISITOR UserType = 1
	UserType_AGENT   UserType = 2
)

var UserType_name = map[int32]string{
	0: "NONE",
	1: "VISITOR",
	2: "AGENT",
}
var UserType_value = map[string]int32{
	"NONE":    0,
	"VISITOR": 1,
	"AGENT":   2,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event int32

const (
	Event_Out_EventCreated Event = 0
)

var Event_name = map[int32]string{
	0: "Out_EventCreated",
}
var Event_value = map[string]int32{
	"Out_EventCreated": 0,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type User struct {
	Id   string   `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id"`
	Type UserType `protobuf:"varint,2,opt,name=Type,json=type,enum=event.UserType" json:"Type"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetType() UserType {
	if m != nil {
		return m.Type
	}
	return UserType_NONE
}

// OEEventCreated is a kafka event created when subiz want
// to send message downstream
type OEvent struct {
	Id string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id"`
	// Event is name of the event see ./event.json
	Event     string `protobuf:"bytes,2,opt,name=Event,json=event" json:"Event"`
	AccountId string `protobuf:"bytes,3,opt,name=AccountId,json=accountId" json:"AccountId"`
	// Users is list of user that event need to be sent to. (3000 max)
	Users []*User `protobuf:"bytes,4,rep,name=Users,json=users" json:"Users"`
	// ChannelId is ID of channel this event is sent to. If this event
	// is sent to subiz channel, then you can leave this field blank
	ChannelId string `protobuf:"bytes,5,opt,name=ChannelId,json=channelId" json:"ChannelId"`
	// Payload is content of event in JSON format, see ./event.json
	Payload string `protobuf:"bytes,7,opt,name=Payload,json=payload" json:"Payload"`
}

func (m *OEvent) Reset()                    { *m = OEvent{} }
func (m *OEvent) String() string            { return proto.CompactTextString(m) }
func (*OEvent) ProtoMessage()               {}
func (*OEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OEvent) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *OEvent) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *OEvent) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *OEvent) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *OEvent) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "event.User")
	proto.RegisterType((*OEvent)(nil), "event.OEvent")
	proto.RegisterEnum("event.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("event.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("event/event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xd7, 0xae, 0x59, 0xd7, 0x5b, 0xd8, 0x3f, 0xff, 0xcb, 0x1e, 0xf2, 0xa0, 0x50, 0xe7,
	0x4b, 0x19, 0x32, 0x61, 0x3e, 0xfa, 0x34, 0x46, 0x91, 0xbc, 0xb4, 0x12, 0xab, 0xaf, 0x12, 0x9b,
	0x80, 0xc2, 0x68, 0x4b, 0x97, 0x0a, 0xfd, 0x44, 0x7e, 0x4d, 0x49, 0x6a, 0x41, 0xf0, 0x25, 0x70,
	0xce, 0x2f, 0xf7, 0x9c, 0xcb, 0x85, 0xff, 0xfa, 0x53, 0xd7, 0xe6, 0xd6, 0xbd, 0xbb, 0xb6, 0x6b,
	0x4c, 0x83, 0xc4, 0x89, 0xcd, 0x3d, 0x04, 0xcf, 0x67, 0xdd, 0xe1, 0x0a, 0x7c, 0xae, 0x98, 0x97,
	0x78, 0x69, 0x24, 0xfc, 0x0f, 0x85, 0xd7, 0x10, 0x94, 0x43, 0xab, 0x99, 0x9f, 0x78, 0xe9, 0x6a,
	0xff, 0x6f, 0x37, 0x8e, 0xda, 0xaf, 0xd6, 0x16, 0x81, 0x19, 0x5a, 0xbd, 0xf9, 0xf2, 0x60, 0x51,
	0x64, 0x96, 0xfc, 0x99, 0x5f, 0x03, 0x71, 0xc0, 0x05, 0x44, 0x62, 0x6c, 0xc3, 0x0b, 0x88, 0x0e,
	0x55, 0xd5, 0xf4, 0xb5, 0xe1, 0x8a, 0xcd, 0x1d, 0x89, 0xe4, 0x64, 0xe0, 0x15, 0x10, 0x5b, 0x70,
	0x66, 0x41, 0x32, 0x4f, 0xe3, 0x7d, 0xfc, 0xab, 0x54, 0x90, 0xde, 0x12, 0x1b, 0x70, 0x7c, 0x97,
	0x75, 0xad, 0x4f, 0x5c, 0x31, 0x32, 0x06, 0x54, 0x93, 0x81, 0x0c, 0xc2, 0x47, 0x39, 0x9c, 0x1a,
	0xa9, 0x58, 0xe8, 0x58, 0xd8, 0x8e, 0x72, 0x7b, 0x03, 0xcb, 0x69, 0x77, 0x5c, 0x42, 0x90, 0x17,
	0x79, 0x46, 0x67, 0x18, 0x43, 0xf8, 0xc2, 0x9f, 0x78, 0x59, 0x08, 0xea, 0x61, 0x04, 0xe4, 0xf0,
	0x90, 0xe5, 0x25, 0xf5, 0xb7, 0x97, 0x3f, 0xcb, 0xe3, 0x1a, 0x68, 0xd1, 0x9b, 0x57, 0x27, 0x8e,
	0x9d, 0x96, 0x46, 0x2b, 0x3a, 0x7b, 0x5b, 0xb8, 0x0b, 0xde, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff,
	0xf6, 0x2a, 0xee, 0x42, 0x56, 0x01, 0x00, 0x00,
}
