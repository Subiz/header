// Code generated by protoc-gen-go.
// source: api/api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api/api.proto

It has these top-level messages:
	Empty
	Event
	RestRequest
	RestResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Method int32

const (
	Method_GET    Method = 0
	Method_POST   Method = 1
	Method_PUT    Method = 2
	Method_DELETE Method = 3
	Method_PATCH  Method = 4
)

var Method_name = map[int32]string{
	0: "GET",
	1: "POST",
	2: "PUT",
	3: "DELETE",
	4: "PATCH",
}
var Method_value = map[string]int32{
	"GET":    0,
	"POST":   1,
	"PUT":    2,
	"DELETE": 3,
	"PATCH":  4,
}

func (x Method) String() string {
	return proto.EnumName(Method_name, int32(x))
}
func (Method) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event struct {
	RequestId string `protobuf:"bytes,1,opt,name=RequestId,json=requestId" json:"RequestId"`
	Content   []byte `protobuf:"bytes,2,opt,name=Content,json=content,proto3" json:"Content"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Event) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type RestRequest struct {
	Method      Method `protobuf:"varint,1,opt,name=Method,json=method,enum=api.Method" json:"Method"`
	Path        string `protobuf:"bytes,2,opt,name=Path,json=path" json:"Path"`
	Token       string `protobuf:"bytes,3,opt,name=Token,json=token" json:"Token"`
	ContentType string `protobuf:"bytes,4,opt,name=ContentType,json=contentType" json:"ContentType"`
	Content     string `protobuf:"bytes,5,opt,name=Content,json=content" json:"Content"`
	Ip          string `protobuf:"bytes,6,opt,name=Ip,json=ip" json:"Ip"`
}

func (m *RestRequest) Reset()                    { *m = RestRequest{} }
func (m *RestRequest) String() string            { return proto.CompactTextString(m) }
func (*RestRequest) ProtoMessage()               {}
func (*RestRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RestRequest) GetMethod() Method {
	if m != nil {
		return m.Method
	}
	return Method_GET
}

func (m *RestRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RestRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RestRequest) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *RestRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *RestRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type RestResponse struct {
	Code        int32  `protobuf:"varint,1,opt,name=Code,json=code" json:"Code"`
	Content     string `protobuf:"bytes,2,opt,name=Content,json=content" json:"Content"`
	ContentType string `protobuf:"bytes,3,opt,name=ContentType,json=contentType" json:"ContentType"`
}

func (m *RestResponse) Reset()                    { *m = RestResponse{} }
func (m *RestResponse) String() string            { return proto.CompactTextString(m) }
func (*RestResponse) ProtoMessage()               {}
func (*RestResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RestResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RestResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *RestResponse) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*RestRequest)(nil), "api.RestRequest")
	proto.RegisterType((*RestResponse)(nil), "api.RestResponse")
	proto.RegisterEnum("api.Method", Method_name, Method_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RestApi service

type RestApiClient interface {
	// 	rpc Handle(RestRequest) returns (RestResponse) {}
	HandleRedirect(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Empty, error)
}

type restApiClient struct {
	cc *grpc.ClientConn
}

func NewRestApiClient(cc *grpc.ClientConn) RestApiClient {
	return &restApiClient{cc}
}

func (c *restApiClient) HandleRedirect(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/api.RestApi/HandleRedirect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RestApi service

type RestApiServer interface {
	// 	rpc Handle(RestRequest) returns (RestResponse) {}
	HandleRedirect(context.Context, *Event) (*Empty, error)
}

func RegisterRestApiServer(s *grpc.Server, srv RestApiServer) {
	s.RegisterService(&_RestApi_serviceDesc, srv)
}

func _RestApi_HandleRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestApiServer).HandleRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RestApi/HandleRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestApiServer).HandleRedirect(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _RestApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.RestApi",
	HandlerType: (*RestApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleRedirect",
			Handler:    _RestApi_HandleRedirect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x80, 0x9b, 0x8f, 0x4d, 0xde, 0x4c, 0xfa, 0x96, 0x30, 0x78, 0x08, 0xe2, 0xa1, 0xc4, 0x4b,
	0xe9, 0xa1, 0x42, 0xc5, 0x93, 0x07, 0x29, 0x35, 0xd8, 0x82, 0x62, 0x58, 0xd7, 0xab, 0x10, 0x93,
	0x81, 0x06, 0x6d, 0x76, 0x6d, 0x56, 0xa1, 0xff, 0xc8, 0x9f, 0x29, 0xd9, 0xb4, 0x58, 0xea, 0x69,
	0x77, 0x9e, 0x61, 0x67, 0x9e, 0xd9, 0x81, 0xff, 0xb9, 0xaa, 0x2e, 0x72, 0x55, 0x4d, 0xd4, 0x46,
	0x6a, 0x89, 0x4e, 0xae, 0xaa, 0xc4, 0x07, 0x96, 0xae, 0x95, 0xde, 0x26, 0x37, 0xc0, 0xd2, 0x2f,
	0xaa, 0x35, 0x9e, 0x41, 0xc0, 0xe9, 0xe3, 0x93, 0x1a, 0xbd, 0x2c, 0x63, 0x6b, 0x68, 0x8d, 0x02,
	0x1e, 0x6c, 0xf6, 0x00, 0x63, 0xf0, 0xe7, 0xb2, 0xd6, 0x54, 0xeb, 0xd8, 0x1e, 0x5a, 0xa3, 0x3e,
	0xf7, 0x8b, 0x2e, 0x4c, 0xbe, 0x2d, 0x08, 0x39, 0x35, 0x7a, 0xf7, 0x18, 0xcf, 0xc1, 0x7b, 0x20,
	0xbd, 0x92, 0x5d, 0x91, 0xc1, 0x34, 0x9c, 0xb4, 0xad, 0x3b, 0xc4, 0xbd, 0xb5, 0x39, 0x11, 0xc1,
	0xcd, 0x72, 0xbd, 0x32, 0xb5, 0x02, 0xee, 0xaa, 0x5c, 0xaf, 0xf0, 0x04, 0x98, 0x90, 0x6f, 0x54,
	0xc7, 0x8e, 0x81, 0x4c, 0xb7, 0x01, 0x0e, 0x21, 0xdc, 0x35, 0x16, 0x5b, 0x45, 0xb1, 0x6b, 0x72,
	0x61, 0xf1, 0x8b, 0x0e, 0xd5, 0x98, 0xc9, 0xee, 0xd5, 0x70, 0x00, 0xf6, 0x52, 0xc5, 0x9e, 0x81,
	0x76, 0xa5, 0x92, 0x17, 0xe8, 0x77, 0xa6, 0x8d, 0x92, 0x75, 0x43, 0xad, 0xc5, 0x5c, 0x96, 0x64,
	0x44, 0x19, 0x77, 0x0b, 0x59, 0xd2, 0xf1, 0xa0, 0x07, 0xd5, 0x8e, 0x4c, 0x9c, 0x3f, 0x26, 0xe3,
	0xeb, 0xfd, 0xe8, 0xe8, 0x83, 0x73, 0x97, 0x8a, 0xa8, 0x87, 0xff, 0xc0, 0xcd, 0x1e, 0x9f, 0x44,
	0x64, 0xb5, 0x28, 0x7b, 0x16, 0x91, 0x8d, 0x00, 0xde, 0x6d, 0x7a, 0x9f, 0x8a, 0x34, 0x72, 0x30,
	0x00, 0x96, 0xcd, 0xc4, 0x7c, 0x11, 0xb9, 0xd3, 0x2b, 0xf0, 0x5b, 0xb9, 0x99, 0xaa, 0x70, 0x0c,
	0x83, 0x45, 0x5e, 0x97, 0xef, 0xc4, 0xa9, 0xac, 0x36, 0x54, 0x68, 0x04, 0xf3, 0x89, 0x66, 0x51,
	0xa7, 0xbb, 0xbb, 0xd9, 0x5e, 0xef, 0xd5, 0x33, 0x4b, 0xbd, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x3d, 0xaf, 0xee, 0x00, 0xe5, 0x01, 0x00, 0x00,
}
