syntax = "proto3";

package client;

message Empty {}

message Id {string Id = 1;}

enum Error {
	OK = 0;
	NOTFOUND = 404;
	INVALID_REQUEST = 400;
	UNAUTHORIZED = 401;
	INTERNAL_ERROR = 500;
}

message Client {
	// 128 bit string identification of the client.
	string Id = 1;

	// Secret used to authorize client with oauth2 server
	string Secret = 2;
	string LogoUrl = 3;
	
	// owner id, could be Account or Agent
	string OwnerId = 4;
	
	string ContactEmail = 5;
	string Description = 6;
	string ShortDescription = 7;
	bool IsVerified = 8;
	// List of URLs which client must register to subiz
	repeated string RedirectUrls = 9;
	repeated string WebhookUrls = 10;

	enum ClientType {
		APP = 0;
		CHANNEL = 1;
	}
	ClientType Type = 11;
	string Name = 12;

	// Set if app is created or trusted by subiz,
	// the client will have privilenge to do any action.
	bool IsInternal = 13;

	// Version number of the client.
	string Version = 14;

	// If this field setted to true, client is visible to any account, else,
	// only visible in owner account.
	bool IsPublic = 15;

	// PublishDate, a RFC3339 date string show when have the client is
	// published.
	string PublishDate = 16;

	// Clients capable of maintaining the confidentiality of their
	// credentials (e.g., client implemented on a secure server with
	// restricted access to the client credentials), or capable of secure
	// client authentication using other means.
	bool IsConfidential = 17;

	// Channel only, conversations on this channel will be close if there
	// are no message pass in last ClosedTimeout seconds
	int32 ClosedTimeout = 18;
}

message Secret {
	string Secret = 1;
}

message ListClientsRequest {
	string OwnerId = 1;
	string Keyword = 2;
	string StartId = 3;
	int32 Limit = 4;
}

message Clients {
	repeated Client Clients = 3;
}

message BoolValueRequest {
	string Id = 1;
	bool Value = 2;
}

service ClientMgt {
	rpc Create(Client) returns (Id) {}
	rpc Read(Id) returns (Client) {}
	rpc List(ListClientsRequest) returns (Clients) {}
	rpc Delete(Id) returns (Empty) {}
	rpc Update(Client) returns (Empty) {}
	rpc GenerateSecret(Id) returns(Secret) {}
	rpc Verify(BoolValueRequest) returns (Empty) {}
	rpc Publish(BoolValueRequest) returns (Empty) {}

	rpc Authorize(Registration) returns (Empty) {}
	rpc Revoke(Registration) returns (Empty) {}
	rpc ListRegistrations(Id) returns (Registrations) {}
}

message Registration {
	string UserId = 1;
	string ClientId = 2;

	bool InvalidScope = 3;
	string RegisterDate = 4;
	repeated int32 ScopeIds = 5;
}

message Registrations {
	repeated Registration Registraions = 1;
}

enum Event {
	EVENT_CLIENT_CREATED = 0;
	EVENT_CLIENT_DELETED = 1;
	EVENT_CLIENT_UPDATED = 2;
	EVENT_CLIENT_PUBLISHED = 3;
	EVENT_CLIENT_VERIFIED = 4;
	EVENT_CLIENT_SECRETUPDATED = 5;
}

message ClientCreatedEvent {
	Client Client = 1;
}

message ClientDeletedEvent {
	string Id = 1;
}

message ClientUpdatedEvent {
	Client Client = 1;
}

message ClientPublishedEvent {
	string Id = 1;
	bool Published = 2;
}

message ClientVerifiedEvent {
	string Id = 1;
	bool Verified = 2;
}

message ClientUpdatedSecretEvent {
	string Id = 1;
	string Secret = 2;
}
