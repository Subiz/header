syntax = "proto3";

package client;

import "bitbucket.org/subiz/servicespec/proto/common/auth/credential.proto";

message Error {
	ErrorCode code = 1;
	string error_description = 2;
}

message ClientCreateResponse {	
	Error error = 1;
	string id = 2;
}

enum ErrorCode {
	NO_ERROR = 0;
	RESOURCE_NOTFOUND = 1;
	INVALID_REQUEST = 2;
	UNAUTHORIZED = 3;
	INTERNAL_ERROR = 4;
}

message ClientRequest {
	auth.Credential credential = 1;
	Client client = 2;
}

message Client {
	string id = 1;
	string secret = 2;
	string logo_url = 3;
	string account_id = 4;
	string contact_email = 5;
	string description = 6;
	string short_description = 7;
	bool is_verified = 8;
	repeated string redirect_urls = 9;
	repeated string webhook_urls = 10;
	
	enum ClientType {
		APP = 0;
		CHANNEL = 1;
	}
	ClientType type = 11;
	string name = 12;
	bool is_internal = 13;

	string version = 14;
	bool is_public = 15;
	string publish_date = 16;
}

message ClientIdRequest {
	string id = 1;
	auth.Credential credential = 2;
}

message ClientResponse {
	Client client = 1;
	Error error = 2;
}

message ListClientsRequest {
	auth.Credential credential = 6;
	string start_id = 1;
	string keyword = 2;
	int32 limit = 3;
	string account_id = 4;
}

message ListClientsResponse {
	Error error = 1;
	repeated Client clients = 3;
}


service ClientMgt {
	rpc Create(ClientRequest) returns (ClientCreateResponse) {}
	rpc Read(ClientIdRequest) returns (ClientResponse) {}
	rpc List(ListClientsRequest) returns (ListClientsResponse) {}
	rpc Delete(ClientIdRequest) returns (Error) {}
	rpc Update(ClientRequest) returns (Error) {}
}