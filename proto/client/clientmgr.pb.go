// Code generated by protoc-gen-go.
// source: client/clientmgr.proto
// DO NOT EDIT!

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	client/clientmgr.proto

It has these top-level messages:
	EmptyResponse
	Client
	IdRequest
	SecretResponse
	ListClientsRequest
	ListClientsResponse
	BoolValueRequest
	ClientCreateResponse
	ClientCreatedEvent
	ClientDeletedEvent
	ClientUpdatedEvent
	ClientPublishedEvent
	ClientVerifiedEvent
	ClientUpdatedSecretEvent
*/
package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error int32

const (
	Error_OK              Error = 0
	Error_NOTFOUND        Error = 404
	Error_INVALID_REQUEST Error = 400
	Error_UNAUTHORIZED    Error = 401
	Error_INTERNAL_ERROR  Error = 500
)

var Error_name = map[int32]string{
	0:   "OK",
	404: "NOTFOUND",
	400: "INVALID_REQUEST",
	401: "UNAUTHORIZED",
	500: "INTERNAL_ERROR",
}
var Error_value = map[string]int32{
	"OK":              0,
	"NOTFOUND":        404,
	"INVALID_REQUEST": 400,
	"UNAUTHORIZED":    401,
	"INTERNAL_ERROR":  500,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}
func (Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event int32

const (
	Event_EVENT_CLIENT_CREATED       Event = 0
	Event_EVENT_CLIENT_DELETED       Event = 1
	Event_EVENT_CLIENT_UPDATED       Event = 2
	Event_EVENT_CLIENT_PUBLISHED     Event = 3
	Event_EVENT_CLIENT_VERIFIED      Event = 4
	Event_EVENT_CLIENT_SECRETUPDATED Event = 5
)

var Event_name = map[int32]string{
	0: "EVENT_CLIENT_CREATED",
	1: "EVENT_CLIENT_DELETED",
	2: "EVENT_CLIENT_UPDATED",
	3: "EVENT_CLIENT_PUBLISHED",
	4: "EVENT_CLIENT_VERIFIED",
	5: "EVENT_CLIENT_SECRETUPDATED",
}
var Event_value = map[string]int32{
	"EVENT_CLIENT_CREATED":       0,
	"EVENT_CLIENT_DELETED":       1,
	"EVENT_CLIENT_UPDATED":       2,
	"EVENT_CLIENT_PUBLISHED":     3,
	"EVENT_CLIENT_VERIFIED":      4,
	"EVENT_CLIENT_SECRETUPDATED": 5,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Client_ClientType int32

const (
	Client_APP     Client_ClientType = 0
	Client_CHANNEL Client_ClientType = 1
)

var Client_ClientType_name = map[int32]string{
	0: "APP",
	1: "CHANNEL",
}
var Client_ClientType_value = map[string]int32{
	"APP":     0,
	"CHANNEL": 1,
}

func (x Client_ClientType) String() string {
	return proto.EnumName(Client_ClientType_name, int32(x))
}
func (Client_ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Client struct {
	// 128 bit string identification of the client.
	Id string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	// Secret used to authorize client with oauth2 server
	Secret           string `protobuf:"bytes,2,opt,name=Secret,json=secret" json:"Secret,omitempty"`
	LogoUrl          string `protobuf:"bytes,3,opt,name=LogoUrl,json=logoUrl" json:"LogoUrl,omitempty"`
	AccountId        string `protobuf:"bytes,4,opt,name=AccountId,json=accountId" json:"AccountId,omitempty"`
	ContactEmail     string `protobuf:"bytes,5,opt,name=ContactEmail,json=contactEmail" json:"ContactEmail,omitempty"`
	Description      string `protobuf:"bytes,6,opt,name=Description,json=description" json:"Description,omitempty"`
	ShortDescription string `protobuf:"bytes,7,opt,name=ShortDescription,json=shortDescription" json:"ShortDescription,omitempty"`
	IsVerified       bool   `protobuf:"varint,8,opt,name=IsVerified,json=isVerified" json:"IsVerified,omitempty"`
	// List of URLs which client must register to subiz
	RedirectUrls []string          `protobuf:"bytes,9,rep,name=RedirectUrls,json=redirectUrls" json:"RedirectUrls,omitempty"`
	WebhookUrls  []string          `protobuf:"bytes,10,rep,name=WebhookUrls,json=webhookUrls" json:"WebhookUrls,omitempty"`
	Type         Client_ClientType `protobuf:"varint,11,opt,name=Type,json=type,enum=client.Client_ClientType" json:"Type,omitempty"`
	Name         string            `protobuf:"bytes,12,opt,name=Name,json=name" json:"Name,omitempty"`
	// Set if app is created or trusted by subiz,
	// the client will have privilenge to do any action.
	IsInternal bool `protobuf:"varint,13,opt,name=IsInternal,json=isInternal" json:"IsInternal,omitempty"`
	// Version number of the client.
	Version string `protobuf:"bytes,14,opt,name=Version,json=version" json:"Version,omitempty"`
	// If this field setted to true, client is visible to any account, else,
	// only visible in owner account.
	IsPublic bool `protobuf:"varint,15,opt,name=IsPublic,json=isPublic" json:"IsPublic,omitempty"`
	// PublishDate, a RFC3339 date string show when have the client is
	// published.
	PublishDate string `protobuf:"bytes,16,opt,name=PublishDate,json=publishDate" json:"PublishDate,omitempty"`
	// Clients capable of maintaining the confidentiality of their
	// credentials (e.g., client implemented on a secure server with
	// restricted access to the client credentials), or capable of secure
	// client authentication using other means.
	IsConfidential bool `protobuf:"varint,17,opt,name=IsConfidential,json=isConfidential" json:"IsConfidential,omitempty"`
	// Channel only, conversations on this channel will be close if there
	// are no message pass in last ClosedTimeout seconds
	ClosedTimeout int32 `protobuf:"varint,18,opt,name=ClosedTimeout,json=closedTimeout" json:"ClosedTimeout,omitempty"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Client) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Client) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Client) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Client) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Client) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *Client) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Client) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *Client) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Client) GetRedirectUrls() []string {
	if m != nil {
		return m.RedirectUrls
	}
	return nil
}

func (m *Client) GetWebhookUrls() []string {
	if m != nil {
		return m.WebhookUrls
	}
	return nil
}

func (m *Client) GetType() Client_ClientType {
	if m != nil {
		return m.Type
	}
	return Client_APP
}

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetIsInternal() bool {
	if m != nil {
		return m.IsInternal
	}
	return false
}

func (m *Client) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Client) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *Client) GetPublishDate() string {
	if m != nil {
		return m.PublishDate
	}
	return ""
}

func (m *Client) GetIsConfidential() bool {
	if m != nil {
		return m.IsConfidential
	}
	return false
}

func (m *Client) GetClosedTimeout() int32 {
	if m != nil {
		return m.ClosedTimeout
	}
	return 0
}

type IdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
}

func (m *IdRequest) Reset()                    { *m = IdRequest{} }
func (m *IdRequest) String() string            { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()               {}
func (*IdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SecretResponse struct {
	Secret string `protobuf:"bytes,1,opt,name=Secret,json=secret" json:"Secret,omitempty"`
}

func (m *SecretResponse) Reset()                    { *m = SecretResponse{} }
func (m *SecretResponse) String() string            { return proto.CompactTextString(m) }
func (*SecretResponse) ProtoMessage()               {}
func (*SecretResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SecretResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type ListClientsRequest struct {
	StartId   string `protobuf:"bytes,1,opt,name=StartId,json=startId" json:"StartId,omitempty"`
	Keyword   string `protobuf:"bytes,2,opt,name=Keyword,json=keyword" json:"Keyword,omitempty"`
	Limit     int32  `protobuf:"varint,3,opt,name=Limit,json=limit" json:"Limit,omitempty"`
	AccountId string `protobuf:"bytes,4,opt,name=AccountId,json=accountId" json:"AccountId,omitempty"`
}

func (m *ListClientsRequest) Reset()                    { *m = ListClientsRequest{} }
func (m *ListClientsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListClientsRequest) ProtoMessage()               {}
func (*ListClientsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListClientsRequest) GetStartId() string {
	if m != nil {
		return m.StartId
	}
	return ""
}

func (m *ListClientsRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ListClientsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListClientsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ListClientsResponse struct {
	Clients []*Client `protobuf:"bytes,3,rep,name=Clients,json=clients" json:"Clients,omitempty"`
}

func (m *ListClientsResponse) Reset()                    { *m = ListClientsResponse{} }
func (m *ListClientsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListClientsResponse) ProtoMessage()               {}
func (*ListClientsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListClientsResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type BoolValueRequest struct {
	Id    string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Value bool   `protobuf:"varint,2,opt,name=Value,json=value" json:"Value,omitempty"`
}

func (m *BoolValueRequest) Reset()                    { *m = BoolValueRequest{} }
func (m *BoolValueRequest) String() string            { return proto.CompactTextString(m) }
func (*BoolValueRequest) ProtoMessage()               {}
func (*BoolValueRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BoolValueRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BoolValueRequest) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type ClientCreateResponse struct {
	Id string `protobuf:"bytes,2,opt,name=Id,json=id" json:"Id,omitempty"`
}

func (m *ClientCreateResponse) Reset()                    { *m = ClientCreateResponse{} }
func (m *ClientCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientCreateResponse) ProtoMessage()               {}
func (*ClientCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ClientCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClientCreatedEvent struct {
	Client *Client `protobuf:"bytes,1,opt,name=Client,json=client" json:"Client,omitempty"`
}

func (m *ClientCreatedEvent) Reset()                    { *m = ClientCreatedEvent{} }
func (m *ClientCreatedEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientCreatedEvent) ProtoMessage()               {}
func (*ClientCreatedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ClientCreatedEvent) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type ClientDeletedEvent struct {
	Id string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
}

func (m *ClientDeletedEvent) Reset()                    { *m = ClientDeletedEvent{} }
func (m *ClientDeletedEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientDeletedEvent) ProtoMessage()               {}
func (*ClientDeletedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ClientDeletedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClientUpdatedEvent struct {
	Client *Client `protobuf:"bytes,1,opt,name=Client,json=client" json:"Client,omitempty"`
}

func (m *ClientUpdatedEvent) Reset()                    { *m = ClientUpdatedEvent{} }
func (m *ClientUpdatedEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientUpdatedEvent) ProtoMessage()               {}
func (*ClientUpdatedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ClientUpdatedEvent) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type ClientPublishedEvent struct {
	Id        string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Published bool   `protobuf:"varint,2,opt,name=Published,json=published" json:"Published,omitempty"`
}

func (m *ClientPublishedEvent) Reset()                    { *m = ClientPublishedEvent{} }
func (m *ClientPublishedEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientPublishedEvent) ProtoMessage()               {}
func (*ClientPublishedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ClientPublishedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientPublishedEvent) GetPublished() bool {
	if m != nil {
		return m.Published
	}
	return false
}

type ClientVerifiedEvent struct {
	Id       string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=Verified,json=verified" json:"Verified,omitempty"`
}

func (m *ClientVerifiedEvent) Reset()                    { *m = ClientVerifiedEvent{} }
func (m *ClientVerifiedEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientVerifiedEvent) ProtoMessage()               {}
func (*ClientVerifiedEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ClientVerifiedEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientVerifiedEvent) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type ClientUpdatedSecretEvent struct {
	Id     string `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=Secret,json=secret" json:"Secret,omitempty"`
}

func (m *ClientUpdatedSecretEvent) Reset()                    { *m = ClientUpdatedSecretEvent{} }
func (m *ClientUpdatedSecretEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientUpdatedSecretEvent) ProtoMessage()               {}
func (*ClientUpdatedSecretEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ClientUpdatedSecretEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientUpdatedSecretEvent) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyResponse)(nil), "client.EmptyResponse")
	proto.RegisterType((*Client)(nil), "client.Client")
	proto.RegisterType((*IdRequest)(nil), "client.IdRequest")
	proto.RegisterType((*SecretResponse)(nil), "client.SecretResponse")
	proto.RegisterType((*ListClientsRequest)(nil), "client.ListClientsRequest")
	proto.RegisterType((*ListClientsResponse)(nil), "client.ListClientsResponse")
	proto.RegisterType((*BoolValueRequest)(nil), "client.BoolValueRequest")
	proto.RegisterType((*ClientCreateResponse)(nil), "client.ClientCreateResponse")
	proto.RegisterType((*ClientCreatedEvent)(nil), "client.ClientCreatedEvent")
	proto.RegisterType((*ClientDeletedEvent)(nil), "client.ClientDeletedEvent")
	proto.RegisterType((*ClientUpdatedEvent)(nil), "client.ClientUpdatedEvent")
	proto.RegisterType((*ClientPublishedEvent)(nil), "client.ClientPublishedEvent")
	proto.RegisterType((*ClientVerifiedEvent)(nil), "client.ClientVerifiedEvent")
	proto.RegisterType((*ClientUpdatedSecretEvent)(nil), "client.ClientUpdatedSecretEvent")
	proto.RegisterEnum("client.Error", Error_name, Error_value)
	proto.RegisterEnum("client.Event", Event_name, Event_value)
	proto.RegisterEnum("client.Client_ClientType", Client_ClientType_name, Client_ClientType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClientMgt service

type ClientMgtClient interface {
	Create(ctx context.Context, in *Client, opts ...grpc.CallOption) (*ClientCreateResponse, error)
	Read(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Client, error)
	List(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error)
	Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Update(ctx context.Context, in *Client, opts ...grpc.CallOption) (*EmptyResponse, error)
	UpdateSecret(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*SecretResponse, error)
	Verify(ctx context.Context, in *BoolValueRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Publish(ctx context.Context, in *BoolValueRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type clientMgtClient struct {
	cc *grpc.ClientConn
}

func NewClientMgtClient(cc *grpc.ClientConn) ClientMgtClient {
	return &clientMgtClient{cc}
}

func (c *clientMgtClient) Create(ctx context.Context, in *Client, opts ...grpc.CallOption) (*ClientCreateResponse, error) {
	out := new(ClientCreateResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Read(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Client, error) {
	out := new(Client)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) List(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error) {
	out := new(ListClientsResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Update(ctx context.Context, in *Client, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) UpdateSecret(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*SecretResponse, error) {
	out := new(SecretResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/UpdateSecret", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Verify(ctx context.Context, in *BoolValueRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Publish(ctx context.Context, in *BoolValueRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Publish", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClientMgt service

type ClientMgtServer interface {
	Create(context.Context, *Client) (*ClientCreateResponse, error)
	Read(context.Context, *IdRequest) (*Client, error)
	List(context.Context, *ListClientsRequest) (*ListClientsResponse, error)
	Delete(context.Context, *IdRequest) (*EmptyResponse, error)
	Update(context.Context, *Client) (*EmptyResponse, error)
	UpdateSecret(context.Context, *IdRequest) (*SecretResponse, error)
	Verify(context.Context, *BoolValueRequest) (*EmptyResponse, error)
	Publish(context.Context, *BoolValueRequest) (*EmptyResponse, error)
}

func RegisterClientMgtServer(s *grpc.Server, srv ClientMgtServer) {
	s.RegisterService(&_ClientMgt_serviceDesc, srv)
}

func _ClientMgt_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Create(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Read(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).List(ctx, req.(*ListClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Delete(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Update(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_UpdateSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).UpdateSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/UpdateSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).UpdateSecret(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoolValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Verify(ctx, req.(*BoolValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoolValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Publish(ctx, req.(*BoolValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientMgt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.ClientMgt",
	HandlerType: (*ClientMgtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ClientMgt_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ClientMgt_Read_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ClientMgt_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ClientMgt_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ClientMgt_Update_Handler,
		},
		{
			MethodName: "UpdateSecret",
			Handler:    _ClientMgt_UpdateSecret_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _ClientMgt_Verify_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _ClientMgt_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "client/clientmgr.proto",
}

func init() { proto.RegisterFile("client/clientmgr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 957 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6a, 0xe3, 0x46,
	0x14, 0xb6, 0x2d, 0x5b, 0xb2, 0x8f, 0x13, 0x47, 0x99, 0x64, 0xc3, 0xac, 0x77, 0x59, 0x8c, 0x58,
	0x82, 0x49, 0x69, 0x4a, 0xd3, 0x5e, 0x2c, 0x74, 0xa1, 0x38, 0xd6, 0x2c, 0x11, 0xeb, 0x2a, 0xe9,
	0xf8, 0xa7, 0x50, 0x0a, 0x41, 0x91, 0x66, 0x13, 0xb1, 0xb2, 0xe4, 0x4a, 0xe3, 0x2c, 0x86, 0x3e,
	0x44, 0x0b, 0x7d, 0x8c, 0x3e, 0x4f, 0xdf, 0xa2, 0x77, 0x7d, 0x80, 0xa2, 0x19, 0x4b, 0xb1, 0xfc,
	0x53, 0x68, 0xaf, 0x26, 0xe7, 0xfb, 0xce, 0xdf, 0x1c, 0x7d, 0x73, 0x62, 0x38, 0x71, 0x03, 0x9f,
	0x85, 0xfc, 0x0b, 0x79, 0x4c, 0xef, 0xe3, 0xf3, 0x59, 0x1c, 0xf1, 0x08, 0xa9, 0x12, 0x30, 0x0e,
	0x60, 0x9f, 0x4c, 0x67, 0x7c, 0x41, 0x59, 0x32, 0x8b, 0xc2, 0x84, 0x19, 0x7f, 0x55, 0x41, 0xed,
	0x0b, 0x0e, 0xb5, 0xa0, 0x62, 0x79, 0xb8, 0xdc, 0x29, 0x77, 0x1b, 0xb4, 0xe2, 0x7b, 0xe8, 0x04,
	0xd4, 0x21, 0x73, 0x63, 0xc6, 0x71, 0x45, 0x60, 0x6a, 0x22, 0x2c, 0x84, 0x41, 0x1b, 0x44, 0xf7,
	0xd1, 0x38, 0x0e, 0xb0, 0x22, 0x08, 0x2d, 0x90, 0x26, 0x7a, 0x09, 0x8d, 0x9e, 0xeb, 0x46, 0xf3,
	0x90, 0x5b, 0x1e, 0xae, 0x0a, 0xae, 0xe1, 0x64, 0x00, 0x32, 0x60, 0xaf, 0x1f, 0x85, 0xdc, 0x71,
	0x39, 0x99, 0x3a, 0x7e, 0x80, 0x6b, 0xc2, 0x61, 0xcf, 0x5d, 0xc1, 0x50, 0x07, 0x9a, 0x26, 0x4b,
	0xdc, 0xd8, 0x9f, 0x71, 0x3f, 0x0a, 0xb1, 0x2a, 0x5c, 0x9a, 0xde, 0x13, 0x84, 0xce, 0x40, 0x1f,
	0x3e, 0x44, 0x31, 0x5f, 0x75, 0xd3, 0x84, 0x9b, 0x9e, 0xac, 0xe1, 0xe8, 0x15, 0x80, 0x95, 0x4c,
	0x58, 0xec, 0x7f, 0xf0, 0x99, 0x87, 0xeb, 0x9d, 0x72, 0xb7, 0x4e, 0xc1, 0xcf, 0x91, 0xb4, 0x23,
	0xca, 0x3c, 0x3f, 0x66, 0x2e, 0x1f, 0xc7, 0x41, 0x82, 0x1b, 0x1d, 0x25, 0xed, 0x28, 0x5e, 0xc1,
	0xd2, 0x8e, 0x7e, 0x60, 0x77, 0x0f, 0x51, 0xf4, 0x51, 0xb8, 0x80, 0x70, 0x69, 0x7e, 0x7a, 0x82,
	0xd0, 0xe7, 0x50, 0x1d, 0x2d, 0x66, 0x0c, 0x37, 0x3b, 0xe5, 0x6e, 0xeb, 0xe2, 0xf9, 0xb9, 0x1c,
	0xf5, 0x79, 0x7f, 0xf5, 0x48, 0x1d, 0x68, 0x95, 0x2f, 0x66, 0x0c, 0x21, 0xa8, 0xda, 0xce, 0x94,
	0xe1, 0x3d, 0xd1, 0x74, 0x35, 0x74, 0xa6, 0x4c, 0x36, 0x6a, 0x85, 0x9c, 0xc5, 0xa1, 0x13, 0xe0,
	0xfd, 0xac, 0xd1, 0x0c, 0x49, 0x47, 0x3e, 0x61, 0x71, 0x92, 0xde, 0xb5, 0x25, 0x47, 0xfe, 0x28,
	0x4d, 0xd4, 0x86, 0xba, 0x95, 0xdc, 0xcc, 0xef, 0x02, 0xdf, 0xc5, 0x07, 0x22, 0xae, 0xee, 0x2f,
	0xed, 0xb4, 0x75, 0xf1, 0x57, 0xf2, 0x60, 0x3a, 0x9c, 0x61, 0x5d, 0x0e, 0x73, 0xf6, 0x04, 0xa1,
	0x53, 0x68, 0x59, 0x49, 0x3f, 0x0a, 0x3f, 0xf8, 0x1e, 0x0b, 0xb9, 0xef, 0x04, 0xf8, 0x50, 0xe4,
	0x68, 0xf9, 0x05, 0x14, 0xbd, 0x86, 0xfd, 0x7e, 0x10, 0x25, 0xcc, 0x1b, 0xf9, 0x53, 0x16, 0xcd,
	0x39, 0x46, 0x9d, 0x72, 0xb7, 0x46, 0xf7, 0xdd, 0x55, 0xd0, 0x30, 0x00, 0x9e, 0x6e, 0x8b, 0x34,
	0x50, 0x7a, 0x37, 0x37, 0x7a, 0x09, 0x35, 0x41, 0xeb, 0x5f, 0xf5, 0x6c, 0x9b, 0x0c, 0xf4, 0xb2,
	0xf1, 0x02, 0x1a, 0x96, 0x47, 0xd9, 0xcf, 0x73, 0x96, 0x6c, 0x28, 0xce, 0xe8, 0x42, 0x4b, 0x2a,
	0x2e, 0x93, 0xe7, 0x8a, 0x06, 0xcb, 0xab, 0x1a, 0x34, 0x7e, 0x01, 0x34, 0xf0, 0x13, 0x2e, 0xcb,
	0x25, 0x59, 0x3e, 0x0c, 0xda, 0x90, 0x3b, 0x31, 0xcf, 0x93, 0x6a, 0x89, 0x34, 0x53, 0xe6, 0x3d,
	0x5b, 0x7c, 0x8a, 0x62, 0x6f, 0x29, 0x66, 0xed, 0xa3, 0x34, 0xd1, 0x31, 0xd4, 0x06, 0xfe, 0xd4,
	0xe7, 0x42, 0xcb, 0x35, 0x5a, 0x0b, 0x52, 0xe3, 0xdf, 0x95, 0x6c, 0x7c, 0x0b, 0x47, 0x85, 0xea,
	0xcb, 0x66, 0xbb, 0xa0, 0x2d, 0x21, 0xac, 0x74, 0x94, 0x6e, 0xf3, 0xa2, 0x55, 0xd4, 0x02, 0xd5,
	0xa4, 0x99, 0x18, 0x6f, 0x40, 0xbf, 0x8c, 0xa2, 0x60, 0xe2, 0x04, 0x73, 0xb6, 0x63, 0x18, 0x69,
	0x63, 0x82, 0x17, 0x0d, 0xd7, 0x69, 0xed, 0x31, 0x35, 0x8c, 0x53, 0x38, 0x96, 0xc9, 0xfa, 0x31,
	0x73, 0x38, 0xcb, 0x6b, 0xcb, 0xe8, 0x4a, 0x3e, 0xca, 0xb7, 0x80, 0x56, 0xfd, 0x3c, 0xf2, 0x98,
	0x3e, 0xf1, 0xd3, 0xec, 0xb1, 0x8b, 0x3a, 0x9b, 0x0d, 0x66, 0x6b, 0xe2, 0x75, 0x16, 0x6d, 0xb2,
	0x80, 0xe5, 0xd1, 0xeb, 0x9f, 0x2b, 0xaf, 0x31, 0x9e, 0x79, 0xff, 0xbd, 0x86, 0x99, 0xdd, 0x64,
	0xa9, 0xd1, 0x1d, 0x55, 0xd2, 0x4f, 0x91, 0x7b, 0x2c, 0x67, 0xd1, 0x98, 0x65, 0x80, 0xd1, 0x83,
	0x23, 0x99, 0x25, 0x7b, 0xd4, 0xdb, 0x93, 0xb4, 0xa1, 0x9e, 0xef, 0x01, 0x99, 0xa3, 0xfe, 0xb8,
	0xb4, 0x8d, 0x4b, 0xc0, 0x85, 0x6b, 0x48, 0xc1, 0x6d, 0xcf, 0xb3, 0x63, 0x27, 0x9e, 0xfd, 0x04,
	0x35, 0x12, 0xc7, 0x51, 0x8c, 0x54, 0xa8, 0x5c, 0xbf, 0xd7, 0x4b, 0x68, 0x1f, 0xea, 0xf6, 0xf5,
	0xe8, 0xdd, 0xf5, 0xd8, 0x36, 0xf5, 0xdf, 0x15, 0x74, 0x0c, 0x07, 0x96, 0x3d, 0xe9, 0x0d, 0x2c,
	0xf3, 0x96, 0x92, 0xef, 0xc7, 0x64, 0x38, 0xd2, 0x7f, 0x55, 0xd0, 0x21, 0xec, 0x8d, 0xed, 0xde,
	0x78, 0x74, 0x75, 0x4d, 0xad, 0x1f, 0x89, 0xa9, 0xff, 0xa6, 0xa0, 0x23, 0x68, 0x59, 0xf6, 0x88,
	0x50, 0xbb, 0x37, 0xb8, 0x25, 0x94, 0x5e, 0x53, 0xfd, 0x6f, 0xe5, 0xec, 0x8f, 0x32, 0xd4, 0x64,
	0x3f, 0x18, 0x8e, 0xc9, 0x84, 0xd8, 0xa3, 0xdb, 0xfe, 0xc0, 0x12, 0x07, 0x25, 0xbd, 0x11, 0x31,
	0xf5, 0xd2, 0x06, 0x63, 0x92, 0x01, 0x49, 0x99, 0xf2, 0x06, 0x33, 0xbe, 0x31, 0x45, 0x4c, 0x05,
	0xb5, 0xe1, 0xa4, 0xc0, 0xdc, 0x8c, 0x2f, 0x07, 0xd6, 0xf0, 0x8a, 0x98, 0xba, 0x82, 0x9e, 0xc3,
	0xb3, 0x02, 0x37, 0x21, 0xd4, 0x7a, 0x67, 0x11, 0x53, 0xaf, 0xa2, 0x57, 0xd0, 0x2e, 0x50, 0x43,
	0xd2, 0xa7, 0x64, 0x94, 0xa5, 0xad, 0x5d, 0xfc, 0xa9, 0x40, 0x43, 0x4e, 0xf4, 0xbb, 0x7b, 0x8e,
	0xde, 0x80, 0x2a, 0x35, 0x88, 0xd6, 0x94, 0xd0, 0x7e, 0x59, 0xb4, 0x8b, 0x8a, 0x36, 0x4a, 0xe8,
	0x33, 0xa8, 0x52, 0xe6, 0x78, 0xe8, 0x30, 0xf3, 0xcb, 0x37, 0x47, 0x7b, 0x2d, 0x95, 0x51, 0x42,
	0x3d, 0xa8, 0xa6, 0x6f, 0x12, 0xb5, 0x33, 0x66, 0x73, 0x3f, 0xb4, 0x5f, 0x6c, 0xe5, 0xf2, 0x7a,
	0x5f, 0x83, 0x2a, 0xf5, 0xbe, 0xad, 0xe2, 0xb3, 0x0c, 0x2a, 0xfe, 0xff, 0x2c, 0xa1, 0x2f, 0x41,
	0x95, 0xc2, 0xd9, 0xb8, 0xdf, 0xce, 0x90, 0x6f, 0x60, 0x4f, 0x86, 0x48, 0x2d, 0x6d, 0x2b, 0x77,
	0x92, 0x41, 0xc5, 0x85, 0x28, 0x82, 0x55, 0x21, 0xe5, 0x05, 0xc2, 0x99, 0xcf, 0xfa, 0x2e, 0xd9,
	0x5d, 0xf9, 0x2d, 0x68, 0xcb, 0xc7, 0xf4, 0x3f, 0xa2, 0xef, 0x54, 0xf1, 0x63, 0xe2, 0xab, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x29, 0x99, 0xc2, 0x19, 0x66, 0x08, 0x00, 0x00,
}
