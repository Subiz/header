// Code generated by protoc-gen-go.
// source: clientmgr.proto
// DO NOT EDIT!

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	clientmgr.proto

It has these top-level messages:
	Error
	Credential
	ClientCreateResponse
	ClientRequest
	Client
	ClientIdRequest
	ClientResponse
	ListClientsRequest
	ListClientsResponse
*/
package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_NO_ERROR          ErrorCode = 0
	ErrorCode_RESOURCE_NOTFOUND ErrorCode = 1
	ErrorCode_INVALID_REQUEST   ErrorCode = 2
	ErrorCode_UNAUTHORIZED      ErrorCode = 3
	ErrorCode_INTERNAL_ERROR    ErrorCode = 4
)

var ErrorCode_name = map[int32]string{
	0: "NO_ERROR",
	1: "RESOURCE_NOTFOUND",
	2: "INVALID_REQUEST",
	3: "UNAUTHORIZED",
	4: "INTERNAL_ERROR",
}
var ErrorCode_value = map[string]int32{
	"NO_ERROR":          0,
	"RESOURCE_NOTFOUND": 1,
	"INVALID_REQUEST":   2,
	"UNAUTHORIZED":      3,
	"INTERNAL_ERROR":    4,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Client_ClientType int32

const (
	Client_APP     Client_ClientType = 0
	Client_CHANNEL Client_ClientType = 1
)

var Client_ClientType_name = map[int32]string{
	0: "APP",
	1: "CHANNEL",
}
var Client_ClientType_value = map[string]int32{
	"APP":     0,
	"CHANNEL": 1,
}

func (x Client_ClientType) String() string {
	return proto.EnumName(Client_ClientType_name, int32(x))
}
func (Client_ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type Error struct {
	Code             ErrorCode `protobuf:"varint,1,opt,name=code,enum=client.ErrorCode" json:"code,omitempty"`
	ErrorDescription string    `protobuf:"bytes,2,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Error) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_NO_ERROR
}

func (m *Error) GetErrorDescription() string {
	if m != nil {
		return m.ErrorDescription
	}
	return ""
}

type Credential struct {
	AccountId  string   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserScopes []string `protobuf:"bytes,3,rep,name=user_scopes,json=userScopes" json:"user_scopes,omitempty"`
	// scope that the user allow
	Scopes   []string `protobuf:"bytes,4,rep,name=scopes" json:"scopes,omitempty"`
	Internal bool     `protobuf:"varint,5,opt,name=internal" json:"internal,omitempty"`
}

func (m *Credential) Reset()                    { *m = Credential{} }
func (m *Credential) String() string            { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()               {}
func (*Credential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Credential) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Credential) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Credential) GetUserScopes() []string {
	if m != nil {
		return m.UserScopes
	}
	return nil
}

func (m *Credential) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Credential) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

type ClientCreateResponse struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *ClientCreateResponse) Reset()                    { *m = ClientCreateResponse{} }
func (m *ClientCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientCreateResponse) ProtoMessage()               {}
func (*ClientCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientCreateResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ClientCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClientRequest struct {
	Credential *Credential `protobuf:"bytes,1,opt,name=credential" json:"credential,omitempty"`
	Client     *Client     `protobuf:"bytes,2,opt,name=client" json:"client,omitempty"`
}

func (m *ClientRequest) Reset()                    { *m = ClientRequest{} }
func (m *ClientRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientRequest) ProtoMessage()               {}
func (*ClientRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClientRequest) GetCredential() *Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *ClientRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type Client struct {
	Id               string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Secret           string            `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	LogoUrl          string            `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	AccountId        string            `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ContactEmail     string            `protobuf:"bytes,5,opt,name=contact_email,json=contactEmail" json:"contact_email,omitempty"`
	Description      string            `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	ShortDescription string            `protobuf:"bytes,7,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	IsVerified       bool              `protobuf:"varint,8,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	RedirectUrl      string            `protobuf:"bytes,9,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	WebhookUrl       string            `protobuf:"bytes,10,opt,name=webhook_url,json=webhookUrl" json:"webhook_url,omitempty"`
	Type             Client_ClientType `protobuf:"varint,11,opt,name=type,enum=client.Client_ClientType" json:"type,omitempty"`
	Name             string            `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	IsInternal       bool              `protobuf:"varint,13,opt,name=is_internal,json=isInternal" json:"is_internal,omitempty"`
	Version          string            `protobuf:"bytes,14,opt,name=version" json:"version,omitempty"`
	IsPublic         string            `protobuf:"bytes,15,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	PublishDate      string            `protobuf:"bytes,16,opt,name=publish_date,json=publishDate" json:"publish_date,omitempty"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Client) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Client) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Client) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Client) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Client) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *Client) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Client) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *Client) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Client) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *Client) GetWebhookUrl() string {
	if m != nil {
		return m.WebhookUrl
	}
	return ""
}

func (m *Client) GetType() Client_ClientType {
	if m != nil {
		return m.Type
	}
	return Client_APP
}

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetIsInternal() bool {
	if m != nil {
		return m.IsInternal
	}
	return false
}

func (m *Client) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Client) GetIsPublic() string {
	if m != nil {
		return m.IsPublic
	}
	return ""
}

func (m *Client) GetPublishDate() string {
	if m != nil {
		return m.PublishDate
	}
	return ""
}

type ClientIdRequest struct {
	Id         string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Credential *Credential `protobuf:"bytes,2,opt,name=credential" json:"credential,omitempty"`
}

func (m *ClientIdRequest) Reset()                    { *m = ClientIdRequest{} }
func (m *ClientIdRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientIdRequest) ProtoMessage()               {}
func (*ClientIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ClientIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientIdRequest) GetCredential() *Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type ClientResponse struct {
	Id               string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Secret           string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	LogoUrl          string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	AccountId        string `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ContactEmail     string `protobuf:"bytes,5,opt,name=contact_email,json=contactEmail" json:"contact_email,omitempty"`
	Description      string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	ShortDescription string `protobuf:"bytes,7,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	// app is accessable from other account must have validated = true
	Validated   bool   `protobuf:"varint,8,opt,name=validated" json:"validated,omitempty"`
	RedirectUrl string `protobuf:"bytes,9,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	Webhook     string `protobuf:"bytes,10,opt,name=webhook" json:"webhook,omitempty"`
	// any client internal = true are grant unlimited access. Only set this field to internal client (service)
	Internal bool   `protobuf:"varint,13,opt,name=internal" json:"internal,omitempty"`
	Error    *Error `protobuf:"bytes,14,opt,name=error" json:"error,omitempty"`
}

func (m *ClientResponse) Reset()                    { *m = ClientResponse{} }
func (m *ClientResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientResponse) ProtoMessage()               {}
func (*ClientResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ClientResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *ClientResponse) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *ClientResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ClientResponse) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *ClientResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ClientResponse) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *ClientResponse) GetValidated() bool {
	if m != nil {
		return m.Validated
	}
	return false
}

func (m *ClientResponse) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *ClientResponse) GetWebhook() string {
	if m != nil {
		return m.Webhook
	}
	return ""
}

func (m *ClientResponse) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

func (m *ClientResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListClientsRequest struct {
	Credential *Credential `protobuf:"bytes,6,opt,name=credential" json:"credential,omitempty"`
	StartId    string      `protobuf:"bytes,1,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	Keyword    string      `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	Limit      string      `protobuf:"bytes,3,opt,name=limit" json:"limit,omitempty"`
	AccountId  string      `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ListClientsRequest) Reset()                    { *m = ListClientsRequest{} }
func (m *ListClientsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListClientsRequest) ProtoMessage()               {}
func (*ListClientsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListClientsRequest) GetCredential() *Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *ListClientsRequest) GetStartId() string {
	if m != nil {
		return m.StartId
	}
	return ""
}

func (m *ListClientsRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ListClientsRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *ListClientsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ListClientsResponse struct {
	Error   *Error    `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Clients []*Client `protobuf:"bytes,3,rep,name=clients" json:"clients,omitempty"`
}

func (m *ListClientsResponse) Reset()                    { *m = ListClientsResponse{} }
func (m *ListClientsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListClientsResponse) ProtoMessage()               {}
func (*ListClientsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListClientsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListClientsResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "client.Error")
	proto.RegisterType((*Credential)(nil), "client.Credential")
	proto.RegisterType((*ClientCreateResponse)(nil), "client.ClientCreateResponse")
	proto.RegisterType((*ClientRequest)(nil), "client.ClientRequest")
	proto.RegisterType((*Client)(nil), "client.Client")
	proto.RegisterType((*ClientIdRequest)(nil), "client.ClientIdRequest")
	proto.RegisterType((*ClientResponse)(nil), "client.ClientResponse")
	proto.RegisterType((*ListClientsRequest)(nil), "client.ListClientsRequest")
	proto.RegisterType((*ListClientsResponse)(nil), "client.ListClientsResponse")
	proto.RegisterEnum("client.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("client.Client_ClientType", Client_ClientType_name, Client_ClientType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClientMgt service

type ClientMgtClient interface {
	Create(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ClientCreateResponse, error)
	Read(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ClientResponse, error)
	List(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error)
	Delete(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*Error, error)
	Update(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*Error, error)
}

type clientMgtClient struct {
	cc *grpc.ClientConn
}

func NewClientMgtClient(cc *grpc.ClientConn) ClientMgtClient {
	return &clientMgtClient{cc}
}

func (c *clientMgtClient) Create(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ClientCreateResponse, error) {
	out := new(ClientCreateResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Read(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ClientResponse, error) {
	out := new(ClientResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) List(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error) {
	out := new(ListClientsResponse)
	err := grpc.Invoke(ctx, "/client.ClientMgt/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Delete(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientMgtClient) Update(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/client.ClientMgt/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClientMgt service

type ClientMgtServer interface {
	Create(context.Context, *ClientRequest) (*ClientCreateResponse, error)
	Read(context.Context, *ClientIdRequest) (*ClientResponse, error)
	List(context.Context, *ListClientsRequest) (*ListClientsResponse, error)
	Delete(context.Context, *ClientIdRequest) (*Error, error)
	Update(context.Context, *ClientRequest) (*Error, error)
}

func RegisterClientMgtServer(s *grpc.Server, srv ClientMgtServer) {
	s.RegisterService(&_ClientMgt_serviceDesc, srv)
}

func _ClientMgt_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Create(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Read(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).List(ctx, req.(*ListClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Delete(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientMgt_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientMgtServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientMgt/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientMgtServer).Update(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientMgt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.ClientMgt",
	HandlerType: (*ClientMgtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ClientMgt_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ClientMgt_Read_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ClientMgt_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ClientMgt_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ClientMgt_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clientmgr.proto",
}

func init() { proto.RegisterFile("clientmgr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 876 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x56, 0x5b, 0x6f, 0xe3, 0x44,
	0x14, 0x6e, 0x2e, 0x75, 0xe2, 0x93, 0x4b, 0xd3, 0xb3, 0x37, 0x37, 0xbb, 0x68, 0x83, 0x57, 0xa0,
	0x08, 0x44, 0x85, 0xc2, 0x13, 0x4f, 0x28, 0x4a, 0x8c, 0xd6, 0xa2, 0x38, 0x65, 0x9a, 0xec, 0x03,
	0x3c, 0x58, 0xae, 0x3d, 0xb4, 0xa3, 0xba, 0x76, 0x18, 0x4f, 0xba, 0xea, 0x2b, 0xff, 0x82, 0x1f,
	0xc0, 0x3b, 0xe2, 0x17, 0x22, 0xcf, 0x8c, 0x9d, 0x38, 0xbb, 0x0b, 0xe5, 0x75, 0x9f, 0x92, 0xf3,
	0x7d, 0xc7, 0x67, 0xce, 0xe5, 0xf3, 0x19, 0xc3, 0x51, 0x18, 0x33, 0x9a, 0x88, 0xdb, 0x2b, 0x7e,
	0xba, 0xe6, 0xa9, 0x48, 0xd1, 0x50, 0x80, 0xfd, 0x0b, 0x1c, 0x3a, 0x9c, 0xa7, 0x1c, 0x3f, 0x83,
	0x66, 0x98, 0x46, 0xd4, 0xaa, 0x8d, 0x6a, 0xe3, 0xfe, 0xe4, 0xf8, 0x54, 0xf1, 0xa7, 0x92, 0x9c,
	0xa5, 0x11, 0x25, 0x92, 0xc6, 0x2f, 0xe1, 0x98, 0xe6, 0x90, 0x1f, 0xd1, 0x2c, 0xe4, 0x6c, 0x2d,
	0x58, 0x9a, 0x58, 0xf5, 0x51, 0x6d, 0x6c, 0x92, 0x81, 0x24, 0xe6, 0x5b, 0xdc, 0xfe, 0xa3, 0x06,
	0x30, 0xe3, 0x34, 0xa2, 0x89, 0x60, 0x41, 0x8c, 0x9f, 0x00, 0x04, 0x61, 0x98, 0x6e, 0x12, 0xe1,
	0xb3, 0x48, 0x1e, 0x64, 0x12, 0x53, 0x23, 0x6e, 0x84, 0xcf, 0xa0, 0xb5, 0xc9, 0x28, 0xcf, 0x39,
	0x15, 0xd0, 0xc8, 0x4d, 0x37, 0xc2, 0x97, 0xd0, 0x91, 0x44, 0x16, 0xa6, 0x6b, 0x9a, 0x59, 0x8d,
	0x51, 0x63, 0x6c, 0x12, 0xc8, 0xa1, 0x0b, 0x89, 0xe0, 0x53, 0x30, 0x34, 0xd7, 0x94, 0x9c, 0xb6,
	0x70, 0x08, 0x6d, 0x96, 0x08, 0xca, 0x93, 0x20, 0xb6, 0x0e, 0x47, 0xb5, 0x71, 0x9b, 0x94, 0xb6,
	0xfd, 0x03, 0x3c, 0x9e, 0xc9, 0x12, 0x67, 0x9c, 0x06, 0x82, 0x12, 0x9a, 0xad, 0xd3, 0x24, 0xa3,
	0xf8, 0x0a, 0x0e, 0x65, 0x1d, 0x32, 0xbf, 0xce, 0xa4, 0x57, 0x69, 0x04, 0x51, 0x1c, 0xf6, 0xa1,
	0x5e, 0x66, 0x59, 0x67, 0x91, 0x7d, 0x03, 0x3d, 0x15, 0x8c, 0xd0, 0xdf, 0x36, 0x34, 0x13, 0x38,
	0x01, 0x08, 0xcb, 0xc2, 0x75, 0x28, 0x2c, 0x42, 0x6d, 0x5b, 0x42, 0x76, 0xbc, 0xf0, 0x73, 0xd0,
	0x43, 0x91, 0x81, 0x3b, 0x93, 0x7e, 0xe9, 0xaf, 0x42, 0x17, 0x23, 0xfb, 0xb3, 0x09, 0x86, 0x82,
	0x74, 0x1e, 0xb5, 0x22, 0x0f, 0xd9, 0x08, 0x1a, 0x72, 0x2a, 0x8a, 0x0e, 0x2a, 0x0b, 0x4f, 0xa0,
	0x1d, 0xa7, 0x57, 0xa9, 0xbf, 0xe1, 0xb1, 0xd5, 0x90, 0x4c, 0x2b, 0xb7, 0x57, 0x7c, 0x7f, 0x28,
	0xcd, 0xfd, 0xa1, 0xbc, 0x82, 0x5e, 0x98, 0x26, 0x22, 0x08, 0x85, 0x4f, 0x6f, 0x03, 0xa6, 0xfa,
	0x68, 0x92, 0xae, 0x06, 0x9d, 0x1c, 0xc3, 0x11, 0x74, 0x76, 0xe5, 0x60, 0x48, 0x97, 0x5d, 0x28,
	0x97, 0x4d, 0x76, 0x9d, 0x72, 0x51, 0x91, 0x4d, 0x4b, 0xc9, 0x46, 0x12, 0x3b, 0xb2, 0xc9, 0xe7,
	0xcd, 0x32, 0xff, 0x8e, 0x72, 0xf6, 0x2b, 0xa3, 0x91, 0xd5, 0x96, 0x93, 0x03, 0x96, 0xbd, 0xd1,
	0x08, 0x7e, 0x0a, 0x5d, 0x4e, 0x23, 0xc6, 0x69, 0x28, 0x64, 0x49, 0xa6, 0x3a, 0xb0, 0xc0, 0xf2,
	0xb2, 0x5e, 0x42, 0xe7, 0x2d, 0xbd, 0xbc, 0x4e, 0xd3, 0x1b, 0xe9, 0x01, 0xd2, 0x03, 0x34, 0x94,
	0x3b, 0x7c, 0x05, 0x4d, 0x71, 0xbf, 0xa6, 0x56, 0x47, 0xea, 0xfd, 0xa4, 0xda, 0x6b, 0xfd, 0xb3,
	0xbc, 0x5f, 0x53, 0x22, 0xdd, 0x10, 0xa1, 0x99, 0x04, 0xb7, 0xd4, 0xea, 0xca, 0x40, 0xf2, 0xbf,
	0xce, 0xb3, 0x54, 0x58, 0xaf, 0xc8, 0xd3, 0xd5, 0x08, 0x5a, 0xd0, 0xba, 0xa3, 0x3c, 0xcb, 0x6b,
	0xed, 0xab, 0xae, 0x6b, 0x13, 0x9f, 0x83, 0xc9, 0x32, 0x7f, 0xbd, 0xb9, 0x8c, 0x59, 0x68, 0x1d,
	0x49, 0xae, 0xcd, 0xb2, 0x73, 0x69, 0xe7, 0xe5, 0x49, 0x26, 0xbb, 0xf6, 0xa3, 0x40, 0x50, 0x6b,
	0xa0, 0xca, 0xd3, 0xd8, 0x3c, 0x10, 0xd4, 0xb6, 0x01, 0xb6, 0x29, 0x62, 0x0b, 0x1a, 0xd3, 0xf3,
	0xf3, 0xc1, 0x01, 0x76, 0xa0, 0x35, 0x7b, 0x3d, 0xf5, 0x3c, 0xe7, 0x6c, 0x50, 0xb3, 0x57, 0x70,
	0xa4, 0x7c, 0xdc, 0xa8, 0x90, 0xe5, 0xbe, 0x5e, 0xaa, 0x32, 0xad, 0x3f, 0x44, 0xa6, 0xf6, 0xef,
	0x0d, 0xe8, 0x17, 0x62, 0xd7, 0xef, 0xcc, 0xc7, 0x29, 0xc3, 0x17, 0x60, 0xde, 0x05, 0x31, 0xcb,
	0x47, 0x50, 0x88, 0x70, 0x0b, 0x3c, 0x44, 0x83, 0x16, 0xb4, 0xb4, 0xe0, 0xb4, 0xfe, 0x0a, 0xb3,
	0xb2, 0x98, 0x7a, 0xd5, 0xc5, 0xb4, 0x5d, 0x40, 0xfd, 0x0f, 0x2f, 0x20, 0xfb, 0xef, 0x1a, 0xe0,
	0x19, 0xcb, 0x84, 0x1a, 0x44, 0xf6, 0xfe, 0xb5, 0x63, 0x3c, 0x68, 0xed, 0x9c, 0x40, 0x3b, 0x13,
	0x01, 0xdf, 0xd9, 0xc9, 0x2d, 0x69, 0xbb, 0x51, 0x5e, 0xc0, 0x0d, 0xbd, 0x7f, 0x9b, 0xf2, 0x62,
	0xd7, 0x15, 0x26, 0x3e, 0x86, 0xc3, 0x98, 0xdd, 0x32, 0xa1, 0xc7, 0xa8, 0x8c, 0xff, 0x18, 0xa2,
	0x1d, 0xc1, 0xa3, 0x4a, 0xce, 0xff, 0x67, 0xe3, 0x8e, 0xa1, 0xa5, 0x60, 0xb5, 0xff, 0xdf, 0xdd,
	0x8e, 0x05, 0xfd, 0xc5, 0x0d, 0x98, 0xe5, 0xa5, 0x85, 0x5d, 0x68, 0x7b, 0x0b, 0xdf, 0x21, 0x64,
	0x41, 0x06, 0x07, 0xf8, 0x04, 0x8e, 0x89, 0x73, 0xb1, 0x58, 0x91, 0x99, 0xe3, 0x7b, 0x8b, 0xe5,
	0xf7, 0x8b, 0x95, 0x37, 0x1f, 0xd4, 0xf0, 0x11, 0x1c, 0xb9, 0xde, 0x9b, 0xe9, 0x99, 0x3b, 0xf7,
	0x89, 0xf3, 0xd3, 0xca, 0xb9, 0x58, 0x0e, 0xea, 0x38, 0x80, 0xee, 0xca, 0x9b, 0xae, 0x96, 0xaf,
	0x17, 0xc4, 0xfd, 0xd9, 0x99, 0x0f, 0x1a, 0x88, 0xd0, 0x77, 0xbd, 0xa5, 0x43, 0xbc, 0xe9, 0x99,
	0x8e, 0xd8, 0x9c, 0xfc, 0x55, 0x07, 0x53, 0x25, 0xf0, 0xe3, 0x95, 0xc0, 0xef, 0xc0, 0x50, 0xb7,
	0x09, 0x3e, 0xd9, 0xcb, 0x4e, 0xcd, 0x67, 0xf8, 0xa2, 0x0a, 0x57, 0xaf, 0x1e, 0xfb, 0x00, 0xbf,
	0x85, 0x26, 0xa1, 0x41, 0x84, 0xcf, 0xaa, 0x7e, 0xe5, 0x0b, 0x3c, 0x7c, 0xba, 0x1f, 0xb7, 0x7c,
	0x74, 0x0a, 0xcd, 0xbc, 0xb9, 0x38, 0x2c, 0x3c, 0xde, 0x95, 0xc7, 0xf0, 0xf9, 0x7b, 0xb9, 0x32,
	0xc4, 0x04, 0x8c, 0x39, 0x8d, 0xa9, 0xa0, 0x1f, 0x3e, 0xbf, 0x3a, 0x1c, 0xfb, 0x00, 0xbf, 0x06,
	0x63, 0xb5, 0x8e, 0xfe, 0xa5, 0xe4, 0xfd, 0x27, 0x2e, 0x0d, 0xf9, 0x01, 0xf2, 0xcd, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x2b, 0x25, 0xe3, 0xde, 0x93, 0x08, 0x00, 0x00,
}
