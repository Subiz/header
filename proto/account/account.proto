syntax = "proto2";

package account;

import "bitbucket.org/subiz/servicespec/proto/auth/auth.proto";

enum AccountState {
	UNCONFIRMED = 0; // waiting for email confirmation
	ACTIVATED = 1;  // normal account
	LOCKED = 2;  // subiz lock down account
}

service AccountMgr {
	// Account methods
	rpc CreateAccount(CreateAccountRequest) returns (Id) {}
	rpc UpdateAccount(Account) returns (Empty) {}
	rpc ReadAccount(Id) returns (Account) {}
	rpc UpdateAccountState(AccountStateUpdateRequest) returns (Empty) {}
	rpc UpdatePlan(UpdatePlanRequest) returns (Empty) {}
	rpc ConfirmAccount(Token) returns (Empty) {}
	// Agent methods
	rpc ReadAgent(Id) returns (Agent) {}
	rpc InviteAgent(Invitation) returns (Id) {}
	rpc UninviteAgent(Id) returns (Empty) {}
	rpc AcceptInvitation(Token) returns (Empty) {}
	rpc RejectInvitation(Token) returns (Empty) {}
	rpc UpdateAgent(Agent) returns (Empty) {}
	rpc UpdateAgentState(AgentStateUpdateRequest) returns (Empty) {}
	rpc ResetPassword(NewPassword) returns (Empty) {}
	rpc RequestResetPassword(ResetPasswordRequest) returns (Empty) {}
	rpc UpdateAgentPermission(AgentPerm) returns (Empty) {}
	rpc ReadAgentPermission(Id) returns (auth.Method) {}
	rpc CheckLogin(LoginRequest) returns (Id) {}
	rpc BatchRead(AgentIds) returns (Agents) {}
	rpc ListAgents(ListAgentRequest) returns (Agents) {}
	// AgentGroup methods
	rpc CreateGroup(AgentGroup) returns (Id) {}
	rpc UpdateGroup(AgentGroup) returns (Empty) {}
	rpc DeleteGroup(Id) returns (Empty) {}
	rpc ListGroups(ListGroupRequest) returns(AgentGroups) {}
	rpc RemoveAgentFromGroup(GroupMember) returns (Empty) {}
	rpc AddAgentToGroup(GroupMember) returns (Empty) {}
	rpc ReadGroup(Id) returns (AgentGroup) {}
}

message Agent {
	optional string id = 1;
	optional string account_id = 2;
	optional string fullname = 3;
	optional string email = 5;
	repeated string emails = 4;
	optional bool is_owner = 6;
	optional string job_title = 7;
	optional Gender gender = 8;
	optional string avatar_url = 9;
	optional string language = 10;
	optional string location = 19;
	optional string timezone = 11;
	//optional string encrypted_password = 12;
  optional string joined_time = 13;
	optional string invited_by = 14;
  optional AgentState state = 15;
	optional string last_password_changed_time = 16;
	optional int64 last_seen_time = 17;
	optional int64 last_updated_time = 18;
}

message Invitation {
	optional string id = 1;
	optional string account_id = 2;
	optional string from_id = 3;
	optional string email = 4;
	optional string agent_id = 5;
	optional string sent_time = 7;
	optional string reply_time = 8;
	optional string agent_fullname = 9;
	optional string agent_jobtitle = 10;
	optional string token = 11;
}

message AgentGroup {
	optional string id = 1;				//
	optional string account_id = 2;
	optional string name = 3;
	optional string logo_url = 4;

	// Members is list of 10 agents in group
	// repeated string Members = 5;
	optional int64 created_time = 6;
}

message AgentStateUpdateRequest {
	optional string account_id = 1;
	optional string agent_id = 2;
	optional AgentState state = 3;
}

message AccountStateUpdateRequest {
	optional string account_id = 1;
	optional AccountState state = 2;
}

message ResetPasswordRequest {
	optional string email = 2;
}

message UpdatePlanRequest {
	optional string account_id = 1;
	optional int32 plan = 2;
}

message AgentPerm {
	optional string account_id = 1;
	optional string agent_id = 2;
	optional auth.Method method = 3;
}

message OELimitUpdated {
	optional string account_id = 1;
	optional Limit limit = 2;
}

message Account {
	optional string id = 1;
	optional string name = 2;
	optional int32 plan = 3;
	optional string logo_url = 4;
	optional string owner_id = 5;
	optional AccountState state = 6;
	optional int64 created_time = 7;
	optional int64 confirmed_time = 8;
	optional int64 last_modified_time = 9;
}

message Id {
	optional string account_id = 1;
	optional string id = 2;
}

message AgentIds {
	optional string account_id = 1;
	repeated string ids = 2;
}

message Ids {
	repeated string ids = 1;
}

message Empty {}

message ListAgentRequest {
	optional string account_id = 1;
	optional string start_id = 2;
	optional int32 limit = 3;
	optional string group_id = 4; // optional
}

message ListGroupRequest {
	optional string account_id = 1;
	optional string start_id = 2;
	optional int32 limit = 3;
}

message GroupMember {
	optional string account_id = 1;
	optional string group_id = 2;
	optional string agent_id = 3;
}

message CreateAccountRequest {
	optional string fullname = 1;
	optional string email = 3;
	optional string language = 4;
	optional string password = 5;
	optional string account_name = 6;
	optional string account_url = 7;
}

enum Gender {
	Unset = 0;
	Male = 1;
	Female = 2;
	Bisexual = 3;
	Asexual = 4;
}

enum AgentState {
	Pending = 0; // waiting for invitation response
  Active = 1;
	Inactive = 2;
	Deleted = 3;
}

message LoginRequest {
	optional string email = 1;
	optional string password = 2;
}

message Agents {
	repeated Agent Agents = 1;
}

message NewPassword {
	optional string token = 1;
	optional string new_password = 2;
}

message Limit {
	//int32 ConcurrentChat = 1;
	optional int32 chat_history = 2;
	optional int32 max_triggers = 3;
	optional int32 max_agents = 4;
	optional int32 max_agent_groups = 5;
	optional int32 max_agent_in_a_group = 6;
	optional int32 max_rules = 7;
}

message AgentGroups {
	repeated AgentGroup Groups = 1;
}

message Token {
	optional bool is_set = 1; // true
	optional string token = 2;
}

enum Event {
	AgentGroupDeleted = 0; // id
	AgentLeftGroup = 1; // groupmember
	AgentJoinedGroup = 2; // groupmember
	AgentGroupUpdated = 3; // agentgroup
	AgentGroupCreated = 4; // agentgroup
	AgentExpired = 5; // oe only, id
	AgentUpdated = 6; // agent
	AgentCreated = 7; // agent
	AgentStateUpdated = 8; // could be deleted
	AgentPermissionUpdated = 9; // AgentPerm

	// out event only
	AgentRejected = 10; // id
	AgentAccepted = 11; // id
	AgentUninvited = 12; // id
	AgentInvited = 13; // invitation

	AccountUpdated = 14; // account
	AccountCreated = 15; // account

	AccountPlanUpdated = 16; // account
	AccountStateUpdated = 17; // AccountStateUpdateRequest
	AccountLimitUpdated = 18; // oelimitupdated
	AccountConfirmRequest = 19; // token
	HandleExpiredInvitation = 20;

	AccountConfirmEmail = 21;
	AccountResetPasswordEmail = 33;
	//AccountPasswordChangedEmail = 34;
	AccountInviteEmail = 22;
}

message ConfirmEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string owner_id = 4;
	optional string token = 5;
	// ExpiredIn is a RFC3339 time string indicates when token will be expired
	optional string expired_in = 6;
}

message InviteEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string sender_id = 4;
	optional string expired_in = 5;
	optional string token = 6;
}

message ResetPasswordEmail {
	optional string from = 1;
	optional string to = 2;
	// ExpiredIn is a RFC3339 time string indicates when token will be expired
	optional string expired_in = 6;
	optional string token = 3;
	optional string account_id = 4;
	optional string agent_id = 5;
}

message PasswordChangedEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string agent_id = 4;
}