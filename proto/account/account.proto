syntax = "proto3";

package account;

enum DefAgent {
	AGNTSYSTEM = 0;
}

enum ErrorCode {
	Ok = 0;
	NotFound = 404;
	Invalid = 400;
	Unauthorized = 401;
	InternalError = 500;
}

enum AccountState {
	Unconfirmed = 0; // waiting for email confirmation
	Confirmed = 1;  // normal account
	Locked = 2;  // subiz lock down account
}

message Account {
	string Id = 1;
	string Name = 2;
	int32 Plan = 4;
	string LogoUrl = 5;
	string OwnerId = 6;
	AccountState State = 7;
}

message Id {
	string Id = 1;
}

message Ids {
	repeated string Ids = 1;
}

message Empty {}

message AgentGroup {
	string Id = 1;
	string Title = 2;
	repeated string AgentIds = 3;
	string Tag = 4;
}

service AccountMgr {
	rpc CreateAccount(CreateAccountRequest) returns (Id) {}
	rpc UpdateAccount(Account) returns (Empty) {}
	rpc ReadAccount(Id) returns (Account) {}

	rpc ListLimits(Empty) returns (LimitsResponse) {}

	rpc InviteAgent(InviteAgentRequest) returns (Empty) {}
	// delete invitation invoke by agent
	rpc UninviteAgent(Invitation) returns (Empty) {}
	rpc AcceptInvitation(Invitation) returns (Empty) {}
	rpc RejectInvitation(Invitation) returns (Empty) {}
	// list all invitation by account
	rpc ListInvitations(Id) returns (Invitations) {}

	rpc UpdateAgent(Agent) returns (Empty) {}
	rpc ReadAgent(Id) returns (Agent) {}
	rpc DeleteAgent(Id) returns (Empty) {}
	rpc ConfigAgent(AgentConfiguration) returns (Empty) {}
	// List by account
	rpc ListAgents(Id) returns (Agents) {}

	rpc ResetPW(NewPassword) returns (Empty) {}
	rpc CheckLogin(LoginRequest) returns (Id) {}

	rpc BatchRead(Ids) returns (Agents) {}

	rpc CreateGroup(AgentGroup) returns (Id) {}
	rpc AddMember(UpdateGroupRequest) returns (Empty) {}
	rpc RemoveMember(UpdateGroupRequest) returns (Empty) {}
	rpc UpdateGroup(AgentGroup) returns (Empty) {}
	rpc DeleteGroup(Id) returns (Empty) {}
	rpc ListGroups(Id) returns(AgentGroups) {}
	rpc ReadGroup(Id) returns (AgentGroup) {}

	rpc ListGroupsOfAgent(Id) returns (AgentGroups) {}
}

message CreateAccountRequest {
	string FirstName = 1;
	string LastName = 2;
	string Email = 3;
	string Language = 4;
	string Password = 5;
	string AccountName = 6;
}

enum Gender {
	Unset = 0;
	Male = 1;
	Female = 2;
	Unknown = 3;
}

enum AgentState {
	Pending = 0;
	Active = 1;
	Deactive = 2;
	Deleted = 3;
}

message Agent {
	string Id = 1;
	string FirstName = 2;
	string LastName = 3;
	string Email = 4;
	bool IsOwner = 5;
	string AccountId = 6;
	string JobTitle = 7;
	Gender Gender = 8;
	string LastSeen = 9;
	string AvatarUrl = 11;
	string Language = 12;
	string Timezone = 13;
	string EncryptedPassword = 18;
  string JoinDate = 19;
	string Phone = 22;
	string InviteFromAgentId = 20;
  AgentState State = 21;
}

enum InvitationState {
	Sent = 0;
	Accepted = 1;
	Rejected = 2;
}

message Invitations {
	repeated Invitation Invitations = 1;
}

message Invitation {
	string AccountId = 1;
	string FromId = 2;
	string Email = 3;
	InvitationState State = 4;
	string SendTime = 5;
	string ReplyTime = 6;
}

message LoginRequest {
	string Email = 1;
	string Password = 2;
	string AccountId = 3;
}

message Agents {
	repeated Agent Agents = 1;
}

message NewPassword {
	string AgentId = 1;
	string Password = 2;
}

message LimitsResponse {
	repeated Limit Limits = 1;
}

message Limit {
	int32 ConcurrentChat = 1;
	int32 ChatHistory = 2;
	int32 MaxTriggers = 3;
	int32 MaxAgents = 4;

	int32 MaxAgentGroups = 5;
	int32 MaxAgentInGroups = 6;

}

message AgentConfiguration {
	bool NotificationSound = 1;
	NotificationConfig EmailNoti = 2;
	NotificationConfig DesktopNoti = 3;
	NotificationConfig MobileNoti = 4;
}

message NotificationConfig {
	bool AllActivity = 1;
	bool MaintainenceMessage = 2;
	bool DirectMessage = 3;
	bool News = 4; /* for mobile only */
	bool Nothing = 5;
}

message AgentGroups {repeated AgentGroups Groups = 1;}

message UpdateGroupRequest {
	string GroupId = 1;
	string AgentId = 2;
}

message InviteAgentRequest {
	// id of inviter
	string InviterId = 1;

	// id of account
	string AccountId = 4;

	string AgentEmail = 3;
	string AgentFirstName = 5;
	string AgentLastName = 6;
}

message OutEventAccountCreated {
}

message OutEventAccountUpdated {
}

message AccountPlanUpdated {
}

message OEInvitationCreated {
}

message OEInvitationDeleted {
}

message OEInvitationRejected {
}

message OEInvitationAccepted {
}

message OEAgentCreated {
}

message OEAgentUpdated {
}

message OEAgentActivated {
}

message OEAgentDeativated {
}

message OEAgentGroupUpserted {
}

message OEAgentGroupDeleted {
}

message OEMemberJoined {
}

message OEMemberLeft {
}