syntax = "proto2";

package account;

import "bitbucket.org/subiz/servicespec/proto/auth/auth.proto";
import "bitbucket.org/subiz/servicespec/proto/common/common.proto";

enum AccountState {
	UNCONFIRMED = 0; // waiting for email confirmation
	ACTIVATED = 1;  // normal account
	LOCKED = 2;  // subiz lock down account
}

message Agent {
	optional common.Context ctx = 1;
	optional string id = 2;
	optional string account_id = 3;
	optional string fullname = 4;
	optional string email = 5;
	repeated string emails = 6;
	repeated string phones = 7;
	optional string phone = 8;
	optional bool is_owner = 10;
	optional string job_title = 11;
	optional Gender gender = 12;
	optional string avatar_url = 13;
	optional string language = 14;
	optional string location = 15;
	optional string timezone = 16;
	optional string encrypted_password = 17;
  optional int64 joined_time = 20;
	optional string invited_by = 21;
  optional AgentState state = 22;
	optional int64 last_password_changed_time = 23;
	//optional int64 last_seen_time = 24;
	optional int64 last_modified_time = 25;
}

message Invitation {
	optional common.Context ctx = 1;
	optional string id = 2;
	optional string account_id = 3;
	optional string from_id = 4;
	optional string email = 5;
	optional string agent_id = 6;
	optional int64 sent_time = 7;
	optional int64 reply_time = 8;
	optional string agent_fullname = 9;
	optional string agent_job_title = 10;
	optional string token = 11;
}

message AgentGroup {
	optional common.Context ctx = 1;
	optional string id = 2;				//
	optional string account_id = 3;
	optional string name = 4;
	optional string logo_url = 5;

	// Members is list of 10 agents in group
	// repeated string Members = 5;
	optional int64 created_time = 6;
}

message ResetPasswordRequest {
	optional common.Context ctx = 1;
	optional string email = 2;
}

message AgentPerm {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string agent_id = 3;
	optional auth.Method method = 4;
}

message OELimitUpdated {
	optional string account_id = 1;
	optional Limit limit = 2;
}

message Account {
	optional common.Context ctx = 1;
	optional string id = 2;
	optional string name = 3;
	optional int32 plan = 4;
	optional string logo_url = 5;
	optional string owner_id = 6;
	optional AccountState state = 7;
	optional int64 created_time = 8;
	optional int64 confirmed_time = 9;
	optional int64 last_modified_time = 10;

	optional string referer_id = 11;
}

message Id {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string id = 3;
}

message AgentIds {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	repeated string ids = 3;
}

message Ids {
	optional common.Context ctx = 1;
	repeated string ids = 2;
}

message Empty {}

message ListAgentRequest {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string start_id = 3;
	optional int32 limit = 4;
	optional string group_id = 5; // optional
}

message ListGroupRequest {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string start_id = 3;
	optional int32 limit = 4;
}

message GroupMember {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string group_id = 3;
	optional string agent_id = 4;
}

message CreateAccountRequest {
	optional common.Context ctx = 1;
	optional string fullname = 2;
	optional string email = 3;
	optional string language = 4;
	optional string password = 5;
	optional string account_name = 6;
	optional string account_url = 7;
}

enum Gender {
	Unset = 0;
	Male = 1;
	Female = 2;
	Bisexual = 3;
	Asexual = 4;
}

enum AgentState {
	PENDING = 0; // waiting for invitation response
  ACTIVE = 1;
  INACTIVE = 2;
	DELETED = 3;
}

message LoginRequest {
	optional common.Context ctx = 1;
	optional string email = 2;
	optional string password = 3;
}

message Agents {
	optional common.Context ctx = 1;
	repeated Agent Agents = 2;
}

message NewPassword {
	optional common.Context ctx = 1;
	optional string token = 2;
	optional string new_password = 3;
}

message Limit {
	optional common.Context ctx = 1;
	//int32 ConcurrentChat = 1;

	optional int32 chat_history = 2;
	optional int32 max_triggers = 3;
	optional int32 max_agents = 4;
	optional int32 max_agent_groups = 5;
	optional int32 max_agent_in_a_group = 6;
	optional int32 max_rules = 7;
}

message AgentGroups {
	optional common.Context ctx = 1;
	repeated AgentGroup Groups = 2;
}

message Token {
	optional common.Context ctx = 1;
	optional bool is_set = 2; // true
	optional string token = 3;
}

enum Event {
	CreateAccountRequested = 100; // createaccountrequested
	UpdateAccountRequested = 101; //account
	ReadAccountRequested = 102; // id

	ConfirmAccountRequested = 103; // (Token) returns (Empty) {}

	// Agent methods
	ReadAgentRequested = 104;  // (Id) returns (Agent) {}
	InviteAgentRequested = 105; //(Invitation) returns (Id) {}
	UninviteAgentRequested = 106; //(Id) returns (Empty) {}
	AcceptInvitationRequested = 107; //(Token) returns (Empty) {}
	RejectInvitationRequested = 108; //(Token) returns (Empty) {}

	UpdateAgentRequested = 109; //(Agent) returns (Empty) {}
	ResetPasswordRequested = 111; //(NewPassword) returns (Empty) {}
	RequestResetPasswordRequested = 112; //(ResetPasswordRequest) returns (Empty) {}
	UpdateAgentPermissionRequested = 113; // =(AgentPerm) returns (Empty) {}
	ReadAgentPermissionRequested = 114; //(Id) returns (auth.Method) {}
	CheckLoginRequested = 115; //(LoginRequest) returns (Id) {}
	BatchReadRequested = 116;//(AgentIds) returns (Agents) {}
	ListAgentsRequested = 117;//(ListAgentRequest) returns (Agents) {}
	//AgentGroup methods
	CreateGroupRequested = 118; //(AgentGroup) returns (Id) {}
	UpdateGroupRequested = 119;//(AgentGroup) returns (Empty) {}
	DeleteGroupRequested = 120; //(Id) returns (Empty) {}
	ListGroupsRequested = 121; //(ListGroupRequest) returns(AgentGroups) {}
	RemoveAgentFromGroupRequested = 122; //(GroupMember) returns (Empty) {}
	AddAgentToGroupRequested = 123; //(GroupMember) returns (Empty) {}
	ReadGroupRequested = 124; //(Id) returns (AgentGroup) {}

	AgentGroupDeleted = 0; // id
	AgentLeftGroup = 1; // groupmember
	AgentJoinedGroup = 2; // groupmember
	AgentGroupUpserted = 4; // agentgroup
	AgentExpired = 5; // oe only, id
	AgentUpserted = 6; // agent
	//AgentCreated = 7; // agent
	AgentStateUpdated = 8; // could be deleted
	AgentPermissionUpdated = 9; // AgentPerm

	// out event only
	AgentRejected = 10; // id
	AgentAccepted = 11; // id
	AgentUninvited = 12; // id
	AgentInvited = 13; // invitation
	AgentDeleted = 15; //id
	AccountUpserted = 14; // account

	AccountPlanUpdated = 16; // account
	AccountStateUpdated = 17; // AccountStateUpdateRequest
	AccountLimitUpdated = 18; // oelimitupdated
	AccountConfirmRequest = 19; // token
	HandleExpiredInvitation = 20;

	AccountConfirmRequested = 21; // confirmemail
	AccountResetPasswordEmail = 33;
	//AccountPasswordChangedEmail = 34;
	AccountInviteEmail = 22;
}

message ConfirmEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string owner_id = 4;
	optional string token = 5;
	// ExpiredIn is a RFC3339 time string indicates when token will be expired
	optional int64 expired_in = 6;
}

message InviteEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string sender_id = 4;
	optional int64 expired_in = 5;
	optional string token = 6;
}

message ResetPasswordEmail {
	optional string from = 1;
	optional string to = 2;
	// ExpiredIn is a RFC3339 time string indicates when token will be expired
	optional int64 expired_in = 6;
	optional string token = 3;
	optional string account_id = 4;
	optional string agent_id = 5;
}

message PasswordChangedEmail {
	optional string from = 1;
	optional string to = 2;
	optional string account_id = 3;
	optional string agent_id = 4;
}