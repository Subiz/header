// Code generated by protoc-gen-go.
// source: proto/account/account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	proto/account/account.proto

It has these top-level messages:
	AccountRequest
	CreateResponse
	IdRequest
	Response
	AccountResponse
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_no_error         ErrorCode = 0
	ErrorCode_resource_notfoud ErrorCode = 1
	ErrorCode_invalid_request  ErrorCode = 2
	ErrorCode_unauthorized     ErrorCode = 3
	ErrorCode_internal_error   ErrorCode = 4
)

var ErrorCode_name = map[int32]string{
	0: "no_error",
	1: "resource_notfoud",
	2: "invalid_request",
	3: "unauthorized",
	4: "internal_error",
}
var ErrorCode_value = map[string]int32{
	"no_error":         0,
	"resource_notfoud": 1,
	"invalid_request":  2,
	"unauthorized":     3,
	"internal_error":   4,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AccountRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State   int32  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	LogoUrl string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
}

func (m *AccountRequest) Reset()                    { *m = AccountRequest{} }
func (m *AccountRequest) String() string            { return proto.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()               {}
func (*AccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountRequest) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *AccountRequest) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

type CreateResponse struct {
	Error            ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	ErrorDescription string    `protobuf:"bytes,2,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	Id               string    `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_no_error
}

func (m *CreateResponse) GetErrorDescription() string {
	if m != nil {
		return m.ErrorDescription
	}
	return ""
}

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type IdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *IdRequest) Reset()                    { *m = IdRequest{} }
func (m *IdRequest) String() string            { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()               {}
func (*IdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Response struct {
	Error            ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	ErrorDescription string    `protobuf:"bytes,2,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Response) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_no_error
}

func (m *Response) GetErrorDescription() string {
	if m != nil {
		return m.ErrorDescription
	}
	return ""
}

type AccountResponse struct {
	Error            ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	ErrorDescription string    `protobuf:"bytes,2,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	Id               string    `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Name             string    `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	State            int32     `protobuf:"varint,5,opt,name=state" json:"state,omitempty"`
	LogoUrl          string    `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
}

func (m *AccountResponse) Reset()                    { *m = AccountResponse{} }
func (m *AccountResponse) String() string            { return proto.CompactTextString(m) }
func (*AccountResponse) ProtoMessage()               {}
func (*AccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AccountResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_no_error
}

func (m *AccountResponse) GetErrorDescription() string {
	if m != nil {
		return m.ErrorDescription
	}
	return ""
}

func (m *AccountResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountResponse) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *AccountResponse) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*AccountRequest)(nil), "AccountRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
	proto.RegisterType((*IdRequest)(nil), "IdRequest")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*AccountResponse)(nil), "AccountResponse")
	proto.RegisterEnum("ErrorCode", ErrorCode_name, ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountMgr service

type AccountMgrClient interface {
	Create(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*Response, error)
	Read(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*AccountResponse, error)
}

type accountMgrClient struct {
	cc *grpc.ClientConn
}

func NewAccountMgrClient(cc *grpc.ClientConn) AccountMgrClient {
	return &accountMgrClient{cc}
}

func (c *accountMgrClient) Create(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/AccountMgr/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) Delete(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/AccountMgr/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) Update(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/AccountMgr/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) Read(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*AccountResponse, error) {
	out := new(AccountResponse)
	err := grpc.Invoke(ctx, "/AccountMgr/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountMgr service

type AccountMgrServer interface {
	Create(context.Context, *AccountRequest) (*CreateResponse, error)
	Delete(context.Context, *IdRequest) (*Response, error)
	Update(context.Context, *AccountRequest) (*Response, error)
	Read(context.Context, *IdRequest) (*AccountResponse, error)
}

func RegisterAccountMgrServer(s *grpc.Server, srv AccountMgrServer) {
	s.RegisterService(&_AccountMgr_serviceDesc, srv)
}

func _AccountMgr_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountMgr/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).Create(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountMgr/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).Delete(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountMgr/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).Update(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountMgr/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).Read(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AccountMgr",
	HandlerType: (*AccountMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AccountMgr_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AccountMgr_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AccountMgr_Update_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _AccountMgr_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/account/account.proto",
}

func init() { proto.RegisterFile("proto/account/account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x53, 0xb1, 0x8e, 0xd3, 0x40,
	0x10, 0x8d, 0x1d, 0xdb, 0xc4, 0xa3, 0x93, 0xbd, 0x0c, 0x57, 0x98, 0xbb, 0x26, 0xb8, 0x40, 0x27,
	0x40, 0x46, 0x3a, 0xbe, 0x00, 0x25, 0x14, 0x14, 0x34, 0x96, 0x52, 0x50, 0x59, 0x8b, 0x77, 0x08,
	0x8b, 0xcc, 0xae, 0x59, 0xaf, 0x29, 0xf8, 0x27, 0x4a, 0xfe, 0x0f, 0x65, 0xed, 0x18, 0x1c, 0x25,
	0x25, 0x57, 0xed, 0xcc, 0x9b, 0xd1, 0xcc, 0x9b, 0x79, 0xb3, 0x70, 0xdb, 0x1a, 0x6d, 0xf5, 0x6b,
	0x5e, 0xd7, 0xba, 0x57, 0xf6, 0xf8, 0x16, 0x0e, 0xcd, 0x09, 0x92, 0xb7, 0x03, 0x50, 0xd2, 0xf7,
	0x9e, 0x3a, 0x8b, 0x09, 0xf8, 0x52, 0x64, 0xde, 0xda, 0xbb, 0x8b, 0x4b, 0x5f, 0x0a, 0x44, 0x08,
	0x14, 0xff, 0x46, 0x99, 0xef, 0x10, 0x67, 0xe3, 0x35, 0x84, 0x9d, 0xe5, 0x96, 0xb2, 0xe5, 0xda,
	0xbb, 0x0b, 0xcb, 0xc1, 0xc1, 0xa7, 0xb0, 0x6a, 0xf4, 0x5e, 0x57, 0xbd, 0x69, 0xb2, 0xc0, 0x65,
	0x3f, 0x3a, 0xf8, 0x3b, 0xd3, 0xe4, 0x1a, 0x92, 0x8d, 0x21, 0x6e, 0xa9, 0xa4, 0xae, 0xd5, 0xaa,
	0x23, 0x5c, 0x43, 0x48, 0xc6, 0x68, 0xe3, 0x3a, 0x25, 0xf7, 0x50, 0xbc, 0x3b, 0x78, 0x1b, 0x2d,
	0xa8, 0x1c, 0x02, 0xf8, 0x12, 0x1e, 0x3b, 0xa3, 0x12, 0xd4, 0xd5, 0x46, 0xb6, 0x56, 0x6a, 0x35,
	0xb2, 0x60, 0x2e, 0xb0, 0xfd, 0x8b, 0x8f, 0xac, 0x97, 0x47, 0xd6, 0xf9, 0x2d, 0xc4, 0xef, 0xc5,
	0x85, 0x91, 0xf2, 0x8f, 0xb0, 0xfa, 0x4f, 0x3c, 0xf2, 0xdf, 0x1e, 0xa4, 0xd3, 0x42, 0x1f, 0x64,
	0xd4, 0x49, 0xa0, 0xe0, 0x9c, 0x40, 0xe1, 0x25, 0x81, 0xa2, 0x99, 0x40, 0x2f, 0xbe, 0x42, 0x3c,
	0xb1, 0xc2, 0x2b, 0x58, 0x29, 0x5d, 0xb9, 0xc6, 0x6c, 0x81, 0xd7, 0xc0, 0x0c, 0x75, 0xba, 0x37,
	0x35, 0x55, 0x4a, 0xdb, 0xcf, 0xba, 0x17, 0xcc, 0xc3, 0x27, 0x90, 0x4a, 0xf5, 0x83, 0x37, 0x52,
	0x54, 0x66, 0x58, 0x33, 0xf3, 0x91, 0xc1, 0x55, 0xaf, 0x78, 0x6f, 0xbf, 0x68, 0x23, 0x7f, 0x92,
	0x60, 0x4b, 0x44, 0x48, 0xa4, 0xb2, 0x64, 0x14, 0x6f, 0xc6, 0x82, 0xc1, 0xfd, 0x2f, 0x0f, 0x60,
	0xdc, 0xd1, 0x87, 0xbd, 0xc1, 0x57, 0x10, 0x0d, 0xb7, 0x81, 0x69, 0x31, 0xbf, 0xc5, 0x9b, 0xb4,
	0x98, 0x5f, 0x4d, 0xbe, 0xc0, 0x67, 0x10, 0x6d, 0xa9, 0x21, 0x4b, 0x08, 0xc5, 0xa4, 0xf0, 0x4d,
	0x5c, 0xfc, 0x93, 0xf2, 0x1c, 0xa2, 0x5d, 0x2b, 0xce, 0x16, 0x3c, 0xc9, 0x0b, 0x4a, 0xe2, 0x62,
	0x56, 0x88, 0x15, 0x27, 0xea, 0xe5, 0x8b, 0x4f, 0x91, 0xfb, 0x2a, 0x6f, 0xfe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x5d, 0xc3, 0x3b, 0x13, 0x49, 0x03, 0x00, 0x00,
}
