// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth/auth.proto

It has these top-level messages:
	Empty
	Credential
	Scope
	Event
	Method
	ScopeId
	UserId
	ScopesResponse
	UserAuth
	PasswordCredential
	AuthCookie
	OauthAccessToken
	AccessToken
	CookieExpire
	Id
	User
	Client
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientType int32

const (
	// STONE is just default value, client should never have Type is STONE
	ClientType_STONE ClientType = 0
	// APP is general client type
	ClientType_APP ClientType = 1
	// CHANNEL is special client, that can and only listen chat topics of an account
	ClientType_CHANNEL ClientType = 2
	// BOT reserve for future
	ClientType_BOT ClientType = 3
)

var ClientType_name = map[int32]string{
	0: "STONE",
	1: "APP",
	2: "CHANNEL",
	3: "BOT",
}
var ClientType_value = map[string]int32{
	"STONE":   0,
	"APP":     1,
	"CHANNEL": 2,
	"BOT":     3,
}

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}
func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}
func (x *ClientType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientType_value, data, "ClientType")
	if err != nil {
		return err
	}
	*x = ClientType(value)
	return nil
}
func (ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AuthorizationType int32

const (
	AuthorizationType_client  AuthorizationType = 0
	AuthorizationType_channel AuthorizationType = 1
)

var AuthorizationType_name = map[int32]string{
	0: "client",
	1: "channel",
}
var AuthorizationType_value = map[string]int32{
	"client":  0,
	"channel": 1,
}

func (x AuthorizationType) Enum() *AuthorizationType {
	p := new(AuthorizationType)
	*p = x
	return p
}
func (x AuthorizationType) String() string {
	return proto.EnumName(AuthorizationType_name, int32(x))
}
func (x *AuthorizationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AuthorizationType_value, data, "AuthorizationType")
	if err != nil {
		return err
	}
	*x = AuthorizationType(value)
	return nil
}
func (AuthorizationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EVENT int32

const (
	EVENT_AuthClientUpserted EVENT = 0
	EVENT_AuthClientDeleted  EVENT = 1
	EVENT_AuthUserUpserted   EVENT = 2
	EVENT_AuthUserDeleted    EVENT = 3
	EVENT_AuthExpireCookie   EVENT = 4
	EVENT_ClientUpserted     EVENT = 10
	EVENT_ClientDeleted      EVENT = 11
	EVENT_ClientAuthorized   EVENT = 12
)

var EVENT_name = map[int32]string{
	0:  "AuthClientUpserted",
	1:  "AuthClientDeleted",
	2:  "AuthUserUpserted",
	3:  "AuthUserDeleted",
	4:  "AuthExpireCookie",
	10: "ClientUpserted",
	11: "ClientDeleted",
	12: "ClientAuthorized",
}
var EVENT_value = map[string]int32{
	"AuthClientUpserted": 0,
	"AuthClientDeleted":  1,
	"AuthUserUpserted":   2,
	"AuthUserDeleted":    3,
	"AuthExpireCookie":   4,
	"ClientUpserted":     10,
	"ClientDeleted":      11,
	"ClientAuthorized":   12,
}

func (x EVENT) Enum() *EVENT {
	p := new(EVENT)
	*p = x
	return p
}
func (x EVENT) String() string {
	return proto.EnumName(EVENT_name, int32(x))
}
func (x *EVENT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EVENT_value, data, "EVENT")
	if err != nil {
		return err
	}
	*x = EVENT(value)
	return nil
}
func (EVENT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Empty struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Credential struct {
	AccountId *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// int32 AccountPlan = 2;
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// scope that the user allow
	Method *Method `protobuf:"bytes,5,opt,name=method" json:"method,omitempty"`
	// set to true if this credential is generated from internal service.
	// Internal credential is trusted and have full access to any function
	// when internal is set to true, all other fields is ignored
	ClientId         *string     `protobuf:"bytes,7,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType       *ClientType `protobuf:"varint,8,opt,name=client_type,json=clientType,enum=auth.ClientType" json:"client_type,omitempty"`
	Scopes           []string    `protobuf:"bytes,9,rep,name=scopes" json:"scopes,omitempty"`
	ClientAccountId  *string     `protobuf:"bytes,10,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Credential) Reset()                    { *m = Credential{} }
func (m *Credential) String() string            { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()               {}
func (*Credential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Credential) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Credential) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *Credential) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Credential) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Credential) GetClientType() ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ClientType_STONE
}

func (m *Credential) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Credential) GetClientAccountId() string {
	if m != nil && m.ClientAccountId != nil {
		return *m.ClientAccountId
	}
	return ""
}

type Scope struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	LogoUrl          *string `protobuf:"bytes,3,req,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	Title            *string `protobuf:"bytes,4,req,name=title" json:"title,omitempty"`
	Description      *string `protobuf:"bytes,5,req,name=description" json:"description,omitempty"`
	Method           *Method `protobuf:"bytes,6,req,name=method" json:"method,omitempty"`
	Event            *Event  `protobuf:"bytes,7,req,name=event" json:"event,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Scope) Reset()                    { *m = Scope{} }
func (m *Scope) String() string            { return proto.CompactTextString(m) }
func (*Scope) ProtoMessage()               {}
func (*Scope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Scope) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Scope) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Scope) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Scope) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Scope) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Scope) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Scope) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type Event struct {
	ConversationStarted *bool  `protobuf:"varint,10,opt,name=conversation_started,json=conversationStarted" json:"conversation_started,omitempty"`
	ConversationSent    *bool  `protobuf:"varint,11,opt,name=conversation_sent,json=conversationSent" json:"conversation_sent,omitempty"`
	ConversationJoined  *bool  `protobuf:"varint,12,opt,name=conversation_joined,json=conversationJoined" json:"conversation_joined,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Event) GetConversationStarted() bool {
	if m != nil && m.ConversationStarted != nil {
		return *m.ConversationStarted
	}
	return false
}

func (m *Event) GetConversationSent() bool {
	if m != nil && m.ConversationSent != nil {
		return *m.ConversationSent
	}
	return false
}

func (m *Event) GetConversationJoined() bool {
	if m != nil && m.ConversationJoined != nil {
		return *m.ConversationJoined
	}
	return false
}

type Method struct {
	// trigger
	UpdateTrigger    *bool `protobuf:"varint,50,opt,name=UpdateTrigger" json:"UpdateTrigger,omitempty"`
	DeleteTrigger    *bool `protobuf:"varint,51,opt,name=DeleteTrigger" json:"DeleteTrigger,omitempty"`
	CreateTrigger    *bool `protobuf:"varint,52,opt,name=CreateTrigger" json:"CreateTrigger,omitempty"`
	ReadTrigger      *bool `protobuf:"varint,53,opt,name=ReadTrigger" json:"ReadTrigger,omitempty"`
	ListTrigger      *bool `protobuf:"varint,54,opt,name=ListTrigger" json:"ListTrigger,omitempty"`
	ReadAllTrigger   *bool `protobuf:"varint,55,opt,name=ReadAllTrigger" json:"ReadAllTrigger,omitempty"`
	ListAllTrigger   *bool `protobuf:"varint,56,opt,name=ListAllTrigger" json:"ListAllTrigger,omitempty"`
	UpdateAllTrigger *bool `protobuf:"varint,57,opt,name=UpdateAllTrigger" json:"UpdateAllTrigger,omitempty"`
	DeleteAllTrigger *bool `protobuf:"varint,58,opt,name=DeleteAllTrigger" json:"DeleteAllTrigger,omitempty"`
	CreateAllTrigger *bool `protobuf:"varint,59,opt,name=CreateAllTrigger" json:"CreateAllTrigger,omitempty"`
	// bool AuthorizeAgentClient = 89;
	// bool RevokeAgentClient = 90;
	ReadAgentNotification *bool `protobuf:"varint,105,opt,name=ReadAgentNotification" json:"ReadAgentNotification,omitempty"`
	SeenAgentNotification *bool `protobuf:"varint,106,opt,name=SeenAgentNotification" json:"SeenAgentNotification,omitempty"`
	Ping                  *bool `protobuf:"varint,107,opt,name=Ping" json:"Ping,omitempty"`
	// agent
	UpdatePasswords        *bool `protobuf:"varint,109,opt,name=UpdatePasswords" json:"UpdatePasswords,omitempty"`
	UpdatePassword         *bool `protobuf:"varint,108,opt,name=UpdatePassword" json:"UpdatePassword,omitempty"`
	InviteAgents           *bool `protobuf:"varint,70,opt,name=InviteAgents" json:"InviteAgents,omitempty"`
	UpdateAgent            *bool `protobuf:"varint,72,opt,name=UpdateAgent" json:"UpdateAgent,omitempty"`
	UpdateAgents           *bool `protobuf:"varint,73,opt,name=UpdateAgents" json:"UpdateAgents,omitempty"`
	ReadAgent              *bool `protobuf:"varint,76,opt,name=ReadAgent" json:"ReadAgent,omitempty"`
	ReadAgents             *bool `protobuf:"varint,77,opt,name=ReadAgents" json:"ReadAgents,omitempty"`
	ResetPassword          *bool `protobuf:"varint,78,opt,name=ResetPassword" json:"ResetPassword,omitempty"`
	UpdateAgentsPermission *bool `protobuf:"varint,81,opt,name=UpdateAgentsPermission" json:"UpdateAgentsPermission,omitempty"`
	// bool ListAgentClient = 85;
	UpdateAgentsState *bool `protobuf:"varint,86,opt,name=UpdateAgentsState" json:"UpdateAgentsState,omitempty"`
	// bool ReadAccount = 120; // default right
	ConfirmAccount *bool `protobuf:"varint,120,opt,name=ConfirmAccount" json:"ConfirmAccount,omitempty"`
	// agent group
	CreateAgentGroups *bool `protobuf:"varint,124,opt,name=CreateAgentGroups" json:"CreateAgentGroups,omitempty"`
	DeleteAgentGroups *bool `protobuf:"varint,125,opt,name=DeleteAgentGroups" json:"DeleteAgentGroups,omitempty"`
	ReadAgentGroups   *bool `protobuf:"varint,126,opt,name=ReadAgentGroups" json:"ReadAgentGroups,omitempty"`
	UpdateAgentGroups *bool `protobuf:"varint,127,opt,name=UpdateAgentGroups" json:"UpdateAgentGroups,omitempty"`
	// account
	UpdatePlan *bool `protobuf:"varint,123,opt,name=UpdatePlan" json:"UpdatePlan,omitempty"`
	// bool ViewAccountReport = 125;
	// bool EnableChannel = 126;
	// bool DisableChannel = 127;
	CreateAccount *bool `protobuf:"varint,129,opt,name=CreateAccount" json:"CreateAccount,omitempty"`
	DeleteAccount *bool `protobuf:"varint,130,opt,name=DeleteAccount" json:"DeleteAccount,omitempty"`
	UpdateAccount *bool `protobuf:"varint,122,opt,name=UpdateAccount" json:"UpdateAccount,omitempty"`
	ReadAccount   *bool `protobuf:"varint,131,opt,name=ReadAccount" json:"ReadAccount,omitempty"`
	// clients
	ReadClient             *bool `protobuf:"varint,151,opt,name=ReadClient" json:"ReadClient,omitempty"`
	ListClient             *bool `protobuf:"varint,152,opt,name=ListClient" json:"ListClient,omitempty"`
	UpdateClientInfo       *bool `protobuf:"varint,153,opt,name=UpdateClientInfo" json:"UpdateClientInfo,omitempty"`
	PublishClient          *bool `protobuf:"varint,154,opt,name=PublishClient" json:"PublishClient,omitempty"`
	RegenerateClientSecret *bool `protobuf:"varint,155,opt,name=RegenerateClientSecret" json:"RegenerateClientSecret,omitempty"`
	VerifyClient           *bool `protobuf:"varint,156,opt,name=VerifyClient" json:"VerifyClient,omitempty"`
	DeleteClient           *bool `protobuf:"varint,157,opt,name=DeleteClient" json:"DeleteClient,omitempty"`
	CreateClient           *bool `protobuf:"varint,158,opt,name=CreateClient" json:"CreateClient,omitempty"`
	// rule
	ReadRule   *bool `protobuf:"varint,180,opt,name=ReadRule" json:"ReadRule,omitempty"`
	UpdateRule *bool `protobuf:"varint,181,opt,name=UpdateRule" json:"UpdateRule,omitempty"`
	DeleteRule *bool `protobuf:"varint,182,opt,name=DeleteRule" json:"DeleteRule,omitempty"`
	// converstation
	StartConversation *bool  `protobuf:"varint,190,opt,name=StartConversation" json:"StartConversation,omitempty"`
	ReadConversation  *bool  `protobuf:"varint,191,opt,name=ReadConversation" json:"ReadConversation,omitempty"`
	WriteConversation *bool  `protobuf:"varint,192,opt,name=WriteConversation" json:"WriteConversation,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *Method) Reset()                    { *m = Method{} }
func (m *Method) String() string            { return proto.CompactTextString(m) }
func (*Method) ProtoMessage()               {}
func (*Method) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Method) GetUpdateTrigger() bool {
	if m != nil && m.UpdateTrigger != nil {
		return *m.UpdateTrigger
	}
	return false
}

func (m *Method) GetDeleteTrigger() bool {
	if m != nil && m.DeleteTrigger != nil {
		return *m.DeleteTrigger
	}
	return false
}

func (m *Method) GetCreateTrigger() bool {
	if m != nil && m.CreateTrigger != nil {
		return *m.CreateTrigger
	}
	return false
}

func (m *Method) GetReadTrigger() bool {
	if m != nil && m.ReadTrigger != nil {
		return *m.ReadTrigger
	}
	return false
}

func (m *Method) GetListTrigger() bool {
	if m != nil && m.ListTrigger != nil {
		return *m.ListTrigger
	}
	return false
}

func (m *Method) GetReadAllTrigger() bool {
	if m != nil && m.ReadAllTrigger != nil {
		return *m.ReadAllTrigger
	}
	return false
}

func (m *Method) GetListAllTrigger() bool {
	if m != nil && m.ListAllTrigger != nil {
		return *m.ListAllTrigger
	}
	return false
}

func (m *Method) GetUpdateAllTrigger() bool {
	if m != nil && m.UpdateAllTrigger != nil {
		return *m.UpdateAllTrigger
	}
	return false
}

func (m *Method) GetDeleteAllTrigger() bool {
	if m != nil && m.DeleteAllTrigger != nil {
		return *m.DeleteAllTrigger
	}
	return false
}

func (m *Method) GetCreateAllTrigger() bool {
	if m != nil && m.CreateAllTrigger != nil {
		return *m.CreateAllTrigger
	}
	return false
}

func (m *Method) GetReadAgentNotification() bool {
	if m != nil && m.ReadAgentNotification != nil {
		return *m.ReadAgentNotification
	}
	return false
}

func (m *Method) GetSeenAgentNotification() bool {
	if m != nil && m.SeenAgentNotification != nil {
		return *m.SeenAgentNotification
	}
	return false
}

func (m *Method) GetPing() bool {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return false
}

func (m *Method) GetUpdatePasswords() bool {
	if m != nil && m.UpdatePasswords != nil {
		return *m.UpdatePasswords
	}
	return false
}

func (m *Method) GetUpdatePassword() bool {
	if m != nil && m.UpdatePassword != nil {
		return *m.UpdatePassword
	}
	return false
}

func (m *Method) GetInviteAgents() bool {
	if m != nil && m.InviteAgents != nil {
		return *m.InviteAgents
	}
	return false
}

func (m *Method) GetUpdateAgent() bool {
	if m != nil && m.UpdateAgent != nil {
		return *m.UpdateAgent
	}
	return false
}

func (m *Method) GetUpdateAgents() bool {
	if m != nil && m.UpdateAgents != nil {
		return *m.UpdateAgents
	}
	return false
}

func (m *Method) GetReadAgent() bool {
	if m != nil && m.ReadAgent != nil {
		return *m.ReadAgent
	}
	return false
}

func (m *Method) GetReadAgents() bool {
	if m != nil && m.ReadAgents != nil {
		return *m.ReadAgents
	}
	return false
}

func (m *Method) GetResetPassword() bool {
	if m != nil && m.ResetPassword != nil {
		return *m.ResetPassword
	}
	return false
}

func (m *Method) GetUpdateAgentsPermission() bool {
	if m != nil && m.UpdateAgentsPermission != nil {
		return *m.UpdateAgentsPermission
	}
	return false
}

func (m *Method) GetUpdateAgentsState() bool {
	if m != nil && m.UpdateAgentsState != nil {
		return *m.UpdateAgentsState
	}
	return false
}

func (m *Method) GetConfirmAccount() bool {
	if m != nil && m.ConfirmAccount != nil {
		return *m.ConfirmAccount
	}
	return false
}

func (m *Method) GetCreateAgentGroups() bool {
	if m != nil && m.CreateAgentGroups != nil {
		return *m.CreateAgentGroups
	}
	return false
}

func (m *Method) GetDeleteAgentGroups() bool {
	if m != nil && m.DeleteAgentGroups != nil {
		return *m.DeleteAgentGroups
	}
	return false
}

func (m *Method) GetReadAgentGroups() bool {
	if m != nil && m.ReadAgentGroups != nil {
		return *m.ReadAgentGroups
	}
	return false
}

func (m *Method) GetUpdateAgentGroups() bool {
	if m != nil && m.UpdateAgentGroups != nil {
		return *m.UpdateAgentGroups
	}
	return false
}

func (m *Method) GetUpdatePlan() bool {
	if m != nil && m.UpdatePlan != nil {
		return *m.UpdatePlan
	}
	return false
}

func (m *Method) GetCreateAccount() bool {
	if m != nil && m.CreateAccount != nil {
		return *m.CreateAccount
	}
	return false
}

func (m *Method) GetDeleteAccount() bool {
	if m != nil && m.DeleteAccount != nil {
		return *m.DeleteAccount
	}
	return false
}

func (m *Method) GetUpdateAccount() bool {
	if m != nil && m.UpdateAccount != nil {
		return *m.UpdateAccount
	}
	return false
}

func (m *Method) GetReadAccount() bool {
	if m != nil && m.ReadAccount != nil {
		return *m.ReadAccount
	}
	return false
}

func (m *Method) GetReadClient() bool {
	if m != nil && m.ReadClient != nil {
		return *m.ReadClient
	}
	return false
}

func (m *Method) GetListClient() bool {
	if m != nil && m.ListClient != nil {
		return *m.ListClient
	}
	return false
}

func (m *Method) GetUpdateClientInfo() bool {
	if m != nil && m.UpdateClientInfo != nil {
		return *m.UpdateClientInfo
	}
	return false
}

func (m *Method) GetPublishClient() bool {
	if m != nil && m.PublishClient != nil {
		return *m.PublishClient
	}
	return false
}

func (m *Method) GetRegenerateClientSecret() bool {
	if m != nil && m.RegenerateClientSecret != nil {
		return *m.RegenerateClientSecret
	}
	return false
}

func (m *Method) GetVerifyClient() bool {
	if m != nil && m.VerifyClient != nil {
		return *m.VerifyClient
	}
	return false
}

func (m *Method) GetDeleteClient() bool {
	if m != nil && m.DeleteClient != nil {
		return *m.DeleteClient
	}
	return false
}

func (m *Method) GetCreateClient() bool {
	if m != nil && m.CreateClient != nil {
		return *m.CreateClient
	}
	return false
}

func (m *Method) GetReadRule() bool {
	if m != nil && m.ReadRule != nil {
		return *m.ReadRule
	}
	return false
}

func (m *Method) GetUpdateRule() bool {
	if m != nil && m.UpdateRule != nil {
		return *m.UpdateRule
	}
	return false
}

func (m *Method) GetDeleteRule() bool {
	if m != nil && m.DeleteRule != nil {
		return *m.DeleteRule
	}
	return false
}

func (m *Method) GetStartConversation() bool {
	if m != nil && m.StartConversation != nil {
		return *m.StartConversation
	}
	return false
}

func (m *Method) GetReadConversation() bool {
	if m != nil && m.ReadConversation != nil {
		return *m.ReadConversation
	}
	return false
}

func (m *Method) GetWriteConversation() bool {
	if m != nil && m.WriteConversation != nil {
		return *m.WriteConversation
	}
	return false
}

type ScopeId struct {
	Id               *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ScopeId) Reset()                    { *m = ScopeId{} }
func (m *ScopeId) String() string            { return proto.CompactTextString(m) }
func (*ScopeId) ProtoMessage()               {}
func (*ScopeId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ScopeId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type UserId struct {
	Id               *string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserId) Reset()                    { *m = UserId{} }
func (m *UserId) String() string            { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()               {}
func (*UserId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type ScopesResponse struct {
	Scopes           []*Scope `protobuf:"bytes,1,rep,name=Scopes" json:"Scopes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ScopesResponse) Reset()                    { *m = ScopesResponse{} }
func (m *ScopesResponse) String() string            { return proto.CompactTextString(m) }
func (*ScopesResponse) ProtoMessage()               {}
func (*ScopesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ScopesResponse) GetScopes() []*Scope {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type UserAuth struct {
	UserId           *string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	Method           *Method `protobuf:"bytes,2,opt,name=Method" json:"Method,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAuth) Reset()                    { *m = UserAuth{} }
func (m *UserAuth) String() string            { return proto.CompactTextString(m) }
func (*UserAuth) ProtoMessage()               {}
func (*UserAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UserAuth) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *UserAuth) GetMethod() *Method {
	if m != nil {
		return m.Method
	}
	return nil
}

type PasswordCredential struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PasswordCredential) Reset()                    { *m = PasswordCredential{} }
func (m *PasswordCredential) String() string            { return proto.CompactTextString(m) }
func (*PasswordCredential) ProtoMessage()               {}
func (*PasswordCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PasswordCredential) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *PasswordCredential) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type AuthCookie struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthCookie) Reset()                    { *m = AuthCookie{} }
func (m *AuthCookie) String() string            { return proto.CompactTextString(m) }
func (*AuthCookie) ProtoMessage()               {}
func (*AuthCookie) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AuthCookie) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AuthCookie) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type OauthAccessToken struct {
	AccessToken      *string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	TokenType        *string `protobuf:"bytes,3,opt,name=token_type,json=tokenType" json:"token_type,omitempty"`
	ExpiresIn        *int64  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn" json:"expires_in,omitempty"`
	RefreshToken     *string `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
	Scope            *string `protobuf:"bytes,6,opt,name=scope" json:"scope,omitempty"`
	State            *string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Error            *string `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
	ErrorDescription *string `protobuf:"bytes,9,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	ErrorUri         *string `protobuf:"bytes,10,opt,name=error_uri,json=errorUri" json:"error_uri,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OauthAccessToken) Reset()                    { *m = OauthAccessToken{} }
func (m *OauthAccessToken) String() string            { return proto.CompactTextString(m) }
func (*OauthAccessToken) ProtoMessage()               {}
func (*OauthAccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *OauthAccessToken) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func (m *OauthAccessToken) GetTokenType() string {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return ""
}

func (m *OauthAccessToken) GetExpiresIn() int64 {
	if m != nil && m.ExpiresIn != nil {
		return *m.ExpiresIn
	}
	return 0
}

func (m *OauthAccessToken) GetRefreshToken() string {
	if m != nil && m.RefreshToken != nil {
		return *m.RefreshToken
	}
	return ""
}

func (m *OauthAccessToken) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *OauthAccessToken) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *OauthAccessToken) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *OauthAccessToken) GetErrorDescription() string {
	if m != nil && m.ErrorDescription != nil {
		return *m.ErrorDescription
	}
	return ""
}

func (m *OauthAccessToken) GetErrorUri() string {
	if m != nil && m.ErrorUri != nil {
		return *m.ErrorUri
	}
	return ""
}

type AccessToken struct {
	UserId           *string     `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientId         *string     `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientType       *ClientType `protobuf:"varint,3,opt,name=client_type,json=clientType,enum=auth.ClientType" json:"client_type,omitempty"`
	AccountId        *string     `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ClientAccountId  *string     `protobuf:"bytes,5,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	Scopes           []string    `protobuf:"bytes,6,rep,name=scopes" json:"scopes,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *AccessToken) Reset()                    { *m = AccessToken{} }
func (m *AccessToken) String() string            { return proto.CompactTextString(m) }
func (*AccessToken) ProtoMessage()               {}
func (*AccessToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AccessToken) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *AccessToken) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *AccessToken) GetClientType() ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ClientType_STONE
}

func (m *AccessToken) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AccessToken) GetClientAccountId() string {
	if m != nil && m.ClientAccountId != nil {
		return *m.ClientAccountId
	}
	return ""
}

func (m *AccessToken) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type CookieExpire struct {
	UserId    *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountId *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// expired_token will be mark as expired
	ExpiredToken *string `protobuf:"bytes,3,opt,name=expired_token,json=expiredToken" json:"expired_token,omitempty"`
	// all token issue before before_time will be mark as expired, except for
	// except_token
	BeforeTime *int64 `protobuf:"varint,4,opt,name=before_time,json=beforeTime" json:"before_time,omitempty"`
	// this token will not be expired
	ExceptToken      *string `protobuf:"bytes,5,opt,name=except_token,json=exceptToken" json:"except_token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CookieExpire) Reset()                    { *m = CookieExpire{} }
func (m *CookieExpire) String() string            { return proto.CompactTextString(m) }
func (*CookieExpire) ProtoMessage()               {}
func (*CookieExpire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CookieExpire) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *CookieExpire) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *CookieExpire) GetExpiredToken() string {
	if m != nil && m.ExpiredToken != nil {
		return *m.ExpiredToken
	}
	return ""
}

func (m *CookieExpire) GetBeforeTime() int64 {
	if m != nil && m.BeforeTime != nil {
		return *m.BeforeTime
	}
	return 0
}

func (m *CookieExpire) GetExceptToken() string {
	if m != nil && m.ExceptToken != nil {
		return *m.ExceptToken
	}
	return ""
}

type Id struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Id) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Id) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type User struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Email            *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Password         *string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type Client struct {
	// 128 bit string identification of the client.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// secre used to authorize client with oauth2 server
	Secret *string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	// LogoUrl is url to logo of the client, should be 256x256 and lessthan 256KB
	LogoUrl   *string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	AccountId *string `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// IsVerified will be true if client is verified by the authority
	IsVerified *bool `protobuf:"varint,8,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	// List of URLs which client must register for oauth redirection
	RedirectUrl *string     `protobuf:"bytes,9,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	Type        *ClientType `protobuf:"varint,11,opt,name=type,enum=auth.ClientType" json:"type,omitempty"`
	Name        *string     `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	// Version number of the client.
	Version          *string `protobuf:"bytes,14,opt,name=version" json:"version,omitempty"`
	IsEnabled        *bool   `protobuf:"varint,15,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Client) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Client) GetSecret() string {
	if m != nil && m.Secret != nil {
		return *m.Secret
	}
	return ""
}

func (m *Client) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Client) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Client) GetIsVerified() bool {
	if m != nil && m.IsVerified != nil {
		return *m.IsVerified
	}
	return false
}

func (m *Client) GetRedirectUrl() string {
	if m != nil && m.RedirectUrl != nil {
		return *m.RedirectUrl
	}
	return ""
}

func (m *Client) GetType() ClientType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ClientType_STONE
}

func (m *Client) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Client) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Client) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return false
}

func init() {
	proto.RegisterType((*Empty)(nil), "auth.Empty")
	proto.RegisterType((*Credential)(nil), "auth.Credential")
	proto.RegisterType((*Scope)(nil), "auth.Scope")
	proto.RegisterType((*Event)(nil), "auth.Event")
	proto.RegisterType((*Method)(nil), "auth.Method")
	proto.RegisterType((*ScopeId)(nil), "auth.ScopeId")
	proto.RegisterType((*UserId)(nil), "auth.UserId")
	proto.RegisterType((*ScopesResponse)(nil), "auth.ScopesResponse")
	proto.RegisterType((*UserAuth)(nil), "auth.UserAuth")
	proto.RegisterType((*PasswordCredential)(nil), "auth.PasswordCredential")
	proto.RegisterType((*AuthCookie)(nil), "auth.AuthCookie")
	proto.RegisterType((*OauthAccessToken)(nil), "auth.OauthAccessToken")
	proto.RegisterType((*AccessToken)(nil), "auth.AccessToken")
	proto.RegisterType((*CookieExpire)(nil), "auth.CookieExpire")
	proto.RegisterType((*Id)(nil), "auth.Id")
	proto.RegisterType((*User)(nil), "auth.User")
	proto.RegisterType((*Client)(nil), "auth.Client")
	proto.RegisterEnum("auth.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("auth.AuthorizationType", AuthorizationType_name, AuthorizationType_value)
	proto.RegisterEnum("auth.EVENT", EVENT_name, EVENT_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	ReadScope(ctx context.Context, in *ScopeId, opts ...grpc.CallOption) (*Scope, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScopesResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) ReadScope(ctx context.Context, in *ScopeId, opts ...grpc.CallOption) (*Scope, error) {
	out := new(Scope)
	err := grpc.Invoke(ctx, "/auth.Auth/ReadScope", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScopesResponse, error) {
	out := new(ScopesResponse)
	err := grpc.Invoke(ctx, "/auth.Auth/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	ReadScope(context.Context, *ScopeId) (*Scope, error)
	List(context.Context, *Empty) (*ScopesResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_ReadScope_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScopeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ReadScope(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/ReadScope",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ReadScope(ctx, req.(*ScopeId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadScope",
			Handler:    _Auth_ReadScope_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Auth_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth/auth.proto",
}

func init() { proto.RegisterFile("auth/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x5b, 0x73, 0x1b, 0x4b,
	0x11, 0xf6, 0xea, 0xae, 0x96, 0x6c, 0xaf, 0xe7, 0xf8, 0x98, 0x39, 0x09, 0x39, 0x51, 0x36, 0x3e,
	0x94, 0x71, 0x0e, 0x27, 0x15, 0xe7, 0xc6, 0xe5, 0xc9, 0x38, 0x86, 0x88, 0x72, 0x1c, 0x23, 0x5f,
	0x78, 0x43, 0xb5, 0xd1, 0x8e, 0xed, 0x49, 0x56, 0xbb, 0xaa, 0xdd, 0x95, 0x89, 0xc3, 0xad, 0x80,
	0x1f, 0x41, 0xb8, 0x56, 0x51, 0xc5, 0x3b, 0x2f, 0x81, 0x47, 0xe0, 0x8d, 0x1f, 0xc0, 0x13, 0x7f,
	0x86, 0xa2, 0xba, 0x7b, 0x56, 0x9a, 0x95, 0x6d, 0x02, 0xe7, 0xc5, 0xd6, 0x7c, 0xdf, 0x37, 0x3d,
	0xdb, 0x3d, 0x3d, 0x3d, 0x3d, 0xb0, 0xe8, 0x8f, 0xb3, 0xd3, 0xbb, 0xf8, 0xe7, 0xb3, 0x51, 0x12,
	0x67, 0xb1, 0xa8, 0xe0, 0x6f, 0xaf, 0x0e, 0xd5, 0xed, 0xe1, 0x28, 0x3b, 0xf7, 0xfe, 0xed, 0x00,
	0x6c, 0x25, 0x2a, 0x50, 0x51, 0xa6, 0xfd, 0x50, 0xdc, 0x00, 0xf0, 0x07, 0x83, 0x78, 0x1c, 0x65,
	0x7d, 0x1d, 0x48, 0xa7, 0xe3, 0xac, 0x35, 0x7b, 0x4d, 0x83, 0x74, 0x03, 0xf1, 0x05, 0xa8, 0x8f,
	0x53, 0x95, 0x20, 0x57, 0x26, 0xae, 0x86, 0xc3, 0x6e, 0x20, 0x56, 0xa1, 0x36, 0x54, 0xd9, 0x69,
	0x1c, 0xc8, 0x6a, 0xc7, 0x59, 0x6b, 0x6d, 0xb4, 0x3f, 0xa3, 0x25, 0x9f, 0x11, 0xd6, 0x33, 0x9c,
	0xb8, 0x0e, 0xcd, 0x41, 0xa8, 0x15, 0x1b, 0xaf, 0x93, 0x81, 0x06, 0x03, 0xdd, 0x40, 0xdc, 0x83,
	0x96, 0x21, 0xb3, 0xf3, 0x91, 0x92, 0x8d, 0x8e, 0xb3, 0xb6, 0xb0, 0xe1, 0xb2, 0x9d, 0x2d, 0x22,
	0x0e, 0xce, 0x47, 0xaa, 0x07, 0x83, 0xc9, 0x6f, 0xb1, 0x02, 0xb5, 0x74, 0x10, 0x8f, 0x54, 0x2a,
	0x9b, 0x9d, 0x32, 0x7e, 0x0d, 0x8f, 0xc4, 0x3a, 0x2c, 0x19, 0x53, 0x96, 0x33, 0x40, 0xeb, 0x2d,
	0x32, 0xb1, 0x99, 0xbb, 0xe4, 0xfd, 0xc3, 0x81, 0xea, 0x3e, 0x4e, 0x13, 0x0b, 0x50, 0x22, 0x9f,
	0x4b, 0x6b, 0xcd, 0x5e, 0x49, 0x07, 0x42, 0x40, 0x25, 0xf2, 0x87, 0x4a, 0x96, 0x08, 0xa1, 0xdf,
	0xe2, 0x23, 0x68, 0x84, 0xf1, 0x49, 0xdc, 0x1f, 0x27, 0xa1, 0x2c, 0x13, 0x5e, 0xc7, 0xf1, 0x61,
	0x12, 0x8a, 0x65, 0xa8, 0x66, 0x3a, 0x0b, 0x95, 0xac, 0x10, 0xce, 0x03, 0xd1, 0x81, 0x56, 0xa0,
	0xd2, 0x41, 0xa2, 0x47, 0x99, 0x8e, 0x23, 0x59, 0x25, 0xce, 0x86, 0xac, 0xd0, 0xd5, 0x3a, 0xa5,
	0x2b, 0x43, 0x77, 0x0b, 0xaa, 0xea, 0x4c, 0x45, 0x99, 0xac, 0x93, 0xa8, 0xc5, 0xa2, 0x6d, 0x84,
	0x7a, 0xcc, 0x78, 0x6f, 0x1d, 0xa8, 0x12, 0x20, 0xee, 0xc1, 0xf2, 0x20, 0x8e, 0xce, 0x54, 0x92,
	0xfa, 0xb8, 0x44, 0x3f, 0xcd, 0xfc, 0x24, 0x53, 0x1c, 0x82, 0x46, 0xef, 0x03, 0x9b, 0xdb, 0x67,
	0x4a, 0xdc, 0x81, 0xa5, 0xe2, 0x14, 0x5c, 0xab, 0x45, 0x7a, 0xb7, 0xa0, 0x47, 0xfb, 0x77, 0xa1,
	0x60, 0xa3, 0xff, 0x32, 0xd6, 0x91, 0x0a, 0x64, 0x9b, 0xe4, 0xc2, 0xa6, 0xbe, 0x43, 0x8c, 0xf7,
	0xcf, 0x05, 0xa8, 0xb1, 0x43, 0x62, 0x15, 0xe6, 0x0f, 0x47, 0x81, 0x9f, 0xa9, 0x83, 0x44, 0x9f,
	0x9c, 0xa8, 0x44, 0x6e, 0xd0, 0xac, 0x22, 0x88, 0xaa, 0x27, 0x2a, 0x54, 0x53, 0xd5, 0x7d, 0x56,
	0x15, 0x40, 0x54, 0x6d, 0x25, 0xca, 0xb2, 0xf5, 0x80, 0x55, 0x05, 0x10, 0xb7, 0xa0, 0xa7, 0xfc,
	0x20, 0xd7, 0x3c, 0x24, 0x8d, 0x0d, 0xa1, 0x62, 0x47, 0xa7, 0x59, 0xae, 0x78, 0xc4, 0x0a, 0x0b,
	0x12, 0x5f, 0x82, 0x05, 0x9c, 0xb0, 0x19, 0x86, 0xb9, 0xe8, 0x31, 0x89, 0x66, 0x50, 0xd4, 0xe1,
	0x34, 0x4b, 0xf7, 0x55, 0xd6, 0x15, 0x51, 0xb1, 0x0e, 0x2e, 0x3b, 0x6c, 0x29, 0xbf, 0xc6, 0xd1,
	0x9e, 0xc5, 0x51, 0xcb, 0x6e, 0x5b, 0xda, 0xaf, 0xb3, 0x76, 0x16, 0x47, 0x2d, 0x3b, 0x6f, 0x69,
	0xbf, 0xc1, 0xda, 0x59, 0x5c, 0x3c, 0x80, 0x0f, 0xe9, 0xeb, 0x4f, 0x54, 0x94, 0xed, 0xc6, 0x99,
	0x3e, 0xd6, 0x03, 0xda, 0x33, 0xa9, 0x69, 0xc2, 0xe5, 0x24, 0xce, 0xda, 0x57, 0x2a, 0xba, 0x38,
	0xeb, 0x25, 0xcf, 0xba, 0x94, 0xc4, 0xb3, 0xb4, 0xa7, 0xa3, 0x13, 0xf9, 0x8a, 0x44, 0xf4, 0x5b,
	0xac, 0xc1, 0x22, 0xfb, 0xba, 0xe7, 0xa7, 0xe9, 0x0f, 0xe2, 0x24, 0x48, 0xe5, 0x90, 0xe8, 0x59,
	0x18, 0xa3, 0x5a, 0x84, 0x64, 0xc8, 0x51, 0x2d, 0xa2, 0xc2, 0x83, 0x76, 0x37, 0x3a, 0xd3, 0x99,
	0xa2, 0x0f, 0x48, 0xe5, 0xb7, 0x48, 0x55, 0xc0, 0x70, 0xaf, 0x4d, 0x84, 0x71, 0x2c, 0x9f, 0xf2,
	0x5e, 0x5b, 0x10, 0x5a, 0xb1, 0x86, 0xa9, 0xec, 0xb2, 0x15, 0x1b, 0x13, 0x5f, 0x84, 0xe6, 0x24,
	0x3c, 0x72, 0x87, 0x04, 0x53, 0x40, 0x7c, 0x0c, 0x30, 0x19, 0xa4, 0xf2, 0x19, 0xd1, 0x16, 0x82,
	0x79, 0xdb, 0x53, 0xa9, 0xca, 0x26, 0xee, 0xec, 0x72, 0xde, 0x16, 0x40, 0xf1, 0x08, 0x56, 0xec,
	0x35, 0xf7, 0x54, 0x32, 0xd4, 0x69, 0x8a, 0xa1, 0xfe, 0x2e, 0xc9, 0xaf, 0x60, 0xc5, 0xa7, 0xb0,
	0x64, 0x33, 0xfb, 0x99, 0x9f, 0x29, 0x79, 0x44, 0x53, 0x2e, 0x12, 0x18, 0xdb, 0xad, 0x38, 0x3a,
	0xd6, 0xc9, 0xd0, 0xd4, 0x44, 0xf9, 0x9a, 0x63, 0x5b, 0x44, 0xd1, 0xaa, 0xc9, 0x20, 0x9c, 0xfc,
	0xed, 0x24, 0x1e, 0x8f, 0x52, 0xf9, 0x23, 0xb6, 0x7a, 0x81, 0x40, 0xb5, 0xc9, 0x4d, 0x4b, 0xfd,
	0x63, 0x56, 0x5f, 0x20, 0x30, 0x13, 0x26, 0xd1, 0x31, 0xda, 0x9f, 0x70, 0x26, 0xcc, 0xc0, 0x33,
	0xbe, 0x19, 0xed, 0x4f, 0x2f, 0xf8, 0x66, 0xd4, 0x1f, 0x03, 0x98, 0x0c, 0x09, 0xfd, 0x48, 0xfe,
	0x90, 0xf7, 0x61, 0x8a, 0x88, 0x4f, 0xf2, 0xfa, 0x91, 0xbb, 0xfe, 0x33, 0xc7, 0x2e, 0x20, 0xb9,
	0xeb, 0x9f, 0xe4, 0xc5, 0x28, 0x97, 0xfd, 0xdc, 0xb1, 0xab, 0x51, 0x2e, 0x9b, 0x54, 0xb6, 0x5c,
	0xf6, 0xc6, 0xae, 0x6c, 0xb9, 0xea, 0x16, 0x57, 0xa3, 0x5c, 0xf3, 0x0b, 0x67, 0x5a, 0x8e, 0x72,
	0xc9, 0x4d, 0x4e, 0x1f, 0xbe, 0xf4, 0xe4, 0x2f, 0x9d, 0x69, 0xfe, 0x30, 0x84, 0x02, 0xac, 0x27,
	0x46, 0xf0, 0xd6, 0x08, 0xa6, 0x90, 0xb8, 0x93, 0x97, 0x17, 0x1e, 0x77, 0xa3, 0xe3, 0x58, 0xfe,
	0xca, 0xb1, 0xeb, 0xcb, 0x94, 0x40, 0xf7, 0xf6, 0xc6, 0x2f, 0x42, 0x9d, 0x9e, 0x1a, 0x83, 0xbf,
	0x36, 0xee, 0x15, 0x50, 0xf1, 0x18, 0x56, 0x7a, 0xea, 0x44, 0x45, 0x2a, 0x99, 0x4c, 0xdf, 0x57,
	0x83, 0x44, 0x65, 0xf2, 0x37, 0xac, 0xbf, 0x82, 0x16, 0xb7, 0xa1, 0x7d, 0xa4, 0x12, 0x7d, 0x7c,
	0x6e, 0xcc, 0xff, 0x96, 0xe5, 0x05, 0x10, 0x45, 0x1c, 0x4d, 0x23, 0xfa, 0x9d, 0x11, 0xd9, 0x20,
	0x8a, 0x78, 0x67, 0x8c, 0xe8, 0xf7, 0x46, 0x64, 0x83, 0xe2, 0x3a, 0x34, 0x30, 0x54, 0xbd, 0x71,
	0xa8, 0xe4, 0x3b, 0x16, 0x4c, 0x00, 0x8c, 0x1c, 0xfb, 0x4f, 0xf4, 0x9f, 0x1d, 0x3b, 0x25, 0x72,
	0x01, 0x2f, 0x49, 0x82, 0xbf, 0x18, 0xc1, 0x14, 0x12, 0x5f, 0x81, 0x25, 0xba, 0x33, 0xb7, 0xac,
	0x5b, 0x4e, 0xfe, 0x95, 0x75, 0x17, 0x19, 0xdc, 0x09, 0xda, 0x38, 0x5b, 0xfd, 0x37, 0xb3, 0x13,
	0xb3, 0x04, 0xda, 0xfe, 0x5e, 0xa2, 0x33, 0x55, 0x50, 0xff, 0xdd, 0xd8, 0xbe, 0xc0, 0x78, 0x1f,
	0x41, 0x9d, 0x3a, 0x97, 0x6e, 0x80, 0xbd, 0x4b, 0x37, 0xef, 0xd7, 0x4a, 0xdd, 0xc0, 0x93, 0x50,
	0x3b, 0xe4, 0xce, 0x6c, 0x96, 0x79, 0x08, 0x0b, 0x34, 0x29, 0xed, 0xa9, 0x74, 0x14, 0x47, 0xa9,
	0x12, 0xb7, 0xa1, 0xc6, 0x88, 0x74, 0x3a, 0xe5, 0x69, 0x6f, 0x41, 0x58, 0xcf, 0x50, 0xde, 0x53,
	0x68, 0xa0, 0xc1, 0xcd, 0x71, 0x76, 0x8a, 0x6d, 0x17, 0x1b, 0x37, 0x66, 0xf3, 0xa5, 0x56, 0xf3,
	0x4b, 0x5e, 0x96, 0x2e, 0x6b, 0x02, 0xf9, 0xbf, 0xb7, 0x03, 0x22, 0x2f, 0x71, 0x56, 0xe3, 0x79,
	0x0d, 0x1a, 0xd8, 0x4a, 0x52, 0xc3, 0xc5, 0x56, 0x27, 0x63, 0xe4, 0x46, 0x79, 0xa5, 0x2c, 0x31,
	0x97, 0x8f, 0xbd, 0x27, 0x00, 0xf8, 0x4d, 0x5b, 0x71, 0xfc, 0x4a, 0x2b, 0xbb, 0x3f, 0x75, 0x0a,
	0xfd, 0x69, 0xb1, 0xaf, 0x2d, 0xcd, 0xf4, 0xb5, 0xde, 0x1f, 0x4b, 0xe0, 0x3e, 0xc7, 0x8f, 0xdd,
	0x1c, 0x0c, 0x54, 0x9a, 0x1e, 0xc4, 0xaf, 0x54, 0x24, 0x6e, 0x41, 0xdb, 0xa7, 0x61, 0x3f, 0xc3,
	0xb1, 0xb1, 0xd8, 0xf2, 0x2d, 0xc9, 0x0d, 0x00, 0xe2, 0xb8, 0x65, 0xe5, 0x96, 0xb8, 0x49, 0x08,
	0xf5, 0xa7, 0x37, 0x00, 0xd4, 0xeb, 0x91, 0x4e, 0x54, 0xda, 0xd7, 0x91, 0xac, 0x74, 0x9c, 0xb5,
	0x72, 0xaf, 0x69, 0x90, 0x6e, 0x24, 0x6e, 0xc3, 0x7c, 0xa2, 0x8e, 0x13, 0x95, 0x9e, 0x9a, 0x15,
	0xaa, 0x64, 0xa0, 0x6d, 0x40, 0x5e, 0x62, 0x19, 0xaa, 0xd4, 0xd5, 0xca, 0x1a, 0x91, 0x3c, 0x20,
	0x94, 0xea, 0x7a, 0xdd, 0xa0, 0x54, 0xcb, 0x97, 0xa1, 0xaa, 0x92, 0x24, 0x4e, 0xa8, 0x79, 0x6e,
	0xf6, 0x78, 0x80, 0xad, 0x1d, 0xfd, 0xe8, 0xdb, 0x8d, 0x68, 0x93, 0x14, 0x2e, 0x11, 0x4f, 0xac,
	0x6e, 0xf4, 0x3a, 0x34, 0x59, 0x3c, 0x4e, 0xb4, 0x69, 0x99, 0x1b, 0x04, 0x1c, 0x26, 0xda, 0xfb,
	0x97, 0x03, 0x2d, 0x3b, 0x42, 0x57, 0x86, 0xbb, 0xd0, 0xe8, 0x97, 0xfe, 0x7b, 0xa3, 0x5f, 0xfe,
	0x1f, 0x1a, 0xfd, 0xe2, 0xf6, 0x55, 0x66, 0x9f, 0x25, 0x97, 0xf6, 0xfb, 0xd5, 0x4b, 0xfb, 0x7d,
	0xeb, 0xcd, 0x50, 0xb3, 0xdf, 0x0c, 0xde, 0x9f, 0x1c, 0x68, 0x73, 0x16, 0x6d, 0xd3, 0x06, 0x7d,
	0xde, 0x5c, 0xc2, 0x5d, 0xe5, 0x2d, 0x0e, 0xcc, 0xae, 0x72, 0x5a, 0xb4, 0x0d, 0xc8, 0x91, 0xbb,
	0x09, 0xad, 0x17, 0xea, 0x38, 0x4e, 0x54, 0x3f, 0xd3, 0x43, 0x65, 0x52, 0x03, 0x18, 0x3a, 0xd0,
	0x43, 0x85, 0xc9, 0xa7, 0x5e, 0x0f, 0xd4, 0x28, 0x2b, 0xa4, 0x46, 0x8b, 0x31, 0xb2, 0xe1, 0xdd,
	0xc7, 0x93, 0x3d, 0x79, 0xb5, 0x38, 0xe6, 0xd5, 0xf2, 0x9e, 0x4c, 0x3f, 0x81, 0x0a, 0x9e, 0xd6,
	0xff, 0x73, 0x1a, 0x65, 0xd6, 0xd0, 0xd7, 0xa1, 0x71, 0x86, 0x07, 0x85, 0x83, 0x59, 0x99, 0x39,
	0x98, 0x7f, 0x28, 0x41, 0xcd, 0x54, 0xe4, 0xd9, 0xb5, 0x70, 0x0b, 0xf8, 0xe6, 0xe0, 0x75, 0xcc,
	0x68, 0xe6, 0x71, 0xe5, 0xd8, 0x8f, 0xab, 0xf7, 0x24, 0xc0, 0x4d, 0x68, 0xe9, 0xb4, 0x7f, 0x86,
	0x17, 0x8a, 0x56, 0x01, 0xa5, 0x7f, 0xa3, 0x07, 0x3a, 0x3d, 0x32, 0x08, 0x86, 0x33, 0x51, 0x81,
	0x4e, 0xd4, 0x20, 0x23, 0xf3, 0x9c, 0xfe, 0xad, 0x1c, 0xc3, 0x25, 0x56, 0xa1, 0x42, 0xf9, 0xd8,
	0xba, 0x22, 0x1f, 0x89, 0x9d, 0x3c, 0x0a, 0xdb, 0x64, 0x80, 0x1f, 0x85, 0x12, 0xea, 0x58, 0x94,
	0xf1, 0x58, 0x2d, 0xf0, 0x67, 0x9b, 0x21, 0x7e, 0xb6, 0x4e, 0xfb, 0x2a, 0xf2, 0x5f, 0x84, 0x2a,
	0x90, 0x8b, 0xdc, 0x27, 0xea, 0x74, 0x9b, 0x81, 0xf5, 0x47, 0x00, 0xd3, 0x05, 0x44, 0x13, 0xaa,
	0xfb, 0x07, 0xcf, 0x77, 0xb7, 0xdd, 0x39, 0x51, 0x87, 0xf2, 0xe6, 0xde, 0x9e, 0xeb, 0x88, 0x16,
	0xd4, 0xb7, 0x9e, 0x6e, 0xee, 0xee, 0x6e, 0xef, 0xb8, 0x25, 0x44, 0xbf, 0xf9, 0xfc, 0xc0, 0x2d,
	0xaf, 0x7f, 0x0a, 0x4b, 0x58, 0xf4, 0xe2, 0x44, 0xbf, 0xa1, 0x9b, 0x80, 0xa6, 0x03, 0xd4, 0x38,
	0xd7, 0xdd, 0x39, 0x9c, 0x36, 0x38, 0xf5, 0xa3, 0x48, 0x85, 0xae, 0xb3, 0xfe, 0x0e, 0xdf, 0x85,
	0x47, 0xdb, 0xbb, 0x07, 0x62, 0x05, 0x04, 0x15, 0x4b, 0x92, 0x1d, 0x8e, 0x52, 0x85, 0x4f, 0x3f,
	0x77, 0x4e, 0x7c, 0xc8, 0xf6, 0x18, 0xe7, 0xbb, 0x2e, 0x70, 0x1d, 0xb1, 0x0c, 0x2e, 0xc2, 0x98,
	0x2f, 0x13, 0x71, 0x49, 0x7c, 0x00, 0x8b, 0x39, 0x9a, 0x4b, 0xcb, 0xb9, 0x94, 0x8f, 0x0e, 0x1f,
	0x23, 0xb7, 0x22, 0x04, 0x2c, 0xcc, 0xac, 0x05, 0x62, 0x09, 0xe6, 0x8b, 0xeb, 0xb4, 0x70, 0x32,
	0x43, 0xb9, 0x53, 0x2a, 0x70, 0xdb, 0x1b, 0xdf, 0x87, 0x0a, 0xdd, 0x36, 0x5f, 0xe6, 0x56, 0x9b,
	0xdf, 0xe8, 0xf3, 0xd6, 0xdd, 0xd4, 0x0d, 0xae, 0xd9, 0x57, 0x95, 0x37, 0x27, 0xee, 0x40, 0x05,
	0x9b, 0x20, 0x91, 0xbf, 0x8e, 0x87, 0xa3, 0xec, 0xfc, 0xda, 0xb2, 0xa5, 0x99, 0x5c, 0x7a, 0xde,
	0xdc, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x90, 0x21, 0xcf, 0x1a, 0x11, 0x00, 0x00,
}
