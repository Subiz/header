// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scheduler/scheduler.proto

/*
Package scheduler is a generated protocol buffer package.

schedule help publish a kafka event in future

It is generated from these files:
	scheduler/scheduler.proto

It has these top-level messages:
	ScheduleItem
	Id
*/
package scheduler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_SchedulerRequested Event = 0
	Event_SchedulerCancelled Event = 1
)

var Event_name = map[int32]string{
	0: "SchedulerRequested",
	1: "SchedulerCancelled",
}
var Event_value = map[string]int32{
	"SchedulerRequested": 0,
	"SchedulerCancelled": 1,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ScheduleItem struct {
	// Id of schedule item (should be 256 bit for very low collition rate)
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// string ScheduleTime = 2;
	CallbackTime int64  `protobuf:"varint,3,opt,name=callback_time,json=callbackTime" json:"callback_time,omitempty"`
	Topic        string `protobuf:"bytes,4,opt,name=topic" json:"topic,omitempty"`
	// Data is value of kafka event in bytes
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Key  int32  `protobuf:"varint,6,opt,name=key" json:"key,omitempty"`
}

func (m *ScheduleItem) Reset()                    { *m = ScheduleItem{} }
func (m *ScheduleItem) String() string            { return proto.CompactTextString(m) }
func (*ScheduleItem) ProtoMessage()               {}
func (*ScheduleItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ScheduleItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScheduleItem) GetCallbackTime() int64 {
	if m != nil {
		return m.CallbackTime
	}
	return 0
}

func (m *ScheduleItem) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ScheduleItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ScheduleItem) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

type Id struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CallbackTime int64  `protobuf:"varint,2,opt,name=callback_time,json=callbackTime" json:"callback_time,omitempty"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Id) GetCallbackTime() int64 {
	if m != nil {
		return m.CallbackTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ScheduleItem)(nil), "scheduler.ScheduleItem")
	proto.RegisterType((*Id)(nil), "scheduler.Id")
	proto.RegisterEnum("scheduler.Event", Event_name, Event_value)
}

func init() { proto.RegisterFile("scheduler/scheduler.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xbf, 0x4b, 0xc5, 0x30,
	0x14, 0x85, 0x4d, 0xfa, 0xf2, 0xe0, 0x5d, 0xaa, 0x94, 0x8b, 0x48, 0xdc, 0x42, 0x5d, 0x82, 0x83,
	0x0e, 0x0e, 0xe2, 0x2c, 0x0e, 0x5d, 0xa3, 0xbb, 0xa4, 0xc9, 0x05, 0x43, 0xd3, 0x1f, 0xb6, 0xa9,
	0xe0, 0xe4, 0xbf, 0x2e, 0x56, 0x5b, 0x10, 0x07, 0xb7, 0xef, 0x7c, 0x70, 0x39, 0xdc, 0x03, 0xe7,
	0x93, 0x7b, 0x21, 0x3f, 0x47, 0x1a, 0xaf, 0x37, 0xba, 0x1a, 0xc6, 0x3e, 0xf5, 0x78, 0xd8, 0x44,
	0xf9, 0x01, 0xf9, 0xe3, 0x4f, 0xa8, 0x12, 0xb5, 0x78, 0x02, 0x3c, 0x78, 0xc9, 0x14, 0xd3, 0x07,
	0xc3, 0x83, 0xc7, 0x0b, 0x38, 0x76, 0x36, 0xc6, 0xda, 0xba, 0xe6, 0x39, 0x85, 0x96, 0x64, 0xa6,
	0x98, 0xce, 0x4c, 0xbe, 0xca, 0xa7, 0xd0, 0x12, 0x9e, 0x82, 0x48, 0xfd, 0x10, 0x9c, 0xdc, 0x2d,
	0x77, 0xdf, 0x01, 0x11, 0x76, 0xde, 0x26, 0x2b, 0x85, 0x62, 0x3a, 0x37, 0x0b, 0x63, 0x01, 0x59,
	0x43, 0xef, 0x72, 0xaf, 0x98, 0x16, 0xe6, 0x0b, 0xcb, 0x3b, 0xe0, 0x95, 0xff, 0xbf, 0x96, 0xff,
	0xad, 0xbd, 0xbc, 0x05, 0xf1, 0xf0, 0x46, 0x5d, 0xc2, 0x33, 0xc0, 0xf5, 0x89, 0xd1, 0xd0, 0xeb,
	0x4c, 0x53, 0x22, 0x5f, 0x1c, 0xfd, 0xf2, 0xf7, 0xb6, 0x73, 0x14, 0x23, 0xf9, 0x82, 0xd5, 0xfb,
	0x65, 0x86, 0x9b, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0x32, 0xa2, 0xbc, 0x23, 0x01, 0x00,
	0x00,
}
