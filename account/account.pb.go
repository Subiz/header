// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account/account.proto

package account

import (
	fmt "fmt"
	auth "git.subiz.net/header/auth"
	common "git.subiz.net/header/common"
	lang "git.subiz.net/header/lang"
	payment "git.subiz.net/header/payment"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_AccountRequested   Event = 1000
	Event_AccountSynced      Event = 1001
	Event_AccountV3Synced    Event = 1002
	Event_AgentGroupDeleted  Event = 0
	Event_AgentLeftGroup     Event = 1
	Event_AgentJoinedGroup   Event = 2
	Event_AgentGroupUpserted Event = 4
	// AgentExpired = 5; // oe only, id
	Event_AgentUpserted Event = 6
	// AgentCreated = 7; // agent
	// AgentStateUpdated = 8; // could be deleted
	Event_AgentPermissionUpdated Event = 9
	// out event only
	Event_AccountUpserted                      Event = 14
	Event_AccountPlanUpdated                   Event = 16
	Event_AccountStateUpdated                  Event = 17
	Event_AccountConfirmRequest                Event = 19
	Event_HandleExpiredInvitation              Event = 20
	Event_AccountConfirmRequested              Event = 21
	Event_AccountConfirmSuccessEmailRequested  Event = 25
	Event_AccountResetPasswordEmail            Event = 33
	Event_AccountPasswordChangedEmailRequested Event = 34
	Event_AccountInviteEmail                   Event = 22
	Event_AccountDeleted                       Event = 24
	Event_AccountCreated                       Event = 45
	Event_AccountActivated                     Event = 46
	Event_AccountInfoUpdated                   Event = 47
	Event_AgentRejected                        Event = 10
	Event_AgentAccepted                        Event = 11
	Event_AgentInvited                         Event = 13
	Event_AgentDeleted                         Event = 15
	Event_AgentActivated                       Event = 50
	Event_AgentDeactivated                     Event = 51
	Event_AgentInfoUpdated                     Event = 59
	Event_AccountV3Created                     Event = 60
	Event_AccountPaymentV3Synced               Event = 63
)

var Event_name = map[int32]string{
	1000: "AccountRequested",
	1001: "AccountSynced",
	1002: "AccountV3Synced",
	0:    "AgentGroupDeleted",
	1:    "AgentLeftGroup",
	2:    "AgentJoinedGroup",
	4:    "AgentGroupUpserted",
	6:    "AgentUpserted",
	9:    "AgentPermissionUpdated",
	14:   "AccountUpserted",
	16:   "AccountPlanUpdated",
	17:   "AccountStateUpdated",
	19:   "AccountConfirmRequest",
	20:   "HandleExpiredInvitation",
	21:   "AccountConfirmRequested",
	25:   "AccountConfirmSuccessEmailRequested",
	33:   "AccountResetPasswordEmail",
	34:   "AccountPasswordChangedEmailRequested",
	22:   "AccountInviteEmail",
	24:   "AccountDeleted",
	45:   "AccountCreated",
	46:   "AccountActivated",
	47:   "AccountInfoUpdated",
	10:   "AgentRejected",
	11:   "AgentAccepted",
	13:   "AgentInvited",
	15:   "AgentDeleted",
	50:   "AgentActivated",
	51:   "AgentDeactivated",
	59:   "AgentInfoUpdated",
	60:   "AccountV3Created",
	63:   "AccountPaymentV3Synced",
}

var Event_value = map[string]int32{
	"AccountRequested":                     1000,
	"AccountSynced":                        1001,
	"AccountV3Synced":                      1002,
	"AgentGroupDeleted":                    0,
	"AgentLeftGroup":                       1,
	"AgentJoinedGroup":                     2,
	"AgentGroupUpserted":                   4,
	"AgentUpserted":                        6,
	"AgentPermissionUpdated":               9,
	"AccountUpserted":                      14,
	"AccountPlanUpdated":                   16,
	"AccountStateUpdated":                  17,
	"AccountConfirmRequest":                19,
	"HandleExpiredInvitation":              20,
	"AccountConfirmRequested":              21,
	"AccountConfirmSuccessEmailRequested":  25,
	"AccountResetPasswordEmail":            33,
	"AccountPasswordChangedEmailRequested": 34,
	"AccountInviteEmail":                   22,
	"AccountDeleted":                       24,
	"AccountCreated":                       45,
	"AccountActivated":                     46,
	"AccountInfoUpdated":                   47,
	"AgentRejected":                        10,
	"AgentAccepted":                        11,
	"AgentInvited":                         13,
	"AgentDeleted":                         15,
	"AgentActivated":                       50,
	"AgentDeactivated":                     51,
	"AgentInfoUpdated":                     59,
	"AccountV3Created":                     60,
	"AccountPaymentV3Synced":               63,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{0}
}

type Agent_Gender int32

const (
	Agent_unset    Agent_Gender = 0
	Agent_male     Agent_Gender = 1
	Agent_female   Agent_Gender = 2
	Agent_bisexual Agent_Gender = 3
	Agent_asexual  Agent_Gender = 4
)

var Agent_Gender_name = map[int32]string{
	0: "unset",
	1: "male",
	2: "female",
	3: "bisexual",
	4: "asexual",
}

var Agent_Gender_value = map[string]int32{
	"unset":    0,
	"male":     1,
	"female":   2,
	"bisexual": 3,
	"asexual":  4,
}

func (x Agent_Gender) Enum() *Agent_Gender {
	p := new(Agent_Gender)
	*p = x
	return p
}

func (x Agent_Gender) String() string {
	return proto.EnumName(Agent_Gender_name, int32(x))
}

func (x *Agent_Gender) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Agent_Gender_value, data, "Agent_Gender")
	if err != nil {
		return err
	}
	*x = Agent_Gender(value)
	return nil
}

func (Agent_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{0, 0}
}

type Agent_AgentState int32

const (
	Agent_pending  Agent_AgentState = 0
	Agent_active   Agent_AgentState = 1
	Agent_inactive Agent_AgentState = 2
	Agent_deleted  Agent_AgentState = 3
)

var Agent_AgentState_name = map[int32]string{
	0: "pending",
	1: "active",
	2: "inactive",
	3: "deleted",
}

var Agent_AgentState_value = map[string]int32{
	"pending":  0,
	"active":   1,
	"inactive": 2,
	"deleted":  3,
}

func (x Agent_AgentState) Enum() *Agent_AgentState {
	p := new(Agent_AgentState)
	*p = x
	return p
}

func (x Agent_AgentState) String() string {
	return proto.EnumName(Agent_AgentState_name, int32(x))
}

func (x *Agent_AgentState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Agent_AgentState_value, data, "Agent_AgentState")
	if err != nil {
		return err
	}
	*x = Agent_AgentState(value)
	return nil
}

func (Agent_AgentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{0, 1}
}

type Account_State int32

const (
	Account_pending   Account_State = 0
	Account_activated Account_State = 1
	Account_locked    Account_State = 2
	Account_deleted   Account_State = 3
)

var Account_State_name = map[int32]string{
	0: "pending",
	1: "activated",
	2: "locked",
	3: "deleted",
}

var Account_State_value = map[string]int32{
	"pending":   0,
	"activated": 1,
	"locked":    2,
	"deleted":   3,
}

func (x Account_State) Enum() *Account_State {
	p := new(Account_State)
	*p = x
	return p
}

func (x Account_State) String() string {
	return proto.EnumName(Account_State_name, int32(x))
}

func (x *Account_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Account_State_value, data, "Account_State")
	if err != nil {
		return err
	}
	*x = Account_State(value)
	return nil
}

func (Account_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{5, 0}
}

type Agent struct {
	Ctx                  *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string          `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string          `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Fullname             *string          `protobuf:"bytes,4,opt,name=fullname" json:"fullname,omitempty"`
	Email                *string          `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Emails               []string         `protobuf:"bytes,6,rep,name=emails" json:"emails,omitempty"`
	Phones               []string         `protobuf:"bytes,7,rep,name=phones" json:"phones,omitempty"`
	Phone                *string          `protobuf:"bytes,8,opt,name=phone" json:"phone,omitempty"`
	IsOwner              *bool            `protobuf:"varint,10,opt,name=is_owner,json=isOwner" json:"is_owner,omitempty"`
	JobTitle             *string          `protobuf:"bytes,11,opt,name=job_title,json=jobTitle" json:"job_title,omitempty"`
	Gender               *string          `protobuf:"bytes,12,opt,name=gender" json:"gender,omitempty"`
	AvatarUrl            *string          `protobuf:"bytes,13,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Lang                 *string          `protobuf:"bytes,14,opt,name=lang" json:"lang,omitempty"`
	Location             *string          `protobuf:"bytes,15,opt,name=location" json:"location,omitempty"`
	Timezone             *string          `protobuf:"bytes,16,opt,name=timezone" json:"timezone,omitempty"`
	EncryptedPassword    *string          `protobuf:"bytes,17,opt,name=encrypted_password,json=encryptedPassword" json:"encrypted_password,omitempty"`
	Joined               *int64           `protobuf:"varint,20,opt,name=joined" json:"joined,omitempty"`
	InvitedBy            *string          `protobuf:"bytes,21,opt,name=invited_by,json=invitedBy" json:"invited_by,omitempty"`
	State                *string          `protobuf:"bytes,22,opt,name=state" json:"state,omitempty"`
	PasswordChanged      *int64           `protobuf:"varint,23,opt,name=password_changed,json=passwordChanged" json:"password_changed,omitempty"`
	Seen                 *int64           `protobuf:"varint,24,opt,name=seen" json:"seen,omitempty"`
	Modified             *int64           `protobuf:"varint,25,opt,name=modified" json:"modified,omitempty"`
	Method               *auth.Method     `protobuf:"bytes,27,opt,name=method" json:"method,omitempty"`
	Account              *Account         `protobuf:"bytes,28,opt,name=account" json:"account,omitempty"`
	CountryCode          *string          `protobuf:"bytes,29,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	V3State              *int32           `protobuf:"varint,30,opt,name=v3_state,json=v3State" json:"v3_state,omitempty"`
	Perm                 *auth.Permission `protobuf:"bytes,31,opt,name=perm" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{0}
}

func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (m *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(m, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Agent) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Agent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Agent) GetFullname() string {
	if m != nil && m.Fullname != nil {
		return *m.Fullname
	}
	return ""
}

func (m *Agent) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Agent) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *Agent) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *Agent) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *Agent) GetIsOwner() bool {
	if m != nil && m.IsOwner != nil {
		return *m.IsOwner
	}
	return false
}

func (m *Agent) GetJobTitle() string {
	if m != nil && m.JobTitle != nil {
		return *m.JobTitle
	}
	return ""
}

func (m *Agent) GetGender() string {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return ""
}

func (m *Agent) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *Agent) GetLang() string {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return ""
}

func (m *Agent) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *Agent) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *Agent) GetEncryptedPassword() string {
	if m != nil && m.EncryptedPassword != nil {
		return *m.EncryptedPassword
	}
	return ""
}

func (m *Agent) GetJoined() int64 {
	if m != nil && m.Joined != nil {
		return *m.Joined
	}
	return 0
}

func (m *Agent) GetInvitedBy() string {
	if m != nil && m.InvitedBy != nil {
		return *m.InvitedBy
	}
	return ""
}

func (m *Agent) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Agent) GetPasswordChanged() int64 {
	if m != nil && m.PasswordChanged != nil {
		return *m.PasswordChanged
	}
	return 0
}

func (m *Agent) GetSeen() int64 {
	if m != nil && m.Seen != nil {
		return *m.Seen
	}
	return 0
}

func (m *Agent) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Agent) GetMethod() *auth.Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Agent) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Agent) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *Agent) GetV3State() int32 {
	if m != nil && m.V3State != nil {
		return *m.V3State
	}
	return 0
}

func (m *Agent) GetPerm() *auth.Permission {
	if m != nil {
		return m.Perm
	}
	return nil
}

type Invitation struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FromId               *string         `protobuf:"bytes,4,opt,name=from_id,json=fromId" json:"from_id,omitempty"`
	Email                *string         `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	AgentId              *string         `protobuf:"bytes,6,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Sent                 *int64          `protobuf:"varint,7,opt,name=sent" json:"sent,omitempty"`
	Replied              *int64          `protobuf:"varint,8,opt,name=replied" json:"replied,omitempty"`
	AgentFullname        *string         `protobuf:"bytes,9,opt,name=agent_fullname,json=agentFullname" json:"agent_fullname,omitempty"`
	AgentJobTitle        *string         `protobuf:"bytes,10,opt,name=agent_job_title,json=agentJobTitle" json:"agent_job_title,omitempty"`
	Token                *string         `protobuf:"bytes,11,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Invitation) Reset()         { *m = Invitation{} }
func (m *Invitation) String() string { return proto.CompactTextString(m) }
func (*Invitation) ProtoMessage()    {}
func (*Invitation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{1}
}

func (m *Invitation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invitation.Unmarshal(m, b)
}
func (m *Invitation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invitation.Marshal(b, m, deterministic)
}
func (m *Invitation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invitation.Merge(m, src)
}
func (m *Invitation) XXX_Size() int {
	return xxx_messageInfo_Invitation.Size(m)
}
func (m *Invitation) XXX_DiscardUnknown() {
	xxx_messageInfo_Invitation.DiscardUnknown(m)
}

var xxx_messageInfo_Invitation proto.InternalMessageInfo

func (m *Invitation) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Invitation) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Invitation) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Invitation) GetFromId() string {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return ""
}

func (m *Invitation) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Invitation) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *Invitation) GetSent() int64 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *Invitation) GetReplied() int64 {
	if m != nil && m.Replied != nil {
		return *m.Replied
	}
	return 0
}

func (m *Invitation) GetAgentFullname() string {
	if m != nil && m.AgentFullname != nil {
		return *m.AgentFullname
	}
	return ""
}

func (m *Invitation) GetAgentJobTitle() string {
	if m != nil && m.AgentJobTitle != nil {
		return *m.AgentJobTitle
	}
	return ""
}

func (m *Invitation) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type AgentGroup struct {
	Ctx       *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id        *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name      *string         `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	LogoUrl   *string         `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	// members is list of 10 agents in group
	Members              []*Agent `protobuf:"bytes,7,rep,name=members" json:"members,omitempty"`
	Created              *int64   `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Modified             *int64   `protobuf:"varint,8,opt,name=modified" json:"modified,omitempty"`
	MembersCount         *int32   `protobuf:"varint,9,opt,name=members_count,json=membersCount" json:"members_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentGroup) Reset()         { *m = AgentGroup{} }
func (m *AgentGroup) String() string { return proto.CompactTextString(m) }
func (*AgentGroup) ProtoMessage()    {}
func (*AgentGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{2}
}

func (m *AgentGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentGroup.Unmarshal(m, b)
}
func (m *AgentGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentGroup.Marshal(b, m, deterministic)
}
func (m *AgentGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentGroup.Merge(m, src)
}
func (m *AgentGroup) XXX_Size() int {
	return xxx_messageInfo_AgentGroup.Size(m)
}
func (m *AgentGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AgentGroup proto.InternalMessageInfo

func (m *AgentGroup) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AgentGroup) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AgentGroup) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AgentGroup) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *AgentGroup) GetMembers() []*Agent {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *AgentGroup) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *AgentGroup) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *AgentGroup) GetMembersCount() int32 {
	if m != nil && m.MembersCount != nil {
		return *m.MembersCount
	}
	return 0
}

type ResetPasswordRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Email                *string         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{3}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type AgentPerm struct {
	Ctx                  *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string          `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId              *string          `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Method               *auth.Method     `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
	Perm                 *auth.Permission `protobuf:"bytes,5,opt,name=perm" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AgentPerm) Reset()         { *m = AgentPerm{} }
func (m *AgentPerm) String() string { return proto.CompactTextString(m) }
func (*AgentPerm) ProtoMessage()    {}
func (*AgentPerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{4}
}

func (m *AgentPerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentPerm.Unmarshal(m, b)
}
func (m *AgentPerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentPerm.Marshal(b, m, deterministic)
}
func (m *AgentPerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentPerm.Merge(m, src)
}
func (m *AgentPerm) XXX_Size() int {
	return xxx_messageInfo_AgentPerm.Size(m)
}
func (m *AgentPerm) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentPerm.DiscardUnknown(m)
}

var xxx_messageInfo_AgentPerm proto.InternalMessageInfo

func (m *AgentPerm) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AgentPerm) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentPerm) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentPerm) GetMethod() *auth.Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *AgentPerm) GetPerm() *auth.Permission {
	if m != nil {
		return m.Perm
	}
	return nil
}

type Account struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name                 *string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	LogoUrl              *string         `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	OwnerId              *string         `protobuf:"bytes,6,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	State                *string         `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Created              *int64          `protobuf:"varint,8,opt,name=created" json:"created,omitempty"`
	Confirmed            *int64          `protobuf:"varint,9,opt,name=confirmed" json:"confirmed,omitempty"`
	Modified             *int64          `protobuf:"varint,10,opt,name=modified" json:"modified,omitempty"`
	Slogan               *string         `protobuf:"bytes,12,opt,name=slogan" json:"slogan,omitempty"`
	RefererId            *string         `protobuf:"bytes,11,opt,name=referer_id,json=refererId" json:"referer_id,omitempty"`
	City                 *string         `protobuf:"bytes,14,opt,name=city" json:"city,omitempty"`
	ZipCode              *int32          `protobuf:"varint,16,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	TaxId                *string         `protobuf:"bytes,17,opt,name=tax_id,json=taxId" json:"tax_id,omitempty"`
	Facebook             *string         `protobuf:"bytes,18,opt,name=facebook" json:"facebook,omitempty"`
	Twitter              *string         `protobuf:"bytes,22,opt,name=twitter" json:"twitter,omitempty"`
	Phone                *string         `protobuf:"bytes,19,opt,name=phone" json:"phone,omitempty"`
	Address              *string         `protobuf:"bytes,20,opt,name=address" json:"address,omitempty"`
	Url                  *string         `protobuf:"bytes,21,opt,name=url" json:"url,omitempty"`
	Lang                 *string         `protobuf:"bytes,23,opt,name=lang" json:"lang,omitempty"`
	RefererFrom          *string         `protobuf:"bytes,24,opt,name=referer_from,json=refererFrom" json:"referer_from,omitempty"`
	Timezone             *string         `protobuf:"bytes,26,opt,name=timezone" json:"timezone,omitempty"`
	Limit                *payment.Limit  `protobuf:"bytes,25,opt,name=limit" json:"limit,omitempty"`
	Country              *string         `protobuf:"bytes,27,opt,name=country" json:"country,omitempty"`
	V3State              *int32          `protobuf:"varint,28,opt,name=v3_state,json=v3State" json:"v3_state,omitempty"`
	DateFormat           *string         `protobuf:"bytes,29,opt,name=date_format,json=dateFormat" json:"date_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{5}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Account) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Account) GetLogoUrl() string {
	if m != nil && m.LogoUrl != nil {
		return *m.LogoUrl
	}
	return ""
}

func (m *Account) GetOwnerId() string {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return ""
}

func (m *Account) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Account) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Account) GetConfirmed() int64 {
	if m != nil && m.Confirmed != nil {
		return *m.Confirmed
	}
	return 0
}

func (m *Account) GetModified() int64 {
	if m != nil && m.Modified != nil {
		return *m.Modified
	}
	return 0
}

func (m *Account) GetSlogan() string {
	if m != nil && m.Slogan != nil {
		return *m.Slogan
	}
	return ""
}

func (m *Account) GetRefererId() string {
	if m != nil && m.RefererId != nil {
		return *m.RefererId
	}
	return ""
}

func (m *Account) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *Account) GetZipCode() int32 {
	if m != nil && m.ZipCode != nil {
		return *m.ZipCode
	}
	return 0
}

func (m *Account) GetTaxId() string {
	if m != nil && m.TaxId != nil {
		return *m.TaxId
	}
	return ""
}

func (m *Account) GetFacebook() string {
	if m != nil && m.Facebook != nil {
		return *m.Facebook
	}
	return ""
}

func (m *Account) GetTwitter() string {
	if m != nil && m.Twitter != nil {
		return *m.Twitter
	}
	return ""
}

func (m *Account) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *Account) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Account) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Account) GetLang() string {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return ""
}

func (m *Account) GetRefererFrom() string {
	if m != nil && m.RefererFrom != nil {
		return *m.RefererFrom
	}
	return ""
}

func (m *Account) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *Account) GetLimit() *payment.Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Account) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *Account) GetV3State() int32 {
	if m != nil && m.V3State != nil {
		return *m.V3State
	}
	return 0
}

func (m *Account) GetDateFormat() string {
	if m != nil && m.DateFormat != nil {
		return *m.DateFormat
	}
	return ""
}

type GroupMember struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	GroupId              *string         `protobuf:"bytes,3,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GroupMember) Reset()         { *m = GroupMember{} }
func (m *GroupMember) String() string { return proto.CompactTextString(m) }
func (*GroupMember) ProtoMessage()    {}
func (*GroupMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{6}
}

func (m *GroupMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupMember.Unmarshal(m, b)
}
func (m *GroupMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupMember.Marshal(b, m, deterministic)
}
func (m *GroupMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMember.Merge(m, src)
}
func (m *GroupMember) XXX_Size() int {
	return xxx_messageInfo_GroupMember.Size(m)
}
func (m *GroupMember) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMember.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMember proto.InternalMessageInfo

func (m *GroupMember) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *GroupMember) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *GroupMember) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *GroupMember) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

type CreateAccountRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Fullname             *string         `protobuf:"bytes,2,opt,name=fullname" json:"fullname,omitempty"`
	Email                *string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Lang                 *string         `protobuf:"bytes,4,opt,name=lang" json:"lang,omitempty"`
	Password             *string         `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	AccountName          *string         `protobuf:"bytes,6,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	AccountUrl           *string         `protobuf:"bytes,7,opt,name=account_url,json=accountUrl" json:"account_url,omitempty"`
	AvatarUrl            *string         `protobuf:"bytes,8,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Timezone             *string         `protobuf:"bytes,9,opt,name=timezone" json:"timezone,omitempty"`
	Phone                *string         `protobuf:"bytes,10,opt,name=phone" json:"phone,omitempty"`
	CountryCode          *string         `protobuf:"bytes,11,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{7}
}

func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(m, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CreateAccountRequest) GetFullname() string {
	if m != nil && m.Fullname != nil {
		return *m.Fullname
	}
	return ""
}

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetLang() string {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return ""
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CreateAccountRequest) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *CreateAccountRequest) GetAccountUrl() string {
	if m != nil && m.AccountUrl != nil {
		return *m.AccountUrl
	}
	return ""
}

func (m *CreateAccountRequest) GetAvatarUrl() string {
	if m != nil && m.AvatarUrl != nil {
		return *m.AvatarUrl
	}
	return ""
}

func (m *CreateAccountRequest) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *CreateAccountRequest) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *CreateAccountRequest) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

type LoginRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Email                *string         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password             *string         `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{8}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *LoginRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type Agents struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Agents               []*Agent        `protobuf:"bytes,2,rep,name=Agents" json:"Agents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Agents) Reset()         { *m = Agents{} }
func (m *Agents) String() string { return proto.CompactTextString(m) }
func (*Agents) ProtoMessage()    {}
func (*Agents) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{9}
}

func (m *Agents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agents.Unmarshal(m, b)
}
func (m *Agents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agents.Marshal(b, m, deterministic)
}
func (m *Agents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agents.Merge(m, src)
}
func (m *Agents) XXX_Size() int {
	return xxx_messageInfo_Agents.Size(m)
}
func (m *Agents) XXX_DiscardUnknown() {
	xxx_messageInfo_Agents.DiscardUnknown(m)
}

var xxx_messageInfo_Agents proto.InternalMessageInfo

func (m *Agents) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Agents) GetAgents() []*Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

type NewPassword struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Token                *string         `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	NewPassword          *string         `protobuf:"bytes,3,opt,name=new_password,json=newPassword" json:"new_password,omitempty"`
	OldPassword          *string         `protobuf:"bytes,5,opt,name=old_password,json=oldPassword" json:"old_password,omitempty"`
	Email                *string         `protobuf:"bytes,8,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewPassword) Reset()         { *m = NewPassword{} }
func (m *NewPassword) String() string { return proto.CompactTextString(m) }
func (*NewPassword) ProtoMessage()    {}
func (*NewPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{10}
}

func (m *NewPassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPassword.Unmarshal(m, b)
}
func (m *NewPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPassword.Marshal(b, m, deterministic)
}
func (m *NewPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPassword.Merge(m, src)
}
func (m *NewPassword) XXX_Size() int {
	return xxx_messageInfo_NewPassword.Size(m)
}
func (m *NewPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPassword.DiscardUnknown(m)
}

var xxx_messageInfo_NewPassword proto.InternalMessageInfo

func (m *NewPassword) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *NewPassword) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *NewPassword) GetNewPassword() string {
	if m != nil && m.NewPassword != nil {
		return *m.NewPassword
	}
	return ""
}

func (m *NewPassword) GetOldPassword() string {
	if m != nil && m.OldPassword != nil {
		return *m.OldPassword
	}
	return ""
}

func (m *NewPassword) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type AgentGroups struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Groups               []*AgentGroup   `protobuf:"bytes,2,rep,name=Groups" json:"Groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AgentGroups) Reset()         { *m = AgentGroups{} }
func (m *AgentGroups) String() string { return proto.CompactTextString(m) }
func (*AgentGroups) ProtoMessage()    {}
func (*AgentGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{11}
}

func (m *AgentGroups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentGroups.Unmarshal(m, b)
}
func (m *AgentGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentGroups.Marshal(b, m, deterministic)
}
func (m *AgentGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentGroups.Merge(m, src)
}
func (m *AgentGroups) XXX_Size() int {
	return xxx_messageInfo_AgentGroups.Size(m)
}
func (m *AgentGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentGroups.DiscardUnknown(m)
}

var xxx_messageInfo_AgentGroups proto.InternalMessageInfo

func (m *AgentGroups) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AgentGroups) GetGroups() []*AgentGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Token struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	IsSet                *bool           `protobuf:"varint,2,opt,name=is_set,json=isSet" json:"is_set,omitempty"`
	Token                *string         `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	AccountId            *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{12}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Token) GetIsSet() bool {
	if m != nil && m.IsSet != nil {
		return *m.IsSet
	}
	return false
}

func (m *Token) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *Token) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type AccountV3 struct {
	Ctx                  *common.Context       `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Account              *Account              `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Owner                *Agent                `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Subscription         *payment.Subscription `protobuf:"bytes,4,opt,name=subscription" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AccountV3) Reset()         { *m = AccountV3{} }
func (m *AccountV3) String() string { return proto.CompactTextString(m) }
func (*AccountV3) ProtoMessage()    {}
func (*AccountV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{13}
}

func (m *AccountV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountV3.Unmarshal(m, b)
}
func (m *AccountV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountV3.Marshal(b, m, deterministic)
}
func (m *AccountV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountV3.Merge(m, src)
}
func (m *AccountV3) XXX_Size() int {
	return xxx_messageInfo_AccountV3.Size(m)
}
func (m *AccountV3) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountV3.DiscardUnknown(m)
}

var xxx_messageInfo_AccountV3 proto.InternalMessageInfo

func (m *AccountV3) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AccountV3) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountV3) GetOwner() *Agent {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *AccountV3) GetSubscription() *payment.Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type ConfirmEmail struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	To                   *string         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	OwnerId              *string         `protobuf:"bytes,4,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	Token                *string         `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	ExpiredIn            *int64          `protobuf:"varint,6,opt,name=expired_in,json=expiredIn" json:"expired_in,omitempty"`
	AccountName          *string         `protobuf:"bytes,7,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	Lang                 *lang.L         `protobuf:"varint,8,opt,name=lang,enum=lang.L" json:"lang,omitempty"`
	OwnerName            *string         `protobuf:"bytes,9,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	From                 *string         `protobuf:"bytes,10,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConfirmEmail) Reset()         { *m = ConfirmEmail{} }
func (m *ConfirmEmail) String() string { return proto.CompactTextString(m) }
func (*ConfirmEmail) ProtoMessage()    {}
func (*ConfirmEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{14}
}

func (m *ConfirmEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmEmail.Unmarshal(m, b)
}
func (m *ConfirmEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmEmail.Marshal(b, m, deterministic)
}
func (m *ConfirmEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmEmail.Merge(m, src)
}
func (m *ConfirmEmail) XXX_Size() int {
	return xxx_messageInfo_ConfirmEmail.Size(m)
}
func (m *ConfirmEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmEmail.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmEmail proto.InternalMessageInfo

func (m *ConfirmEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ConfirmEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *ConfirmEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ConfirmEmail) GetOwnerId() string {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return ""
}

func (m *ConfirmEmail) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *ConfirmEmail) GetExpiredIn() int64 {
	if m != nil && m.ExpiredIn != nil {
		return *m.ExpiredIn
	}
	return 0
}

func (m *ConfirmEmail) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *ConfirmEmail) GetLang() lang.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return lang.L_en
}

func (m *ConfirmEmail) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *ConfirmEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

type InviteEmail struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	To                   *string         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SenderId             *string         `protobuf:"bytes,4,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	ExpiredIn            *int64          `protobuf:"varint,5,opt,name=expired_in,json=expiredIn" json:"expired_in,omitempty"`
	Token                *string         `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	Lang                 *lang.L         `protobuf:"varint,8,opt,name=lang,enum=lang.L" json:"lang,omitempty"`
	Fullname             *string         `protobuf:"bytes,9,opt,name=fullname" json:"fullname,omitempty"`
	SenderName           *string         `protobuf:"bytes,10,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
	AccountName          *string         `protobuf:"bytes,11,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	AccountLogoUrl       *string         `protobuf:"bytes,12,opt,name=account_logo_url,json=accountLogoUrl" json:"account_logo_url,omitempty"`
	From                 *string         `protobuf:"bytes,14,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InviteEmail) Reset()         { *m = InviteEmail{} }
func (m *InviteEmail) String() string { return proto.CompactTextString(m) }
func (*InviteEmail) ProtoMessage()    {}
func (*InviteEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{15}
}

func (m *InviteEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteEmail.Unmarshal(m, b)
}
func (m *InviteEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteEmail.Marshal(b, m, deterministic)
}
func (m *InviteEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteEmail.Merge(m, src)
}
func (m *InviteEmail) XXX_Size() int {
	return xxx_messageInfo_InviteEmail.Size(m)
}
func (m *InviteEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteEmail.DiscardUnknown(m)
}

var xxx_messageInfo_InviteEmail proto.InternalMessageInfo

func (m *InviteEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *InviteEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *InviteEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *InviteEmail) GetSenderId() string {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return ""
}

func (m *InviteEmail) GetExpiredIn() int64 {
	if m != nil && m.ExpiredIn != nil {
		return *m.ExpiredIn
	}
	return 0
}

func (m *InviteEmail) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *InviteEmail) GetLang() lang.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return lang.L_en
}

func (m *InviteEmail) GetFullname() string {
	if m != nil && m.Fullname != nil {
		return *m.Fullname
	}
	return ""
}

func (m *InviteEmail) GetSenderName() string {
	if m != nil && m.SenderName != nil {
		return *m.SenderName
	}
	return ""
}

func (m *InviteEmail) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *InviteEmail) GetAccountLogoUrl() string {
	if m != nil && m.AccountLogoUrl != nil {
		return *m.AccountLogoUrl
	}
	return ""
}

func (m *InviteEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

type ResetPasswordEmail struct {
	Ctx  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	From *string         `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	To   *string         `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	// ExpiredIn is a RFC3339 time string indicates when token will be expired
	ExpiredIn            *int64   `protobuf:"varint,4,opt,name=expired_in,json=expiredIn" json:"expired_in,omitempty"`
	Token                *string  `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	AccountId            *string  `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId              *string  `protobuf:"bytes,7,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AgentName            *string  `protobuf:"bytes,8,opt,name=agent_name,json=agentName" json:"agent_name,omitempty"`
	Lang                 *lang.L  `protobuf:"varint,9,opt,name=lang,enum=lang.L" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordEmail) Reset()         { *m = ResetPasswordEmail{} }
func (m *ResetPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordEmail) ProtoMessage()    {}
func (*ResetPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{16}
}

func (m *ResetPasswordEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordEmail.Unmarshal(m, b)
}
func (m *ResetPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordEmail.Marshal(b, m, deterministic)
}
func (m *ResetPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordEmail.Merge(m, src)
}
func (m *ResetPasswordEmail) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordEmail.Size(m)
}
func (m *ResetPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordEmail proto.InternalMessageInfo

func (m *ResetPasswordEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ResetPasswordEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *ResetPasswordEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *ResetPasswordEmail) GetExpiredIn() int64 {
	if m != nil && m.ExpiredIn != nil {
		return *m.ExpiredIn
	}
	return 0
}

func (m *ResetPasswordEmail) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *ResetPasswordEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ResetPasswordEmail) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *ResetPasswordEmail) GetAgentName() string {
	if m != nil && m.AgentName != nil {
		return *m.AgentName
	}
	return ""
}

func (m *ResetPasswordEmail) GetLang() lang.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return lang.L_en
}

type PasswordChangedEmail struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	To                   *string         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AgentName            *string         `protobuf:"bytes,5,opt,name=agent_name,json=agentName" json:"agent_name,omitempty"`
	Lang                 *lang.L         `protobuf:"varint,7,opt,name=lang,enum=lang.L" json:"lang,omitempty"`
	From                 *string         `protobuf:"bytes,9,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PasswordChangedEmail) Reset()         { *m = PasswordChangedEmail{} }
func (m *PasswordChangedEmail) String() string { return proto.CompactTextString(m) }
func (*PasswordChangedEmail) ProtoMessage()    {}
func (*PasswordChangedEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{17}
}

func (m *PasswordChangedEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordChangedEmail.Unmarshal(m, b)
}
func (m *PasswordChangedEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordChangedEmail.Marshal(b, m, deterministic)
}
func (m *PasswordChangedEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordChangedEmail.Merge(m, src)
}
func (m *PasswordChangedEmail) XXX_Size() int {
	return xxx_messageInfo_PasswordChangedEmail.Size(m)
}
func (m *PasswordChangedEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordChangedEmail.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordChangedEmail proto.InternalMessageInfo

func (m *PasswordChangedEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PasswordChangedEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *PasswordChangedEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PasswordChangedEmail) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *PasswordChangedEmail) GetAgentName() string {
	if m != nil && m.AgentName != nil {
		return *m.AgentName
	}
	return ""
}

func (m *PasswordChangedEmail) GetLang() lang.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return lang.L_en
}

func (m *PasswordChangedEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

type AccountConfirmSuccessEmail struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	To                   *string         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AgentId              *string         `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AgentName            *string         `protobuf:"bytes,5,opt,name=agent_name,json=agentName" json:"agent_name,omitempty"`
	Lang                 *lang.L         `protobuf:"varint,7,opt,name=lang,enum=lang.L" json:"lang,omitempty"`
	From                 *string         `protobuf:"bytes,9,opt,name=from" json:"from,omitempty"`
	FromTime             *int64          `protobuf:"varint,10,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
	ToTime               *int64          `protobuf:"varint,11,opt,name=to_time,json=toTime" json:"to_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AccountConfirmSuccessEmail) Reset()         { *m = AccountConfirmSuccessEmail{} }
func (m *AccountConfirmSuccessEmail) String() string { return proto.CompactTextString(m) }
func (*AccountConfirmSuccessEmail) ProtoMessage()    {}
func (*AccountConfirmSuccessEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{18}
}

func (m *AccountConfirmSuccessEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountConfirmSuccessEmail.Unmarshal(m, b)
}
func (m *AccountConfirmSuccessEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountConfirmSuccessEmail.Marshal(b, m, deterministic)
}
func (m *AccountConfirmSuccessEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountConfirmSuccessEmail.Merge(m, src)
}
func (m *AccountConfirmSuccessEmail) XXX_Size() int {
	return xxx_messageInfo_AccountConfirmSuccessEmail.Size(m)
}
func (m *AccountConfirmSuccessEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountConfirmSuccessEmail.DiscardUnknown(m)
}

var xxx_messageInfo_AccountConfirmSuccessEmail proto.InternalMessageInfo

func (m *AccountConfirmSuccessEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AccountConfirmSuccessEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *AccountConfirmSuccessEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AccountConfirmSuccessEmail) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AccountConfirmSuccessEmail) GetAgentName() string {
	if m != nil && m.AgentName != nil {
		return *m.AgentName
	}
	return ""
}

func (m *AccountConfirmSuccessEmail) GetLang() lang.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return lang.L_en
}

func (m *AccountConfirmSuccessEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *AccountConfirmSuccessEmail) GetFromTime() int64 {
	if m != nil && m.FromTime != nil {
		return *m.FromTime
	}
	return 0
}

func (m *AccountConfirmSuccessEmail) GetToTime() int64 {
	if m != nil && m.ToTime != nil {
		return *m.ToTime
	}
	return 0
}

type SearchAgentsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Email                *string         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchAgentsRequest) Reset()         { *m = SearchAgentsRequest{} }
func (m *SearchAgentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchAgentsRequest) ProtoMessage()    {}
func (*SearchAgentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{19}
}

func (m *SearchAgentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchAgentsRequest.Unmarshal(m, b)
}
func (m *SearchAgentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchAgentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchAgentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchAgentsRequest.Merge(m, src)
}
func (m *SearchAgentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchAgentsRequest.Size(m)
}
func (m *SearchAgentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchAgentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchAgentsRequest proto.InternalMessageInfo

func (m *SearchAgentsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SearchAgentsRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type AccSub struct {
	Id                   *string               `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Account              *Account              `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Subscription         *payment.Subscription `protobuf:"bytes,4,opt,name=subscription" json:"subscription,omitempty"`
	Agents               []*Agent              `protobuf:"bytes,5,rep,name=agents" json:"agents,omitempty"`
	Stringify            *string               `protobuf:"bytes,6,opt,name=stringify" json:"stringify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AccSub) Reset()         { *m = AccSub{} }
func (m *AccSub) String() string { return proto.CompactTextString(m) }
func (*AccSub) ProtoMessage()    {}
func (*AccSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{20}
}

func (m *AccSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccSub.Unmarshal(m, b)
}
func (m *AccSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccSub.Marshal(b, m, deterministic)
}
func (m *AccSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccSub.Merge(m, src)
}
func (m *AccSub) XXX_Size() int {
	return xxx_messageInfo_AccSub.Size(m)
}
func (m *AccSub) XXX_DiscardUnknown() {
	xxx_messageInfo_AccSub.DiscardUnknown(m)
}

var xxx_messageInfo_AccSub proto.InternalMessageInfo

func (m *AccSub) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AccSub) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccSub) GetSubscription() *payment.Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *AccSub) GetAgents() []*Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *AccSub) GetStringify() string {
	if m != nil && m.Stringify != nil {
		return *m.Stringify
	}
	return ""
}

type AccSubs struct {
	Accsub               []*AccSub `protobuf:"bytes,2,rep,name=accsub" json:"accsub,omitempty"`
	Anchor               *string   `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AccSubs) Reset()         { *m = AccSubs{} }
func (m *AccSubs) String() string { return proto.CompactTextString(m) }
func (*AccSubs) ProtoMessage()    {}
func (*AccSubs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{21}
}

func (m *AccSubs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccSubs.Unmarshal(m, b)
}
func (m *AccSubs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccSubs.Marshal(b, m, deterministic)
}
func (m *AccSubs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccSubs.Merge(m, src)
}
func (m *AccSubs) XXX_Size() int {
	return xxx_messageInfo_AccSubs.Size(m)
}
func (m *AccSubs) XXX_DiscardUnknown() {
	xxx_messageInfo_AccSubs.DiscardUnknown(m)
}

var xxx_messageInfo_AccSubs proto.InternalMessageInfo

func (m *AccSubs) GetAccsub() []*AccSub {
	if m != nil {
		return m.Accsub
	}
	return nil
}

func (m *AccSubs) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type SearchSubRequest struct {
	Ctx    *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Query  *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Anchor *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	Limit  *int32          `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	Plan   *string         `protobuf:"bytes,7,opt,name=plan" json:"plan,omitempty"`
	// optional uint32 billing_cycle_month = 8;
	OrderBy              *string  `protobuf:"bytes,10,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSubRequest) Reset()         { *m = SearchSubRequest{} }
func (m *SearchSubRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSubRequest) ProtoMessage()    {}
func (*SearchSubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d66906c5773c9d08, []int{22}
}

func (m *SearchSubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSubRequest.Unmarshal(m, b)
}
func (m *SearchSubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSubRequest.Marshal(b, m, deterministic)
}
func (m *SearchSubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSubRequest.Merge(m, src)
}
func (m *SearchSubRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSubRequest.Size(m)
}
func (m *SearchSubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSubRequest proto.InternalMessageInfo

func (m *SearchSubRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SearchSubRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *SearchSubRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *SearchSubRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *SearchSubRequest) GetPlan() string {
	if m != nil && m.Plan != nil {
		return *m.Plan
	}
	return ""
}

func (m *SearchSubRequest) GetOrderBy() string {
	if m != nil && m.OrderBy != nil {
		return *m.OrderBy
	}
	return ""
}

func init() {
	proto.RegisterEnum("account.Event", Event_name, Event_value)
	proto.RegisterEnum("account.Agent_Gender", Agent_Gender_name, Agent_Gender_value)
	proto.RegisterEnum("account.Agent_AgentState", Agent_AgentState_name, Agent_AgentState_value)
	proto.RegisterEnum("account.Account_State", Account_State_name, Account_State_value)
	proto.RegisterType((*Agent)(nil), "account.Agent")
	proto.RegisterType((*Invitation)(nil), "account.Invitation")
	proto.RegisterType((*AgentGroup)(nil), "account.AgentGroup")
	proto.RegisterType((*ResetPasswordRequest)(nil), "account.ResetPasswordRequest")
	proto.RegisterType((*AgentPerm)(nil), "account.AgentPerm")
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*GroupMember)(nil), "account.GroupMember")
	proto.RegisterType((*CreateAccountRequest)(nil), "account.CreateAccountRequest")
	proto.RegisterType((*LoginRequest)(nil), "account.LoginRequest")
	proto.RegisterType((*Agents)(nil), "account.Agents")
	proto.RegisterType((*NewPassword)(nil), "account.NewPassword")
	proto.RegisterType((*AgentGroups)(nil), "account.AgentGroups")
	proto.RegisterType((*Token)(nil), "account.Token")
	proto.RegisterType((*AccountV3)(nil), "account.AccountV3")
	proto.RegisterType((*ConfirmEmail)(nil), "account.ConfirmEmail")
	proto.RegisterType((*InviteEmail)(nil), "account.InviteEmail")
	proto.RegisterType((*ResetPasswordEmail)(nil), "account.ResetPasswordEmail")
	proto.RegisterType((*PasswordChangedEmail)(nil), "account.PasswordChangedEmail")
	proto.RegisterType((*AccountConfirmSuccessEmail)(nil), "account.AccountConfirmSuccessEmail")
	proto.RegisterType((*SearchAgentsRequest)(nil), "account.SearchAgentsRequest")
	proto.RegisterType((*AccSub)(nil), "account.AccSub")
	proto.RegisterType((*AccSubs)(nil), "account.AccSubs")
	proto.RegisterType((*SearchSubRequest)(nil), "account.SearchSubRequest")
}

func init() { proto.RegisterFile("account/account.proto", fileDescriptor_d66906c5773c9d08) }

var fileDescriptor_d66906c5773c9d08 = []byte{
	// 2556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4f, 0x73, 0xdb, 0xc6,
	0x15, 0x37, 0xff, 0x82, 0x7c, 0xa4, 0x24, 0x68, 0x45, 0x49, 0x10, 0x6d, 0xd7, 0x32, 0xa2, 0x3a,
	0xb2, 0x33, 0x96, 0xa6, 0xd2, 0x4c, 0x9a, 0x4e, 0x32, 0xd3, 0x28, 0x92, 0xed, 0x2a, 0x23, 0x3b,
	0x1a, 0xca, 0xce, 0xad, 0xc3, 0x01, 0x81, 0x25, 0x05, 0x9b, 0x04, 0x18, 0x60, 0x29, 0x8b, 0x3e,
	0x76, 0xa6, 0xed, 0xb1, 0x33, 0xfd, 0x06, 0x6d, 0x2f, 0xfd, 0x00, 0xbd, 0xe5, 0xdc, 0x4f, 0x90,
	0x2f, 0xd1, 0x76, 0x7a, 0xca, 0x27, 0xe8, 0xec, 0xdb, 0x5d, 0x70, 0x01, 0x52, 0x16, 0xdd, 0xc4,
	0x87, 0x5c, 0x44, 0xbc, 0xdf, 0x7b, 0x78, 0xd8, 0xf7, 0xf6, 0xfd, 0xdb, 0x15, 0xac, 0x3a, 0xae,
	0x1b, 0x8e, 0x02, 0xb6, 0x2b, 0x7f, 0x77, 0x86, 0x51, 0xc8, 0x42, 0x62, 0x48, 0xb2, 0xb9, 0xd5,
	0xf3, 0xd9, 0x4e, 0x3c, 0xea, 0xf8, 0x6f, 0x76, 0x02, 0xca, 0x76, 0xcf, 0xa9, 0xe3, 0xd1, 0x68,
	0xd7, 0x19, 0xb1, 0x73, 0xfc, 0x23, 0xc4, 0x9b, 0xdb, 0x33, 0xa5, 0xdc, 0x70, 0x30, 0x08, 0x03,
	0xf9, 0x23, 0x25, 0x67, 0xeb, 0xeb, 0x3b, 0x41, 0x0f, 0xff, 0x48, 0xa9, 0x07, 0x33, 0xa5, 0x86,
	0xce, 0x78, 0x40, 0x03, 0xa6, 0x7e, 0x85, 0xac, 0xfd, 0x17, 0x03, 0x4a, 0x07, 0x3d, 0x1a, 0x30,
	0x72, 0x17, 0x0a, 0x2e, 0xbb, 0xb4, 0x72, 0x9b, 0xb9, 0xed, 0xda, 0xde, 0xd2, 0x8e, 0xfc, 0xee,
	0x61, 0x18, 0x30, 0x7a, 0xc9, 0x5a, 0x9c, 0x47, 0x16, 0x21, 0xef, 0x7b, 0x56, 0x7e, 0x33, 0xb7,
	0x5d, 0x6d, 0xe5, 0x7d, 0x8f, 0xdc, 0x06, 0x90, 0x96, 0xb6, 0x7d, 0xcf, 0x2a, 0x20, 0x5e, 0x95,
	0xc8, 0xb1, 0x47, 0x9a, 0x50, 0xe9, 0x8e, 0xfa, 0xfd, 0xc0, 0x19, 0x50, 0xab, 0x88, 0xcc, 0x84,
	0x26, 0x0d, 0x28, 0xd1, 0x81, 0xe3, 0xf7, 0xad, 0x12, 0x32, 0x04, 0x41, 0xd6, 0xa0, 0x8c, 0x0f,
	0xb1, 0x55, 0xde, 0x2c, 0x6c, 0x57, 0x5b, 0x92, 0xe2, 0xf8, 0xf0, 0x3c, 0x0c, 0x68, 0x6c, 0x19,
	0x02, 0x17, 0x14, 0xd7, 0x82, 0x4f, 0x56, 0x45, 0x68, 0x41, 0x82, 0x6c, 0x40, 0xc5, 0x8f, 0xdb,
	0xe1, 0xeb, 0x80, 0x46, 0x16, 0x6c, 0xe6, 0xb6, 0x2b, 0x2d, 0xc3, 0x8f, 0xbf, 0xe2, 0x24, 0xb9,
	0x09, 0xd5, 0x97, 0x61, 0xa7, 0xcd, 0x7c, 0xd6, 0xa7, 0x56, 0x4d, 0xac, 0xe9, 0x65, 0xd8, 0x79,
	0xce, 0x69, 0xfe, 0x95, 0x1e, 0x0d, 0x3c, 0x1a, 0x59, 0x75, 0xe4, 0x48, 0x0a, 0xcd, 0xbc, 0x70,
	0x98, 0x13, 0xb5, 0x47, 0x51, 0xdf, 0x5a, 0x90, 0x66, 0x22, 0xf2, 0x22, 0xea, 0x13, 0x02, 0x45,
	0xee, 0x7c, 0x6b, 0x11, 0x19, 0xf8, 0xcc, 0x4d, 0xef, 0x87, 0xae, 0xc3, 0xfc, 0x30, 0xb0, 0x96,
	0xc4, 0x67, 0x14, 0xcd, 0x79, 0xcc, 0x1f, 0xd0, 0x37, 0x7c, 0xdd, 0xa6, 0xe0, 0x29, 0x9a, 0x3c,
	0x04, 0x42, 0x03, 0x37, 0x1a, 0x0f, 0x19, 0xf5, 0xda, 0x43, 0x27, 0x8e, 0x5f, 0x87, 0x91, 0x67,
	0x2d, 0xa3, 0xd4, 0x72, 0xc2, 0x39, 0x95, 0x0c, 0xbe, 0xe2, 0x97, 0xa1, 0x1f, 0x50, 0xcf, 0x6a,
	0x6c, 0xe6, 0xb6, 0x0b, 0x2d, 0x49, 0xf1, 0x15, 0xfb, 0xc1, 0x85, 0xcf, 0x95, 0x74, 0xc6, 0xd6,
	0xaa, 0x58, 0xb1, 0x44, 0xbe, 0x18, 0x73, 0xb7, 0xc5, 0xcc, 0x61, 0xd4, 0x5a, 0x13, 0x6e, 0x43,
	0x82, 0xdc, 0x07, 0x53, 0x7d, 0xb1, 0xed, 0x9e, 0x3b, 0x41, 0x8f, 0x7a, 0xd6, 0x3a, 0xaa, 0x5d,
	0x52, 0xf8, 0xa1, 0x80, 0xb9, 0xc9, 0x31, 0xa5, 0x81, 0x65, 0x21, 0x1b, 0x9f, 0xb9, 0x59, 0x83,
	0xd0, 0xf3, 0xbb, 0x3e, 0xf5, 0xac, 0x0d, 0xc4, 0x13, 0x9a, 0x6c, 0x41, 0x79, 0x40, 0xd9, 0x79,
	0xe8, 0x59, 0x37, 0x31, 0xbc, 0xea, 0x3b, 0x18, 0xfe, 0x4f, 0x11, 0x6b, 0x49, 0x1e, 0x79, 0x00,
	0x2a, 0x71, 0xac, 0x5b, 0x28, 0x66, 0xee, 0xa8, 0xbc, 0x3a, 0x10, 0xbf, 0x2d, 0x25, 0x40, 0xee,
	0x42, 0x1d, 0x1f, 0xa2, 0x71, 0xdb, 0x0d, 0x3d, 0x6a, 0xdd, 0x46, 0x4b, 0x6a, 0x12, 0x3b, 0x0c,
	0x3d, 0x0c, 0x83, 0x8b, 0xfd, 0xb6, 0x30, 0xf4, 0x67, 0x9b, 0xb9, 0xed, 0x52, 0xcb, 0xb8, 0xd8,
	0x3f, 0x43, 0x53, 0xb7, 0xa0, 0x38, 0xa4, 0xd1, 0xc0, 0xba, 0xa3, 0x3e, 0xc3, 0x57, 0x73, 0x4a,
	0xa3, 0x81, 0x1f, 0xc7, 0x7e, 0x18, 0xb4, 0x90, 0x6b, 0x1f, 0x41, 0xf9, 0x89, 0x88, 0x80, 0x2a,
	0x94, 0x46, 0x41, 0x4c, 0x99, 0x79, 0x83, 0x54, 0xa0, 0x38, 0x70, 0xfa, 0xd4, 0xcc, 0x11, 0x80,
	0x72, 0x97, 0xe2, 0x73, 0x9e, 0xd4, 0xa1, 0xd2, 0xf1, 0x63, 0x7a, 0x39, 0x72, 0xfa, 0x66, 0x81,
	0xd4, 0xc0, 0x70, 0x24, 0x51, 0xb4, 0x3f, 0x07, 0xc0, 0x04, 0x13, 0x5f, 0xae, 0x81, 0x31, 0xa4,
	0x81, 0xe7, 0x07, 0x3d, 0xf3, 0x06, 0xd7, 0xe0, 0xb8, 0xcc, 0xbf, 0xe0, 0xda, 0xea, 0x50, 0xf1,
	0x03, 0x49, 0xe5, 0xb9, 0x98, 0x47, 0xfb, 0x94, 0x51, 0xcf, 0x2c, 0xd8, 0xdf, 0xe6, 0x01, 0x8e,
	0xf9, 0xe6, 0x89, 0xf8, 0xf9, 0xf1, 0x13, 0x75, 0x1d, 0x8c, 0x6e, 0x14, 0x0e, 0x38, 0x4f, 0xe4,
	0x69, 0x99, 0x93, 0xc7, 0xde, 0x15, 0x59, 0xba, 0x01, 0x15, 0x87, 0x5b, 0xc4, 0xe5, 0xcb, 0xc8,
	0x30, 0x90, 0x3e, 0x96, 0x81, 0x11, 0x30, 0xcb, 0x50, 0x81, 0x11, 0x30, 0x62, 0x81, 0x11, 0xd1,
	0x61, 0x9f, 0xc7, 0x45, 0x05, 0x61, 0x45, 0x92, 0x9f, 0xc3, 0xa2, 0x50, 0x94, 0x94, 0x89, 0x2a,
	0xaa, 0x5b, 0x40, 0xf4, 0xb1, 0xaa, 0x15, 0xf7, 0x60, 0x49, 0x88, 0x4d, 0x52, 0x17, 0x34, 0xb9,
	0x2f, 0x55, 0xfe, 0x36, 0xa0, 0xc4, 0xc2, 0x57, 0x34, 0x90, 0x89, 0x2d, 0x08, 0xfb, 0xcf, 0x79,
	0xb9, 0x01, 0x4f, 0xa2, 0x70, 0x34, 0x7c, 0x0f, 0xde, 0x23, 0x50, 0xd4, 0x4a, 0x1c, 0x3e, 0x73,
	0x17, 0xf5, 0xc3, 0x5e, 0x88, 0x05, 0x43, 0xf8, 0xce, 0xe0, 0x34, 0x2f, 0x17, 0xdb, 0x60, 0x0c,
	0xe8, 0xa0, 0x43, 0x23, 0x51, 0xcc, 0x6a, 0x7b, 0x8b, 0x93, 0x28, 0xe7, 0xcb, 0x6c, 0x29, 0x36,
	0x77, 0x9c, 0x1b, 0x51, 0x87, 0x51, 0xe1, 0xe6, 0x42, 0x4b, 0x91, 0xa9, 0x5c, 0xab, 0x64, 0x72,
	0xed, 0x03, 0x58, 0x90, 0x0a, 0xda, 0x22, 0x97, 0xaa, 0x18, 0xfb, 0x75, 0x09, 0x1e, 0x72, 0xcc,
	0xfe, 0x0a, 0x1a, 0x2d, 0x1a, 0x53, 0xa6, 0x2a, 0x49, 0x8b, 0x7e, 0x33, 0xa2, 0xf1, 0x5c, 0x4d,
	0x20, 0x89, 0x89, 0xbc, 0x16, 0x13, 0xf6, 0x3f, 0x72, 0x50, 0xc5, 0xe5, 0xf3, 0x2c, 0x9a, 0x47,
	0x4d, 0xda, 0xa9, 0xf9, 0xac, 0x53, 0xf5, 0x18, 0x2b, 0xa4, 0x63, 0x6c, 0x52, 0x4c, 0x8a, 0x6f,
	0x29, 0x26, 0x2a, 0xc5, 0x4b, 0x6f, 0x4d, 0xf1, 0xef, 0x4b, 0x60, 0x1c, 0x24, 0x25, 0xe5, 0x9d,
	0x23, 0x43, 0x6d, 0x7d, 0x61, 0xbe, 0xad, 0xdf, 0x80, 0x0a, 0x76, 0x25, 0x2d, 0x71, 0x90, 0x16,
	0x99, 0x26, 0x2a, 0x95, 0xa1, 0x97, 0x64, 0x2d, 0x02, 0x2a, 0xe9, 0x08, 0xb8, 0x05, 0x55, 0x37,
	0x0c, 0xba, 0x7e, 0x34, 0xa0, 0x1e, 0xee, 0x70, 0xa1, 0x35, 0x01, 0x52, 0xf1, 0x01, 0x99, 0xf8,
	0x58, 0x83, 0x72, 0xdc, 0x0f, 0x7b, 0x4e, 0xa0, 0xba, 0x9c, 0xa0, 0xf8, 0x86, 0x44, 0xb4, 0x4b,
	0x23, 0xb1, 0x3c, 0x91, 0x42, 0x55, 0x89, 0x88, 0x28, 0x77, 0x7d, 0x36, 0x56, 0x5d, 0x8e, 0x3f,
	0x73, 0x7b, 0xde, 0xf8, 0x43, 0x51, 0x80, 0x4d, 0x51, 0x61, 0xdf, 0xf8, 0x43, 0x2c, 0xbe, 0xab,
	0x50, 0x66, 0xce, 0x25, 0xd7, 0xb4, 0x2c, 0x93, 0xd1, 0xb9, 0x94, 0x23, 0x81, 0xe3, 0xd2, 0x4e,
	0x18, 0xbe, 0xb2, 0x88, 0x1c, 0x09, 0x24, 0xcd, 0x8d, 0x65, 0xaf, 0x7d, 0xc6, 0x68, 0x24, 0xfb,
	0x92, 0x22, 0x27, 0x6d, 0x7e, 0x45, 0x6f, 0xf3, 0x16, 0x18, 0x8e, 0xe7, 0x45, 0x34, 0x8e, 0xb1,
	0xfb, 0xf1, 0x08, 0x11, 0x24, 0x31, 0xa1, 0xc0, 0xbd, 0x2f, 0xfa, 0x1e, 0x7f, 0x4c, 0x7a, 0xf4,
	0xba, 0xd6, 0xa3, 0xef, 0x42, 0x5d, 0x19, 0xcc, 0xcb, 0x1d, 0x36, 0xb3, 0x6a, 0xab, 0x26, 0xb1,
	0xc7, 0x51, 0x38, 0x48, 0xb5, 0xea, 0x66, 0xa6, 0x55, 0x6f, 0x41, 0xa9, 0xef, 0x0f, 0x7c, 0x86,
	0xcd, 0x8e, 0x67, 0xb1, 0x1a, 0xac, 0x4e, 0x38, 0xda, 0x12, 0x4c, 0xdc, 0x41, 0xd1, 0x93, 0xb0,
	0xf5, 0x55, 0x5b, 0x8a, 0x4c, 0xb5, 0xa7, 0x5b, 0xe9, 0xf6, 0x74, 0x07, 0x6a, 0x9e, 0xc3, 0x68,
	0xbb, 0x1b, 0x46, 0x03, 0x87, 0xc9, 0xde, 0x06, 0x1c, 0x7a, 0x8c, 0x88, 0xfd, 0x19, 0x94, 0x66,
	0xb4, 0x93, 0x05, 0xa8, 0x62, 0x03, 0xe1, 0x01, 0x22, 0xfa, 0x53, 0x3f, 0x74, 0x5f, 0x51, 0x2f,
	0xdb, 0x4f, 0x7e, 0x9f, 0x83, 0x1a, 0x16, 0xc3, 0xa7, 0x58, 0x12, 0x7e, 0x9c, 0x6c, 0xed, 0x71,
	0x85, 0x5a, 0xb6, 0x22, 0x9d, 0x49, 0xe4, 0x62, 0x2a, 0x91, 0xed, 0xef, 0xf2, 0xd0, 0x38, 0xc4,
	0x78, 0x56, 0xed, 0x7d, 0xfe, 0x2a, 0xa4, 0xcf, 0x96, 0xf9, 0xab, 0x66, 0xcb, 0x82, 0xde, 0xb5,
	0x54, 0x08, 0x14, 0xd3, 0x63, 0x5a, 0x32, 0x64, 0x89, 0x5c, 0x4d, 0x68, 0x1e, 0x1e, 0xca, 0x64,
	0xfc, 0x8a, 0x48, 0xd8, 0x9a, 0xc4, 0x9e, 0xf1, 0x0f, 0xdd, 0x01, 0x45, 0x62, 0xb6, 0x8b, 0xd4,
	0x55, 0x8e, 0xe2, 0x09, 0x9f, 0x9e, 0x1c, 0x2b, 0xd9, 0xc9, 0x51, 0x0f, 0xaf, 0x6a, 0x26, 0xbc,
	0x92, 0x98, 0x07, 0x3d, 0xe6, 0xb3, 0x63, 0x4f, 0x6d, 0x6a, 0xec, 0xb1, 0x5d, 0xa8, 0x9f, 0x84,
	0x3d, 0x3f, 0xf8, 0xa1, 0x25, 0x3d, 0xe5, 0x9c, 0x42, 0xda, 0x39, 0xf6, 0x19, 0x94, 0xb1, 0xda,
	0xc7, 0xf3, 0xa8, 0xbf, 0xa7, 0x84, 0xad, 0xfc, 0xcc, 0x86, 0x27, 0xb9, 0xf6, 0x5f, 0x73, 0x50,
	0x7b, 0x46, 0x5f, 0x9f, 0x4e, 0x76, 0x60, 0x9e, 0x95, 0x8b, 0x96, 0x9f, 0xd7, 0x5a, 0x3e, 0xf7,
	0x52, 0x40, 0x5f, 0xb7, 0x33, 0xab, 0xaf, 0x05, 0x29, 0xdd, 0xf5, 0xb0, 0xaf, 0x8d, 0xd8, 0x62,
	0xf7, 0x6b, 0x61, 0x7f, 0x32, 0x5c, 0x27, 0x5e, 0xa9, 0xe8, 0x8d, 0xee, 0xb7, 0x50, 0x9b, 0x4c,
	0x13, 0x73, 0x99, 0xff, 0x11, 0x94, 0x85, 0xb0, 0x34, 0x7f, 0x25, 0x6d, 0x3e, 0xf2, 0x5a, 0x52,
	0xc4, 0xbe, 0x80, 0xd2, 0x73, 0x69, 0xc3, 0xb5, 0x8a, 0x57, 0xa1, 0xec, 0xc7, 0xed, 0x98, 0x32,
	0xb4, 0xbe, 0xd2, 0x2a, 0xf9, 0xf1, 0x19, 0x65, 0x13, 0x9f, 0x14, 0x74, 0x9f, 0xa4, 0x33, 0xb8,
	0x98, 0xc9, 0x60, 0xfb, 0x5b, 0xde, 0xbf, 0x05, 0xf5, 0xf5, 0xfe, 0x3c, 0x1f, 0xd7, 0x86, 0xf5,
	0xfc, 0x75, 0xc3, 0xfa, 0x16, 0x94, 0xc4, 0x69, 0xac, 0x20, 0x4b, 0x65, 0x7a, 0xff, 0x05, 0x93,
	0xfc, 0x0a, 0xea, 0xf1, 0xa8, 0x13, 0xbb, 0x91, 0x3f, 0xc4, 0x73, 0x93, 0xe8, 0xee, 0xab, 0x49,
	0x5d, 0x3d, 0xd3, 0x98, 0xad, 0x94, 0xa8, 0xfd, 0xb7, 0x3c, 0xd4, 0x0f, 0x45, 0xf7, 0x7b, 0x84,
	0xb1, 0x3b, 0x5f, 0x2f, 0x67, 0xa1, 0xea, 0xe5, 0x2c, 0xbc, 0x6e, 0xca, 0xd3, 0x7b, 0x77, 0x71,
	0xaa, 0x77, 0x0b, 0x87, 0x97, 0x32, 0x0e, 0xa7, 0x97, 0x43, 0x3f, 0xa2, 0x5e, 0xdb, 0x0f, 0xe4,
	0x00, 0x57, 0x95, 0xc8, 0x71, 0x30, 0x55, 0x5e, 0x8c, 0xe9, 0xf2, 0x72, 0x53, 0x56, 0x2c, 0x1e,
	0x7f, 0x8b, 0x7b, 0xc6, 0x0e, 0x1e, 0xf1, 0x4f, 0x64, 0xe9, 0xba, 0x0d, 0x20, 0xd6, 0xa3, 0xcd,
	0xcd, 0x55, 0x44, 0xf0, 0x5d, 0x02, 0x45, 0x6c, 0x6a, 0xa2, 0x7a, 0xe0, 0xb3, 0xfd, 0xdf, 0x3c,
	0xd4, 0xf0, 0x1c, 0x41, 0xdf, 0x97, 0x93, 0x6e, 0x42, 0x35, 0xc6, 0x13, 0xd3, 0xc4, 0x4b, 0x15,
	0x01, 0x1c, 0x7b, 0x19, 0x87, 0x94, 0xb2, 0x0e, 0x49, 0xbc, 0x58, 0xd6, 0xbd, 0xf8, 0x56, 0x1f,
	0xe8, 0x4d, 0xa0, 0x9a, 0x69, 0x02, 0x77, 0xa0, 0x26, 0x97, 0x82, 0x6c, 0xe1, 0x07, 0x10, 0x10,
	0x7a, 0x28, 0xbb, 0x01, 0xb5, 0xe9, 0x0d, 0xd8, 0x06, 0x53, 0x89, 0x24, 0x23, 0x9d, 0x18, 0x9a,
	0x16, 0x25, 0x7e, 0x22, 0x27, 0x3b, 0xe5, 0xee, 0x45, 0xcd, 0xdd, 0x7f, 0xc8, 0x03, 0x49, 0x0d,
	0xd9, 0x73, 0x7b, 0x5d, 0x69, 0xcb, 0x4f, 0xb4, 0xc9, 0x9d, 0x28, 0xe8, 0x3b, 0xa1, 0x79, 0xb3,
	0x78, 0xa5, 0x37, 0x4b, 0x57, 0x17, 0x81, 0xf2, 0xdb, 0x86, 0x6e, 0x23, 0x3d, 0x74, 0xf3, 0x37,
	0x91, 0x85, 0xbe, 0x52, 0x9d, 0x8c, 0x23, 0xa9, 0x50, 0xad, 0xce, 0xd8, 0x26, 0xfb, 0xbb, 0x1c,
	0x34, 0x4e, 0xd3, 0x37, 0x08, 0xef, 0x31, 0x4b, 0xaf, 0x98, 0x36, 0x32, 0x16, 0x94, 0xae, 0xb2,
	0xc0, 0x98, 0x15, 0x68, 0x6a, 0x43, 0xaa, 0xda, 0xf6, 0xfe, 0x29, 0x0f, 0x4d, 0x59, 0xe9, 0x64,
	0xe9, 0x39, 0x1b, 0xb9, 0x2e, 0x8d, 0xe3, 0x9f, 0xbe, 0x6d, 0x3c, 0x8f, 0xf1, 0x42, 0x80, 0x4f,
	0x23, 0xea, 0x00, 0xc1, 0x81, 0xe7, 0xfe, 0x80, 0x92, 0x75, 0x30, 0x58, 0x28, 0x58, 0x35, 0x71,
	0xeb, 0xc4, 0x42, 0xce, 0xb0, 0x9f, 0xc1, 0xca, 0x19, 0x75, 0x22, 0xf7, 0x5c, 0xf4, 0xf3, 0x1f,
	0x7c, 0xa6, 0xfc, 0x67, 0x0e, 0xca, 0x07, 0xae, 0x7b, 0x36, 0xea, 0x4c, 0x1d, 0xbc, 0xb4, 0xee,
	0x53, 0xb8, 0xae, 0xfb, 0xfc, 0xff, 0x7d, 0x85, 0x4f, 0x2e, 0x8e, 0x98, 0x5c, 0x4a, 0xb3, 0x27,
	0x17, 0xc1, 0xe5, 0xa7, 0xb1, 0x98, 0x45, 0x7e, 0xd0, 0xf3, 0xbb, 0x63, 0x95, 0x56, 0x09, 0x60,
	0x7f, 0x89, 0x67, 0x4c, 0xfe, 0x19, 0xf2, 0x21, 0x94, 0x1d, 0xd7, 0x8d, 0x47, 0x1d, 0x39, 0x0b,
	0x2c, 0xe9, 0xcb, 0x3e, 0x1b, 0x75, 0x5a, 0x92, 0xcd, 0x4f, 0x69, 0x4e, 0xe0, 0x9e, 0x87, 0x91,
	0xba, 0x91, 0x11, 0x94, 0xfd, 0xf7, 0x1c, 0x98, 0xc2, 0xc9, 0x5c, 0xfa, 0x9d, 0x3c, 0xfc, 0xcd,
	0x88, 0x46, 0x63, 0xa9, 0x4e, 0x10, 0xda, 0x57, 0x4a, 0xfa, 0x57, 0xb8, 0xb4, 0x38, 0xdb, 0x94,
	0xf1, 0x60, 0x22, 0xcf, 0x32, 0x04, 0x8a, 0xc3, 0xbe, 0x13, 0xc8, 0xd2, 0x80, 0xcf, 0xd8, 0x16,
	0x23, 0x5e, 0x65, 0x3b, 0x63, 0x59, 0x63, 0x0d, 0xa4, 0xbf, 0x18, 0x3f, 0xf8, 0x63, 0x19, 0x4a,
	0x8f, 0x2e, 0x68, 0xc0, 0xc8, 0x2a, 0x98, 0xe9, 0x09, 0x9f, 0x7a, 0xe6, 0xbf, 0x0c, 0x42, 0x60,
	0x41, 0xc2, 0x67, 0xe3, 0xc0, 0xa5, 0x9e, 0xf9, 0x6f, 0x83, 0x34, 0x60, 0x29, 0x19, 0x43, 0x24,
	0xfa, 0x1f, 0x83, 0xac, 0xc2, 0xf2, 0x64, 0x56, 0x3a, 0x92, 0x07, 0x99, 0x1b, 0x84, 0xc0, 0x22,
	0xc2, 0x27, 0xb4, 0x2b, 0x58, 0x66, 0x8e, 0x34, 0xc0, 0x3c, 0x10, 0xb7, 0x42, 0x7e, 0x40, 0x3d,
	0x81, 0xe6, 0xc9, 0x1a, 0x90, 0x89, 0x82, 0x17, 0xc3, 0x98, 0x46, 0x5c, 0x43, 0x91, 0x2c, 0xc3,
	0x02, 0xe2, 0x09, 0x54, 0x26, 0x4d, 0x58, 0x4b, 0x2e, 0x32, 0xc4, 0x5d, 0xc1, 0x8b, 0xa1, 0x87,
	0x47, 0xaa, 0x2a, 0x59, 0x49, 0x56, 0x97, 0xbc, 0xb0, 0x88, 0xba, 0x05, 0x78, 0xda, 0x77, 0x12,
	0x61, 0x93, 0xac, 0xc3, 0x8a, 0x32, 0x8f, 0x9f, 0xd5, 0x14, 0x63, 0x99, 0x6c, 0xc0, 0x6a, 0xba,
	0x70, 0x48, 0xaf, 0x98, 0x2b, 0xe4, 0x26, 0xac, 0xff, 0xc6, 0x09, 0xbc, 0x3e, 0x7d, 0xa4, 0x2a,
	0xb9, 0xba, 0xf6, 0x33, 0x1b, 0x9c, 0x39, 0xf3, 0x3d, 0xea, 0x99, 0xab, 0xe4, 0x43, 0xf8, 0xe0,
	0xea, 0x6a, 0x34, 0x11, 0xdc, 0x20, 0xb7, 0x61, 0x23, 0xd9, 0x8c, 0x6c, 0x73, 0x32, 0xef, 0x92,
	0x6d, 0xd8, 0x52, 0xd6, 0xcc, 0x28, 0xd9, 0x13, 0x45, 0xb6, 0x66, 0xb7, 0x36, 0x54, 0x98, 0x6b,
	0xb8, 0x2b, 0x02, 0x57, 0x3b, 0x65, 0x69, 0x98, 0x38, 0xf0, 0x79, 0xe6, 0x43, 0xdc, 0x29, 0x81,
	0x1d, 0x24, 0xa7, 0xd6, 0x9d, 0x94, 0xd6, 0x6e, 0xa8, 0x9c, 0xb6, 0x9b, 0xec, 0x54, 0x8b, 0xbe,
	0xa4, 0x2e, 0x87, 0x20, 0x81, 0x0e, 0x5c, 0x97, 0x0e, 0x39, 0x54, 0x23, 0x26, 0xd4, 0x11, 0x12,
	0x2b, 0xf2, 0xcc, 0x85, 0x04, 0x51, 0x6b, 0x59, 0x4a, 0xa2, 0x66, 0xf2, 0xd5, 0xbd, 0x24, 0x6a,
	0x8e, 0xe8, 0xe4, 0x04, 0xbd, 0x9f, 0xa0, 0xfa, 0x4a, 0x3e, 0xd5, 0xd6, 0xfd, 0xf5, 0xbe, 0xb2,
	0xe6, 0x33, 0x0c, 0x1b, 0xe5, 0x37, 0xac, 0x2b, 0x49, 0xfc, 0xfe, 0x7a, 0xef, 0x77, 0x39, 0x28,
	0xbf, 0x88, 0xe9, 0x51, 0xe8, 0x92, 0x3d, 0xc8, 0x77, 0x7f, 0x41, 0x1a, 0x49, 0xda, 0x6b, 0xe7,
	0x9d, 0xe6, 0x4c, 0xd4, 0xbe, 0x41, 0x8e, 0x20, 0xdf, 0xdd, 0x23, 0xb7, 0x13, 0xee, 0xac, 0x33,
	0x73, 0xf3, 0xed, 0x6c, 0xfb, 0xc6, 0xde, 0x23, 0x1c, 0xf0, 0xcf, 0x46, 0x9d, 0xa7, 0xbd, 0x88,
	0x7c, 0x02, 0xd5, 0xa4, 0x8a, 0x90, 0x8d, 0xe4, 0xd5, 0x6c, 0x65, 0x69, 0x9a, 0x99, 0xfa, 0x14,
	0xef, 0x7d, 0x5f, 0x01, 0x90, 0xba, 0xb9, 0xa2, 0x5f, 0x42, 0x4d, 0x7c, 0x4f, 0xdc, 0xae, 0xce,
	0x3a, 0xdb, 0x34, 0x67, 0x81, 0xfc, 0x45, 0xe1, 0xd2, 0x77, 0x7d, 0xf1, 0x23, 0xa8, 0x3c, 0xa1,
	0xf2, 0x19, 0x54, 0xad, 0x3b, 0xf6, 0x66, 0x0b, 0x1f, 0x41, 0x43, 0x9a, 0x92, 0x0a, 0x76, 0xcd,
	0x99, 0xb3, 0xae, 0x41, 0x9b, 0x0b, 0x4a, 0xef, 0xa3, 0xc1, 0x90, 0x8d, 0xc9, 0xc7, 0xb0, 0x28,
	0xd6, 0x3a, 0x39, 0x1b, 0xce, 0xdc, 0xc0, 0x4c, 0x7b, 0x20, 0x0f, 0x95, 0x8d, 0x82, 0xcc, 0xb0,
	0xa7, 0xc4, 0xef, 0x43, 0x4d, 0x44, 0xa9, 0x20, 0x75, 0xe3, 0xb2, 0xa2, 0x9f, 0x60, 0x0c, 0xd2,
	0x21, 0xd3, 0xfe, 0x2f, 0x30, 0xdf, 0x9a, 0x76, 0x61, 0xe1, 0x09, 0xd5, 0x5f, 0x9b, 0x08, 0xe0,
	0xc1, 0x73, 0x96, 0x11, 0x22, 0x9b, 0xe6, 0x33, 0xe2, 0x1e, 0x6e, 0xcf, 0xf5, 0x16, 0xec, 0xc1,
	0xa2, 0x2c, 0x54, 0xea, 0xfe, 0x35, 0xbb, 0x90, 0xa9, 0x96, 0x4e, 0x1e, 0x00, 0x70, 0xdd, 0x92,
	0xd2, 0xb5, 0x4f, 0xcb, 0xee, 0xc3, 0x82, 0xf4, 0xbd, 0x04, 0xa6, 0x44, 0x66, 0xbc, 0xf4, 0x39,
	0x2c, 0xa4, 0xb2, 0xe7, 0xba, 0xa4, 0x9b, 0xd6, 0x70, 0x1f, 0xe0, 0xc4, 0x8f, 0x99, 0xbc, 0x1c,
	0xd1, 0x97, 0xb8, 0x94, 0x76, 0x40, 0x4c, 0x76, 0x01, 0x0e, 0xcf, 0xa9, 0xfb, 0x0a, 0x6f, 0x6b,
	0xc8, 0x6a, 0xc2, 0xd6, 0x6f, 0x6f, 0x9a, 0x9a, 0x06, 0xb2, 0xad, 0xe2, 0x63, 0x3a, 0xf8, 0x33,
	0x01, 0xbb, 0x23, 0x56, 0x21, 0xef, 0x28, 0x74, 0xc1, 0xc6, 0x8c, 0x2c, 0x89, 0xc9, 0xc7, 0xb0,
	0x74, 0xe0, 0x79, 0x88, 0x3c, 0x0f, 0x85, 0xf6, 0x89, 0xa0, 0x76, 0x55, 0x98, 0xfd, 0xce, 0xa7,
	0x3c, 0xbd, 0x06, 0xe1, 0x85, 0x88, 0x8d, 0xc7, 0x51, 0x38, 0x78, 0x87, 0x97, 0xef, 0x43, 0xf1,
	0xd4, 0x0f, 0x7a, 0x64, 0x45, 0xc1, 0x9c, 0x52, 0x76, 0xd7, 0x13, 0x30, 0x0c, 0x7a, 0xff, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0x6d, 0x75, 0xd5, 0x68, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UseDocClient is the client API for UseDoc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UseDocClient interface {
	F1(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*NewPassword, error)
	F2(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountRequest, error)
}

type useDocClient struct {
	cc *grpc.ClientConn
}

func NewUseDocClient(cc *grpc.ClientConn) UseDocClient {
	return &useDocClient{cc}
}

func (c *useDocClient) F1(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*NewPassword, error) {
	out := new(NewPassword)
	err := c.cc.Invoke(ctx, "/account.UseDoc/f1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *useDocClient) F2(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountRequest, error) {
	out := new(CreateAccountRequest)
	err := c.cc.Invoke(ctx, "/account.UseDoc/f2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UseDocServer is the server API for UseDoc service.
type UseDocServer interface {
	F1(context.Context, *NewPassword) (*NewPassword, error)
	F2(context.Context, *CreateAccountRequest) (*CreateAccountRequest, error)
}

func RegisterUseDocServer(s *grpc.Server, srv UseDocServer) {
	s.RegisterService(&_UseDoc_serviceDesc, srv)
}

func _UseDoc_F1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UseDocServer).F1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.UseDoc/F1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UseDocServer).F1(ctx, req.(*NewPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _UseDoc_F2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UseDocServer).F2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.UseDoc/F2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UseDocServer).F2(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UseDoc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.UseDoc",
	HandlerType: (*UseDocServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "f1",
			Handler:    _UseDoc_F1_Handler,
		},
		{
			MethodName: "f2",
			Handler:    _UseDoc_F2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account/account.proto",
}

// AccSubMgrClient is the client API for AccSubMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccSubMgrClient interface {
	SearchSub(ctx context.Context, in *SearchSubRequest, opts ...grpc.CallOption) (*AccSubs, error)
}

type accSubMgrClient struct {
	cc *grpc.ClientConn
}

func NewAccSubMgrClient(cc *grpc.ClientConn) AccSubMgrClient {
	return &accSubMgrClient{cc}
}

func (c *accSubMgrClient) SearchSub(ctx context.Context, in *SearchSubRequest, opts ...grpc.CallOption) (*AccSubs, error) {
	out := new(AccSubs)
	err := c.cc.Invoke(ctx, "/account.AccSubMgr/SearchSub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccSubMgrServer is the server API for AccSubMgr service.
type AccSubMgrServer interface {
	SearchSub(context.Context, *SearchSubRequest) (*AccSubs, error)
}

func RegisterAccSubMgrServer(s *grpc.Server, srv AccSubMgrServer) {
	s.RegisterService(&_AccSubMgr_serviceDesc, srv)
}

func _AccSubMgr_SearchSub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccSubMgrServer).SearchSub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccSubMgr/SearchSub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccSubMgrServer).SearchSub(ctx, req.(*SearchSubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccSubMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccSubMgr",
	HandlerType: (*AccSubMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchSub",
			Handler:    _AccSubMgr_SearchSub_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account/account.proto",
}

// AccountMgrClient is the client API for AccountMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountMgrClient interface {
	CreateGroup(ctx context.Context, in *AgentGroup, opts ...grpc.CallOption) (*AgentGroup, error)
	UpdateGroup(ctx context.Context, in *AgentGroup, opts ...grpc.CallOption) (*AgentGroup, error)
	GetGroup(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentGroup, error)
	RequestResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*common.Empty, error)
	UpdatePassword(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*Agent, error)
	UpdateAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	DeleteAgent(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agent, error)
	AcceptInvitation(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*Agent, error)
	GetInvitation(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Agent, error)
	InviteAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error)
	GetAgent(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agent, error)
	ConfirmAccount(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Account, error)
	GetAccount(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Account, error)
	UpdateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
	ListAgents(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agents, error)
	CheckLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*common.Id, error)
	DeleteGroup(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	ListGroups(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentGroups, error)
	AddAgentToGroup(ctx context.Context, in *GroupMember, opts ...grpc.CallOption) (*common.Empty, error)
	RemoveAgentFromGroup(ctx context.Context, in *GroupMember, opts ...grpc.CallOption) (*common.Empty, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type accountMgrClient struct {
	cc *grpc.ClientConn
}

func NewAccountMgrClient(cc *grpc.ClientConn) AccountMgrClient {
	return &accountMgrClient{cc}
}

func (c *accountMgrClient) CreateGroup(ctx context.Context, in *AgentGroup, opts ...grpc.CallOption) (*AgentGroup, error) {
	out := new(AgentGroup)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) UpdateGroup(ctx context.Context, in *AgentGroup, opts ...grpc.CallOption) (*AgentGroup, error) {
	out := new(AgentGroup)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/UpdateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) GetGroup(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentGroup, error) {
	out := new(AgentGroup)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) RequestResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/RequestResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) UpdatePassword(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) UpdateAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/UpdateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) DeleteAgent(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/DeleteAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) AcceptInvitation(ctx context.Context, in *NewPassword, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/AcceptInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) GetInvitation(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/GetInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) InviteAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/InviteAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) GetAgent(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agent, error) {
	out := new(Agent)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/GetAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) ConfirmAccount(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/ConfirmAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) GetAccount(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) UpdateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) ListAgents(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Agents, error) {
	out := new(Agents)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/ListAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) CheckLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*common.Id, error) {
	out := new(common.Id)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/CheckLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) DeleteGroup(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/DeleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) ListGroups(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentGroups, error) {
	out := new(AgentGroups)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) AddAgentToGroup(ctx context.Context, in *GroupMember, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/AddAgentToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) RemoveAgentFromGroup(ctx context.Context, in *GroupMember, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/RemoveAgentFromGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/account.AccountMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountMgrServer is the server API for AccountMgr service.
type AccountMgrServer interface {
	CreateGroup(context.Context, *AgentGroup) (*AgentGroup, error)
	UpdateGroup(context.Context, *AgentGroup) (*AgentGroup, error)
	GetGroup(context.Context, *common.Id) (*AgentGroup, error)
	RequestResetPassword(context.Context, *ResetPasswordRequest) (*common.Empty, error)
	UpdatePassword(context.Context, *NewPassword) (*Agent, error)
	UpdateAgent(context.Context, *Agent) (*Agent, error)
	DeleteAgent(context.Context, *common.Id) (*Agent, error)
	AcceptInvitation(context.Context, *NewPassword) (*Agent, error)
	GetInvitation(context.Context, *Token) (*Agent, error)
	InviteAgent(context.Context, *Agent) (*Agent, error)
	GetAgent(context.Context, *common.Id) (*Agent, error)
	ConfirmAccount(context.Context, *Token) (*Account, error)
	GetAccount(context.Context, *common.Id) (*Account, error)
	UpdateAccount(context.Context, *Account) (*Account, error)
	CreateAccount(context.Context, *CreateAccountRequest) (*Account, error)
	ListAgents(context.Context, *common.Id) (*Agents, error)
	CheckLogin(context.Context, *LoginRequest) (*common.Id, error)
	DeleteGroup(context.Context, *common.Id) (*common.Empty, error)
	ListGroups(context.Context, *common.Id) (*AgentGroups, error)
	AddAgentToGroup(context.Context, *GroupMember) (*common.Empty, error)
	RemoveAgentFromGroup(context.Context, *GroupMember) (*common.Empty, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterAccountMgrServer(s *grpc.Server, srv AccountMgrServer) {
	s.RegisterService(&_AccountMgr_serviceDesc, srv)
}

func _AccountMgr_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).CreateGroup(ctx, req.(*AgentGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_UpdateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).UpdateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/UpdateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).UpdateGroup(ctx, req.(*AgentGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).GetGroup(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_RequestResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).RequestResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/RequestResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).RequestResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).UpdatePassword(ctx, req.(*NewPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_UpdateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).UpdateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/UpdateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).UpdateAgent(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_DeleteAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).DeleteAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/DeleteAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).DeleteAgent(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_AcceptInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).AcceptInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/AcceptInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).AcceptInvitation(ctx, req.(*NewPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_GetInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).GetInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/GetInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).GetInvitation(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_InviteAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).InviteAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/InviteAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).InviteAgent(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_GetAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).GetAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/GetAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).GetAgent(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_ConfirmAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).ConfirmAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/ConfirmAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).ConfirmAccount(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).GetAccount(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).UpdateAccount(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_ListAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).ListAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/ListAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).ListAgents(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_CheckLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).CheckLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/CheckLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).CheckLogin(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).DeleteGroup(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).ListGroups(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_AddAgentToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).AddAgentToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/AddAgentToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).AddAgentToGroup(ctx, req.(*GroupMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_RemoveAgentFromGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupMember)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).RemoveAgentFromGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/RemoveAgentFromGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).RemoveAgentFromGroup(ctx, req.(*GroupMember))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountMgr",
	HandlerType: (*AccountMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGroup",
			Handler:    _AccountMgr_CreateGroup_Handler,
		},
		{
			MethodName: "UpdateGroup",
			Handler:    _AccountMgr_UpdateGroup_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _AccountMgr_GetGroup_Handler,
		},
		{
			MethodName: "RequestResetPassword",
			Handler:    _AccountMgr_RequestResetPassword_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _AccountMgr_UpdatePassword_Handler,
		},
		{
			MethodName: "UpdateAgent",
			Handler:    _AccountMgr_UpdateAgent_Handler,
		},
		{
			MethodName: "DeleteAgent",
			Handler:    _AccountMgr_DeleteAgent_Handler,
		},
		{
			MethodName: "AcceptInvitation",
			Handler:    _AccountMgr_AcceptInvitation_Handler,
		},
		{
			MethodName: "GetInvitation",
			Handler:    _AccountMgr_GetInvitation_Handler,
		},
		{
			MethodName: "InviteAgent",
			Handler:    _AccountMgr_InviteAgent_Handler,
		},
		{
			MethodName: "GetAgent",
			Handler:    _AccountMgr_GetAgent_Handler,
		},
		{
			MethodName: "ConfirmAccount",
			Handler:    _AccountMgr_ConfirmAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _AccountMgr_GetAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _AccountMgr_UpdateAccount_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _AccountMgr_CreateAccount_Handler,
		},
		{
			MethodName: "ListAgents",
			Handler:    _AccountMgr_ListAgents_Handler,
		},
		{
			MethodName: "CheckLogin",
			Handler:    _AccountMgr_CheckLogin_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _AccountMgr_DeleteGroup_Handler,
		},
		{
			MethodName: "ListGroups",
			Handler:    _AccountMgr_ListGroups_Handler,
		},
		{
			MethodName: "AddAgentToGroup",
			Handler:    _AccountMgr_AddAgentToGroup_Handler,
		},
		{
			MethodName: "RemoveAgentFromGroup",
			Handler:    _AccountMgr_RemoveAgentFromGroup_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _AccountMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account/account.proto",
}
