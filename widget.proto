syntax = "proto2";

package widget;

option go_package = "github.com/subiz/header/widget";

import "account.proto";
import "common.proto";
import "user3.proto";

message UserSetting {
	optional common.Context ctx = 1;
	optional account.Account account = 3;
	optional string account_id = 2; // subiz use only
	optional user.User user = 4;
	optional string user_id = 7; // subiz use only
	optional bool sound_enabled = 5;
	optional string language = 6;
	optional bool send_transcript = 8;
	optional Setting account_setting = 9;
	optional bool desktop_notification = 10;
	optional user.Trace trace = 11;
	repeated Campaign campaigns = 13;
}

message SocialLink {
	optional string type = 1; // facebook, viber, subiz, email, ...
	optional string url = 2;
}

message WidgetHeader {
	optional string layout = 2;
	enum HeaderLayout {
		team = 0;
		social = 1;
	}

	// for social layout only
	repeated SocialLink links = 3;

	// agents whose avatar will be display in the header
	repeated string agent_ids = 4;
}

message Setting {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string widget_version = 3;
	optional string language = 5;
	optional string custom_language = 6; // write-only
	repeated account.Agent agents = 7;
	repeated string agent_ids = 8; // subiz only
	optional string css_url = 9; // old version
	optional string custom_css_url = 10; // deprecated
	optional int32 replytime = 11; // deprecated
	optional string css = 12; // communication client to server
	optional string style_url = 13;
	// read-only, tell whether account is ready for chat or not
	optional bool is_online = 14;

	optional string window_mode = 15;
	enum WindowMode {
		mini = 0;
		full = 1;
	}

	optional WidgetHeader header = 16;
	optional int32 height = 17;
	optional int32 width = 18;
	optional string primary_color = 19;
	optional string secondary_color = 20;
	optional string background = 21;
	optional string text_color = 22;
	optional Form offline_form = 23;
	optional Form prechat_form = 24;
	optional ChatButton desktop_button = 25;
	optional ChatButton mobile_button = 26;
	optional Greeting greeting = 27;
	optional string title = 28;
	optional string introduction = 29;
	optional string custom_language_url = 31;
	optional string language_url = 32;
	optional bool auto_request_rating = 33;
}

message Field {
	optional string key = 1;
	optional string label = 2;
	optional bool is_required = 3;

	// so front end dont have to download attribute definitions
	optional string type = 5;

	repeated string list = 6; // available option for field

	optional string subtype = 8; // phone, email, rating
	optional bool multiple_choice = 9;
	optional bool multiline_text = 10;
	optional string placeholder = 11;

	optional bool is_user_attribute = 12;

	optional string value = 13;
}

message Group {
	optional string id = 1;
	optional string name = 2;
}

message Form {
	repeated Field fields = 1;

	optional bool group_required = 2;
	repeated Group groups = 3;
	optional string group_label = 4;

	optional string title = 5;
	optional bool enabled = 6;
	optional bool end_conversation_after_submit = 7;
	optional string enable_when = 8;
	enum When {
		all_agents_offline = 0;
		out_of_bussiness_hour = 1;
	}

	optional bool question_required = 10;
	optional string question_label = 11;
}

message ChatButton {
	optional string background_image_url = 1;
	optional string background_mask_url = 11;

	optional int32 width = 2;
	optional int32 height = 3;
	optional string background = 4;
	optional int32 margin_x  = 5;
	optional int32 margin_y = 6;
	optional string position = 7;

	enum ButtonPosition {
		left = 0;
		right = 1;
	}
	optional bool default_style = 8;
	optional string background_border_radius = 9;
	optional bool hidden = 10;
}

message Greeting {
	optional string message = 2;
	optional bool enabled = 4;
	optional string agent_id = 5;
}

////////////// CAMPAIGN //////////////
message Trigger {
	optional string type = 3; // exit_intent, area_clicked, scrolling_percentage, inactivity_duration, after_pageview, after_js_event
	optional string area_clicked_css_selector = 4; // .user_name #user
	optional float scrolling_percentage = 6; // 0.55
	optional int64 inactivity_sec = 8; // 50s
	optional int64 after_pageview_sec = 9; // 50s
}

message SchedulerCondition {
	optional int64 start_time = 4;
	optional int64 end_time = 5;
	repeated string days_of_week = 6; // Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday

	optional int64 start_minute_day = 7; // minute of day
	optional int64 end_minute_day = 8; // minute of day

	optional string timezone_offset = 9; // if empty, take current timezone
}

message Condition {
	optional string key = 3; // url, browser, country_code, city, returning_visitor, page_view_count, os, device, device_type, referrer, source, source_referer, /*ip_ranges*/, language, utm_campaign, utm_content, utm_medium, utm_source, utm_term, time_on_page, user_attribute

	enum Source {
		direct = 0;
		google_ads = 1;
		organic = 2;
	}

	enum DeviveType {
		desktop = 0;
		mobile = 1;
		tablet = 2;
	}

	enum Browser {
		all = 0;
		chrome = 1;
		firefox = 2;
		edge = 3;
		ie = 4;
		safari = 5;
		other = 6;
	}

	// for rate limiting
	// int64 frequency_times = 11; // number of time display the message
	// int64 frequency_duration = 11; // per duration (1 message per hour || 10 messages per day)


	optional string user_attribute_key = 34;

	optional string operator = 40; // eq, ne, con, notCon, in, gt, gte, lt, lte, inRange, notInRange, begin, end
	optional string value = 41;
}

message Segmentation {
	repeated Condition conditions = 4;
	repeated Condition source_conditions = 6; // source, source_referer (or only)
	repeated Condition location_conditions = 7; // city, country_code (or only)

	repeated Condition url_conditions = 8; // url, url_term, url_medium, ... (or only)
	repeated Condition exclude_url_conditions = 9; // url (or only)

	repeated Condition has_visited_url_conditions = 10; // url (or only)
	repeated Condition has_not_visited_url_conditions = 11; // url (or only)

	optional string join = 5; // and | or
}

message Campaigns {
	repeated Campaign campaigns = 3;
}

message Notification {
	// optional email.Email email = 1;
	optional bool enabled = 2;
	optional string sender_id = 4;
	optional string from = 5;
	repeated string to = 7;
	optional string subject = 9;
	optional string body = 10;
}

message Campaign {
	optional common.Context ctx = 1;
	optional string id = 2;
	optional string account_id = 3;

	repeated string url_expressions = 4;
	repeated string exclude_url_expressions = 6;

	repeated Trigger triggers = 10; // any

	optional string segmentation_join = 11; // and | or
	repeated Segmentation segmentations = 12;

	optional string template_id = 14;
	optional string page_type = 15; // modal, slide_in, bar, panel, fullscreen
	repeated Page pages = 17;

	optional int64 created = 18;
	optional string name = 19;
	optional string thumbnail_url = 20;
	optional bool enabled = 21;

	// stop showing pop up after showing x times
	optional int64 impression_limit = 23;
	repeated SchedulerCondition schedulers = 24;
	optional string scheduler_join = 25;
	optional Notification notification = 26;
}

message Impression {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string campaign_id = 3;
	optional string id = 4;
	optional string user_id = 5;

	optional string url = 7;
	optional common.Device device = 8;
	optional int64 created = 9;

	optional string by_trigger = 10;
	optional string impression_token = 11;  // for request submit only
}

message ConversionRequest {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string campaign_id = 3;
	optional string anchor = 4;
	optional int32 limit =5;
}
message Conversions {
	optional common.Context ctx = 1;
	repeated Conversion conversions = 2;
	optional string anchor = 4;
}

message Conversion {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string campaign_id = 3;
	optional string impression_id = 4;
	optional string user_id = 5;

	optional string url = 7;
	optional common.Device device = 8;

	optional string by_trigger = 10;

	optional Submission submission = 12;
	optional int64 created = 13;

	optional int64 week = 14; // internal use only
	optional string impression_token = 15; // for request submit only
}

message UserCampaignStatus {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string campaign_id = 3;
	optional string user_id = 5;

	optional string status = 8; // goal_reached || failed || nothing
	enum Status {
		goal_reached = 0;
		failed = 1;
	}
	optional int64 created = 10;
}

message Page {
	optional string title = 4;
	optional string subtitle = 9;
	optional string description = 5;

	optional Form form = 6;

	optional Button primary_button = 7;
	optional Button secondary_button = 8;
	optional Button background_click = 10;
	optional Countdown countdown = 11;

	optional Video video = 12;

	optional Appearance desktop_appearance = 24;
	optional Appearance mobile_appearance = 25;
}

message Appearance {
	optional string title_color = 2;
	optional string description_color = 3;

	optional string background = 4; // color or gradient
	optional string background_image = 5;

	optional string primary_button_background = 7;
	optional string primary_button_color = 8;

	optional string secondary_button_background = 9;
	optional string secondary_button_color = 10;

	// not supported yet
	optional string input_color = 11;
	optional string input_background = 12;

	// sizing, not supported yet
	optional string width = 20;
	optional string min_height = 21;
	optional string padding_left = 22;
	optional string padding_right = 23;
	optional string padding_top = 24;
	optional string padding_bottom = 25;
}

message Submission  {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string campaign_id = 3;
	optional string user_id = 5;

	repeated Field fields = 6;
}

message ButtonAction {
	optional string action = 3; // open_url, close, open_widget, submit, next, goal_reach

	optional string url = 5; // url to open
	optional bool new_tab = 6; // open new url on new tab
}

message Button {
	optional bool enabled = 2;
	repeated ButtonAction actions = 3;
	optional string text = 6;
}

message Countdown {
	optional bool enabled = 3;
	optional int64 end_time = 4; // unix sec
	optional string daily_end_time = 5; // 8:40:30 reset every day
}

message Video {
	optional bool enabled = 1;
	optional string url = 2;

	// optional string width = 4; // alway full
	optional string max_height = 5;
	optional string padding_left = 7;
	optional string padding_right = 8;
	optional string padding_top = 9;
	optional string padding_bottom = 10;
}

message ImpressionCount {
	optional string account_id = 3;
	optional string campaign_id = 4;
	optional int32 count = 5;
	optional int32 hour = 6;
	optional int32 month = 7;
}

message ConversionCount {
	optional string account_id = 3;
	optional string campaign_id = 4;
	optional int32 count = 5;
	optional int32 hour = 6;
	optional int32 month = 7;
}

message ReportCampaignRequest {
	optional common.Context ctx = 1;
	optional string account_id = 3;
	optional string campaign_id = 4;
	optional int32 from_hour = 5;
	optional int32 to_hour = 6;
	optional string range = 7;
	enum Range {
		hour = 0; // default
		day = 1;
	}
}

message ReportCampaignResponse {
	optional common.Context ctx = 1;
	repeated int32 impressions_count = 3;
	repeated int32 conversions_count = 4;
}

message ConversionsExported {
	optional string url = 6;
}

message SearchLocationsRequest {
	optional common.Context ctx = 1;
	optional string query = 2;
	optional int64 limit = 4;
}

message UploadedImage {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional string url = 3;
	optional string thumbnail_256_url = 4;
	optional string thumbnail_64_url = 5;
	optional int64 width = 10;
	optional int64 height = 11;
	optional int64 created = 12;
}

message UploadedImages {
	optional common.Context ctx = 1;
	repeated UploadedImage uploaded_images = 2;
}
