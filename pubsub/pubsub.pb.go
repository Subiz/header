// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pubsub.proto

package pubsub

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Subscription struct {
	Ctx    *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	UserId string          `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Topic  string          `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// optional SubscribeScope scope = 5;
	// optional string account_id = 6;
	SubId                string   `protobuf:"bytes,7,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	TargetTopic          string   `protobuf:"bytes,10,opt,name=target_topic,json=targetTopic,proto3" json:"target_topic,omitempty"`
	TargetKey            string   `protobuf:"bytes,11,opt,name=target_key,json=targetKey,proto3" json:"target_key,omitempty"`
	Ttls                 int64    `protobuf:"varint,12,opt,name=ttls,proto3" json:"ttls,omitempty"`
	RouterTopic          string   `protobuf:"bytes,13,opt,name=router_topic,json=routerTopic,proto3" json:"router_topic,omitempty"`
	TargetPartition      int32    `protobuf:"varint,14,opt,name=target_partition,json=targetPartition,proto3" json:"target_partition,omitempty"`
	Topics               []string `protobuf:"bytes,4,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{0}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Subscription) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Subscription) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Subscription) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

func (m *Subscription) GetTargetTopic() string {
	if m != nil {
		return m.TargetTopic
	}
	return ""
}

func (m *Subscription) GetTargetKey() string {
	if m != nil {
		return m.TargetKey
	}
	return ""
}

func (m *Subscription) GetTtls() int64 {
	if m != nil {
		return m.Ttls
	}
	return 0
}

func (m *Subscription) GetRouterTopic() string {
	if m != nil {
		return m.RouterTopic
	}
	return ""
}

func (m *Subscription) GetTargetPartition() int32 {
	if m != nil {
		return m.TargetPartition
	}
	return 0
}

func (m *Subscription) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type PublishMessage struct {
	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Topics  []string        `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Payload []byte          `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// user_ids bloom filter: only those users can get message
	UserIdsFilter     []byte `protobuf:"bytes,5,opt,name=user_ids_filter,json=userIdsFilter,proto3" json:"user_ids_filter,omitempty"`
	FilterItemBitSize int32  `protobuf:"varint,7,opt,name=filter_item_bit_size,json=filterItemBitSize,proto3" json:"filter_item_bit_size,omitempty"`
	FilterHashCount   int32  `protobuf:"varint,8,opt,name=filter_hash_count,json=filterHashCount,proto3" json:"filter_hash_count,omitempty"`
	// negative user_ids bloom filter: those users wont get the message
	NegUserIdsFilter     []byte   `protobuf:"bytes,6,opt,name=neg_user_ids_filter,json=negUserIdsFilter,proto3" json:"neg_user_ids_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishMessage) Reset()         { *m = PublishMessage{} }
func (m *PublishMessage) String() string { return proto.CompactTextString(m) }
func (*PublishMessage) ProtoMessage()    {}
func (*PublishMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{1}
}

func (m *PublishMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishMessage.Unmarshal(m, b)
}
func (m *PublishMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishMessage.Marshal(b, m, deterministic)
}
func (m *PublishMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishMessage.Merge(m, src)
}
func (m *PublishMessage) XXX_Size() int {
	return xxx_messageInfo_PublishMessage.Size(m)
}
func (m *PublishMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PublishMessage proto.InternalMessageInfo

func (m *PublishMessage) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PublishMessage) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PublishMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PublishMessage) GetUserIdsFilter() []byte {
	if m != nil {
		return m.UserIdsFilter
	}
	return nil
}

func (m *PublishMessage) GetFilterItemBitSize() int32 {
	if m != nil {
		return m.FilterItemBitSize
	}
	return 0
}

func (m *PublishMessage) GetFilterHashCount() int32 {
	if m != nil {
		return m.FilterHashCount
	}
	return 0
}

func (m *PublishMessage) GetNegUserIdsFilter() []byte {
	if m != nil {
		return m.NegUserIdsFilter
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscription)(nil), "pubsub.Subscription")
	proto.RegisterType((*PublishMessage)(nil), "pubsub.PublishMessage")
}

func init() { proto.RegisterFile("pubsub.proto", fileDescriptor_91df006b05e20cf7) }

var fileDescriptor_91df006b05e20cf7 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x6a, 0xd4, 0x40,
	0x14, 0xc6, 0xc9, 0xfe, 0xc9, 0xda, 0xb3, 0x69, 0xb7, 0x8e, 0x55, 0x07, 0x41, 0x49, 0x7b, 0x21,
	0x51, 0xb0, 0x0b, 0xfa, 0x06, 0x2d, 0x88, 0x8b, 0x08, 0x25, 0xd5, 0x1b, 0x6f, 0x42, 0x26, 0x39,
	0x26, 0x83, 0xbb, 0x99, 0x30, 0x73, 0x06, 0xba, 0xfb, 0x26, 0x3e, 0x87, 0x2f, 0x28, 0x99, 0x93,
	0x62, 0xf1, 0xca, 0xbb, 0x39, 0xbf, 0xef, 0x9b, 0x8f, 0x33, 0x1f, 0x03, 0x49, 0xef, 0x95, 0xf3,
	0xea, 0xb2, 0xb7, 0x86, 0x8c, 0x88, 0x79, 0x7a, 0x91, 0x54, 0x66, 0xb7, 0x33, 0x1d, 0xd3, 0x8b,
	0xdf, 0x13, 0x48, 0x6e, 0xbd, 0x72, 0x95, 0xd5, 0x3d, 0x69, 0xd3, 0x89, 0x73, 0x98, 0x56, 0x74,
	0x27, 0xa3, 0x34, 0xca, 0x96, 0xef, 0x57, 0x97, 0xa3, 0xf9, 0xda, 0x74, 0x84, 0x77, 0x94, 0x0f,
	0x9a, 0x78, 0x0e, 0x0b, 0xef, 0xd0, 0x16, 0xba, 0x96, 0x93, 0x34, 0xca, 0x8e, 0xf2, 0x78, 0x18,
	0x37, 0xb5, 0x38, 0x83, 0x39, 0x99, 0x5e, 0x57, 0x72, 0x1a, 0x30, 0x0f, 0xe2, 0x29, 0xc4, 0xce,
	0xab, 0xc1, 0xbd, 0x60, 0xec, 0xbc, 0xda, 0xd4, 0xe2, 0x1c, 0x12, 0x2a, 0x6d, 0x83, 0x54, 0xf0,
	0x1d, 0x08, 0xe2, 0x92, 0xd9, 0xd7, 0x70, 0xf3, 0x25, 0xc0, 0x68, 0xf9, 0x89, 0x7b, 0xb9, 0x0c,
	0x86, 0x23, 0x26, 0x9f, 0x71, 0x2f, 0x04, 0xcc, 0x88, 0xb6, 0x4e, 0x26, 0x69, 0x94, 0x4d, 0xf3,
	0x70, 0x1e, 0x52, 0xad, 0xf1, 0x84, 0x76, 0x4c, 0x3d, 0xe6, 0x54, 0x66, 0x9c, 0xfa, 0x06, 0x4e,
	0xc7, 0xd4, 0xbe, 0xb4, 0xa4, 0x87, 0x57, 0xcb, 0x93, 0x34, 0xca, 0xe6, 0xf9, 0x8a, 0xf9, 0xcd,
	0x3d, 0x16, 0xcf, 0x20, 0x0e, 0x31, 0x4e, 0xce, 0xd2, 0xe9, 0xf0, 0x50, 0x9e, 0x2e, 0x7e, 0x4d,
	0xe0, 0xe4, 0xc6, 0xab, 0xad, 0x76, 0xed, 0x17, 0x74, 0xae, 0x6c, 0xf0, 0x7f, 0x7a, 0xfb, 0x9b,
	0x36, 0x79, 0x98, 0x26, 0x24, 0x2c, 0xfa, 0x72, 0xbf, 0x35, 0x65, 0x2d, 0x67, 0x69, 0x94, 0x25,
	0xf9, 0xfd, 0x28, 0x5e, 0xc3, 0x6a, 0x6c, 0xda, 0x15, 0x3f, 0xf4, 0x96, 0xd0, 0xca, 0x79, 0x70,
	0x1c, 0x73, 0xe3, 0xee, 0x63, 0x80, 0x62, 0x0d, 0x67, 0x2c, 0x17, 0x9a, 0x70, 0x57, 0x28, 0x4d,
	0x85, 0xd3, 0x07, 0x0c, 0x85, 0xcf, 0xf3, 0xc7, 0xac, 0x6d, 0x08, 0x77, 0x57, 0x9a, 0x6e, 0xf5,
	0x01, 0xc5, 0x5b, 0x18, 0x61, 0xd1, 0x96, 0xae, 0x2d, 0x2a, 0xe3, 0x3b, 0x92, 0x8f, 0xb8, 0x04,
	0x16, 0x3e, 0x95, 0xae, 0xbd, 0x1e, 0xb0, 0x78, 0x07, 0x4f, 0x3a, 0x6c, 0x8a, 0x7f, 0x17, 0x89,
	0xc3, 0x22, 0xa7, 0x1d, 0x36, 0xdf, 0x1e, 0xee, 0x72, 0x95, 0x7e, 0x7f, 0xd5, 0x68, 0x6a, 0xbd,
	0x1a, 0x3a, 0x58, 0x3b, 0xaf, 0xf4, 0x61, 0xdd, 0x62, 0x59, 0xa3, 0x5d, 0xf3, 0x0f, 0x54, 0x71,
	0xf8, 0x7a, 0x1f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x5b, 0x95, 0x74, 0xa0, 0x02, 0x00,
	0x00,
}
