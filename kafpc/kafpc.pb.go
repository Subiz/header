// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kafpc/kafpc.proto

/*
Package kafpc is a generated protocol buffer package.

It is generated from these files:
	kafpc/kafpc.proto

It has these top-level messages:
	Request
	Response
	Empty
*/
package kafpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Id           string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	ResponseHost string `protobuf:"bytes,3,opt,name=response_host,json=responseHost" json:"response_host,omitempty"`
	Body         []byte `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Path         string `protobuf:"bytes,6,opt,name=path" json:"path,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetResponseHost() string {
	if m != nil {
		return m.ResponseHost
	}
	return ""
}

func (m *Request) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Request) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Response struct {
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Body      []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Code      int32  `protobuf:"varint,5,opt,name=code" json:"code,omitempty"`
	Error     []byte `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Request)(nil), "kafpc.Request")
	proto.RegisterType((*Response)(nil), "kafpc.Response")
	proto.RegisterType((*Empty)(nil), "kafpc.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Kafpc service

type KafpcClient interface {
	Reply(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Empty, error)
}

type kafpcClient struct {
	cc *grpc.ClientConn
}

func NewKafpcClient(cc *grpc.ClientConn) KafpcClient {
	return &kafpcClient{cc}
}

func (c *kafpcClient) Reply(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/kafpc.Kafpc/Reply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Kafpc service

type KafpcServer interface {
	Reply(context.Context, *Response) (*Empty, error)
}

func RegisterKafpcServer(s *grpc.Server, srv KafpcServer) {
	s.RegisterService(&_Kafpc_serviceDesc, srv)
}

func _Kafpc_Reply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KafpcServer).Reply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kafpc.Kafpc/Reply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KafpcServer).Reply(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kafpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kafpc.Kafpc",
	HandlerType: (*KafpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reply",
			Handler:    _Kafpc_Reply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kafpc/kafpc.proto",
}

func init() { proto.RegisterFile("kafpc/kafpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xd9, 0xba, 0xd9, 0x75, 0x87, 0xa8, 0x38, 0x78, 0x08, 0x82, 0xb0, 0x54, 0x90, 0x9e,
	0x5a, 0xd0, 0x67, 0x10, 0x14, 0x6f, 0x79, 0x81, 0xd2, 0x36, 0xa9, 0x2d, 0xfe, 0x99, 0x98, 0xc4,
	0x43, 0xdf, 0x5e, 0x3a, 0x4d, 0x85, 0xbd, 0x84, 0x6f, 0x7e, 0xc9, 0x7c, 0x5f, 0x66, 0xe0, 0xfa,
	0xa3, 0xe9, 0x5d, 0x57, 0xf1, 0x59, 0x3a, 0x4f, 0x91, 0x50, 0x70, 0x91, 0xf7, 0xb0, 0xd7, 0xf6,
	0xe7, 0xd7, 0x86, 0x88, 0x97, 0x90, 0x8d, 0x46, 0x65, 0xc7, 0x4d, 0x71, 0xd0, 0xd9, 0x68, 0xf0,
	0x1e, 0x2e, 0xbc, 0x0d, 0x8e, 0xbe, 0x83, 0xad, 0x07, 0x0a, 0x51, 0x9d, 0xf1, 0x95, 0x5c, 0xe1,
	0x0b, 0x85, 0x88, 0x08, 0xdb, 0x96, 0xcc, 0xa4, 0xc4, 0x71, 0x53, 0x48, 0xcd, 0x7a, 0x66, 0xae,
	0x89, 0x83, 0xda, 0xf1, 0x7b, 0xd6, 0xf9, 0x3b, 0x9c, 0xeb, 0xd4, 0x87, 0x77, 0x00, 0x7e, 0xc9,
	0xac, 0x47, 0x93, 0x5c, 0x0f, 0x89, 0xbc, 0x9a, 0x7f, 0xcb, 0xed, 0xa9, 0x65, 0x47, 0xc6, 0x72,
	0x8c, 0xd0, 0xac, 0xf1, 0x06, 0x84, 0xf5, 0x9e, 0x3c, 0xe7, 0x48, 0xbd, 0x14, 0xf9, 0x1e, 0xc4,
	0xf3, 0x97, 0x8b, 0xd3, 0x63, 0x05, 0xe2, 0x6d, 0x1e, 0x11, 0x1f, 0x40, 0x68, 0xeb, 0x3e, 0x27,
	0xbc, 0x2a, 0x97, 0x05, 0xac, 0x1f, 0xb9, 0x95, 0x09, 0x70, 0x43, 0xbb, 0xe3, 0xc5, 0x3c, 0xfd,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xfd, 0x43, 0xf0, 0x2d, 0x01, 0x00, 0x00,
}
