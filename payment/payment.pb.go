// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment/payment.proto

package payment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Currency int32

const (
	Currency_usd Currency = 0
	Currency_vnd Currency = 1
	Currency_brl Currency = 2
)

var Currency_name = map[int32]string{
	0: "usd",
	1: "vnd",
	2: "brl",
}

var Currency_value = map[string]int32{
	"usd": 0,
	"vnd": 1,
	"brl": 2,
}

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}

func (x *Currency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Currency_value, data, "Currency")
	if err != nil {
		return err
	}
	*x = Currency(value)
	return nil
}

func (Currency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{0}
}

type Event int32

const (
	Event_PaymentSynced           Event = 0
	Event_LimitUpdated            Event = 1
	Event_PaymentRequested        Event = 4
	Event_PaymentRenewCycle       Event = 5
	Event_InvoiceCreatedEmailSend Event = 6
	Event_PaymentV3Synced         Event = 8
	Event_SubscriptionUpdated     Event = 14
	Event_InvoiceUpdated          Event = 10
	Event_PaymentMethodUpdated    Event = 11
	Event_BillingUpdated          Event = 12
	Event_LogUpdated              Event = 13
	Event_PromotionCodeUpdated    Event = 15
	Event_PaymentWorkerJob        Event = 40
)

var Event_name = map[int32]string{
	0:  "PaymentSynced",
	1:  "LimitUpdated",
	4:  "PaymentRequested",
	5:  "PaymentRenewCycle",
	6:  "InvoiceCreatedEmailSend",
	8:  "PaymentV3Synced",
	14: "SubscriptionUpdated",
	10: "InvoiceUpdated",
	11: "PaymentMethodUpdated",
	12: "BillingUpdated",
	13: "LogUpdated",
	15: "PromotionCodeUpdated",
	40: "PaymentWorkerJob",
}

var Event_value = map[string]int32{
	"PaymentSynced":           0,
	"LimitUpdated":            1,
	"PaymentRequested":        4,
	"PaymentRenewCycle":       5,
	"InvoiceCreatedEmailSend": 6,
	"PaymentV3Synced":         8,
	"SubscriptionUpdated":     14,
	"InvoiceUpdated":          10,
	"PaymentMethodUpdated":    11,
	"BillingUpdated":          12,
	"LogUpdated":              13,
	"PromotionCodeUpdated":    15,
	"PaymentWorkerJob":        40,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{1}
}

type PaymentMethod_Type int32

const (
	PaymentMethod_bank_transfer PaymentMethod_Type = 0
	PaymentMethod_credit_card   PaymentMethod_Type = 1
)

var PaymentMethod_Type_name = map[int32]string{
	0: "bank_transfer",
	1: "credit_card",
}

var PaymentMethod_Type_value = map[string]int32{
	"bank_transfer": 0,
	"credit_card":   1,
}

func (x PaymentMethod_Type) Enum() *PaymentMethod_Type {
	p := new(PaymentMethod_Type)
	*p = x
	return p
}

func (x PaymentMethod_Type) String() string {
	return proto.EnumName(PaymentMethod_Type_name, int32(x))
}

func (x *PaymentMethod_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentMethod_Type_value, data, "PaymentMethod_Type")
	if err != nil {
		return err
	}
	*x = PaymentMethod_Type(value)
	return nil
}

func (PaymentMethod_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{5, 0}
}

type PaymentMethod_State int32

const (
	PaymentMethod_active PaymentMethod_State = 0
	PaymentMethod_failed PaymentMethod_State = 1
)

var PaymentMethod_State_name = map[int32]string{
	0: "active",
	1: "failed",
}

var PaymentMethod_State_value = map[string]int32{
	"active": 0,
	"failed": 1,
}

func (x PaymentMethod_State) Enum() *PaymentMethod_State {
	p := new(PaymentMethod_State)
	*p = x
	return p
}

func (x PaymentMethod_State) String() string {
	return proto.EnumName(PaymentMethod_State_name, int32(x))
}

func (x *PaymentMethod_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentMethod_State_value, data, "PaymentMethod_State")
	if err != nil {
		return err
	}
	*x = PaymentMethod_State(value)
	return nil
}

func (PaymentMethod_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{5, 1}
}

type Plan_Type int32

const (
	Plan_trial    Plan_Type = 0
	Plan_free     Plan_Type = 1
	Plan_standard Plan_Type = 2
	Plan_advanced Plan_Type = 3
)

var Plan_Type_name = map[int32]string{
	0: "trial",
	1: "free",
	2: "standard",
	3: "advanced",
}

var Plan_Type_value = map[string]int32{
	"trial":    0,
	"free":     1,
	"standard": 2,
	"advanced": 3,
}

func (x Plan_Type) Enum() *Plan_Type {
	p := new(Plan_Type)
	*p = x
	return p
}

func (x Plan_Type) String() string {
	return proto.EnumName(Plan_Type_name, int32(x))
}

func (x *Plan_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Plan_Type_value, data, "Plan_Type")
	if err != nil {
		return err
	}
	*x = Plan_Type(value)
	return nil
}

func (Plan_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{8, 0}
}

type Invoice_State int32

const (
	Invoice_draft    Invoice_State = 0
	Invoice_open     Invoice_State = 1
	Invoice_overdue  Invoice_State = 2
	Invoice_paid     Invoice_State = 3
	Invoice_void     Invoice_State = 4
	Invoice_queueing Invoice_State = 5
)

var Invoice_State_name = map[int32]string{
	0: "draft",
	1: "open",
	2: "overdue",
	3: "paid",
	4: "void",
	5: "queueing",
}

var Invoice_State_value = map[string]int32{
	"draft":    0,
	"open":     1,
	"overdue":  2,
	"paid":     3,
	"void":     4,
	"queueing": 5,
}

func (x Invoice_State) Enum() *Invoice_State {
	p := new(Invoice_State)
	*p = x
	return p
}

func (x Invoice_State) String() string {
	return proto.EnumName(Invoice_State_name, int32(x))
}

func (x *Invoice_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Invoice_State_value, data, "Invoice_State")
	if err != nil {
		return err
	}
	*x = Invoice_State(value)
	return nil
}

func (Invoice_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{14, 0}
}

type Contact_Title int32

const (
	Contact_mr  Contact_Title = 0
	Contact_ms  Contact_Title = 1
	Contact_mrs Contact_Title = 2
	Contact_dr  Contact_Title = 3
)

var Contact_Title_name = map[int32]string{
	0: "mr",
	1: "ms",
	2: "mrs",
	3: "dr",
}

var Contact_Title_value = map[string]int32{
	"mr":  0,
	"ms":  1,
	"mrs": 2,
	"dr":  3,
}

func (x Contact_Title) Enum() *Contact_Title {
	p := new(Contact_Title)
	*p = x
	return p
}

func (x Contact_Title) String() string {
	return proto.EnumName(Contact_Title_name, int32(x))
}

func (x *Contact_Title) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Contact_Title_value, data, "Contact_Title")
	if err != nil {
		return err
	}
	*x = Contact_Title(value)
	return nil
}

func (Contact_Title) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{20, 0}
}

type PromotionCode_Type int32

const (
	PromotionCode_fixed_amount_promotion_code PromotionCode_Type = 0
	PromotionCode_percent_promotion_code      PromotionCode_Type = 1
	PromotionCode_credit_code                 PromotionCode_Type = 2
	PromotionCode_referral_credit_code        PromotionCode_Type = 3
)

var PromotionCode_Type_name = map[int32]string{
	0: "fixed_amount_promotion_code",
	1: "percent_promotion_code",
	2: "credit_code",
	3: "referral_credit_code",
}

var PromotionCode_Type_value = map[string]int32{
	"fixed_amount_promotion_code": 0,
	"percent_promotion_code":      1,
	"credit_code":                 2,
	"referral_credit_code":        3,
}

func (x PromotionCode_Type) Enum() *PromotionCode_Type {
	p := new(PromotionCode_Type)
	*p = x
	return p
}

func (x PromotionCode_Type) String() string {
	return proto.EnumName(PromotionCode_Type_name, int32(x))
}

func (x *PromotionCode_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PromotionCode_Type_value, data, "PromotionCode_Type")
	if err != nil {
		return err
	}
	*x = PromotionCode_Type(value)
	return nil
}

func (PromotionCode_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{26, 0}
}

type AgentReferInfo_Status int32

const (
	AgentReferInfo_active   AgentReferInfo_Status = 0
	AgentReferInfo_inactive AgentReferInfo_Status = 1
)

var AgentReferInfo_Status_name = map[int32]string{
	0: "active",
	1: "inactive",
}

var AgentReferInfo_Status_value = map[string]int32{
	"active":   0,
	"inactive": 1,
}

func (x AgentReferInfo_Status) Enum() *AgentReferInfo_Status {
	p := new(AgentReferInfo_Status)
	*p = x
	return p
}

func (x AgentReferInfo_Status) String() string {
	return proto.EnumName(AgentReferInfo_Status_name, int32(x))
}

func (x *AgentReferInfo_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AgentReferInfo_Status_value, data, "AgentReferInfo_Status")
	if err != nil {
		return err
	}
	*x = AgentReferInfo_Status(value)
	return nil
}

func (AgentReferInfo_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{28, 0}
}

type Log_Action int32

const (
	Log_create_invoice         Log_Action = 0
	Log_change_invoice_status  Log_Action = 1
	Log_create_discount        Log_Action = 2
	Log_delete_discount        Log_Action = 3
	Log_redeem_discount        Log_Action = 4
	Log_add_credit             Log_Action = 5
	Log_redeem_credit          Log_Action = 6
	Log_delete_account         Log_Action = 7
	Log_change_plan            Log_Action = 8
	Log_renew_subscription     Log_Action = 10
	Log_click_subscribe_button Log_Action = 11
	Log_pay_for_referrer       Log_Action = 12
	Log_add_money_for_referrer Log_Action = 13
	Log_pay_invoice            Log_Action = 14
	Log_charge_stripe          Log_Action = 15
	Log_create_bill            Log_Action = 16
	Log_use_credit             Log_Action = 17
	Log_edit_subscription      Log_Action = 18
	Log_edit_invoice           Log_Action = 19
	Log_downgrade              Log_Action = 20
)

var Log_Action_name = map[int32]string{
	0:  "create_invoice",
	1:  "change_invoice_status",
	2:  "create_discount",
	3:  "delete_discount",
	4:  "redeem_discount",
	5:  "add_credit",
	6:  "redeem_credit",
	7:  "delete_account",
	8:  "change_plan",
	10: "renew_subscription",
	11: "click_subscribe_button",
	12: "pay_for_referrer",
	13: "add_money_for_referrer",
	14: "pay_invoice",
	15: "charge_stripe",
	16: "create_bill",
	17: "use_credit",
	18: "edit_subscription",
	19: "edit_invoice",
	20: "downgrade",
}

var Log_Action_value = map[string]int32{
	"create_invoice":         0,
	"change_invoice_status":  1,
	"create_discount":        2,
	"delete_discount":        3,
	"redeem_discount":        4,
	"add_credit":             5,
	"redeem_credit":          6,
	"delete_account":         7,
	"change_plan":            8,
	"renew_subscription":     10,
	"click_subscribe_button": 11,
	"pay_for_referrer":       12,
	"add_money_for_referrer": 13,
	"pay_invoice":            14,
	"charge_stripe":          15,
	"create_bill":            16,
	"use_credit":             17,
	"edit_subscription":      18,
	"edit_invoice":           19,
	"downgrade":              20,
}

func (x Log_Action) Enum() *Log_Action {
	p := new(Log_Action)
	*p = x
	return p
}

func (x Log_Action) String() string {
	return proto.EnumName(Log_Action_name, int32(x))
}

func (x *Log_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Log_Action_value, data, "Log_Action")
	if err != nil {
		return err
	}
	*x = Log_Action(value)
	return nil
}

func (Log_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{38, 0}
}

type Addon_Type int32

const (
	Addon_credit Addon_Type = 0
	Addon_agent  Addon_Type = 1
)

var Addon_Type_name = map[int32]string{
	0: "credit",
	1: "agent",
}

var Addon_Type_value = map[string]int32{
	"credit": 0,
	"agent":  1,
}

func (x Addon_Type) Enum() *Addon_Type {
	p := new(Addon_Type)
	*p = x
	return p
}

func (x Addon_Type) String() string {
	return proto.EnumName(Addon_Type_name, int32(x))
}

func (x *Addon_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_Type_value, data, "Addon_Type")
	if err != nil {
		return err
	}
	*x = Addon_Type(value)
	return nil
}

func (Addon_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{39, 0}
}

type Addon_ChargeType int32

const (
	Addon_one_time  Addon_ChargeType = 0
	Addon_recurring Addon_ChargeType = 1
)

var Addon_ChargeType_name = map[int32]string{
	0: "one_time",
	1: "recurring",
}

var Addon_ChargeType_value = map[string]int32{
	"one_time":  0,
	"recurring": 1,
}

func (x Addon_ChargeType) Enum() *Addon_ChargeType {
	p := new(Addon_ChargeType)
	*p = x
	return p
}

func (x Addon_ChargeType) String() string {
	return proto.EnumName(Addon_ChargeType_name, int32(x))
}

func (x *Addon_ChargeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_ChargeType_value, data, "Addon_ChargeType")
	if err != nil {
		return err
	}
	*x = Addon_ChargeType(value)
	return nil
}

func (Addon_ChargeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{39, 1}
}

type Addon_PeriodUnit int32

const (
	Addon_day   Addon_PeriodUnit = 0
	Addon_week  Addon_PeriodUnit = 1
	Addon_month Addon_PeriodUnit = 2
	Addon_year  Addon_PeriodUnit = 3
)

var Addon_PeriodUnit_name = map[int32]string{
	0: "day",
	1: "week",
	2: "month",
	3: "year",
}

var Addon_PeriodUnit_value = map[string]int32{
	"day":   0,
	"week":  1,
	"month": 2,
	"year":  3,
}

func (x Addon_PeriodUnit) Enum() *Addon_PeriodUnit {
	p := new(Addon_PeriodUnit)
	*p = x
	return p
}

func (x Addon_PeriodUnit) String() string {
	return proto.EnumName(Addon_PeriodUnit_name, int32(x))
}

func (x *Addon_PeriodUnit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_PeriodUnit_value, data, "Addon_PeriodUnit")
	if err != nil {
		return err
	}
	*x = Addon_PeriodUnit(value)
	return nil
}

func (Addon_PeriodUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{39, 2}
}

type ListCommentsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TopicId              *string         `protobuf:"bytes,3,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{0}
}

func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsRequest.Unmarshal(m, b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommentsRequest.Size(m)
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

func (m *ListCommentsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListCommentsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListCommentsRequest) GetTopicId() string {
	if m != nil && m.TopicId != nil {
		return *m.TopicId
	}
	return ""
}

type Comments struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Comments             []*Comment      `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Comments) Reset()         { *m = Comments{} }
func (m *Comments) String() string { return proto.CompactTextString(m) }
func (*Comments) ProtoMessage()    {}
func (*Comments) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{1}
}

func (m *Comments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comments.Unmarshal(m, b)
}
func (m *Comments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comments.Marshal(b, m, deterministic)
}
func (m *Comments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comments.Merge(m, src)
}
func (m *Comments) XXX_Size() int {
	return xxx_messageInfo_Comments.Size(m)
}
func (m *Comments) XXX_DiscardUnknown() {
	xxx_messageInfo_Comments.DiscardUnknown(m)
}

var xxx_messageInfo_Comments proto.InternalMessageInfo

func (m *Comments) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Comments) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Comments) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type Comment struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	TopicId              *string         `protobuf:"bytes,4,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
	TopicType            *string         `protobuf:"bytes,5,opt,name=topic_type,json=topicType" json:"topic_type,omitempty"`
	AuthorAccountId      *string         `protobuf:"bytes,8,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	AuthorId             *string         `protobuf:"bytes,9,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	AuthorEmail          *string         `protobuf:"bytes,10,opt,name=author_email,json=authorEmail" json:"author_email,omitempty"`
	Content              *string         `protobuf:"bytes,11,opt,name=content" json:"content,omitempty"`
	Created              *int64          `protobuf:"varint,12,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{2}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Comment) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Comment) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Comment) GetTopicId() string {
	if m != nil && m.TopicId != nil {
		return *m.TopicId
	}
	return ""
}

func (m *Comment) GetTopicType() string {
	if m != nil && m.TopicType != nil {
		return *m.TopicType
	}
	return ""
}

func (m *Comment) GetAuthorAccountId() string {
	if m != nil && m.AuthorAccountId != nil {
		return *m.AuthorAccountId
	}
	return ""
}

func (m *Comment) GetAuthorId() string {
	if m != nil && m.AuthorId != nil {
		return *m.AuthorId
	}
	return ""
}

func (m *Comment) GetAuthorEmail() string {
	if m != nil && m.AuthorEmail != nil {
		return *m.AuthorEmail
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *Comment) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type Stripe struct {
	CardLast4            *string  `protobuf:"bytes,2,opt,name=card_last4,json=cardLast4" json:"card_last4,omitempty"`
	CustomerId           *string  `protobuf:"bytes,3,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Token                *string  `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stripe) Reset()         { *m = Stripe{} }
func (m *Stripe) String() string { return proto.CompactTextString(m) }
func (*Stripe) ProtoMessage()    {}
func (*Stripe) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{3}
}

func (m *Stripe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stripe.Unmarshal(m, b)
}
func (m *Stripe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stripe.Marshal(b, m, deterministic)
}
func (m *Stripe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stripe.Merge(m, src)
}
func (m *Stripe) XXX_Size() int {
	return xxx_messageInfo_Stripe.Size(m)
}
func (m *Stripe) XXX_DiscardUnknown() {
	xxx_messageInfo_Stripe.DiscardUnknown(m)
}

var xxx_messageInfo_Stripe proto.InternalMessageInfo

func (m *Stripe) GetCardLast4() string {
	if m != nil && m.CardLast4 != nil {
		return *m.CardLast4
	}
	return ""
}

func (m *Stripe) GetCustomerId() string {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return ""
}

func (m *Stripe) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type PaymentMethods struct {
	PaymentMethods       []*PaymentMethod `protobuf:"bytes,2,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PaymentMethods) Reset()         { *m = PaymentMethods{} }
func (m *PaymentMethods) String() string { return proto.CompactTextString(m) }
func (*PaymentMethods) ProtoMessage()    {}
func (*PaymentMethods) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{4}
}

func (m *PaymentMethods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethods.Unmarshal(m, b)
}
func (m *PaymentMethods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethods.Marshal(b, m, deterministic)
}
func (m *PaymentMethods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethods.Merge(m, src)
}
func (m *PaymentMethods) XXX_Size() int {
	return xxx_messageInfo_PaymentMethods.Size(m)
}
func (m *PaymentMethods) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethods.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethods proto.InternalMessageInfo

func (m *PaymentMethods) GetPaymentMethods() []*PaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type PaymentMethod struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Type                 *string         `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Id                   *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	State                *string         `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	Created              *int64          `protobuf:"varint,8,opt,name=created" json:"created,omitempty"`
	Stripe               *Stripe         `protobuf:"bytes,9,opt,name=stripe" json:"stripe,omitempty"`
	FailedMessage        *string         `protobuf:"bytes,10,opt,name=failed_message,json=failedMessage" json:"failed_message,omitempty"`
	Charged              *int64          `protobuf:"varint,11,opt,name=charged" json:"charged,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{5}
}

func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (m *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(m, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PaymentMethod) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PaymentMethod) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PaymentMethod) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PaymentMethod) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *PaymentMethod) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *PaymentMethod) GetStripe() *Stripe {
	if m != nil {
		return m.Stripe
	}
	return nil
}

func (m *PaymentMethod) GetFailedMessage() string {
	if m != nil && m.FailedMessage != nil {
		return *m.FailedMessage
	}
	return ""
}

func (m *PaymentMethod) GetCharged() int64 {
	if m != nil && m.Charged != nil {
		return *m.Charged
	}
	return 0
}

type Limit struct {
	Ctx            *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId      *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxAutomations *uint32         `protobuf:"varint,4,opt,name=max_automations,json=maxAutomations" json:"max_automations,omitempty"`
	// optional uint32 max_conversations = 6;
	MaxSegments            *uint32  `protobuf:"varint,7,opt,name=max_segments,json=maxSegments" json:"max_segments,omitempty"`
	MaxAgents              *uint32  `protobuf:"varint,8,opt,name=max_agents,json=maxAgents" json:"max_agents,omitempty"`
	CanBuyAgent            *bool    `protobuf:"varint,10,opt,name=can_buy_agent,json=canBuyAgent" json:"can_buy_agent,omitempty"`
	AutomationWebhookQuota *uint32  `protobuf:"varint,12,opt,name=automation_webhook_quota,json=automationWebhookQuota" json:"automation_webhook_quota,omitempty"`
	AutomationEmailQuota   *uint32  `protobuf:"varint,13,opt,name=automation_email_quota,json=automationEmailQuota" json:"automation_email_quota,omitempty"`
	AutomationMessageQuota *uint32  `protobuf:"varint,14,opt,name=automation_message_quota,json=automationMessageQuota" json:"automation_message_quota,omitempty"`
	MaxRules               *uint32  `protobuf:"varint,16,opt,name=max_rules,json=maxRules" json:"max_rules,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Limit) Reset()         { *m = Limit{} }
func (m *Limit) String() string { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()    {}
func (*Limit) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{6}
}

func (m *Limit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Limit.Unmarshal(m, b)
}
func (m *Limit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Limit.Marshal(b, m, deterministic)
}
func (m *Limit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Limit.Merge(m, src)
}
func (m *Limit) XXX_Size() int {
	return xxx_messageInfo_Limit.Size(m)
}
func (m *Limit) XXX_DiscardUnknown() {
	xxx_messageInfo_Limit.DiscardUnknown(m)
}

var xxx_messageInfo_Limit proto.InternalMessageInfo

func (m *Limit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Limit) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Limit) GetMaxAutomations() uint32 {
	if m != nil && m.MaxAutomations != nil {
		return *m.MaxAutomations
	}
	return 0
}

func (m *Limit) GetMaxSegments() uint32 {
	if m != nil && m.MaxSegments != nil {
		return *m.MaxSegments
	}
	return 0
}

func (m *Limit) GetMaxAgents() uint32 {
	if m != nil && m.MaxAgents != nil {
		return *m.MaxAgents
	}
	return 0
}

func (m *Limit) GetCanBuyAgent() bool {
	if m != nil && m.CanBuyAgent != nil {
		return *m.CanBuyAgent
	}
	return false
}

func (m *Limit) GetAutomationWebhookQuota() uint32 {
	if m != nil && m.AutomationWebhookQuota != nil {
		return *m.AutomationWebhookQuota
	}
	return 0
}

func (m *Limit) GetAutomationEmailQuota() uint32 {
	if m != nil && m.AutomationEmailQuota != nil {
		return *m.AutomationEmailQuota
	}
	return 0
}

func (m *Limit) GetAutomationMessageQuota() uint32 {
	if m != nil && m.AutomationMessageQuota != nil {
		return *m.AutomationMessageQuota
	}
	return 0
}

func (m *Limit) GetMaxRules() uint32 {
	if m != nil && m.MaxRules != nil {
		return *m.MaxRules
	}
	return 0
}

type Plans struct {
	Plans                []*Plan  `protobuf:"bytes,2,rep,name=plans" json:"plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plans) Reset()         { *m = Plans{} }
func (m *Plans) String() string { return proto.CompactTextString(m) }
func (*Plans) ProtoMessage()    {}
func (*Plans) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{7}
}

func (m *Plans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plans.Unmarshal(m, b)
}
func (m *Plans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plans.Marshal(b, m, deterministic)
}
func (m *Plans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plans.Merge(m, src)
}
func (m *Plans) XXX_Size() int {
	return xxx_messageInfo_Plans.Size(m)
}
func (m *Plans) XXX_DiscardUnknown() {
	xxx_messageInfo_Plans.DiscardUnknown(m)
}

var xxx_messageInfo_Plans proto.InternalMessageInfo

func (m *Plans) GetPlans() []*Plan {
	if m != nil {
		return m.Plans
	}
	return nil
}

type Plan struct {
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Limit                *Limit   `protobuf:"bytes,3,opt,name=limit" json:"limit,omitempty"`
	Price                *float32 `protobuf:"fixed32,4,opt,name=price" json:"price,omitempty"`
	Level                *uint32  `protobuf:"varint,14,opt,name=level" json:"level,omitempty"`
	CanBuyAgent          *bool    `protobuf:"varint,15,opt,name=can_buy_agent,json=canBuyAgent" json:"can_buy_agent,omitempty"`
	CanBuy               *bool    `protobuf:"varint,16,opt,name=can_buy,json=canBuy" json:"can_buy,omitempty"`
	HasStartTime         *bool    `protobuf:"varint,17,opt,name=has_start_time,json=hasStartTime" json:"has_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{8}
}

func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (m *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(m, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Plan) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Plan) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Plan) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Plan) GetCanBuyAgent() bool {
	if m != nil && m.CanBuyAgent != nil {
		return *m.CanBuyAgent
	}
	return false
}

func (m *Plan) GetCanBuy() bool {
	if m != nil && m.CanBuy != nil {
		return *m.CanBuy
	}
	return false
}

func (m *Plan) GetHasStartTime() bool {
	if m != nil && m.HasStartTime != nil {
		return *m.HasStartTime
	}
	return false
}

type Subscription struct {
	Ctx                   *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId             *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created               *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	PromotionCode         *string         `protobuf:"bytes,4,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"`
	Name                  *string         `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Started               *int64          `protobuf:"varint,5,opt,name=started" json:"started,omitempty"`
	DueDate               *int64          `protobuf:"varint,6,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	AutoRenew             *bool           `protobuf:"varint,9,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
	BillingCycleMonth     *uint32         `protobuf:"varint,15,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	NextBillingCycleMonth *uint32         `protobuf:"varint,16,opt,name=next_billing_cycle_month,json=nextBillingCycleMonth" json:"next_billing_cycle_month,omitempty"`
	Plan                  *string         `protobuf:"bytes,17,opt,name=plan" json:"plan,omitempty"`
	Addons                []*Addon        `protobuf:"bytes,21,rep,name=addons" json:"addons,omitempty"`
	Credit                *float32        `protobuf:"fixed32,27,opt,name=credit" json:"credit,omitempty"`
	Notes                 []*Note         `protobuf:"bytes,28,rep,name=notes" json:"notes,omitempty"`
	ReferralBy            *string         `protobuf:"bytes,29,opt,name=referral_by,json=referralBy" json:"referral_by,omitempty"`
	Customer              *Customer       `protobuf:"bytes,31,opt,name=customer" json:"customer,omitempty"`
	PrimaryPaymentMethod  *string         `protobuf:"bytes,32,opt,name=primary_payment_method,json=primaryPaymentMethod" json:"primary_payment_method,omitempty"`
	Limit                 *Limit          `protobuf:"bytes,42,opt,name=limit" json:"limit,omitempty"`
	V3State               *int32          `protobuf:"varint,43,opt,name=v3_state,json=v3State" json:"v3_state,omitempty"`
	AutoCharge            *bool           `protobuf:"varint,44,opt,name=auto_charge,json=autoCharge" json:"auto_charge,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{9}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Subscription) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Subscription) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Subscription) GetPromotionCode() string {
	if m != nil && m.PromotionCode != nil {
		return *m.PromotionCode
	}
	return ""
}

func (m *Subscription) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Subscription) GetStarted() int64 {
	if m != nil && m.Started != nil {
		return *m.Started
	}
	return 0
}

func (m *Subscription) GetDueDate() int64 {
	if m != nil && m.DueDate != nil {
		return *m.DueDate
	}
	return 0
}

func (m *Subscription) GetAutoRenew() bool {
	if m != nil && m.AutoRenew != nil {
		return *m.AutoRenew
	}
	return false
}

func (m *Subscription) GetBillingCycleMonth() uint32 {
	if m != nil && m.BillingCycleMonth != nil {
		return *m.BillingCycleMonth
	}
	return 0
}

func (m *Subscription) GetNextBillingCycleMonth() uint32 {
	if m != nil && m.NextBillingCycleMonth != nil {
		return *m.NextBillingCycleMonth
	}
	return 0
}

func (m *Subscription) GetPlan() string {
	if m != nil && m.Plan != nil {
		return *m.Plan
	}
	return ""
}

func (m *Subscription) GetAddons() []*Addon {
	if m != nil {
		return m.Addons
	}
	return nil
}

func (m *Subscription) GetCredit() float32 {
	if m != nil && m.Credit != nil {
		return *m.Credit
	}
	return 0
}

func (m *Subscription) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Subscription) GetReferralBy() string {
	if m != nil && m.ReferralBy != nil {
		return *m.ReferralBy
	}
	return ""
}

func (m *Subscription) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Subscription) GetPrimaryPaymentMethod() string {
	if m != nil && m.PrimaryPaymentMethod != nil {
		return *m.PrimaryPaymentMethod
	}
	return ""
}

func (m *Subscription) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Subscription) GetV3State() int32 {
	if m != nil && m.V3State != nil {
		return *m.V3State
	}
	return 0
}

func (m *Subscription) GetAutoCharge() bool {
	if m != nil && m.AutoCharge != nil {
		return *m.AutoCharge
	}
	return false
}

type Bill struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Id                   *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AccountId            *string         `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Amount               *float32        `protobuf:"fixed32,5,opt,name=amount" json:"amount,omitempty"`
	InvoiceIds           []string        `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Created              *int64          `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	CustomerInfo         *Contact        `protobuf:"bytes,8,opt,name=customer_info,json=customerInfo" json:"customer_info,omitempty"`
	PaymentMethod        *string         `protobuf:"bytes,10,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
	Year                 *int32          `protobuf:"varint,11,opt,name=year" json:"year,omitempty"`
	Description          *string         `protobuf:"bytes,12,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Bill) Reset()         { *m = Bill{} }
func (m *Bill) String() string { return proto.CompactTextString(m) }
func (*Bill) ProtoMessage()    {}
func (*Bill) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{10}
}

func (m *Bill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bill.Unmarshal(m, b)
}
func (m *Bill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bill.Marshal(b, m, deterministic)
}
func (m *Bill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bill.Merge(m, src)
}
func (m *Bill) XXX_Size() int {
	return xxx_messageInfo_Bill.Size(m)
}
func (m *Bill) XXX_DiscardUnknown() {
	xxx_messageInfo_Bill.DiscardUnknown(m)
}

var xxx_messageInfo_Bill proto.InternalMessageInfo

func (m *Bill) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Bill) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Bill) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Bill) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *Bill) GetInvoiceIds() []string {
	if m != nil {
		return m.InvoiceIds
	}
	return nil
}

func (m *Bill) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Bill) GetCustomerInfo() *Contact {
	if m != nil {
		return m.CustomerInfo
	}
	return nil
}

func (m *Bill) GetPaymentMethod() string {
	if m != nil && m.PaymentMethod != nil {
		return *m.PaymentMethod
	}
	return ""
}

func (m *Bill) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *Bill) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type Note struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Message              *string         `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Creator              *string         `protobuf:"bytes,5,opt,name=creator" json:"creator,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{11}
}

func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (m *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(m, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Note) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Note) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *Note) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type Invoices struct {
	Invoices             []*Invoice `protobuf:"bytes,2,rep,name=invoices" json:"invoices,omitempty"`
	AccountId            *string    `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Anchor               *string    `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Invoices) Reset()         { *m = Invoices{} }
func (m *Invoices) String() string { return proto.CompactTextString(m) }
func (*Invoices) ProtoMessage()    {}
func (*Invoices) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{12}
}

func (m *Invoices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoices.Unmarshal(m, b)
}
func (m *Invoices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoices.Marshal(b, m, deterministic)
}
func (m *Invoices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoices.Merge(m, src)
}
func (m *Invoices) XXX_Size() int {
	return xxx_messageInfo_Invoices.Size(m)
}
func (m *Invoices) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoices.DiscardUnknown(m)
}

var xxx_messageInfo_Invoices proto.InternalMessageInfo

func (m *Invoices) GetInvoices() []*Invoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *Invoices) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Invoices) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type ListInvoiceRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	State                *string         `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Limit                *int32          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	AccountId            *string         `protobuf:"bytes,5,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	OrderBy              *string         `protobuf:"bytes,6,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListInvoiceRequest) Reset()         { *m = ListInvoiceRequest{} }
func (m *ListInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListInvoiceRequest) ProtoMessage()    {}
func (*ListInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{13}
}

func (m *ListInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInvoiceRequest.Unmarshal(m, b)
}
func (m *ListInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInvoiceRequest.Marshal(b, m, deterministic)
}
func (m *ListInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInvoiceRequest.Merge(m, src)
}
func (m *ListInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListInvoiceRequest.Size(m)
}
func (m *ListInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInvoiceRequest proto.InternalMessageInfo

func (m *ListInvoiceRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListInvoiceRequest) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *ListInvoiceRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListInvoiceRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListInvoiceRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListInvoiceRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *ListInvoiceRequest) GetOrderBy() string {
	if m != nil && m.OrderBy != nil {
		return *m.OrderBy
	}
	return ""
}

type Invoice struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	AmountDue            *float32        `protobuf:"fixed32,4,opt,name=amount_due,json=amountDue" json:"amount_due,omitempty"`
	PromotionCode        *string         `protobuf:"bytes,5,opt,name=promotion_code,json=promotionCode" json:"promotion_code,omitempty"`
	Description          *string         `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	BillingInfo          *BillingInfo    `protobuf:"bytes,8,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	DueDate              *int64          `protobuf:"varint,9,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	State                *string         `protobuf:"bytes,10,opt,name=state" json:"state,omitempty"`
	Created              *int64          `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	Items                []*InvoiceItem  `protobuf:"bytes,12,rep,name=items" json:"items,omitempty"`
	Subtotal             *float32        `protobuf:"fixed32,14,opt,name=subtotal" json:"subtotal,omitempty"`
	TaxPercent           *float32        `protobuf:"fixed32,15,opt,name=tax_percent,json=taxPercent" json:"tax_percent,omitempty"`
	Tax                  *float32        `protobuf:"fixed32,16,opt,name=tax" json:"tax,omitempty"`
	Total                *float32        `protobuf:"fixed32,17,opt,name=total" json:"total,omitempty"`
	Updated              *int64          `protobuf:"varint,18,opt,name=updated" json:"updated,omitempty"`
	Year                 *int32          `protobuf:"varint,19,opt,name=year" json:"year,omitempty"`
	Notes                []*Note         `protobuf:"bytes,22,rep,name=notes" json:"notes,omitempty"`
	Bills                []string        `protobuf:"bytes,23,rep,name=bills" json:"bills,omitempty"`
	PaymentMade          *float32        `protobuf:"fixed32,24,opt,name=payment_made,json=paymentMade" json:"payment_made,omitempty"`
	CurrentSub           *Subscription   `protobuf:"bytes,25,opt,name=current_sub,json=currentSub" json:"current_sub,omitempty"`
	CurrentPlan          *Plan           `protobuf:"bytes,26,opt,name=current_plan,json=currentPlan" json:"current_plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{14}
}

func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (m *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(m, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Invoice) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Invoice) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Invoice) GetAmountDue() float32 {
	if m != nil && m.AmountDue != nil {
		return *m.AmountDue
	}
	return 0
}

func (m *Invoice) GetPromotionCode() string {
	if m != nil && m.PromotionCode != nil {
		return *m.PromotionCode
	}
	return ""
}

func (m *Invoice) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Invoice) GetBillingInfo() *BillingInfo {
	if m != nil {
		return m.BillingInfo
	}
	return nil
}

func (m *Invoice) GetDueDate() int64 {
	if m != nil && m.DueDate != nil {
		return *m.DueDate
	}
	return 0
}

func (m *Invoice) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Invoice) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Invoice) GetItems() []*InvoiceItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Invoice) GetSubtotal() float32 {
	if m != nil && m.Subtotal != nil {
		return *m.Subtotal
	}
	return 0
}

func (m *Invoice) GetTaxPercent() float32 {
	if m != nil && m.TaxPercent != nil {
		return *m.TaxPercent
	}
	return 0
}

func (m *Invoice) GetTax() float32 {
	if m != nil && m.Tax != nil {
		return *m.Tax
	}
	return 0
}

func (m *Invoice) GetTotal() float32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *Invoice) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Invoice) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *Invoice) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Invoice) GetBills() []string {
	if m != nil {
		return m.Bills
	}
	return nil
}

func (m *Invoice) GetPaymentMade() float32 {
	if m != nil && m.PaymentMade != nil {
		return *m.PaymentMade
	}
	return 0
}

func (m *Invoice) GetCurrentSub() *Subscription {
	if m != nil {
		return m.CurrentSub
	}
	return nil
}

func (m *Invoice) GetCurrentPlan() *Plan {
	if m != nil {
		return m.CurrentPlan
	}
	return nil
}

type AgentInvoiceItem struct {
	Plan                 *string  `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	DayLeft              *int32   `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	AgentCount           *int32   `protobuf:"varint,8,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentInvoiceItem) Reset()         { *m = AgentInvoiceItem{} }
func (m *AgentInvoiceItem) String() string { return proto.CompactTextString(m) }
func (*AgentInvoiceItem) ProtoMessage()    {}
func (*AgentInvoiceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{15}
}

func (m *AgentInvoiceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentInvoiceItem.Unmarshal(m, b)
}
func (m *AgentInvoiceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentInvoiceItem.Marshal(b, m, deterministic)
}
func (m *AgentInvoiceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentInvoiceItem.Merge(m, src)
}
func (m *AgentInvoiceItem) XXX_Size() int {
	return xxx_messageInfo_AgentInvoiceItem.Size(m)
}
func (m *AgentInvoiceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentInvoiceItem.DiscardUnknown(m)
}

var xxx_messageInfo_AgentInvoiceItem proto.InternalMessageInfo

func (m *AgentInvoiceItem) GetPlan() string {
	if m != nil && m.Plan != nil {
		return *m.Plan
	}
	return ""
}

func (m *AgentInvoiceItem) GetDayLeft() int32 {
	if m != nil && m.DayLeft != nil {
		return *m.DayLeft
	}
	return 0
}

func (m *AgentInvoiceItem) GetAgentCount() int32 {
	if m != nil && m.AgentCount != nil {
		return *m.AgentCount
	}
	return 0
}

type RenewInvoiceItem struct {
	Plan                 *string  `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	BillingCycleMonth    *uint32  `protobuf:"varint,4,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	AgentCount           *uint32  `protobuf:"varint,5,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	FromTime             *int64   `protobuf:"varint,6,opt,name=from_time,json=fromTime" json:"from_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewInvoiceItem) Reset()         { *m = RenewInvoiceItem{} }
func (m *RenewInvoiceItem) String() string { return proto.CompactTextString(m) }
func (*RenewInvoiceItem) ProtoMessage()    {}
func (*RenewInvoiceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{16}
}

func (m *RenewInvoiceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewInvoiceItem.Unmarshal(m, b)
}
func (m *RenewInvoiceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewInvoiceItem.Marshal(b, m, deterministic)
}
func (m *RenewInvoiceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewInvoiceItem.Merge(m, src)
}
func (m *RenewInvoiceItem) XXX_Size() int {
	return xxx_messageInfo_RenewInvoiceItem.Size(m)
}
func (m *RenewInvoiceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewInvoiceItem.DiscardUnknown(m)
}

var xxx_messageInfo_RenewInvoiceItem proto.InternalMessageInfo

func (m *RenewInvoiceItem) GetPlan() string {
	if m != nil && m.Plan != nil {
		return *m.Plan
	}
	return ""
}

func (m *RenewInvoiceItem) GetBillingCycleMonth() uint32 {
	if m != nil && m.BillingCycleMonth != nil {
		return *m.BillingCycleMonth
	}
	return 0
}

func (m *RenewInvoiceItem) GetAgentCount() uint32 {
	if m != nil && m.AgentCount != nil {
		return *m.AgentCount
	}
	return 0
}

func (m *RenewInvoiceItem) GetFromTime() int64 {
	if m != nil && m.FromTime != nil {
		return *m.FromTime
	}
	return 0
}

type PlanInvoiceItem struct {
	AgentCount           *uint32  `protobuf:"varint,2,opt,name=agent_count,json=agentCount" json:"agent_count,omitempty"`
	BillingCycleMonth    *uint32  `protobuf:"varint,5,opt,name=billing_cycle_month,json=billingCycleMonth" json:"billing_cycle_month,omitempty"`
	OldPlan              *string  `protobuf:"bytes,6,opt,name=old_plan,json=oldPlan" json:"old_plan,omitempty"`
	NewPlan              *string  `protobuf:"bytes,3,opt,name=new_plan,json=newPlan" json:"new_plan,omitempty"`
	SavePercentage       *float32 `protobuf:"fixed32,9,opt,name=save_percentage,json=savePercentage" json:"save_percentage,omitempty"`
	Started              *int64   `protobuf:"varint,8,opt,name=started" json:"started,omitempty"`
	DayLeft              *int32   `protobuf:"varint,4,opt,name=day_left,json=dayLeft" json:"day_left,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanInvoiceItem) Reset()         { *m = PlanInvoiceItem{} }
func (m *PlanInvoiceItem) String() string { return proto.CompactTextString(m) }
func (*PlanInvoiceItem) ProtoMessage()    {}
func (*PlanInvoiceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{17}
}

func (m *PlanInvoiceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanInvoiceItem.Unmarshal(m, b)
}
func (m *PlanInvoiceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanInvoiceItem.Marshal(b, m, deterministic)
}
func (m *PlanInvoiceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanInvoiceItem.Merge(m, src)
}
func (m *PlanInvoiceItem) XXX_Size() int {
	return xxx_messageInfo_PlanInvoiceItem.Size(m)
}
func (m *PlanInvoiceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanInvoiceItem.DiscardUnknown(m)
}

var xxx_messageInfo_PlanInvoiceItem proto.InternalMessageInfo

func (m *PlanInvoiceItem) GetAgentCount() uint32 {
	if m != nil && m.AgentCount != nil {
		return *m.AgentCount
	}
	return 0
}

func (m *PlanInvoiceItem) GetBillingCycleMonth() uint32 {
	if m != nil && m.BillingCycleMonth != nil {
		return *m.BillingCycleMonth
	}
	return 0
}

func (m *PlanInvoiceItem) GetOldPlan() string {
	if m != nil && m.OldPlan != nil {
		return *m.OldPlan
	}
	return ""
}

func (m *PlanInvoiceItem) GetNewPlan() string {
	if m != nil && m.NewPlan != nil {
		return *m.NewPlan
	}
	return ""
}

func (m *PlanInvoiceItem) GetSavePercentage() float32 {
	if m != nil && m.SavePercentage != nil {
		return *m.SavePercentage
	}
	return 0
}

func (m *PlanInvoiceItem) GetStarted() int64 {
	if m != nil && m.Started != nil {
		return *m.Started
	}
	return 0
}

func (m *PlanInvoiceItem) GetDayLeft() int32 {
	if m != nil && m.DayLeft != nil {
		return *m.DayLeft
	}
	return 0
}

type InvoiceItem struct {
	Description          *string           `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	InvoiceId            *string           `protobuf:"bytes,6,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Quantity             *int32            `protobuf:"varint,7,opt,name=quantity" json:"quantity,omitempty"`
	Price                *float32          `protobuf:"fixed32,8,opt,name=price" json:"price,omitempty"`
	Data                 *InvoiceItem_Data `protobuf:"bytes,9,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvoiceItem) Reset()         { *m = InvoiceItem{} }
func (m *InvoiceItem) String() string { return proto.CompactTextString(m) }
func (*InvoiceItem) ProtoMessage()    {}
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{18}
}

func (m *InvoiceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceItem.Unmarshal(m, b)
}
func (m *InvoiceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceItem.Marshal(b, m, deterministic)
}
func (m *InvoiceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceItem.Merge(m, src)
}
func (m *InvoiceItem) XXX_Size() int {
	return xxx_messageInfo_InvoiceItem.Size(m)
}
func (m *InvoiceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceItem.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceItem proto.InternalMessageInfo

func (m *InvoiceItem) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *InvoiceItem) GetInvoiceId() string {
	if m != nil && m.InvoiceId != nil {
		return *m.InvoiceId
	}
	return ""
}

func (m *InvoiceItem) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *InvoiceItem) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *InvoiceItem) GetData() *InvoiceItem_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type InvoiceItem_Data struct {
	Renew                *RenewInvoiceItem `protobuf:"bytes,2,opt,name=renew" json:"renew,omitempty"`
	Agent                *AgentInvoiceItem `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
	Plan                 *PlanInvoiceItem  `protobuf:"bytes,5,opt,name=plan" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvoiceItem_Data) Reset()         { *m = InvoiceItem_Data{} }
func (m *InvoiceItem_Data) String() string { return proto.CompactTextString(m) }
func (*InvoiceItem_Data) ProtoMessage()    {}
func (*InvoiceItem_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{18, 0}
}

func (m *InvoiceItem_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceItem_Data.Unmarshal(m, b)
}
func (m *InvoiceItem_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceItem_Data.Marshal(b, m, deterministic)
}
func (m *InvoiceItem_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceItem_Data.Merge(m, src)
}
func (m *InvoiceItem_Data) XXX_Size() int {
	return xxx_messageInfo_InvoiceItem_Data.Size(m)
}
func (m *InvoiceItem_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceItem_Data.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceItem_Data proto.InternalMessageInfo

func (m *InvoiceItem_Data) GetRenew() *RenewInvoiceItem {
	if m != nil {
		return m.Renew
	}
	return nil
}

func (m *InvoiceItem_Data) GetAgent() *AgentInvoiceItem {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *InvoiceItem_Data) GetPlan() *PlanInvoiceItem {
	if m != nil {
		return m.Plan
	}
	return nil
}

type BillingInfo struct {
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address              *string  `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Vat                  *string  `protobuf:"bytes,4,opt,name=vat" json:"vat,omitempty"`
	CountryCode          *string  `protobuf:"bytes,5,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BillingInfo) Reset()         { *m = BillingInfo{} }
func (m *BillingInfo) String() string { return proto.CompactTextString(m) }
func (*BillingInfo) ProtoMessage()    {}
func (*BillingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{19}
}

func (m *BillingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BillingInfo.Unmarshal(m, b)
}
func (m *BillingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BillingInfo.Marshal(b, m, deterministic)
}
func (m *BillingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillingInfo.Merge(m, src)
}
func (m *BillingInfo) XXX_Size() int {
	return xxx_messageInfo_BillingInfo.Size(m)
}
func (m *BillingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BillingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BillingInfo proto.InternalMessageInfo

func (m *BillingInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *BillingInfo) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *BillingInfo) GetVat() string {
	if m != nil && m.Vat != nil {
		return *m.Vat
	}
	return ""
}

func (m *BillingInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

type Contact struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Name                 *string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email                *string         `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone                *string         `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	JobTitle             *string         `protobuf:"bytes,5,opt,name=job_title,json=jobTitle" json:"job_title,omitempty"`
	Title                *string         `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Primary              *bool           `protobuf:"varint,7,opt,name=primary" json:"primary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{20}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Contact) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *Contact) GetJobTitle() string {
	if m != nil && m.JobTitle != nil {
		return *m.JobTitle
	}
	return ""
}

func (m *Contact) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Contact) GetPrimary() bool {
	if m != nil && m.Primary != nil {
		return *m.Primary
	}
	return false
}

type Customer struct {
	Id                   *string      `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	AccountId            *string      `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Contacts             []*Contact   `protobuf:"bytes,4,rep,name=contacts" json:"contacts,omitempty"`
	Created              *int64       `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	BillingInfo          *BillingInfo `protobuf:"bytes,6,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{21}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Customer) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Customer) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Customer) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Customer) GetBillingInfo() *BillingInfo {
	if m != nil {
		return m.BillingInfo
	}
	return nil
}

type FixedAmountPromotionCode struct {
	Amount               *float32 `protobuf:"fixed32,2,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FixedAmountPromotionCode) Reset()         { *m = FixedAmountPromotionCode{} }
func (m *FixedAmountPromotionCode) String() string { return proto.CompactTextString(m) }
func (*FixedAmountPromotionCode) ProtoMessage()    {}
func (*FixedAmountPromotionCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{22}
}

func (m *FixedAmountPromotionCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedAmountPromotionCode.Unmarshal(m, b)
}
func (m *FixedAmountPromotionCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedAmountPromotionCode.Marshal(b, m, deterministic)
}
func (m *FixedAmountPromotionCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedAmountPromotionCode.Merge(m, src)
}
func (m *FixedAmountPromotionCode) XXX_Size() int {
	return xxx_messageInfo_FixedAmountPromotionCode.Size(m)
}
func (m *FixedAmountPromotionCode) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedAmountPromotionCode.DiscardUnknown(m)
}

var xxx_messageInfo_FixedAmountPromotionCode proto.InternalMessageInfo

func (m *FixedAmountPromotionCode) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type PercentPromotionCode struct {
	Percent              *float32 `protobuf:"fixed32,2,opt,name=percent" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PercentPromotionCode) Reset()         { *m = PercentPromotionCode{} }
func (m *PercentPromotionCode) String() string { return proto.CompactTextString(m) }
func (*PercentPromotionCode) ProtoMessage()    {}
func (*PercentPromotionCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{23}
}

func (m *PercentPromotionCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PercentPromotionCode.Unmarshal(m, b)
}
func (m *PercentPromotionCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PercentPromotionCode.Marshal(b, m, deterministic)
}
func (m *PercentPromotionCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PercentPromotionCode.Merge(m, src)
}
func (m *PercentPromotionCode) XXX_Size() int {
	return xxx_messageInfo_PercentPromotionCode.Size(m)
}
func (m *PercentPromotionCode) XXX_DiscardUnknown() {
	xxx_messageInfo_PercentPromotionCode.DiscardUnknown(m)
}

var xxx_messageInfo_PercentPromotionCode proto.InternalMessageInfo

func (m *PercentPromotionCode) GetPercent() float32 {
	if m != nil && m.Percent != nil {
		return *m.Percent
	}
	return 0
}

type CreditCode struct {
	Credit               *float32 `protobuf:"fixed32,2,opt,name=credit" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditCode) Reset()         { *m = CreditCode{} }
func (m *CreditCode) String() string { return proto.CompactTextString(m) }
func (*CreditCode) ProtoMessage()    {}
func (*CreditCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{24}
}

func (m *CreditCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditCode.Unmarshal(m, b)
}
func (m *CreditCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditCode.Marshal(b, m, deterministic)
}
func (m *CreditCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditCode.Merge(m, src)
}
func (m *CreditCode) XXX_Size() int {
	return xxx_messageInfo_CreditCode.Size(m)
}
func (m *CreditCode) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditCode.DiscardUnknown(m)
}

var xxx_messageInfo_CreditCode proto.InternalMessageInfo

func (m *CreditCode) GetCredit() float32 {
	if m != nil && m.Credit != nil {
		return *m.Credit
	}
	return 0
}

type ReferralCreditCode struct {
	ReferrerId           *string  `protobuf:"bytes,2,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	Credit               *float32 `protobuf:"fixed32,3,opt,name=credit" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReferralCreditCode) Reset()         { *m = ReferralCreditCode{} }
func (m *ReferralCreditCode) String() string { return proto.CompactTextString(m) }
func (*ReferralCreditCode) ProtoMessage()    {}
func (*ReferralCreditCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{25}
}

func (m *ReferralCreditCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferralCreditCode.Unmarshal(m, b)
}
func (m *ReferralCreditCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferralCreditCode.Marshal(b, m, deterministic)
}
func (m *ReferralCreditCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferralCreditCode.Merge(m, src)
}
func (m *ReferralCreditCode) XXX_Size() int {
	return xxx_messageInfo_ReferralCreditCode.Size(m)
}
func (m *ReferralCreditCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferralCreditCode.DiscardUnknown(m)
}

var xxx_messageInfo_ReferralCreditCode proto.InternalMessageInfo

func (m *ReferralCreditCode) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *ReferralCreditCode) GetCredit() float32 {
	if m != nil && m.Credit != nil {
		return *m.Credit
	}
	return 0
}

type PromotionCode struct {
	Ctx            *common.Context     `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Description    *string             `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Type           *string             `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	RedeemCount    *int32              `protobuf:"varint,5,opt,name=redeem_count,json=redeemCount" json:"redeem_count,omitempty"`
	Creator        *string             `protobuf:"bytes,9,opt,name=creator" json:"creator,omitempty"`
	Created        *int64              `protobuf:"varint,10,opt,name=created" json:"created,omitempty"`
	Code           *string             `protobuf:"bytes,11,opt,name=code" json:"code,omitempty"`
	Data           *PromotionCode_Data `protobuf:"bytes,14,opt,name=data" json:"data,omitempty"`
	Start          *int64              `protobuf:"varint,16,opt,name=start" json:"start,omitempty"`
	End            *int64              `protobuf:"varint,17,opt,name=end" json:"end,omitempty"`
	ForPlan        *string             `protobuf:"bytes,18,opt,name=for_plan,json=forPlan" json:"for_plan,omitempty"`
	ForAccountId   *string             `protobuf:"bytes,19,opt,name=for_account_id,json=forAccountId" json:"for_account_id,omitempty"`
	MaxRedemptions *int32              `protobuf:"varint,20,opt,name=max_redemptions,json=maxRedemptions" json:"max_redemptions,omitempty"`
	Addon          *string             `protobuf:"bytes,21,opt,name=addon" json:"addon,omitempty"`
	ForItems       []string            `protobuf:"bytes,23,rep,name=for_items,json=forItems" json:"for_items,omitempty"`
	MinAmount      *float32            `protobuf:"fixed32,24,opt,name=min_amount,json=minAmount" json:"min_amount,omitempty"`
	MaxAmount      *float32            `protobuf:"fixed32,25,opt,name=max_amount,json=maxAmount" json:"max_amount,omitempty"`
	ForPlans       []string            `protobuf:"bytes,26,rep,name=for_plans,json=forPlans" json:"for_plans,omitempty"`
	ForAccountIds  []string            `protobuf:"bytes,27,rep,name=for_account_ids,json=forAccountIds" json:"for_account_ids,omitempty"`
	ForChannels    []string            `protobuf:"bytes,29,rep,name=for_channels,json=forChannels" json:"for_channels,omitempty"`
	IsDeleted      *bool               `protobuf:"varint,30,opt,name=is_deleted,json=isDeleted" json:"is_deleted,omitempty"`
	// repeated int32 for_number_of_agents = 31;
	ForNumberOfAgents    []uint32 `protobuf:"varint,32,rep,name=for_number_of_agents,json=forNumberOfAgents" json:"for_number_of_agents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PromotionCode) Reset()         { *m = PromotionCode{} }
func (m *PromotionCode) String() string { return proto.CompactTextString(m) }
func (*PromotionCode) ProtoMessage()    {}
func (*PromotionCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{26}
}

func (m *PromotionCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionCode.Unmarshal(m, b)
}
func (m *PromotionCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionCode.Marshal(b, m, deterministic)
}
func (m *PromotionCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionCode.Merge(m, src)
}
func (m *PromotionCode) XXX_Size() int {
	return xxx_messageInfo_PromotionCode.Size(m)
}
func (m *PromotionCode) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionCode.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionCode proto.InternalMessageInfo

func (m *PromotionCode) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PromotionCode) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *PromotionCode) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PromotionCode) GetRedeemCount() int32 {
	if m != nil && m.RedeemCount != nil {
		return *m.RedeemCount
	}
	return 0
}

func (m *PromotionCode) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *PromotionCode) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *PromotionCode) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *PromotionCode) GetData() *PromotionCode_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PromotionCode) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *PromotionCode) GetEnd() int64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *PromotionCode) GetForPlan() string {
	if m != nil && m.ForPlan != nil {
		return *m.ForPlan
	}
	return ""
}

func (m *PromotionCode) GetForAccountId() string {
	if m != nil && m.ForAccountId != nil {
		return *m.ForAccountId
	}
	return ""
}

func (m *PromotionCode) GetMaxRedemptions() int32 {
	if m != nil && m.MaxRedemptions != nil {
		return *m.MaxRedemptions
	}
	return 0
}

func (m *PromotionCode) GetAddon() string {
	if m != nil && m.Addon != nil {
		return *m.Addon
	}
	return ""
}

func (m *PromotionCode) GetForItems() []string {
	if m != nil {
		return m.ForItems
	}
	return nil
}

func (m *PromotionCode) GetMinAmount() float32 {
	if m != nil && m.MinAmount != nil {
		return *m.MinAmount
	}
	return 0
}

func (m *PromotionCode) GetMaxAmount() float32 {
	if m != nil && m.MaxAmount != nil {
		return *m.MaxAmount
	}
	return 0
}

func (m *PromotionCode) GetForPlans() []string {
	if m != nil {
		return m.ForPlans
	}
	return nil
}

func (m *PromotionCode) GetForAccountIds() []string {
	if m != nil {
		return m.ForAccountIds
	}
	return nil
}

func (m *PromotionCode) GetForChannels() []string {
	if m != nil {
		return m.ForChannels
	}
	return nil
}

func (m *PromotionCode) GetIsDeleted() bool {
	if m != nil && m.IsDeleted != nil {
		return *m.IsDeleted
	}
	return false
}

func (m *PromotionCode) GetForNumberOfAgents() []uint32 {
	if m != nil {
		return m.ForNumberOfAgents
	}
	return nil
}

type PromotionCode_Data struct {
	FixedAmount          *FixedAmountPromotionCode `protobuf:"bytes,1,opt,name=fixed_amount,json=fixedAmount" json:"fixed_amount,omitempty"`
	Percent              *PercentPromotionCode     `protobuf:"bytes,2,opt,name=percent" json:"percent,omitempty"`
	Credit               *CreditCode               `protobuf:"bytes,3,opt,name=credit" json:"credit,omitempty"`
	Referral             *ReferralCreditCode       `protobuf:"bytes,4,opt,name=referral" json:"referral,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PromotionCode_Data) Reset()         { *m = PromotionCode_Data{} }
func (m *PromotionCode_Data) String() string { return proto.CompactTextString(m) }
func (*PromotionCode_Data) ProtoMessage()    {}
func (*PromotionCode_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{26, 0}
}

func (m *PromotionCode_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionCode_Data.Unmarshal(m, b)
}
func (m *PromotionCode_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionCode_Data.Marshal(b, m, deterministic)
}
func (m *PromotionCode_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionCode_Data.Merge(m, src)
}
func (m *PromotionCode_Data) XXX_Size() int {
	return xxx_messageInfo_PromotionCode_Data.Size(m)
}
func (m *PromotionCode_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionCode_Data.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionCode_Data proto.InternalMessageInfo

func (m *PromotionCode_Data) GetFixedAmount() *FixedAmountPromotionCode {
	if m != nil {
		return m.FixedAmount
	}
	return nil
}

func (m *PromotionCode_Data) GetPercent() *PercentPromotionCode {
	if m != nil {
		return m.Percent
	}
	return nil
}

func (m *PromotionCode_Data) GetCredit() *CreditCode {
	if m != nil {
		return m.Credit
	}
	return nil
}

func (m *PromotionCode_Data) GetReferral() *ReferralCreditCode {
	if m != nil {
		return m.Referral
	}
	return nil
}

type LogPromotionCodeUsed struct {
	Code                 *string  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created              *int64   `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogPromotionCodeUsed) Reset()         { *m = LogPromotionCodeUsed{} }
func (m *LogPromotionCodeUsed) String() string { return proto.CompactTextString(m) }
func (*LogPromotionCodeUsed) ProtoMessage()    {}
func (*LogPromotionCodeUsed) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{27}
}

func (m *LogPromotionCodeUsed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogPromotionCodeUsed.Unmarshal(m, b)
}
func (m *LogPromotionCodeUsed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogPromotionCodeUsed.Marshal(b, m, deterministic)
}
func (m *LogPromotionCodeUsed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogPromotionCodeUsed.Merge(m, src)
}
func (m *LogPromotionCodeUsed) XXX_Size() int {
	return xxx_messageInfo_LogPromotionCodeUsed.Size(m)
}
func (m *LogPromotionCodeUsed) XXX_DiscardUnknown() {
	xxx_messageInfo_LogPromotionCodeUsed.DiscardUnknown(m)
}

var xxx_messageInfo_LogPromotionCodeUsed proto.InternalMessageInfo

func (m *LogPromotionCodeUsed) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *LogPromotionCodeUsed) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *LogPromotionCodeUsed) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type AgentReferInfo struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AgentId              *string         `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Status               *string         `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Earning              *float32        `protobuf:"fixed32,6,opt,name=earning" json:"earning,omitempty"`
	CommissionRate       *float32        `protobuf:"fixed32,7,opt,name=commission_rate,json=commissionRate" json:"commission_rate,omitempty"`
	Created              *int64          `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	BankName             *string         `protobuf:"bytes,11,opt,name=bank_name,json=bankName" json:"bank_name,omitempty"`
	BankAccountNumber    *string         `protobuf:"bytes,12,opt,name=bank_account_number,json=bankAccountNumber" json:"bank_account_number,omitempty"`
	BankBranch           *string         `protobuf:"bytes,14,opt,name=bank_branch,json=bankBranch" json:"bank_branch,omitempty"`
	BankFullname         *string         `protobuf:"bytes,15,opt,name=bank_fullname,json=bankFullname" json:"bank_fullname,omitempty"`
	ReferrerId           *string         `protobuf:"bytes,16,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	MinimumPayment       *float32        `protobuf:"fixed32,17,opt,name=minimum_payment,json=minimumPayment" json:"minimum_payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AgentReferInfo) Reset()         { *m = AgentReferInfo{} }
func (m *AgentReferInfo) String() string { return proto.CompactTextString(m) }
func (*AgentReferInfo) ProtoMessage()    {}
func (*AgentReferInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{28}
}

func (m *AgentReferInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentReferInfo.Unmarshal(m, b)
}
func (m *AgentReferInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentReferInfo.Marshal(b, m, deterministic)
}
func (m *AgentReferInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentReferInfo.Merge(m, src)
}
func (m *AgentReferInfo) XXX_Size() int {
	return xxx_messageInfo_AgentReferInfo.Size(m)
}
func (m *AgentReferInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentReferInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentReferInfo proto.InternalMessageInfo

func (m *AgentReferInfo) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *AgentReferInfo) GetAgentId() string {
	if m != nil && m.AgentId != nil {
		return *m.AgentId
	}
	return ""
}

func (m *AgentReferInfo) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AgentReferInfo) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *AgentReferInfo) GetEarning() float32 {
	if m != nil && m.Earning != nil {
		return *m.Earning
	}
	return 0
}

func (m *AgentReferInfo) GetCommissionRate() float32 {
	if m != nil && m.CommissionRate != nil {
		return *m.CommissionRate
	}
	return 0
}

func (m *AgentReferInfo) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *AgentReferInfo) GetBankName() string {
	if m != nil && m.BankName != nil {
		return *m.BankName
	}
	return ""
}

func (m *AgentReferInfo) GetBankAccountNumber() string {
	if m != nil && m.BankAccountNumber != nil {
		return *m.BankAccountNumber
	}
	return ""
}

func (m *AgentReferInfo) GetBankBranch() string {
	if m != nil && m.BankBranch != nil {
		return *m.BankBranch
	}
	return ""
}

func (m *AgentReferInfo) GetBankFullname() string {
	if m != nil && m.BankFullname != nil {
		return *m.BankFullname
	}
	return ""
}

func (m *AgentReferInfo) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *AgentReferInfo) GetMinimumPayment() float32 {
	if m != nil && m.MinimumPayment != nil {
		return *m.MinimumPayment
	}
	return 0
}

type LogAccountReferred struct {
	ReferrerId           *string  `protobuf:"bytes,1,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Created              *int64   `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	ReferrerAccountId    *string  `protobuf:"bytes,4,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId      *string  `protobuf:"bytes,5,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogAccountReferred) Reset()         { *m = LogAccountReferred{} }
func (m *LogAccountReferred) String() string { return proto.CompactTextString(m) }
func (*LogAccountReferred) ProtoMessage()    {}
func (*LogAccountReferred) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{29}
}

func (m *LogAccountReferred) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAccountReferred.Unmarshal(m, b)
}
func (m *LogAccountReferred) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAccountReferred.Marshal(b, m, deterministic)
}
func (m *LogAccountReferred) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAccountReferred.Merge(m, src)
}
func (m *LogAccountReferred) XXX_Size() int {
	return xxx_messageInfo_LogAccountReferred.Size(m)
}
func (m *LogAccountReferred) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAccountReferred.DiscardUnknown(m)
}

var xxx_messageInfo_LogAccountReferred proto.InternalMessageInfo

func (m *LogAccountReferred) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *LogAccountReferred) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *LogAccountReferred) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *LogAccountReferred) GetReferrerAccountId() string {
	if m != nil && m.ReferrerAccountId != nil {
		return *m.ReferrerAccountId
	}
	return ""
}

func (m *LogAccountReferred) GetReferrerAgentId() string {
	if m != nil && m.ReferrerAgentId != nil {
		return *m.ReferrerAgentId
	}
	return ""
}

type LogAccountReferreds struct {
	Ctx                  *common.Context       `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogAccountReferreds  []*LogAccountReferred `protobuf:"bytes,2,rep,name=log_account_referreds,json=logAccountReferreds" json:"log_account_referreds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LogAccountReferreds) Reset()         { *m = LogAccountReferreds{} }
func (m *LogAccountReferreds) String() string { return proto.CompactTextString(m) }
func (*LogAccountReferreds) ProtoMessage()    {}
func (*LogAccountReferreds) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{30}
}

func (m *LogAccountReferreds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAccountReferreds.Unmarshal(m, b)
}
func (m *LogAccountReferreds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAccountReferreds.Marshal(b, m, deterministic)
}
func (m *LogAccountReferreds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAccountReferreds.Merge(m, src)
}
func (m *LogAccountReferreds) XXX_Size() int {
	return xxx_messageInfo_LogAccountReferreds.Size(m)
}
func (m *LogAccountReferreds) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAccountReferreds.DiscardUnknown(m)
}

var xxx_messageInfo_LogAccountReferreds proto.InternalMessageInfo

func (m *LogAccountReferreds) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *LogAccountReferreds) GetLogAccountReferreds() []*LogAccountReferred {
	if m != nil {
		return m.LogAccountReferreds
	}
	return nil
}

type LogBillByAccountReferred struct {
	ReferrerId           *string  `protobuf:"bytes,1,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CommissionRate       *float32 `protobuf:"fixed32,3,opt,name=commission_rate,json=commissionRate" json:"commission_rate,omitempty"`
	Amount               *float32 `protobuf:"fixed32,4,opt,name=amount" json:"amount,omitempty"`
	Created              *int64   `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	BillId               *string  `protobuf:"bytes,6,opt,name=bill_id,json=billId" json:"bill_id,omitempty"`
	Year                 *int32   `protobuf:"varint,7,opt,name=year" json:"year,omitempty"`
	ReferrerAccountId    *string  `protobuf:"bytes,8,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId      *string  `protobuf:"bytes,9,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogBillByAccountReferred) Reset()         { *m = LogBillByAccountReferred{} }
func (m *LogBillByAccountReferred) String() string { return proto.CompactTextString(m) }
func (*LogBillByAccountReferred) ProtoMessage()    {}
func (*LogBillByAccountReferred) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{31}
}

func (m *LogBillByAccountReferred) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBillByAccountReferred.Unmarshal(m, b)
}
func (m *LogBillByAccountReferred) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBillByAccountReferred.Marshal(b, m, deterministic)
}
func (m *LogBillByAccountReferred) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBillByAccountReferred.Merge(m, src)
}
func (m *LogBillByAccountReferred) XXX_Size() int {
	return xxx_messageInfo_LogBillByAccountReferred.Size(m)
}
func (m *LogBillByAccountReferred) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBillByAccountReferred.DiscardUnknown(m)
}

var xxx_messageInfo_LogBillByAccountReferred proto.InternalMessageInfo

func (m *LogBillByAccountReferred) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *LogBillByAccountReferred) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *LogBillByAccountReferred) GetCommissionRate() float32 {
	if m != nil && m.CommissionRate != nil {
		return *m.CommissionRate
	}
	return 0
}

func (m *LogBillByAccountReferred) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *LogBillByAccountReferred) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *LogBillByAccountReferred) GetBillId() string {
	if m != nil && m.BillId != nil {
		return *m.BillId
	}
	return ""
}

func (m *LogBillByAccountReferred) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *LogBillByAccountReferred) GetReferrerAccountId() string {
	if m != nil && m.ReferrerAccountId != nil {
		return *m.ReferrerAccountId
	}
	return ""
}

func (m *LogBillByAccountReferred) GetReferrerAgentId() string {
	if m != nil && m.ReferrerAgentId != nil {
		return *m.ReferrerAgentId
	}
	return ""
}

type LogBillByAccountReferreds struct {
	Ctx                       *common.Context             `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogBillByAccountReferreds []*LogBillByAccountReferred `protobuf:"bytes,2,rep,name=log_bill_by_account_referreds,json=logBillByAccountReferreds" json:"log_bill_by_account_referreds,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *LogBillByAccountReferreds) Reset()         { *m = LogBillByAccountReferreds{} }
func (m *LogBillByAccountReferreds) String() string { return proto.CompactTextString(m) }
func (*LogBillByAccountReferreds) ProtoMessage()    {}
func (*LogBillByAccountReferreds) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{32}
}

func (m *LogBillByAccountReferreds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBillByAccountReferreds.Unmarshal(m, b)
}
func (m *LogBillByAccountReferreds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBillByAccountReferreds.Marshal(b, m, deterministic)
}
func (m *LogBillByAccountReferreds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBillByAccountReferreds.Merge(m, src)
}
func (m *LogBillByAccountReferreds) XXX_Size() int {
	return xxx_messageInfo_LogBillByAccountReferreds.Size(m)
}
func (m *LogBillByAccountReferreds) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBillByAccountReferreds.DiscardUnknown(m)
}

var xxx_messageInfo_LogBillByAccountReferreds proto.InternalMessageInfo

func (m *LogBillByAccountReferreds) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *LogBillByAccountReferreds) GetLogBillByAccountReferreds() []*LogBillByAccountReferred {
	if m != nil {
		return m.LogBillByAccountReferreds
	}
	return nil
}

type LogPaidForAgentReferrer struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	ReferrerId           *string         `protobuf:"bytes,2,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	Amount               *float32        `protobuf:"fixed32,3,opt,name=amount" json:"amount,omitempty"`
	Created              *int64          `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	ReferrerAccountId    *string         `protobuf:"bytes,6,opt,name=referrer_account_id,json=referrerAccountId" json:"referrer_account_id,omitempty"`
	ReferrerAgentId      *string         `protobuf:"bytes,7,opt,name=referrer_agent_id,json=referrerAgentId" json:"referrer_agent_id,omitempty"`
	TransactionId        *string         `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LogPaidForAgentReferrer) Reset()         { *m = LogPaidForAgentReferrer{} }
func (m *LogPaidForAgentReferrer) String() string { return proto.CompactTextString(m) }
func (*LogPaidForAgentReferrer) ProtoMessage()    {}
func (*LogPaidForAgentReferrer) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{33}
}

func (m *LogPaidForAgentReferrer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogPaidForAgentReferrer.Unmarshal(m, b)
}
func (m *LogPaidForAgentReferrer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogPaidForAgentReferrer.Marshal(b, m, deterministic)
}
func (m *LogPaidForAgentReferrer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogPaidForAgentReferrer.Merge(m, src)
}
func (m *LogPaidForAgentReferrer) XXX_Size() int {
	return xxx_messageInfo_LogPaidForAgentReferrer.Size(m)
}
func (m *LogPaidForAgentReferrer) XXX_DiscardUnknown() {
	xxx_messageInfo_LogPaidForAgentReferrer.DiscardUnknown(m)
}

var xxx_messageInfo_LogPaidForAgentReferrer proto.InternalMessageInfo

func (m *LogPaidForAgentReferrer) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *LogPaidForAgentReferrer) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *LogPaidForAgentReferrer) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *LogPaidForAgentReferrer) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *LogPaidForAgentReferrer) GetReferrerAccountId() string {
	if m != nil && m.ReferrerAccountId != nil {
		return *m.ReferrerAccountId
	}
	return ""
}

func (m *LogPaidForAgentReferrer) GetReferrerAgentId() string {
	if m != nil && m.ReferrerAgentId != nil {
		return *m.ReferrerAgentId
	}
	return ""
}

func (m *LogPaidForAgentReferrer) GetTransactionId() string {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return ""
}

type LogPaidForAgentReferrers struct {
	Ctx                      *common.Context            `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	LogPaidForAgentReferrers []*LogPaidForAgentReferrer `protobuf:"bytes,2,rep,name=log_paid_for_agent_referrers,json=logPaidForAgentReferrers" json:"log_paid_for_agent_referrers,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                   `json:"-"`
	XXX_unrecognized         []byte                     `json:"-"`
	XXX_sizecache            int32                      `json:"-"`
}

func (m *LogPaidForAgentReferrers) Reset()         { *m = LogPaidForAgentReferrers{} }
func (m *LogPaidForAgentReferrers) String() string { return proto.CompactTextString(m) }
func (*LogPaidForAgentReferrers) ProtoMessage()    {}
func (*LogPaidForAgentReferrers) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{34}
}

func (m *LogPaidForAgentReferrers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogPaidForAgentReferrers.Unmarshal(m, b)
}
func (m *LogPaidForAgentReferrers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogPaidForAgentReferrers.Marshal(b, m, deterministic)
}
func (m *LogPaidForAgentReferrers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogPaidForAgentReferrers.Merge(m, src)
}
func (m *LogPaidForAgentReferrers) XXX_Size() int {
	return xxx_messageInfo_LogPaidForAgentReferrers.Size(m)
}
func (m *LogPaidForAgentReferrers) XXX_DiscardUnknown() {
	xxx_messageInfo_LogPaidForAgentReferrers.DiscardUnknown(m)
}

var xxx_messageInfo_LogPaidForAgentReferrers proto.InternalMessageInfo

func (m *LogPaidForAgentReferrers) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *LogPaidForAgentReferrers) GetLogPaidForAgentReferrers() []*LogPaidForAgentReferrer {
	if m != nil {
		return m.LogPaidForAgentReferrers
	}
	return nil
}

type ExchangeRate struct {
	FromCurrency         *string  `protobuf:"bytes,2,opt,name=from_currency,json=fromCurrency" json:"from_currency,omitempty"`
	ToCurrency           *string  `protobuf:"bytes,3,opt,name=to_currency,json=toCurrency" json:"to_currency,omitempty"`
	ExchangeRate         *float32 `protobuf:"fixed32,4,opt,name=exchange_rate,json=exchangeRate" json:"exchange_rate,omitempty"`
	ExchangeTime         *int64   `protobuf:"varint,5,opt,name=exchange_time,json=exchangeTime" json:"exchange_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeRate) Reset()         { *m = ExchangeRate{} }
func (m *ExchangeRate) String() string { return proto.CompactTextString(m) }
func (*ExchangeRate) ProtoMessage()    {}
func (*ExchangeRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{35}
}

func (m *ExchangeRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeRate.Unmarshal(m, b)
}
func (m *ExchangeRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeRate.Marshal(b, m, deterministic)
}
func (m *ExchangeRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeRate.Merge(m, src)
}
func (m *ExchangeRate) XXX_Size() int {
	return xxx_messageInfo_ExchangeRate.Size(m)
}
func (m *ExchangeRate) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeRate.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeRate proto.InternalMessageInfo

func (m *ExchangeRate) GetFromCurrency() string {
	if m != nil && m.FromCurrency != nil {
		return *m.FromCurrency
	}
	return ""
}

func (m *ExchangeRate) GetToCurrency() string {
	if m != nil && m.ToCurrency != nil {
		return *m.ToCurrency
	}
	return ""
}

func (m *ExchangeRate) GetExchangeRate() float32 {
	if m != nil && m.ExchangeRate != nil {
		return *m.ExchangeRate
	}
	return 0
}

func (m *ExchangeRate) GetExchangeTime() int64 {
	if m != nil && m.ExchangeTime != nil {
		return *m.ExchangeTime
	}
	return 0
}

type ListLogsRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Limit                *int32          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListLogsRequest) Reset()         { *m = ListLogsRequest{} }
func (m *ListLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLogsRequest) ProtoMessage()    {}
func (*ListLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{36}
}

func (m *ListLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLogsRequest.Unmarshal(m, b)
}
func (m *ListLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLogsRequest.Marshal(b, m, deterministic)
}
func (m *ListLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLogsRequest.Merge(m, src)
}
func (m *ListLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLogsRequest.Size(m)
}
func (m *ListLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLogsRequest proto.InternalMessageInfo

func (m *ListLogsRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListLogsRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *ListLogsRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListLogsRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type Logs struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Logs                 []*Log          `protobuf:"bytes,5,rep,name=logs" json:"logs,omitempty"`
	Anchor               *string         `protobuf:"bytes,4,opt,name=anchor" json:"anchor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Logs) Reset()         { *m = Logs{} }
func (m *Logs) String() string { return proto.CompactTextString(m) }
func (*Logs) ProtoMessage()    {}
func (*Logs) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{37}
}

func (m *Logs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logs.Unmarshal(m, b)
}
func (m *Logs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logs.Marshal(b, m, deterministic)
}
func (m *Logs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logs.Merge(m, src)
}
func (m *Logs) XXX_Size() int {
	return xxx_messageInfo_Logs.Size(m)
}
func (m *Logs) XXX_DiscardUnknown() {
	xxx_messageInfo_Logs.DiscardUnknown(m)
}

var xxx_messageInfo_Logs proto.InternalMessageInfo

func (m *Logs) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Logs) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *Logs) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

type Log struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	User                 *string         `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Id                   *string         `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	Action               *string         `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	Created              *int64          `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Description          *string         `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	AccountId            *string         `protobuf:"bytes,6,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Month                *int32          `protobuf:"varint,7,opt,name=month" json:"month,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{38}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Log) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *Log) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Log) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *Log) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *Log) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Log) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Log) GetMonth() int32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

type Addon struct {
	Type                 *string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name                 *string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Price                *float32  `protobuf:"fixed32,4,opt,name=price" json:"price,omitempty"`
	Currency             *Currency `protobuf:"varint,5,opt,name=currency,enum=payment.Currency" json:"currency,omitempty"`
	ChargeType           *string   `protobuf:"bytes,6,opt,name=charge_type,json=chargeType" json:"charge_type,omitempty"`
	Period               *int32    `protobuf:"varint,7,opt,name=period" json:"period,omitempty"`
	PeriodUnit           *string   `protobuf:"bytes,8,opt,name=period_unit,json=periodUnit" json:"period_unit,omitempty"`
	Quantity             *int32    `protobuf:"varint,9,opt,name=quantity" json:"quantity,omitempty"`
	Created              *int64    `protobuf:"varint,10,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Addon) Reset()         { *m = Addon{} }
func (m *Addon) String() string { return proto.CompactTextString(m) }
func (*Addon) ProtoMessage()    {}
func (*Addon) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{39}
}

func (m *Addon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addon.Unmarshal(m, b)
}
func (m *Addon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addon.Marshal(b, m, deterministic)
}
func (m *Addon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addon.Merge(m, src)
}
func (m *Addon) XXX_Size() int {
	return xxx_messageInfo_Addon.Size(m)
}
func (m *Addon) XXX_DiscardUnknown() {
	xxx_messageInfo_Addon.DiscardUnknown(m)
}

var xxx_messageInfo_Addon proto.InternalMessageInfo

func (m *Addon) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Addon) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Addon) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Addon) GetCurrency() Currency {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return Currency_usd
}

func (m *Addon) GetChargeType() string {
	if m != nil && m.ChargeType != nil {
		return *m.ChargeType
	}
	return ""
}

func (m *Addon) GetPeriod() int32 {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return 0
}

func (m *Addon) GetPeriodUnit() string {
	if m != nil && m.PeriodUnit != nil {
		return *m.PeriodUnit
	}
	return ""
}

func (m *Addon) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *Addon) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type PaymentRenewCycleRequested struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Sub                  *Subscription   `protobuf:"bytes,3,opt,name=sub" json:"sub,omitempty"`
	CycleId              *string         `protobuf:"bytes,4,opt,name=cycle_id,json=cycleId" json:"cycle_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PaymentRenewCycleRequested) Reset()         { *m = PaymentRenewCycleRequested{} }
func (m *PaymentRenewCycleRequested) String() string { return proto.CompactTextString(m) }
func (*PaymentRenewCycleRequested) ProtoMessage()    {}
func (*PaymentRenewCycleRequested) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{40}
}

func (m *PaymentRenewCycleRequested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRenewCycleRequested.Unmarshal(m, b)
}
func (m *PaymentRenewCycleRequested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRenewCycleRequested.Marshal(b, m, deterministic)
}
func (m *PaymentRenewCycleRequested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRenewCycleRequested.Merge(m, src)
}
func (m *PaymentRenewCycleRequested) XXX_Size() int {
	return xxx_messageInfo_PaymentRenewCycleRequested.Size(m)
}
func (m *PaymentRenewCycleRequested) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRenewCycleRequested.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRenewCycleRequested proto.InternalMessageInfo

func (m *PaymentRenewCycleRequested) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PaymentRenewCycleRequested) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PaymentRenewCycleRequested) GetSub() *Subscription {
	if m != nil {
		return m.Sub
	}
	return nil
}

func (m *PaymentRenewCycleRequested) GetCycleId() string {
	if m != nil && m.CycleId != nil {
		return *m.CycleId
	}
	return ""
}

type SearchInvoiceRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Query                *string         `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Anchor               *string         `protobuf:"bytes,5,opt,name=anchor" json:"anchor,omitempty"`
	State                *string         `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Limit                *int32          `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchInvoiceRequest) Reset()         { *m = SearchInvoiceRequest{} }
func (m *SearchInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*SearchInvoiceRequest) ProtoMessage()    {}
func (*SearchInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{41}
}

func (m *SearchInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchInvoiceRequest.Unmarshal(m, b)
}
func (m *SearchInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchInvoiceRequest.Marshal(b, m, deterministic)
}
func (m *SearchInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInvoiceRequest.Merge(m, src)
}
func (m *SearchInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_SearchInvoiceRequest.Size(m)
}
func (m *SearchInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInvoiceRequest proto.InternalMessageInfo

func (m *SearchInvoiceRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *SearchInvoiceRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *SearchInvoiceRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *SearchInvoiceRequest) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *SearchInvoiceRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type DiffSubRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Dst                  *Subscription   `protobuf:"bytes,2,opt,name=dst" json:"dst,omitempty"`
	Src                  *Subscription   `protobuf:"bytes,3,opt,name=src" json:"src,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DiffSubRequest) Reset()         { *m = DiffSubRequest{} }
func (m *DiffSubRequest) String() string { return proto.CompactTextString(m) }
func (*DiffSubRequest) ProtoMessage()    {}
func (*DiffSubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{42}
}

func (m *DiffSubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiffSubRequest.Unmarshal(m, b)
}
func (m *DiffSubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiffSubRequest.Marshal(b, m, deterministic)
}
func (m *DiffSubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiffSubRequest.Merge(m, src)
}
func (m *DiffSubRequest) XXX_Size() int {
	return xxx_messageInfo_DiffSubRequest.Size(m)
}
func (m *DiffSubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiffSubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiffSubRequest proto.InternalMessageInfo

func (m *DiffSubRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *DiffSubRequest) GetDst() *Subscription {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *DiffSubRequest) GetSrc() *Subscription {
	if m != nil {
		return m.Src
	}
	return nil
}

type PromotionCodes struct {
	Ctx                  *common.Context  `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	PromotionCodes       []*PromotionCode `protobuf:"bytes,2,rep,name=promotionCodes" json:"promotionCodes,omitempty"`
	Anchor               *string          `protobuf:"bytes,3,opt,name=anchor" json:"anchor,omitempty"`
	Total                *int64           `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PromotionCodes) Reset()         { *m = PromotionCodes{} }
func (m *PromotionCodes) String() string { return proto.CompactTextString(m) }
func (*PromotionCodes) ProtoMessage()    {}
func (*PromotionCodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{43}
}

func (m *PromotionCodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionCodes.Unmarshal(m, b)
}
func (m *PromotionCodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionCodes.Marshal(b, m, deterministic)
}
func (m *PromotionCodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionCodes.Merge(m, src)
}
func (m *PromotionCodes) XXX_Size() int {
	return xxx_messageInfo_PromotionCodes.Size(m)
}
func (m *PromotionCodes) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionCodes.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionCodes proto.InternalMessageInfo

func (m *PromotionCodes) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PromotionCodes) GetPromotionCodes() []*PromotionCode {
	if m != nil {
		return m.PromotionCodes
	}
	return nil
}

func (m *PromotionCodes) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *PromotionCodes) GetTotal() int64 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

type PromotionCodeRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Code                 *string         `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PromotionCodeRequest) Reset()         { *m = PromotionCodeRequest{} }
func (m *PromotionCodeRequest) String() string { return proto.CompactTextString(m) }
func (*PromotionCodeRequest) ProtoMessage()    {}
func (*PromotionCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{44}
}

func (m *PromotionCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionCodeRequest.Unmarshal(m, b)
}
func (m *PromotionCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionCodeRequest.Marshal(b, m, deterministic)
}
func (m *PromotionCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionCodeRequest.Merge(m, src)
}
func (m *PromotionCodeRequest) XXX_Size() int {
	return xxx_messageInfo_PromotionCodeRequest.Size(m)
}
func (m *PromotionCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionCodeRequest proto.InternalMessageInfo

func (m *PromotionCodeRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PromotionCodeRequest) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *PromotionCodeRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type ListPromotionCodeRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Anchor               *string         `protobuf:"bytes,2,opt,name=anchor" json:"anchor,omitempty"`
	Limit                *int32          `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListPromotionCodeRequest) Reset()         { *m = ListPromotionCodeRequest{} }
func (m *ListPromotionCodeRequest) String() string { return proto.CompactTextString(m) }
func (*ListPromotionCodeRequest) ProtoMessage()    {}
func (*ListPromotionCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{45}
}

func (m *ListPromotionCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPromotionCodeRequest.Unmarshal(m, b)
}
func (m *ListPromotionCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPromotionCodeRequest.Marshal(b, m, deterministic)
}
func (m *ListPromotionCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPromotionCodeRequest.Merge(m, src)
}
func (m *ListPromotionCodeRequest) XXX_Size() int {
	return xxx_messageInfo_ListPromotionCodeRequest.Size(m)
}
func (m *ListPromotionCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPromotionCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPromotionCodeRequest proto.InternalMessageInfo

func (m *ListPromotionCodeRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *ListPromotionCodeRequest) GetAnchor() string {
	if m != nil && m.Anchor != nil {
		return *m.Anchor
	}
	return ""
}

func (m *ListPromotionCodeRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type PromotionCodeResponse struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	Status               *bool           `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Error                *string         `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	PromotionCode        *PromotionCode  `protobuf:"bytes,4,opt,name=promotionCode" json:"promotionCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PromotionCodeResponse) Reset()         { *m = PromotionCodeResponse{} }
func (m *PromotionCodeResponse) String() string { return proto.CompactTextString(m) }
func (*PromotionCodeResponse) ProtoMessage()    {}
func (*PromotionCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{46}
}

func (m *PromotionCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PromotionCodeResponse.Unmarshal(m, b)
}
func (m *PromotionCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PromotionCodeResponse.Marshal(b, m, deterministic)
}
func (m *PromotionCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PromotionCodeResponse.Merge(m, src)
}
func (m *PromotionCodeResponse) XXX_Size() int {
	return xxx_messageInfo_PromotionCodeResponse.Size(m)
}
func (m *PromotionCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PromotionCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PromotionCodeResponse proto.InternalMessageInfo

func (m *PromotionCodeResponse) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PromotionCodeResponse) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func (m *PromotionCodeResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *PromotionCodeResponse) GetPromotionCode() *PromotionCode {
	if m != nil {
		return m.PromotionCode
	}
	return nil
}

type String struct {
	Str                  *string  `protobuf:"bytes,2,opt,name=str" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{47}
}

func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (m *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(m, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetStr() string {
	if m != nil && m.Str != nil {
		return *m.Str
	}
	return ""
}

type PayRequest struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	AccountId            *string         `protobuf:"bytes,8,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceIds           []string        `protobuf:"bytes,6,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	Description          *string         `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	CustomerInfo         *Contact        `protobuf:"bytes,9,opt,name=CustomerInfo" json:"CustomerInfo,omitempty"`
	Amount               *float32        `protobuf:"fixed32,10,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PayRequest) Reset()         { *m = PayRequest{} }
func (m *PayRequest) String() string { return proto.CompactTextString(m) }
func (*PayRequest) ProtoMessage()    {}
func (*PayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{48}
}

func (m *PayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayRequest.Unmarshal(m, b)
}
func (m *PayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayRequest.Marshal(b, m, deterministic)
}
func (m *PayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayRequest.Merge(m, src)
}
func (m *PayRequest) XXX_Size() int {
	return xxx_messageInfo_PayRequest.Size(m)
}
func (m *PayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PayRequest proto.InternalMessageInfo

func (m *PayRequest) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *PayRequest) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PayRequest) GetInvoiceIds() []string {
	if m != nil {
		return m.InvoiceIds
	}
	return nil
}

func (m *PayRequest) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *PayRequest) GetCustomerInfo() *Contact {
	if m != nil {
		return m.CustomerInfo
	}
	return nil
}

func (m *PayRequest) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ESubscription struct {
	Sub                  *Subscription `protobuf:"bytes,2,opt,name=sub" json:"sub,omitempty"`
	Err                  *string       `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ESubscription) Reset()         { *m = ESubscription{} }
func (m *ESubscription) String() string { return proto.CompactTextString(m) }
func (*ESubscription) ProtoMessage()    {}
func (*ESubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{49}
}

func (m *ESubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESubscription.Unmarshal(m, b)
}
func (m *ESubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESubscription.Marshal(b, m, deterministic)
}
func (m *ESubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESubscription.Merge(m, src)
}
func (m *ESubscription) XXX_Size() int {
	return xxx_messageInfo_ESubscription.Size(m)
}
func (m *ESubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_ESubscription.DiscardUnknown(m)
}

var xxx_messageInfo_ESubscription proto.InternalMessageInfo

func (m *ESubscription) GetSub() *Subscription {
	if m != nil {
		return m.Sub
	}
	return nil
}

func (m *ESubscription) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type EInvoice struct {
	Inv                  *Invoice `protobuf:"bytes,3,opt,name=inv" json:"inv,omitempty"`
	Err                  *string  `protobuf:"bytes,4,opt,name=err" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EInvoice) Reset()         { *m = EInvoice{} }
func (m *EInvoice) String() string { return proto.CompactTextString(m) }
func (*EInvoice) ProtoMessage()    {}
func (*EInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{50}
}

func (m *EInvoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EInvoice.Unmarshal(m, b)
}
func (m *EInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EInvoice.Marshal(b, m, deterministic)
}
func (m *EInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EInvoice.Merge(m, src)
}
func (m *EInvoice) XXX_Size() int {
	return xxx_messageInfo_EInvoice.Size(m)
}
func (m *EInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_EInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_EInvoice proto.InternalMessageInfo

func (m *EInvoice) GetInv() *Invoice {
	if m != nil {
		return m.Inv
	}
	return nil
}

func (m *EInvoice) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type InvoiceCreatedEmail struct {
	Ctx                  *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	To                   *string         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	AccountId            *string         `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	BillingName          *string         `protobuf:"bytes,4,opt,name=billing_name,json=billingName" json:"billing_name,omitempty"`
	InvoiceId            *string         `protobuf:"bytes,5,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Created              *int64          `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Lang                 *common.L       `protobuf:"varint,8,opt,name=lang,enum=common.L" json:"lang,omitempty"`
	From                 *string         `protobuf:"bytes,10,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InvoiceCreatedEmail) Reset()         { *m = InvoiceCreatedEmail{} }
func (m *InvoiceCreatedEmail) String() string { return proto.CompactTextString(m) }
func (*InvoiceCreatedEmail) ProtoMessage()    {}
func (*InvoiceCreatedEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_66a39aceed8019db, []int{51}
}

func (m *InvoiceCreatedEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceCreatedEmail.Unmarshal(m, b)
}
func (m *InvoiceCreatedEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceCreatedEmail.Marshal(b, m, deterministic)
}
func (m *InvoiceCreatedEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceCreatedEmail.Merge(m, src)
}
func (m *InvoiceCreatedEmail) XXX_Size() int {
	return xxx_messageInfo_InvoiceCreatedEmail.Size(m)
}
func (m *InvoiceCreatedEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceCreatedEmail.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceCreatedEmail proto.InternalMessageInfo

func (m *InvoiceCreatedEmail) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *InvoiceCreatedEmail) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func (m *InvoiceCreatedEmail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *InvoiceCreatedEmail) GetBillingName() string {
	if m != nil && m.BillingName != nil {
		return *m.BillingName
	}
	return ""
}

func (m *InvoiceCreatedEmail) GetInvoiceId() string {
	if m != nil && m.InvoiceId != nil {
		return *m.InvoiceId
	}
	return ""
}

func (m *InvoiceCreatedEmail) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *InvoiceCreatedEmail) GetLang() common.L {
	if m != nil && m.Lang != nil {
		return *m.Lang
	}
	return common.L_en
}

func (m *InvoiceCreatedEmail) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func init() {
	proto.RegisterEnum("payment.Currency", Currency_name, Currency_value)
	proto.RegisterEnum("payment.Event", Event_name, Event_value)
	proto.RegisterEnum("payment.PaymentMethod_Type", PaymentMethod_Type_name, PaymentMethod_Type_value)
	proto.RegisterEnum("payment.PaymentMethod_State", PaymentMethod_State_name, PaymentMethod_State_value)
	proto.RegisterEnum("payment.Plan_Type", Plan_Type_name, Plan_Type_value)
	proto.RegisterEnum("payment.Invoice_State", Invoice_State_name, Invoice_State_value)
	proto.RegisterEnum("payment.Contact_Title", Contact_Title_name, Contact_Title_value)
	proto.RegisterEnum("payment.PromotionCode_Type", PromotionCode_Type_name, PromotionCode_Type_value)
	proto.RegisterEnum("payment.AgentReferInfo_Status", AgentReferInfo_Status_name, AgentReferInfo_Status_value)
	proto.RegisterEnum("payment.Log_Action", Log_Action_name, Log_Action_value)
	proto.RegisterEnum("payment.Addon_Type", Addon_Type_name, Addon_Type_value)
	proto.RegisterEnum("payment.Addon_ChargeType", Addon_ChargeType_name, Addon_ChargeType_value)
	proto.RegisterEnum("payment.Addon_PeriodUnit", Addon_PeriodUnit_name, Addon_PeriodUnit_value)
	proto.RegisterType((*ListCommentsRequest)(nil), "payment.ListCommentsRequest")
	proto.RegisterType((*Comments)(nil), "payment.Comments")
	proto.RegisterType((*Comment)(nil), "payment.Comment")
	proto.RegisterType((*Stripe)(nil), "payment.Stripe")
	proto.RegisterType((*PaymentMethods)(nil), "payment.PaymentMethods")
	proto.RegisterType((*PaymentMethod)(nil), "payment.PaymentMethod")
	proto.RegisterType((*Limit)(nil), "payment.Limit")
	proto.RegisterType((*Plans)(nil), "payment.Plans")
	proto.RegisterType((*Plan)(nil), "payment.Plan")
	proto.RegisterType((*Subscription)(nil), "payment.Subscription")
	proto.RegisterType((*Bill)(nil), "payment.Bill")
	proto.RegisterType((*Note)(nil), "payment.Note")
	proto.RegisterType((*Invoices)(nil), "payment.Invoices")
	proto.RegisterType((*ListInvoiceRequest)(nil), "payment.ListInvoiceRequest")
	proto.RegisterType((*Invoice)(nil), "payment.Invoice")
	proto.RegisterType((*AgentInvoiceItem)(nil), "payment.AgentInvoiceItem")
	proto.RegisterType((*RenewInvoiceItem)(nil), "payment.RenewInvoiceItem")
	proto.RegisterType((*PlanInvoiceItem)(nil), "payment.PlanInvoiceItem")
	proto.RegisterType((*InvoiceItem)(nil), "payment.InvoiceItem")
	proto.RegisterType((*InvoiceItem_Data)(nil), "payment.InvoiceItem.Data")
	proto.RegisterType((*BillingInfo)(nil), "payment.BillingInfo")
	proto.RegisterType((*Contact)(nil), "payment.Contact")
	proto.RegisterType((*Customer)(nil), "payment.Customer")
	proto.RegisterType((*FixedAmountPromotionCode)(nil), "payment.FixedAmountPromotionCode")
	proto.RegisterType((*PercentPromotionCode)(nil), "payment.PercentPromotionCode")
	proto.RegisterType((*CreditCode)(nil), "payment.CreditCode")
	proto.RegisterType((*ReferralCreditCode)(nil), "payment.ReferralCreditCode")
	proto.RegisterType((*PromotionCode)(nil), "payment.PromotionCode")
	proto.RegisterType((*PromotionCode_Data)(nil), "payment.PromotionCode.Data")
	proto.RegisterType((*LogPromotionCodeUsed)(nil), "payment.LogPromotionCodeUsed")
	proto.RegisterType((*AgentReferInfo)(nil), "payment.AgentReferInfo")
	proto.RegisterType((*LogAccountReferred)(nil), "payment.LogAccountReferred")
	proto.RegisterType((*LogAccountReferreds)(nil), "payment.LogAccountReferreds")
	proto.RegisterType((*LogBillByAccountReferred)(nil), "payment.LogBillByAccountReferred")
	proto.RegisterType((*LogBillByAccountReferreds)(nil), "payment.LogBillByAccountReferreds")
	proto.RegisterType((*LogPaidForAgentReferrer)(nil), "payment.LogPaidForAgentReferrer")
	proto.RegisterType((*LogPaidForAgentReferrers)(nil), "payment.LogPaidForAgentReferrers")
	proto.RegisterType((*ExchangeRate)(nil), "payment.ExchangeRate")
	proto.RegisterType((*ListLogsRequest)(nil), "payment.ListLogsRequest")
	proto.RegisterType((*Logs)(nil), "payment.Logs")
	proto.RegisterType((*Log)(nil), "payment.Log")
	proto.RegisterType((*Addon)(nil), "payment.Addon")
	proto.RegisterType((*PaymentRenewCycleRequested)(nil), "payment.PaymentRenewCycleRequested")
	proto.RegisterType((*SearchInvoiceRequest)(nil), "payment.SearchInvoiceRequest")
	proto.RegisterType((*DiffSubRequest)(nil), "payment.DiffSubRequest")
	proto.RegisterType((*PromotionCodes)(nil), "payment.PromotionCodes")
	proto.RegisterType((*PromotionCodeRequest)(nil), "payment.PromotionCodeRequest")
	proto.RegisterType((*ListPromotionCodeRequest)(nil), "payment.ListPromotionCodeRequest")
	proto.RegisterType((*PromotionCodeResponse)(nil), "payment.PromotionCodeResponse")
	proto.RegisterType((*String)(nil), "payment.String")
	proto.RegisterType((*PayRequest)(nil), "payment.PayRequest")
	proto.RegisterType((*ESubscription)(nil), "payment.ESubscription")
	proto.RegisterType((*EInvoice)(nil), "payment.EInvoice")
	proto.RegisterType((*InvoiceCreatedEmail)(nil), "payment.InvoiceCreatedEmail")
}

func init() { proto.RegisterFile("payment/payment.proto", fileDescriptor_66a39aceed8019db) }

var fileDescriptor_66a39aceed8019db = []byte{
	// 4588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3b, 0x4d, 0x8f, 0x1b, 0x47,
	0x76, 0x43, 0x36, 0x3f, 0x1f, 0x3f, 0xa6, 0xa7, 0x86, 0x23, 0xf5, 0x8c, 0x3c, 0xeb, 0x51, 0xdb,
	0x5e, 0xcb, 0xb2, 0x2c, 0x19, 0x92, 0x12, 0xed, 0x22, 0xc1, 0x7a, 0xa5, 0x91, 0xec, 0x9d, 0xdd,
	0x91, 0x3d, 0xee, 0x91, 0xbd, 0xb7, 0x74, 0x9a, 0xec, 0x22, 0xa7, 0x57, 0x64, 0x37, 0xd5, 0xdd,
	0x1c, 0x0d, 0x7d, 0x0b, 0x90, 0x00, 0xc9, 0x35, 0x09, 0x72, 0x09, 0x92, 0xc5, 0x26, 0xc0, 0xfe,
	0x82, 0xe4, 0x92, 0x43, 0x72, 0x08, 0x02, 0x04, 0xf9, 0x0d, 0x01, 0x72, 0xd8, 0x4b, 0x80, 0xdc,
	0x17, 0xc8, 0x2d, 0x78, 0xaf, 0xaa, 0xbb, 0xab, 0x9b, 0xa4, 0x87, 0x92, 0x95, 0x13, 0xbb, 0x5e,
	0xbd, 0xfa, 0x7a, 0xdf, 0xef, 0x55, 0x11, 0x76, 0xa6, 0xce, 0x7c, 0xc2, 0xfd, 0xf8, 0x8e, 0xfc,
	0xbd, 0x3d, 0x0d, 0x83, 0x38, 0x60, 0x75, 0xd9, 0xdc, 0xfb, 0x70, 0xe4, 0xc5, 0x67, 0xb3, 0xfe,
	0xed, 0x41, 0x30, 0xb9, 0x13, 0xcd, 0xfa, 0xde, 0x37, 0x77, 0xce, 0xb8, 0xe3, 0xf2, 0xf0, 0xce,
	0x20, 0x98, 0x4c, 0x02, 0x5f, 0xfe, 0x88, 0x51, 0x66, 0x08, 0xdb, 0xc7, 0x5e, 0x14, 0x1f, 0x06,
	0x13, 0x1c, 0x1b, 0x59, 0xfc, 0xc5, 0x8c, 0x47, 0x31, 0xbb, 0x0e, 0xda, 0x20, 0xbe, 0x30, 0x4a,
	0x07, 0xa5, 0x1b, 0xad, 0xbb, 0x9b, 0xb7, 0xe5, 0x90, 0xc3, 0xc0, 0x8f, 0xf9, 0x45, 0x6c, 0x61,
	0x1f, 0xdb, 0x07, 0x70, 0x06, 0x83, 0x60, 0xe6, 0xc7, 0xb6, 0xe7, 0x1a, 0xe5, 0x83, 0xd2, 0x8d,
	0xa6, 0xd5, 0x94, 0x90, 0x23, 0x97, 0xed, 0x42, 0x23, 0x0e, 0xa6, 0xde, 0x00, 0x3b, 0x35, 0xea,
	0xac, 0x53, 0xfb, 0xc8, 0x35, 0xbf, 0x81, 0x46, 0xb2, 0xde, 0x1b, 0x58, 0xe8, 0x16, 0x34, 0x06,
	0x72, 0x36, 0x43, 0x3b, 0xd0, 0x6e, 0xb4, 0xee, 0xea, 0xb7, 0x13, 0xca, 0xc8, 0x65, 0xac, 0x14,
	0xc3, 0xfc, 0xc7, 0x32, 0xd4, 0x25, 0xf4, 0x0d, 0xac, 0xdd, 0x85, 0x72, 0x7a, 0xbc, 0xb2, 0x97,
	0x3f, 0x74, 0x25, 0x77, 0x68, 0x9c, 0x49, 0x74, 0xc5, 0xf3, 0x29, 0x37, 0xaa, 0x62, 0x26, 0x82,
	0x3c, 0x9b, 0x4f, 0x39, 0xbb, 0x09, 0x5b, 0xce, 0x2c, 0x3e, 0x0b, 0x42, 0x5b, 0x59, 0xaf, 0x41,
	0x58, 0x9b, 0xa2, 0xe3, 0x61, 0xba, 0xea, 0x35, 0x68, 0x4a, 0x5c, 0xcf, 0x35, 0x9a, 0x84, 0xd3,
	0x10, 0x80, 0x23, 0x97, 0x5d, 0x87, 0xb6, 0xec, 0xe4, 0x13, 0xc7, 0x1b, 0x1b, 0x40, 0xfd, 0x2d,
	0x01, 0x7b, 0x82, 0x20, 0x66, 0x40, 0x7d, 0x80, 0x87, 0xf4, 0x63, 0xa3, 0x25, 0x36, 0x29, 0x9b,
	0xd4, 0x13, 0x72, 0x27, 0xe6, 0xae, 0xd1, 0x3e, 0x28, 0xdd, 0xd0, 0xac, 0xa4, 0x69, 0xfe, 0x01,
	0xd4, 0x4e, 0xe3, 0xd0, 0x9b, 0x72, 0x3c, 0xc8, 0xc0, 0x09, 0x5d, 0x7b, 0xec, 0x44, 0xf1, 0xfd,
	0x84, 0x24, 0x08, 0x39, 0x46, 0x00, 0x7b, 0x1b, 0x5a, 0x83, 0x59, 0x14, 0x07, 0x13, 0x1e, 0x66,
	0xac, 0x87, 0x04, 0x74, 0xe4, 0xb2, 0x1e, 0x54, 0xe3, 0xe0, 0x39, 0xf7, 0x25, 0x81, 0x44, 0xc3,
	0xfc, 0x12, 0xba, 0x27, 0x82, 0x69, 0x4f, 0x79, 0x7c, 0x16, 0xb8, 0x11, 0xfb, 0x04, 0x36, 0x25,
	0x1b, 0xed, 0x89, 0x00, 0x19, 0x65, 0x62, 0xef, 0x95, 0x94, 0xbd, 0xb9, 0x11, 0x56, 0x77, 0x9a,
	0x9b, 0xc0, 0xfc, 0xcf, 0x32, 0x74, 0x72, 0x18, 0xeb, 0x30, 0x9c, 0x41, 0x85, 0x18, 0x24, 0xce,
	0x45, 0xdf, 0x0b, 0x5c, 0xce, 0x0b, 0x45, 0xa5, 0x28, 0x14, 0x3d, 0xa8, 0x46, 0xb1, 0x13, 0x27,
	0x4c, 0x16, 0x0d, 0x95, 0xb4, 0x8d, 0x1c, 0x69, 0xd9, 0xfb, 0x50, 0x8b, 0x88, 0xb4, 0xc4, 0x4b,
	0xdc, 0x58, 0x72, 0x3e, 0x41, 0x71, 0x4b, 0x76, 0xb3, 0xf7, 0xa0, 0x3b, 0x74, 0xbc, 0x31, 0x77,
	0xed, 0x09, 0x8f, 0x22, 0x67, 0xc4, 0x25, 0x73, 0x3b, 0x02, 0xfa, 0x54, 0x00, 0x69, 0xa5, 0x33,
	0x27, 0x1c, 0x71, 0x97, 0xd8, 0x8b, 0x2b, 0x89, 0xa6, 0x79, 0x13, 0x2a, 0x24, 0x6c, 0x5b, 0xd0,
	0xe9, 0x3b, 0xfe, 0x73, 0x3b, 0x0e, 0x1d, 0x3f, 0x1a, 0xf2, 0x50, 0xdf, 0x60, 0x9b, 0xd0, 0x1a,
	0x84, 0xdc, 0xf5, 0x62, 0x1b, 0x59, 0xa9, 0x97, 0xcc, 0xb7, 0xa1, 0x7a, 0x4a, 0x1b, 0x07, 0xa8,
	0x39, 0x83, 0xd8, 0x3b, 0xe7, 0xfa, 0x06, 0x7e, 0x8b, 0xb5, 0xf4, 0x92, 0xf9, 0x4b, 0x0d, 0xaa,
	0xc7, 0xde, 0xc4, 0x7b, 0x0d, 0x3d, 0xd2, 0x8a, 0x24, 0x7b, 0x1f, 0x36, 0x27, 0xce, 0x85, 0xed,
	0xcc, 0xe2, 0x60, 0xe2, 0xc4, 0x5e, 0xe0, 0x47, 0x44, 0xd6, 0x8e, 0xd5, 0x9d, 0x38, 0x17, 0x0f,
	0x33, 0x28, 0x4a, 0x37, 0x22, 0x46, 0x7c, 0x24, 0x14, 0xbe, 0x4e, 0x58, 0xad, 0x89, 0x73, 0x71,
	0x2a, 0x41, 0xb8, 0x14, 0xcd, 0x35, 0x22, 0x84, 0x06, 0x21, 0x34, 0x71, 0x1a, 0x02, 0x30, 0x13,
	0x3a, 0x03, 0xc7, 0xb7, 0xfb, 0xb3, 0xb9, 0x40, 0x21, 0x1a, 0x36, 0xac, 0xd6, 0xc0, 0xf1, 0x1f,
	0xcd, 0xe6, 0x84, 0xc4, 0x7e, 0x00, 0x46, 0xb6, 0x15, 0xfb, 0x25, 0xef, 0x9f, 0x05, 0xc1, 0x73,
	0xfb, 0xc5, 0x2c, 0x88, 0x1d, 0xd2, 0x8b, 0x8e, 0x75, 0x25, 0xeb, 0xff, 0xb9, 0xe8, 0xfe, 0x12,
	0x7b, 0xd9, 0x7d, 0x50, 0x7a, 0x84, 0x06, 0xca, 0x71, 0x1d, 0x1a, 0xd7, 0xcb, 0x7a, 0x49, 0x17,
	0xc5, 0xa8, 0xfc, 0x7a, 0x92, 0xb9, 0x72, 0x5c, 0xb7, 0xb8, 0x9e, 0x64, 0xb3, 0x18, 0x79, 0x0d,
	0xf0, 0x68, 0x76, 0x38, 0x1b, 0xf3, 0xc8, 0xd0, 0x09, 0xb5, 0x31, 0x71, 0x2e, 0x2c, 0x6c, 0x9b,
	0xb7, 0xa0, 0x7a, 0x32, 0x76, 0xfc, 0x88, 0xbd, 0x03, 0xd5, 0x29, 0x7e, 0x48, 0x05, 0xea, 0x64,
	0x0a, 0x34, 0x76, 0x7c, 0x4b, 0xf4, 0x99, 0x7f, 0x5a, 0x86, 0x0a, 0xb6, 0x51, 0x05, 0x7c, 0x67,
	0x92, 0xaa, 0x00, 0x7e, 0xb3, 0x77, 0xa1, 0x3a, 0x46, 0x5e, 0x13, 0xeb, 0x5a, 0x77, 0xbb, 0xe9,
	0x0c, 0x24, 0x01, 0x96, 0xe8, 0x44, 0xc9, 0x9f, 0x86, 0xde, 0x80, 0x13, 0xf3, 0xca, 0x96, 0x68,
	0x20, 0x74, 0xcc, 0xcf, 0xf9, 0x58, 0x1e, 0x45, 0x34, 0x16, 0xf9, 0xb0, 0xb9, 0xc8, 0x87, 0xab,
	0x50, 0x97, 0x38, 0x74, 0xb6, 0x86, 0x55, 0x13, 0xbd, 0xec, 0x5d, 0xe8, 0x9e, 0x39, 0x91, 0x1d,
	0xc5, 0x4e, 0x18, 0xdb, 0xb1, 0x37, 0xe1, 0xc6, 0x16, 0xf5, 0xb7, 0xcf, 0x9c, 0xe8, 0x14, 0x81,
	0xcf, 0xbc, 0x09, 0x37, 0x1f, 0x48, 0x71, 0x6f, 0x42, 0x35, 0x0e, 0x3d, 0x67, 0xac, 0x6f, 0xb0,
	0x06, 0x54, 0x86, 0x21, 0xe7, 0x7a, 0x89, 0xb5, 0xa1, 0x11, 0xc5, 0x8e, 0xef, 0xa2, 0xb4, 0x97,
	0xb1, 0xe5, 0xb8, 0xe7, 0x8e, 0x3f, 0xe0, 0xae, 0xae, 0x99, 0xff, 0x5a, 0x85, 0xf6, 0xe9, 0xac,
	0x1f, 0x0d, 0x42, 0x6f, 0x8a, 0x24, 0x7f, 0x03, 0x12, 0xae, 0xa8, 0x7f, 0x2b, 0xaf, 0xfe, 0xef,
	0x41, 0x77, 0x1a, 0x06, 0x93, 0x80, 0x78, 0x3f, 0x08, 0x5c, 0x2e, 0x2d, 0x4a, 0x27, 0x85, 0x1e,
	0x06, 0x2e, 0x4f, 0xb9, 0x52, 0x57, 0xb8, 0x62, 0x40, 0x9d, 0x48, 0xc0, 0x5d, 0xb2, 0x35, 0x9a,
	0x95, 0x34, 0xd1, 0x11, 0xb9, 0x33, 0x6e, 0xbb, 0x68, 0x86, 0x6a, 0xa2, 0xcb, 0x9d, 0xf1, 0xc7,
	0xa8, 0xcf, 0xb8, 0xd1, 0x59, 0x1c, 0xd8, 0x21, 0xf7, 0xf9, 0x4b, 0x32, 0x39, 0x0d, 0x0b, 0xfd,
	0x49, 0x60, 0x21, 0x80, 0xdd, 0x86, 0xed, 0xbe, 0x37, 0x1e, 0x7b, 0xfe, 0xc8, 0x1e, 0xcc, 0x07,
	0x63, 0x6e, 0x4f, 0x02, 0x3f, 0x3e, 0x23, 0xee, 0x74, 0xac, 0x2d, 0xd9, 0x75, 0x88, 0x3d, 0x4f,
	0xb1, 0x83, 0x3d, 0x00, 0xc3, 0xe7, 0x17, 0xb1, 0xbd, 0x6c, 0x90, 0x10, 0xc8, 0x1d, 0xec, 0x7f,
	0xb4, 0x30, 0x90, 0x41, 0x05, 0x05, 0x8f, 0x38, 0xd7, 0xb4, 0xe8, 0x9b, 0x7d, 0x1f, 0x6a, 0x8e,
	0xeb, 0xa2, 0xfa, 0xef, 0x90, 0xa4, 0x66, 0x72, 0xf6, 0x10, 0xc1, 0x96, 0xec, 0x65, 0x57, 0xa0,
	0x26, 0xac, 0x95, 0x71, 0x8d, 0x24, 0x4d, 0xb6, 0x50, 0xd0, 0xfd, 0x20, 0xe6, 0x91, 0xf1, 0x56,
	0x41, 0xd0, 0x3f, 0x0f, 0x62, 0x6e, 0x89, 0x3e, 0xf4, 0x50, 0x21, 0x1f, 0xf2, 0x30, 0x74, 0xc6,
	0x76, 0x7f, 0x6e, 0xec, 0x0b, 0x0f, 0x95, 0x80, 0x1e, 0xcd, 0xd9, 0x47, 0xd0, 0x48, 0xfc, 0x95,
	0xf1, 0x36, 0xb1, 0x7c, 0x2b, 0x8b, 0x28, 0x64, 0x87, 0x95, 0xa2, 0xa0, 0xce, 0x4f, 0x43, 0x6f,
	0xe2, 0x84, 0x73, 0x3b, 0xef, 0xb0, 0x8c, 0x03, 0x9a, 0xba, 0x27, 0x7b, 0xf3, 0xbe, 0x28, 0xd5,
	0xa8, 0x9b, 0xdf, 0xa6, 0x51, 0xbb, 0xd0, 0x38, 0xbf, 0x67, 0x0b, 0x77, 0xf2, 0xe1, 0x41, 0xe9,
	0x46, 0xd5, 0xaa, 0x9f, 0xdf, 0x13, 0x76, 0xf9, 0x6d, 0x68, 0x11, 0x1f, 0x85, 0x71, 0x37, 0x6e,
	0x11, 0x23, 0x89, 0xb5, 0x87, 0x04, 0x31, 0xff, 0xa5, 0x0c, 0x15, 0x24, 0xfb, 0x3a, 0xd2, 0xfb,
	0x8a, 0x2e, 0xee, 0x0a, 0xd4, 0x9c, 0x09, 0x7e, 0x93, 0xdc, 0x95, 0x2d, 0xd9, 0xc2, 0x3d, 0x79,
	0xfe, 0x79, 0xe0, 0x0d, 0xb8, 0xed, 0xb9, 0x91, 0x51, 0x3b, 0xd0, 0x90, 0xb4, 0x12, 0x74, 0xe4,
	0x46, 0xaa, 0x1a, 0xd4, 0xf3, 0x6a, 0xf0, 0x3b, 0xd0, 0xc9, 0xe2, 0x06, 0x7f, 0x18, 0x90, 0xe5,
	0xce, 0xc7, 0x72, 0x7e, 0xec, 0x0c, 0x62, 0xab, 0x9d, 0xc6, 0x12, 0xfe, 0x30, 0x20, 0xed, 0xc9,
	0x13, 0x5d, 0xfa, 0xc4, 0x5c, 0x30, 0x80, 0xc2, 0x36, 0xe7, 0x4e, 0x48, 0xba, 0x57, 0xb5, 0xe8,
	0x9b, 0x1d, 0x40, 0xcb, 0xe5, 0xa9, 0x8e, 0x93, 0x61, 0x6f, 0x5a, 0x2a, 0xc8, 0x7c, 0x09, 0x15,
	0x14, 0x9c, 0x75, 0x08, 0x68, 0x40, 0x3d, 0x71, 0xca, 0x32, 0xf0, 0x9b, 0x28, 0xee, 0x18, 0xcf,
	0x18, 0x84, 0x32, 0x20, 0x48, 0x9a, 0x2a, 0x31, 0x6a, 0xf9, 0x68, 0x2b, 0x80, 0xc6, 0x91, 0x20,
	0x5a, 0x84, 0xf1, 0xad, 0x24, 0x60, 0x62, 0xbf, 0x33, 0x9a, 0x48, 0x24, 0x2b, 0xc5, 0xb8, 0xcc,
	0x0c, 0x21, 0xe3, 0xfc, 0xc1, 0x59, 0x10, 0xca, 0x5d, 0xca, 0x96, 0xf9, 0x6f, 0x25, 0x60, 0x98,
	0x07, 0x24, 0x13, 0xae, 0x9f, 0x06, 0xa4, 0xd1, 0x4e, 0x59, 0x8d, 0x76, 0x7a, 0xaa, 0xbf, 0xa8,
	0x26, 0xd2, 0xbc, 0x62, 0xf5, 0xc2, 0xa6, 0xab, 0xcb, 0xa3, 0xec, 0xba, 0x1a, 0x65, 0x07, 0xa1,
	0xcb, 0x43, 0xd4, 0xde, 0x9a, 0x20, 0x29, 0xb5, 0x1f, 0xcd, 0xcd, 0xbf, 0xae, 0x41, 0x5d, 0x9e,
	0xe1, 0xff, 0x21, 0xbc, 0x47, 0x74, 0x12, 0x74, 0xdb, 0x9d, 0x25, 0x4e, 0xae, 0x29, 0x20, 0x8f,
	0x67, 0x7c, 0x89, 0x25, 0xaf, 0x2e, 0xb3, 0xe4, 0x05, 0xb9, 0xab, 0x2d, 0xc8, 0x1d, 0x7b, 0x00,
	0xed, 0xc4, 0x9c, 0x2a, 0xaa, 0xd0, 0x4b, 0xd9, 0x2e, 0x8d, 0x29, 0x2a, 0x80, 0xd5, 0xea, 0x67,
	0x8d, 0x9c, 0xd9, 0x6f, 0xe6, 0xcd, 0x7e, 0xca, 0x27, 0x58, 0x11, 0x95, 0x16, 0xdc, 0xd2, 0x4d,
	0xa8, 0x7a, 0x31, 0x9f, 0x44, 0x46, 0x9b, 0x64, 0xae, 0x57, 0x94, 0xb9, 0xa3, 0x98, 0x4f, 0x2c,
	0x81, 0xc2, 0xf6, 0xa0, 0x11, 0xcd, 0xfa, 0x71, 0x10, 0x3b, 0xc2, 0xc9, 0x97, 0xad, 0xb4, 0x8d,
	0x26, 0x21, 0x76, 0x2e, 0xec, 0x29, 0x0f, 0x07, 0x89, 0x97, 0x2f, 0x5b, 0x10, 0x3b, 0x17, 0x27,
	0x02, 0xc2, 0x74, 0xd0, 0x62, 0xe7, 0x82, 0x7c, 0x45, 0xd9, 0xc2, 0x4f, 0x91, 0x21, 0xe0, 0x5c,
	0x5b, 0x22, 0x8c, 0x10, 0x13, 0x19, 0x50, 0x9f, 0x4d, 0x5d, 0xda, 0x2a, 0x13, 0x5b, 0x95, 0xcd,
	0x54, 0xb9, 0xb7, 0x15, 0xe5, 0x4e, 0x3d, 0xc1, 0x95, 0x6f, 0xf1, 0x04, 0x3d, 0xa8, 0x22, 0xf5,
	0x22, 0xe3, 0x2a, 0x19, 0x2a, 0xd1, 0xc0, 0x18, 0x33, 0x35, 0x29, 0x8e, 0xcb, 0x0d, 0x83, 0x76,
	0xd1, 0x4a, 0x0c, 0x8a, 0xe3, 0x72, 0xf6, 0xbb, 0x98, 0xe4, 0x84, 0x21, 0xa2, 0x44, 0xb3, 0xbe,
	0xb1, 0x4b, 0xfc, 0xd9, 0xc9, 0xe2, 0x76, 0x25, 0x76, 0xc0, 0xdc, 0x87, 0x30, 0x4f, 0x67, 0x7d,
	0xf6, 0x31, 0xb4, 0x93, 0x71, 0xe4, 0xfb, 0xf6, 0x68, 0x60, 0x21, 0x1e, 0x4b, 0xa6, 0xc6, 0x86,
	0xf9, 0xb3, 0x24, 0x0c, 0x6f, 0x42, 0xd5, 0x0d, 0x9d, 0x61, 0x2c, 0x82, 0x98, 0x60, 0xca, 0x7d,
	0xbd, 0xc4, 0x5a, 0x50, 0x0f, 0xce, 0x79, 0xe8, 0xce, 0xb8, 0x5e, 0x46, 0xf0, 0xd4, 0xf1, 0x5c,
	0x5d, 0xc3, 0xaf, 0xf3, 0xc0, 0x73, 0xf5, 0x0a, 0xc6, 0x35, 0x2f, 0x66, 0x7c, 0xc6, 0x3d, 0x7f,
	0xa4, 0x57, 0xcd, 0x3e, 0xe8, 0x14, 0x58, 0x29, 0x2c, 0x4c, 0xdd, 0xb0, 0xa6, 0xb8, 0x61, 0x14,
	0x23, 0x67, 0x6e, 0x8f, 0xf9, 0x30, 0x26, 0x29, 0xaf, 0x5a, 0x75, 0xd7, 0x99, 0x1f, 0xf3, 0x21,
	0x59, 0x78, 0x0a, 0xd7, 0x6c, 0xd2, 0x11, 0x92, 0xcc, 0xaa, 0x05, 0x04, 0x3a, 0x44, 0x88, 0xf9,
	0x97, 0x25, 0xd0, 0x29, 0x92, 0xb8, 0x6c, 0x91, 0x15, 0x81, 0x46, 0x65, 0x55, 0xa0, 0x51, 0x58,
	0xb9, 0x4a, 0x78, 0xca, 0xca, 0x18, 0x0b, 0x0f, 0xc3, 0x60, 0x22, 0xe2, 0x41, 0x61, 0x50, 0x1b,
	0x08, 0xa0, 0x58, 0xf0, 0xb7, 0x25, 0xd8, 0x44, 0x82, 0xaa, 0xbb, 0x2a, 0xcc, 0x58, 0x5e, 0x98,
	0x71, 0xc5, 0x16, 0xab, 0xab, 0xb6, 0x88, 0x86, 0x69, 0xec, 0x0a, 0xd6, 0x26, 0x86, 0x69, 0xec,
	0x9e, 0x48, 0x92, 0xfa, 0xfc, 0xa5, 0xad, 0x50, 0xa1, 0xee, 0xf3, 0x97, 0xd4, 0xf5, 0x3e, 0x6c,
	0x46, 0xce, 0x39, 0x4f, 0x54, 0x04, 0x5d, 0x48, 0x93, 0x44, 0xae, 0x8b, 0xe0, 0x93, 0x14, 0xaa,
	0x86, 0x7b, 0x8d, 0xc5, 0x70, 0x6f, 0x39, 0xc3, 0xcc, 0x7f, 0x2f, 0x43, 0x4b, 0x3d, 0x74, 0xc1,
	0xfa, 0x54, 0x17, 0xad, 0xcf, 0x3e, 0x40, 0xe6, 0xc4, 0xe5, 0x39, 0x9a, 0xa9, 0x0f, 0x47, 0x65,
	0x7f, 0x31, 0x73, 0xfc, 0xd8, 0x8b, 0xe7, 0x64, 0x93, 0xab, 0x56, 0xda, 0xce, 0x12, 0x80, 0x86,
	0x9a, 0x00, 0x7c, 0x04, 0x15, 0xd7, 0x89, 0x1d, 0x99, 0xde, 0xee, 0x2e, 0xb3, 0x24, 0xb7, 0x1f,
	0x3b, 0xb1, 0x63, 0x11, 0xda, 0xde, 0x5f, 0x95, 0xa0, 0x82, 0x4d, 0x76, 0x07, 0xaa, 0x22, 0x48,
	0x2d, 0x17, 0x06, 0x16, 0xe5, 0xcb, 0x12, 0x78, 0x38, 0x40, 0xe4, 0x12, 0x5a, 0x61, 0x40, 0x51,
	0xea, 0x2d, 0x81, 0xc7, 0x6e, 0x49, 0xb9, 0xac, 0x12, 0xbe, 0x91, 0xd3, 0x43, 0x15, 0x9d, 0xb0,
	0xcc, 0x29, 0xb4, 0x14, 0xcb, 0xbb, 0x34, 0x4f, 0x32, 0xa0, 0xee, 0xb8, 0x6e, 0xc8, 0xa3, 0x28,
	0xe1, 0xb2, 0x6c, 0xa2, 0x99, 0x3b, 0x77, 0x62, 0xe9, 0xf8, 0xf0, 0x13, 0xed, 0x0c, 0x09, 0x5e,
	0x38, 0x57, 0x9d, 0x45, 0x4b, 0xc2, 0xd0, 0x55, 0x98, 0xbf, 0x29, 0x41, 0x5d, 0xc6, 0x3d, 0x6b,
	0x16, 0x2f, 0x16, 0x76, 0xd4, 0x83, 0xaa, 0x28, 0x04, 0x89, 0xfd, 0x88, 0x06, 0x31, 0xea, 0x2c,
	0xf0, 0x93, 0x60, 0x45, 0x34, 0x50, 0x83, 0x7e, 0x11, 0xf4, 0xed, 0xd8, 0x8b, 0xc7, 0xc9, 0x76,
	0x1a, 0xbf, 0x08, 0xfa, 0xcf, 0xb0, 0x4d, 0x56, 0x99, 0x3a, 0x6a, 0xb2, 0x6e, 0x43, 0x50, 0x03,
	0xea, 0x32, 0xbc, 0x25, 0x61, 0x68, 0x58, 0x49, 0xd3, 0xbc, 0x01, 0x55, 0x31, 0xb0, 0x06, 0xe5,
	0x49, 0xa8, 0x6f, 0xd0, 0x6f, 0xa4, 0x97, 0x58, 0x1d, 0xb4, 0x49, 0x18, 0xe9, 0x65, 0x04, 0xb8,
	0xa1, 0xae, 0x99, 0xff, 0x54, 0x82, 0x46, 0x12, 0x57, 0x4b, 0x9f, 0x5b, 0x5e, 0x11, 0x89, 0x6a,
	0x4b, 0xab, 0x7f, 0x44, 0xa0, 0xc8, 0xa8, 0x2c, 0x54, 0xff, 0x44, 0xc4, 0x98, 0x62, 0xa8, 0xee,
	0xae, 0x9a, 0x77, 0x77, 0x45, 0x97, 0x5b, 0x5b, 0xd3, 0xe5, 0x9a, 0x77, 0xc1, 0xf8, 0xd4, 0xbb,
	0xe0, 0xee, 0x43, 0x0a, 0x03, 0x4e, 0x72, 0x9e, 0x3e, 0x0b, 0x93, 0xcb, 0x6a, 0x98, 0x6c, 0x7e,
	0x0c, 0x3d, 0xa9, 0xd6, 0x79, 0x7c, 0x24, 0xa6, 0xf4, 0x93, 0x62, 0x40, 0xd2, 0x34, 0xdf, 0x05,
	0x38, 0xa4, 0x14, 0x27, 0x99, 0x57, 0xa6, 0x3f, 0x65, 0x35, 0xfd, 0x31, 0x9f, 0x02, 0xb3, 0x64,
	0x1a, 0xa3, 0x60, 0xa7, 0xf9, 0x8e, 0xa8, 0xc8, 0x95, 0xd5, 0x7c, 0x87, 0x2a, 0x72, 0xd9, 0x74,
	0x5a, 0x6e, 0xba, 0xbf, 0x69, 0x40, 0x27, 0xbf, 0xc1, 0x35, 0x64, 0xb0, 0x60, 0x5f, 0xb4, 0x45,
	0xfb, 0x92, 0x94, 0xd8, 0x6a, 0x4a, 0x89, 0xed, 0x3a, 0xb4, 0x43, 0xee, 0x72, 0x3e, 0x51, 0xac,
	0x7b, 0xd5, 0x6a, 0x09, 0x98, 0x30, 0xc6, 0x4a, 0x1c, 0xdd, 0x5c, 0x19, 0x47, 0x43, 0x9e, 0xab,
	0x0c, 0x2a, 0xa4, 0x5a, 0xa2, 0xcc, 0x49, 0xdf, 0xec, 0x8e, 0xb4, 0x46, 0x5d, 0x3a, 0xc4, 0xb5,
	0x4c, 0xe7, 0xd5, 0x93, 0x2a, 0xf6, 0x48, 0x46, 0x4e, 0x61, 0x4c, 0x21, 0x8a, 0x66, 0x89, 0x06,
	0xea, 0x33, 0xf7, 0x5d, 0x0a, 0x51, 0x34, 0x0b, 0x3f, 0xd1, 0x08, 0x0f, 0x83, 0x50, 0x98, 0x78,
	0x26, 0x76, 0x38, 0x0c, 0x42, 0x32, 0xf1, 0xef, 0x42, 0x77, 0x98, 0x2f, 0xed, 0x6e, 0x13, 0x42,
	0x7b, 0xa8, 0xd6, 0x75, 0x65, 0x15, 0x0c, 0x0f, 0x3d, 0x99, 0x8a, 0x2a, 0x58, 0x8f, 0xe8, 0xd0,
	0x9d, 0x38, 0x17, 0x56, 0x06, 0xc5, 0x1d, 0x51, 0x22, 0x6c, 0xec, 0x08, 0x55, 0xa4, 0x06, 0xf9,
	0xbf, 0x20, 0xb4, 0x45, 0xd4, 0x26, 0x22, 0x1a, 0xdc, 0xd0, 0x11, 0x85, 0x68, 0xfb, 0x00, 0x13,
	0xcf, 0xb7, 0xa5, 0x38, 0x8a, 0x90, 0xa6, 0x39, 0xf1, 0x7c, 0x21, 0xb6, 0x69, 0xd1, 0x4c, 0x74,
	0xef, 0xca, 0x6e, 0xe7, 0x42, 0x76, 0xcb, 0xa9, 0x45, 0x11, 0x69, 0x2f, 0x9d, 0x5a, 0x54, 0x97,
	0xbe, 0x0f, 0x9b, 0xf9, 0xc3, 0x45, 0xc6, 0x35, 0x42, 0xe9, 0xa8, 0xa7, 0xa3, 0xb8, 0x0a, 0xf1,
	0x06, 0x67, 0x8e, 0xef, 0xf3, 0x71, 0x64, 0xec, 0x13, 0x52, 0x6b, 0x18, 0x84, 0x87, 0x12, 0x44,
	0xae, 0x27, 0xb2, 0x5d, 0x3e, 0xe6, 0xc8, 0xcc, 0xef, 0x89, 0xda, 0x84, 0x17, 0x3d, 0x16, 0x00,
	0x76, 0x07, 0x7a, 0x38, 0x83, 0x3f, 0x9b, 0xf4, 0x79, 0x68, 0x07, 0xc3, 0xa4, 0xc8, 0x77, 0x70,
	0xa0, 0xa1, 0x43, 0x1e, 0x06, 0xe1, 0xe7, 0xd4, 0xf5, 0xc5, 0x50, 0x14, 0xfb, 0xf6, 0xfe, 0x27,
	0x71, 0x25, 0x8f, 0xa1, 0x3d, 0x44, 0x2d, 0x4d, 0x4e, 0x28, 0x24, 0xf8, 0x7a, 0xca, 0xfc, 0x55,
	0x2a, 0x6c, 0xb5, 0x86, 0x59, 0x0f, 0x7b, 0x90, 0xd7, 0xcf, 0xd6, 0xdd, 0xfd, 0x4c, 0x7a, 0x96,
	0xe8, 0x73, 0xaa, 0xbe, 0xec, 0xc3, 0x9c, 0x86, 0xb5, 0xee, 0x6e, 0x67, 0x36, 0x2a, 0xd5, 0xd3,
	0xb4, 0x88, 0xf1, 0x00, 0x1a, 0x49, 0x31, 0x82, 0xcc, 0xb3, 0x2a, 0xa4, 0x8b, 0xea, 0x6d, 0xa5,
	0xc8, 0xa6, 0x2f, 0xeb, 0x5d, 0x6f, 0xc3, 0x35, 0xf5, 0xb0, 0x76, 0x3e, 0x29, 0xd1, 0x37, 0xd8,
	0x1e, 0x5c, 0x91, 0x3b, 0x2b, 0xf6, 0x95, 0xd4, 0x42, 0x30, 0x02, 0xca, 0xcc, 0x80, 0x5e, 0x5a,
	0x2e, 0x51, 0x7b, 0x34, 0x73, 0x00, 0xbd, 0xe3, 0x60, 0x94, 0x3b, 0xf2, 0x57, 0x91, 0xa2, 0x75,
	0x25, 0x45, 0xeb, 0x2e, 0xc9, 0xb4, 0x14, 0x15, 0xd6, 0xf2, 0xa9, 0xf0, 0x6f, 0x34, 0xe8, 0x12,
	0x37, 0xe9, 0xe8, 0xe4, 0x78, 0xd7, 0xb0, 0x42, 0xbb, 0xd0, 0x10, 0xa1, 0x5d, 0xba, 0x58, 0x9d,
	0xda, 0x47, 0xee, 0x1a, 0x19, 0x32, 0xa6, 0x46, 0xb3, 0x48, 0x3a, 0x40, 0xd9, 0xc2, 0x1d, 0x72,
	0x27, 0xf4, 0x3d, 0x7f, 0x44, 0x86, 0xab, 0x6c, 0x25, 0x4d, 0x54, 0x5b, 0xdc, 0x82, 0x17, 0x45,
	0x48, 0xc6, 0x10, 0x73, 0xac, 0xba, 0x88, 0xdf, 0x32, 0xb0, 0x55, 0x48, 0xb6, 0x9a, 0x79, 0x3b,
	0x75, 0x0d, 0x9a, 0x54, 0x90, 0x27, 0xef, 0x2d, 0x8c, 0x55, 0x03, 0x01, 0x9f, 0xa3, 0x07, 0xc7,
	0x28, 0x14, 0x3b, 0x93, 0x5d, 0x0b, 0xf1, 0x97, 0xf5, 0x8a, 0x2d, 0xec, 0x92, 0x4a, 0x26, 0x84,
	0x1f, 0xed, 0x3d, 0xe1, 0xf7, 0x43, 0x4c, 0xaf, 0xc9, 0xce, 0x35, 0x2d, 0x40, 0xd0, 0x23, 0x82,
	0xb0, 0x77, 0x64, 0xf9, 0x7f, 0x38, 0x1b, 0x8f, 0x69, 0xc5, 0x4d, 0x61, 0x8c, 0x10, 0xf8, 0xa9,
	0x84, 0x15, 0xbd, 0x86, 0xbe, 0xe0, 0x35, 0xd0, 0x5a, 0x79, 0xbe, 0x37, 0x99, 0x4d, 0x92, 0xb2,
	0x97, 0xcc, 0xd7, 0xba, 0x12, 0x2c, 0xeb, 0x5d, 0xa6, 0x09, 0xb5, 0x53, 0x41, 0x43, 0xf5, 0x2a,
	0xa1, 0x0d, 0x0d, 0xcf, 0x97, 0xad, 0x92, 0xf9, 0x1f, 0x25, 0x60, 0xc7, 0xc1, 0x48, 0x1e, 0x44,
	0x48, 0x39, 0x77, 0x8b, 0x9b, 0x28, 0x2d, 0x6c, 0xe2, 0x75, 0xc5, 0x0a, 0x89, 0x9a, 0xce, 0xbc,
	0x50, 0xe9, 0xda, 0x4a, 0xba, 0x32, 0xdb, 0x7c, 0x13, 0xb6, 0x32, 0xfc, 0x44, 0xb2, 0x84, 0x84,
	0x6c, 0xa6, 0xd8, 0x42, 0xc2, 0xcc, 0x3f, 0x2b, 0xc1, 0xf6, 0xe2, 0x61, 0xd6, 0xba, 0xeb, 0xfc,
	0x02, 0x76, 0xc6, 0xc1, 0x28, 0xdd, 0x51, 0x98, 0x8c, 0x95, 0x95, 0x9f, 0xcc, 0x10, 0x2c, 0xce,
	0x6f, 0x6d, 0x8f, 0x17, 0xd7, 0x34, 0xff, 0xb9, 0x0c, 0xc6, 0x71, 0x30, 0xc2, 0xf0, 0xe5, 0xd1,
	0xfc, 0x4d, 0x93, 0x77, 0x89, 0xe4, 0x6b, 0x4b, 0x25, 0x3f, 0x0b, 0x84, 0x2a, 0xb9, 0x7a, 0xe1,
	0xea, 0x78, 0xec, 0x2a, 0xd4, 0x31, 0xca, 0xca, 0x32, 0x90, 0x1a, 0x36, 0x8f, 0xb2, 0x64, 0xbf,
	0xae, 0x24, 0xfb, 0x2b, 0x98, 0xd9, 0x78, 0x25, 0x66, 0x36, 0x97, 0x33, 0xf3, 0xef, 0x4b, 0xb0,
	0xbb, 0x8a, 0x80, 0x6b, 0xb1, 0x74, 0x00, 0xfb, 0xc8, 0x52, 0x3a, 0x4d, 0x7f, 0xbe, 0x92, 0xb5,
	0xd7, 0x55, 0xd6, 0x2e, 0x5d, 0xcd, 0xda, 0x1d, 0xaf, 0xda, 0x87, 0xf9, 0xe7, 0x65, 0xb8, 0x8a,
	0xb6, 0xd8, 0xf1, 0xdc, 0x4f, 0x83, 0x30, 0xb3, 0x97, 0x21, 0x0f, 0xd7, 0xd9, 0xe3, 0x3a, 0x21,
	0xa2, 0x64, 0xa0, 0xb6, 0x26, 0x03, 0x57, 0xf0, 0xa4, 0xf6, 0x4a, 0x3c, 0xa9, 0x2f, 0xe5, 0x09,
	0x7b, 0x0f, 0xba, 0x74, 0x75, 0x89, 0xe6, 0x23, 0xf0, 0x33, 0x56, 0x77, 0x14, 0xe8, 0x91, 0x6b,
	0xfe, 0xb2, 0x44, 0xb2, 0xbf, 0x8c, 0x28, 0x6b, 0x71, 0xee, 0x0f, 0xe1, 0x2d, 0xe4, 0xdc, 0xd4,
	0xf1, 0x5c, 0x9b, 0x22, 0x1c, 0xda, 0x56, 0xb2, 0x99, 0x84, 0x71, 0x07, 0x2a, 0xe3, 0x96, 0xad,
	0x65, 0x19, 0xe3, 0x15, 0x9b, 0x30, 0xff, 0xb6, 0x04, 0xed, 0x27, 0x17, 0x18, 0x11, 0x8d, 0x38,
	0x29, 0xca, 0x3b, 0xd0, 0xa1, 0x1a, 0x86, 0x28, 0x01, 0x0d, 0xe6, 0x92, 0x15, 0x6d, 0x04, 0x1e,
	0x4a, 0x18, 0x95, 0xd4, 0x82, 0x0c, 0x45, 0x5e, 0xb1, 0xc7, 0x41, 0x8a, 0xf0, 0x0e, 0x74, 0xb8,
	0x9c, 0x55, 0x68, 0xa5, 0xd0, 0xba, 0x36, 0x2f, 0x2c, 0x95, 0x22, 0x51, 0xc9, 0x44, 0x30, 0x30,
	0x45, 0xa2, 0xb2, 0xc9, 0x1f, 0x95, 0x60, 0xf3, 0xd8, 0x8b, 0xe2, 0xe3, 0x60, 0xf4, 0x06, 0xdf,
	0x86, 0xbc, 0x52, 0x75, 0xd8, 0x1c, 0x40, 0x05, 0x97, 0x5f, 0x2f, 0xf9, 0xa8, 0x8c, 0x83, 0x11,
	0xba, 0x6e, 0xe4, 0x4c, 0x5b, 0xe5, 0x8c, 0x45, 0x3d, 0x2b, 0x17, 0xf9, 0xdf, 0x0a, 0x68, 0xc7,
	0xc1, 0x68, 0xcd, 0x2c, 0x7b, 0x16, 0xf1, 0x30, 0xc9, 0xb2, 0xf1, 0x5b, 0x66, 0xad, 0x8d, 0x34,
	0x6b, 0xbd, 0x22, 0x3c, 0x5d, 0x9a, 0x00, 0xc9, 0x96, 0xaa, 0x2f, 0x95, 0xbc, 0xbe, 0xac, 0x55,
	0x97, 0x59, 0x50, 0xa4, 0x3c, 0x51, 0x45, 0x79, 0x4a, 0x58, 0x46, 0xd1, 0x30, 0x7f, 0xa5, 0x41,
	0xed, 0xe1, 0x40, 0xe6, 0x5d, 0x5d, 0xb1, 0x98, 0x2d, 0x8b, 0x39, 0xfa, 0x06, 0xdb, 0x85, 0x1d,
	0x29, 0x02, 0x49, 0xc9, 0x47, 0x84, 0x3b, 0x7a, 0x89, 0x6d, 0xc3, 0xa6, 0x44, 0x77, 0xbd, 0x88,
	0x16, 0xd1, 0xcb, 0x08, 0x14, 0xd1, 0x79, 0x06, 0xd4, 0x10, 0x28, 0x93, 0xb7, 0x14, 0x58, 0x61,
	0x5d, 0x00, 0xc7, 0x75, 0x65, 0xc4, 0xa8, 0x57, 0xd9, 0x16, 0x74, 0x92, 0x0c, 0x4f, 0x80, 0x6a,
	0xb8, 0x21, 0x39, 0x99, 0x3c, 0x85, 0x5e, 0xa7, 0xf0, 0x53, 0x6c, 0x08, 0x93, 0x0d, 0xbd, 0xc1,
	0xae, 0x00, 0xa3, 0xe2, 0x8e, 0x1d, 0x29, 0x45, 0x55, 0x1d, 0x30, 0x86, 0x1d, 0x8c, 0xbd, 0xc1,
	0xf3, 0x04, 0xde, 0xe7, 0x76, 0x7f, 0x16, 0xc7, 0x81, 0xaf, 0xb7, 0x58, 0x0f, 0xf4, 0xa9, 0x33,
	0x27, 0x9d, 0x4d, 0xb4, 0x55, 0x6f, 0xe3, 0x08, 0xdc, 0xd1, 0x24, 0xf0, 0x79, 0xa1, 0xaf, 0x83,
	0xcb, 0xe2, 0x88, 0x84, 0x30, 0x5d, 0xdc, 0xae, 0xb8, 0x58, 0xb3, 0xc5, 0xe3, 0x0b, 0x7d, 0x53,
	0x46, 0xc6, 0x48, 0x10, 0xb4, 0xe5, 0xba, 0x8e, 0x47, 0x9c, 0x45, 0x3c, 0x39, 0xcf, 0x16, 0xdb,
	0x81, 0x2d, 0x0a, 0x8f, 0x73, 0x3b, 0x65, 0x4c, 0x87, 0x36, 0x81, 0x93, 0xc9, 0xb7, 0x59, 0x07,
	0x9a, 0x6e, 0xf0, 0xd2, 0x1f, 0x85, 0x8e, 0xcb, 0xf5, 0x9e, 0xf9, 0xc7, 0x1a, 0x54, 0xe9, 0x7e,
	0x73, 0xe9, 0xeb, 0x93, 0xa4, 0xa8, 0xa3, 0xe5, 0x8b, 0x3a, 0x4b, 0x2e, 0xda, 0xe9, 0xde, 0x52,
	0x1a, 0x05, 0x94, 0x9f, 0x6e, 0xee, 0xde, 0x52, 0x74, 0x58, 0x29, 0x0a, 0xbd, 0xd4, 0x11, 0x47,
	0x54, 0xd2, 0x71, 0x10, 0x20, 0xca, 0x23, 0xae, 0x40, 0x6d, 0xca, 0x43, 0x2f, 0x70, 0xa5, 0x48,
	0xc9, 0x16, 0x0e, 0x14, 0x5f, 0xf6, 0xcc, 0xf7, 0x62, 0x29, 0xf5, 0x20, 0x40, 0x5f, 0xf9, 0x5e,
	0x9c, 0x2b, 0x11, 0x36, 0x0b, 0x25, 0xc2, 0x95, 0xc9, 0xba, 0xb9, 0x2f, 0xd3, 0x17, 0x48, 0x92,
	0x25, 0x7d, 0x83, 0x35, 0x65, 0x45, 0x4f, 0x2f, 0x99, 0x1f, 0x00, 0x1c, 0x66, 0x7b, 0x6b, 0x43,
	0x23, 0xf0, 0x85, 0xe1, 0xd2, 0x37, 0x90, 0xa0, 0x21, 0xc7, 0x83, 0x79, 0xfe, 0x48, 0x2f, 0x99,
	0xf7, 0x01, 0x4e, 0xb2, 0xdd, 0xd4, 0x41, 0x73, 0x9d, 0xb9, 0xa8, 0x9b, 0xbf, 0xe4, 0xfc, 0xb9,
	0x5e, 0xc2, 0x69, 0x49, 0x3d, 0x44, 0xd5, 0x1c, 0x63, 0x08, 0x5d, 0x33, 0xff, 0xae, 0x04, 0x7b,
	0x32, 0x66, 0xa5, 0x02, 0x23, 0x15, 0x76, 0xa5, 0xd1, 0xe3, 0xee, 0x1b, 0x30, 0x7b, 0xef, 0x83,
	0x16, 0xcd, 0xfa, 0x32, 0x05, 0x5c, 0x71, 0x5b, 0x80, 0x18, 0x98, 0xbd, 0x88, 0x7a, 0x73, 0xf6,
	0x8c, 0x8c, 0xda, 0x47, 0xae, 0xf9, 0x17, 0x25, 0xe8, 0x9d, 0x72, 0x27, 0x1c, 0x9c, 0xbd, 0xd6,
	0x55, 0xdd, 0x8b, 0x19, 0x0f, 0xe7, 0x49, 0xd1, 0x8f, 0x1a, 0x8a, 0x45, 0xac, 0xe6, 0x2e, 0xe5,
	0xd2, 0x0b, 0xa3, 0xda, 0xd2, 0x8b, 0xbd, 0xba, 0x62, 0xba, 0xcd, 0x3f, 0x29, 0x41, 0xf7, 0xb1,
	0x37, 0x1c, 0x9e, 0xce, 0xfa, 0xaf, 0xb0, 0x9f, 0xf7, 0x41, 0x73, 0xa3, 0x24, 0x95, 0x5e, 0x45,
	0x0f, 0x37, 0x8a, 0x89, 0x70, 0xe1, 0xe0, 0x32, 0xc2, 0x85, 0x03, 0xf3, 0x57, 0x25, 0xe8, 0xe6,
	0xf2, 0xd1, 0xb5, 0xbc, 0xc6, 0x8f, 0x94, 0x7b, 0x3b, 0x1a, 0xb4, 0xf8, 0xd0, 0x2c, 0x97, 0xd6,
	0x17, 0xb0, 0x15, 0x0a, 0x6a, 0x45, 0x0a, 0x8a, 0x7b, 0x2c, 0x61, 0xea, 0x45, 0xc3, 0x1c, 0x43,
	0x2f, 0x3f, 0xdd, 0xfa, 0x04, 0x4b, 0x12, 0xeb, 0xf2, 0xca, 0xc4, 0xba, 0x98, 0xce, 0x9a, 0xcf,
	0xc1, 0x40, 0xff, 0xfd, 0xba, 0x2b, 0x66, 0x47, 0x2b, 0x17, 0x8f, 0x26, 0xc4, 0xa0, 0xa2, 0x8a,
	0xc1, 0xaf, 0x4b, 0xb0, 0x53, 0x58, 0x29, 0x9a, 0x06, 0x7e, 0xc4, 0xd7, 0x5c, 0x4a, 0x26, 0xde,
	0x65, 0xf1, 0xd6, 0x47, 0x26, 0xde, 0x3d, 0xa8, 0xf2, 0x30, 0x4c, 0x89, 0x2b, 0x1a, 0xec, 0xf7,
	0x21, 0x7f, 0xab, 0x2a, 0x2b, 0x25, 0xab, 0x58, 0x96, 0x47, 0x36, 0xf7, 0xc4, 0x6b, 0x46, 0x7f,
	0xc4, 0x74, 0xd0, 0xa2, 0x38, 0x39, 0x1d, 0x7e, 0x9a, 0xff, 0x55, 0x02, 0x38, 0x71, 0xe6, 0xaf,
	0x1d, 0xed, 0x34, 0x8a, 0x6a, 0x7f, 0xe9, 0xa3, 0x88, 0x82, 0xeb, 0xaf, 0x2f, 0xba, 0xfe, 0xfb,
	0xd0, 0x3e, 0x54, 0x5e, 0x3d, 0xc8, 0x9b, 0x94, 0x25, 0x6f, 0x23, 0x54, 0x2c, 0x25, 0x68, 0x87,
	0x5c, 0xf9, 0xf9, 0xa7, 0xd0, 0x79, 0x92, 0x7b, 0xde, 0x24, 0x0d, 0x53, 0xf9, 0x52, 0xc3, 0xa4,
	0x83, 0xc6, 0xc3, 0x84, 0x13, 0xf8, 0x69, 0xfe, 0x18, 0x1a, 0x4f, 0x92, 0x0b, 0x77, 0x13, 0x34,
	0xcf, 0x3f, 0x97, 0x6a, 0xba, 0xf8, 0x48, 0x01, 0x3b, 0x93, 0x19, 0x2a, 0xd9, 0x0c, 0xbf, 0x2d,
	0xc1, 0xb6, 0x44, 0x39, 0x14, 0x9e, 0x40, 0xbc, 0x52, 0x5d, 0xef, 0xd5, 0x4a, 0x1c, 0x24, 0x77,
	0x05, 0x71, 0x70, 0x59, 0x69, 0xe7, 0x7a, 0x56, 0xe3, 0x27, 0x8f, 0x2a, 0x36, 0x91, 0x54, 0xf3,
	0xa9, 0xd6, 0x92, 0xbf, 0xfb, 0xaa, 0x16, 0xef, 0xbe, 0x56, 0xbe, 0xd8, 0x60, 0xfb, 0x50, 0x19,
	0x3b, 0xfe, 0x88, 0xb8, 0xdf, 0xbd, 0xdb, 0x4c, 0xb6, 0x7b, 0x6c, 0x11, 0x18, 0x35, 0x17, 0x43,
	0x78, 0x79, 0xf9, 0x4e, 0xdf, 0x37, 0xdf, 0x83, 0x46, 0x1a, 0xb1, 0xd7, 0x41, 0x9b, 0x45, 0xae,
	0xbe, 0x81, 0x1f, 0xe7, 0xbe, 0x2b, 0x6e, 0x49, 0xfa, 0xe1, 0x58, 0x2f, 0xdf, 0xfc, 0x75, 0x19,
	0xaa, 0x4f, 0xce, 0xb9, 0x1f, 0x63, 0x4c, 0x22, 0xfd, 0xd3, 0xe9, 0x9c, 0x5e, 0xaa, 0x6d, 0x60,
	0x6c, 0x41, 0xef, 0x85, 0xbe, 0x12, 0x57, 0xe1, 0x7a, 0x09, 0x63, 0x9f, 0xd4, 0x89, 0x49, 0xd7,
	0xa5, 0x57, 0x30, 0x34, 0x59, 0x70, 0x6d, 0x7a, 0x95, 0x5d, 0x83, 0xab, 0x4b, 0x48, 0x7f, 0xca,
	0x7d, 0x57, 0xaf, 0x61, 0x58, 0x27, 0xc7, 0x7c, 0x7d, 0x4f, 0x2e, 0xd8, 0x60, 0x57, 0x61, 0x5b,
	0x15, 0x8b, 0x64, 0xdd, 0x2e, 0x06, 0x73, 0x72, 0xaa, 0x04, 0x06, 0xcc, 0x80, 0x5e, 0xee, 0xd1,
	0x53, 0xd2, 0xd3, 0x42, 0x6c, 0x79, 0xa3, 0x92, 0xc0, 0xda, 0x18, 0x4e, 0x1d, 0x07, 0x69, 0xbb,
	0x43, 0xa3, 0x73, 0xb5, 0x45, 0xd9, 0xb3, 0xa9, 0x9c, 0xf1, 0xe7, 0x41, 0xf8, 0x9c, 0x87, 0x3f,
	0x0d, 0xfa, 0xfa, 0x8d, 0xbb, 0xff, 0x50, 0x82, 0xab, 0xa7, 0xb3, 0xbe, 0xf7, 0xcd, 0x91, 0x1f,
	0xf3, 0xd0, 0x77, 0xc6, 0xc9, 0xda, 0xa3, 0x90, 0xdd, 0xa4, 0xfb, 0x13, 0x27, 0xe6, 0xf4, 0x20,
	0xaa, 0x93, 0xbb, 0xd6, 0xd9, 0xcb, 0x37, 0xd9, 0x23, 0x60, 0x62, 0xa9, 0x5c, 0x66, 0x96, 0xa9,
	0x85, 0x0a, 0xde, 0x5b, 0x0e, 0x66, 0x1f, 0x40, 0xe5, 0x04, 0xcd, 0xcb, 0x76, 0x22, 0x08, 0xd8,
	0x92, 0x0c, 0xd9, 0x6b, 0xa7, 0xc0, 0xc0, 0x1f, 0xdd, 0xfd, 0x6f, 0x9d, 0xec, 0x4d, 0xb2, 0xd3,
	0x7b, 0xd0, 0x38, 0x99, 0x85, 0x83, 0x33, 0x27, 0x52, 0xd7, 0x54, 0x69, 0xbe, 0xb7, 0xa0, 0x5a,
	0xd9, 0x96, 0x73, 0x6a, 0xbd, 0x62, 0xf8, 0x72, 0x30, 0xbb, 0x0f, 0x9b, 0x9f, 0xf1, 0x38, 0x07,
	0x82, 0x64, 0xa3, 0x47, 0xee, 0xaa, 0x51, 0x8f, 0x40, 0x7f, 0xe8, 0xba, 0xf9, 0xa7, 0x6d, 0x2b,
	0x1e, 0x68, 0xef, 0xad, 0x80, 0xb3, 0x27, 0xb0, 0x2d, 0x76, 0xff, 0xdd, 0xa6, 0xf9, 0x18, 0xb6,
	0xc5, 0x45, 0x41, 0x1e, 0xac, 0x1e, 0xa2, 0x93, 0x7c, 0x3f, 0x99, 0x4c, 0xe3, 0x39, 0xfb, 0xa1,
	0x78, 0xf4, 0x54, 0x78, 0x78, 0xae, 0x0e, 0xb8, 0xba, 0x7c, 0xad, 0x88, 0x7d, 0x00, 0xda, 0x89,
	0x33, 0x67, 0xdb, 0x6a, 0x7f, 0xc2, 0xdf, 0x82, 0x3c, 0x7d, 0x84, 0x3a, 0x9a, 0x3e, 0xad, 0xca,
	0xcf, 0xbf, 0x55, 0x64, 0x65, 0xc4, 0xee, 0x41, 0x47, 0x88, 0x6a, 0xc2, 0xdc, 0x05, 0x76, 0x2f,
	0x11, 0x80, 0x7b, 0xd0, 0x11, 0x24, 0x7c, 0x95, 0x41, 0x3f, 0x86, 0xee, 0xa7, 0xde, 0x38, 0x46,
	0x6f, 0x21, 0xd7, 0x56, 0xea, 0x8b, 0x0b, 0x8f, 0xc1, 0x96, 0xed, 0xf5, 0x01, 0xb4, 0x1f, 0x87,
	0xce, 0x30, 0xc1, 0x5c, 0x5f, 0x60, 0x7f, 0x04, 0x5b, 0x32, 0x5e, 0x4c, 0xb1, 0x22, 0x96, 0x11,
	0x3b, 0x1f, 0x4b, 0x2e, 0x19, 0xff, 0x89, 0xa0, 0x69, 0xfa, 0x37, 0x92, 0xb7, 0x72, 0x1b, 0x2f,
	0xfc, 0x9b, 0x45, 0xd9, 0x79, 0x3a, 0xe0, 0x63, 0x80, 0x87, 0xae, 0x9b, 0xfc, 0x13, 0x64, 0xe1,
	0x1f, 0x23, 0x7b, 0x0b, 0x10, 0x76, 0x13, 0x9a, 0x24, 0x2c, 0x74, 0xe7, 0x95, 0x17, 0xa4, 0xbd,
	0x6e, 0xee, 0xe5, 0x40, 0xc4, 0x6e, 0x41, 0xe7, 0xc9, 0xc5, 0x34, 0x08, 0x53, 0xc2, 0xa8, 0x3c,
	0xcf, 0xbf, 0xef, 0xf7, 0x47, 0xec, 0x87, 0xd0, 0x3b, 0x0c, 0xfc, 0x73, 0x9e, 0xa2, 0x3f, 0x0b,
	0x7e, 0x12, 0x4f, 0xc6, 0x4b, 0x78, 0xb8, 0x30, 0xf4, 0x13, 0x52, 0xda, 0xef, 0x60, 0xa8, 0xee,
	0x41, 0xe7, 0x99, 0xfc, 0x17, 0xc0, 0x53, 0x4c, 0x8c, 0xd7, 0x92, 0xe8, 0xf5, 0xad, 0x1b, 0x9a,
	0xb3, 0xa4, 0x7e, 0xc4, 0x8c, 0x1c, 0x93, 0x94, 0x92, 0x92, 0x32, 0x3f, 0x21, 0x3e, 0x81, 0x6d,
	0xa1, 0x02, 0x85, 0xeb, 0xf4, 0xe5, 0xc1, 0xdd, 0xde, 0x0a, 0x38, 0xfb, 0x3d, 0xd0, 0x3f, 0xe3,
	0x85, 0x2b, 0xf6, 0x22, 0x05, 0x57, 0x0e, 0xfe, 0x12, 0xf4, 0xaf, 0xa2, 0xc2, 0x06, 0xf6, 0x57,
	0x44, 0x97, 0xf2, 0x14, 0xdf, 0x5b, 0xd5, 0x2d, 0x83, 0xe0, 0xaf, 0x61, 0xe7, 0x6b, 0x67, 0xec,
	0xb9, 0x0b, 0x07, 0xfb, 0x8e, 0xf3, 0x7e, 0x01, 0x5b, 0x0b, 0x31, 0x3e, 0xbb, 0x9e, 0x23, 0xf6,
	0xd2, 0x79, 0xaf, 0x2e, 0x9f, 0x37, 0x52, 0x2c, 0x69, 0x6e, 0xca, 0x6f, 0xb1, 0xa4, 0x3f, 0x80,
	0xad, 0xcf, 0x78, 0x5c, 0xb8, 0xa7, 0x5b, 0x6e, 0x48, 0x0b, 0x48, 0x3f, 0x81, 0x9e, 0xb0, 0x5c,
	0x05, 0xf8, 0xaa, 0x01, 0xab, 0x67, 0xfa, 0x44, 0xfc, 0x95, 0xad, 0x78, 0xc9, 0xa1, 0xee, 0xe2,
	0xad, 0x6f, 0xb9, 0x3f, 0x89, 0xd8, 0xcf, 0x60, 0x17, 0x27, 0x58, 0x7e, 0x57, 0xa2, 0x4e, 0x63,
	0x5e, 0x5a, 0xab, 0x8f, 0xd8, 0x91, 0x4c, 0xbc, 0x96, 0x55, 0xe4, 0xd5, 0xb9, 0xae, 0x5f, 0x56,
	0x3e, 0x8e, 0xd8, 0x67, 0x18, 0x46, 0x2d, 0x99, 0xe6, 0xd2, 0xca, 0x73, 0x81, 0x4b, 0xff, 0x17,
	0x00, 0x00, 0xff, 0xff, 0xa1, 0xf2, 0x6e, 0xde, 0x3a, 0x38, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SubizInternalPaymentMgrClient is the client API for SubizInternalPaymentMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubizInternalPaymentMgrClient interface {
	CreateBill(ctx context.Context, in *Bill, opts ...grpc.CallOption) (*Bill, error)
	UpdateExchangeRate(ctx context.Context, in *ExchangeRate, opts ...grpc.CallOption) (*ExchangeRate, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
}

type subizInternalPaymentMgrClient struct {
	cc *grpc.ClientConn
}

func NewSubizInternalPaymentMgrClient(cc *grpc.ClientConn) SubizInternalPaymentMgrClient {
	return &subizInternalPaymentMgrClient{cc}
}

func (c *subizInternalPaymentMgrClient) CreateBill(ctx context.Context, in *Bill, opts ...grpc.CallOption) (*Bill, error) {
	out := new(Bill)
	err := c.cc.Invoke(ctx, "/payment.SubizInternalPaymentMgr/CreateBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subizInternalPaymentMgrClient) UpdateExchangeRate(ctx context.Context, in *ExchangeRate, opts ...grpc.CallOption) (*ExchangeRate, error) {
	out := new(ExchangeRate)
	err := c.cc.Invoke(ctx, "/payment.SubizInternalPaymentMgr/UpdateExchangeRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subizInternalPaymentMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/payment.SubizInternalPaymentMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubizInternalPaymentMgrServer is the server API for SubizInternalPaymentMgr service.
type SubizInternalPaymentMgrServer interface {
	CreateBill(context.Context, *Bill) (*Bill, error)
	UpdateExchangeRate(context.Context, *ExchangeRate) (*ExchangeRate, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
}

func RegisterSubizInternalPaymentMgrServer(s *grpc.Server, srv SubizInternalPaymentMgrServer) {
	s.RegisterService(&_SubizInternalPaymentMgr_serviceDesc, srv)
}

func _SubizInternalPaymentMgr_CreateBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubizInternalPaymentMgrServer).CreateBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.SubizInternalPaymentMgr/CreateBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubizInternalPaymentMgrServer).CreateBill(ctx, req.(*Bill))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubizInternalPaymentMgr_UpdateExchangeRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeRate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubizInternalPaymentMgrServer).UpdateExchangeRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.SubizInternalPaymentMgr/UpdateExchangeRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubizInternalPaymentMgrServer).UpdateExchangeRate(ctx, req.(*ExchangeRate))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubizInternalPaymentMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubizInternalPaymentMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.SubizInternalPaymentMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubizInternalPaymentMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubizInternalPaymentMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payment.SubizInternalPaymentMgr",
	HandlerType: (*SubizInternalPaymentMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBill",
			Handler:    _SubizInternalPaymentMgr_CreateBill_Handler,
		},
		{
			MethodName: "UpdateExchangeRate",
			Handler:    _SubizInternalPaymentMgr_UpdateExchangeRate_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _SubizInternalPaymentMgr_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment/payment.proto",
}

// PaymentMgrClient is the client API for PaymentMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentMgrClient interface {
	Purchase(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Invoice, error)
	UpdateSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Subscription, error)
	GetSubscription(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Subscription, error)
	AddPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error)
	UpdatePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error)
	DeletePaymentMethod(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	ListPaymentMethods(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*PaymentMethods, error)
	Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Bill, error)
	ListInvoices(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Invoices, error)
	CreateInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error)
	UpdateInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error)
	FilterInvoices(ctx context.Context, in *ListInvoiceRequest, opts ...grpc.CallOption) (*Invoices, error)
	DraftInvoice(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Invoice, error)
	DiffSubscriptions(ctx context.Context, in *DiffSubRequest, opts ...grpc.CallOption) (*Invoice, error)
	ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*Comments, error)
	AddComment(ctx context.Context, in *Comment, opts ...grpc.CallOption) (*Comment, error)
	ListPlans(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*Plans, error)
	ExportInvoice(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*String, error)
	ConvertInvoiceToHtml(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*String, error)
	GetExchangeRate(ctx context.Context, in *ExchangeRate, opts ...grpc.CallOption) (*ExchangeRate, error)
	TransferMoney(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Bill, error)
	Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error)
	ListLogs(ctx context.Context, in *ListLogsRequest, opts ...grpc.CallOption) (*Logs, error)
	CreatePromotionCode(ctx context.Context, in *PromotionCode, opts ...grpc.CallOption) (*PromotionCode, error)
	GetPromotionCode(ctx context.Context, in *String, opts ...grpc.CallOption) (*PromotionCode, error)
	UsePromotionCode(ctx context.Context, in *PromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodeResponse, error)
	ValidatePromotionCode(ctx context.Context, in *PromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodeResponse, error)
	ListPromotionCode(ctx context.Context, in *ListPromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodes, error)
	DeletePromotionCode(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error)
	GetAgentReferInfo(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentReferInfo, error)
	UpdateAgentReferInfo(ctx context.Context, in *AgentReferInfo, opts ...grpc.CallOption) (*AgentReferInfo, error)
	ListAccountReferred(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogAccountReferreds, error)
	ListBillByAccountReferred(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogBillByAccountReferreds, error)
	ListPaidForAgentReferrer(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogPaidForAgentReferrers, error)
	PaidForAgentReferrer(ctx context.Context, in *LogPaidForAgentReferrer, opts ...grpc.CallOption) (*common.Empty, error)
}

type paymentMgrClient struct {
	cc *grpc.ClientConn
}

func NewPaymentMgrClient(cc *grpc.ClientConn) PaymentMgrClient {
	return &paymentMgrClient{cc}
}

func (c *paymentMgrClient) Purchase(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/Purchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) UpdateSubscription(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Subscription, error) {
	out := new(Subscription)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/UpdateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) GetSubscription(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Subscription, error) {
	out := new(Subscription)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/GetSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) AddPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error) {
	out := new(PaymentMethod)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/AddPaymentMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) UpdatePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...grpc.CallOption) (*PaymentMethod, error) {
	out := new(PaymentMethod)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/UpdatePaymentMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) DeletePaymentMethod(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/DeletePaymentMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListPaymentMethods(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*PaymentMethods, error) {
	out := new(PaymentMethods)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListPaymentMethods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Bill, error) {
	out := new(Bill)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListInvoices(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*Invoices, error) {
	out := new(Invoices)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) CreateInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/CreateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) UpdateInvoice(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/UpdateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) FilterInvoices(ctx context.Context, in *ListInvoiceRequest, opts ...grpc.CallOption) (*Invoices, error) {
	out := new(Invoices)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/FilterInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) DraftInvoice(ctx context.Context, in *Subscription, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/DraftInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) DiffSubscriptions(ctx context.Context, in *DiffSubRequest, opts ...grpc.CallOption) (*Invoice, error) {
	out := new(Invoice)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/DiffSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*Comments, error) {
	out := new(Comments)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) AddComment(ctx context.Context, in *Comment, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/AddComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListPlans(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*Plans, error) {
	out := new(Plans)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ExportInvoice(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ExportInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ConvertInvoiceToHtml(ctx context.Context, in *Invoice, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ConvertInvoiceToHtml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) GetExchangeRate(ctx context.Context, in *ExchangeRate, opts ...grpc.CallOption) (*ExchangeRate, error) {
	out := new(ExchangeRate)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/GetExchangeRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) TransferMoney(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*Bill, error) {
	out := new(Bill)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/TransferMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) Ping(ctx context.Context, in *common.PingRequest, opts ...grpc.CallOption) (*common.Pong, error) {
	out := new(common.Pong)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListLogs(ctx context.Context, in *ListLogsRequest, opts ...grpc.CallOption) (*Logs, error) {
	out := new(Logs)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) CreatePromotionCode(ctx context.Context, in *PromotionCode, opts ...grpc.CallOption) (*PromotionCode, error) {
	out := new(PromotionCode)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/CreatePromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) GetPromotionCode(ctx context.Context, in *String, opts ...grpc.CallOption) (*PromotionCode, error) {
	out := new(PromotionCode)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/GetPromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) UsePromotionCode(ctx context.Context, in *PromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodeResponse, error) {
	out := new(PromotionCodeResponse)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/UsePromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ValidatePromotionCode(ctx context.Context, in *PromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodeResponse, error) {
	out := new(PromotionCodeResponse)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ValidatePromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListPromotionCode(ctx context.Context, in *ListPromotionCodeRequest, opts ...grpc.CallOption) (*PromotionCodes, error) {
	out := new(PromotionCodes)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListPromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) DeletePromotionCode(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/DeletePromotionCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) GetAgentReferInfo(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*AgentReferInfo, error) {
	out := new(AgentReferInfo)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/GetAgentReferInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) UpdateAgentReferInfo(ctx context.Context, in *AgentReferInfo, opts ...grpc.CallOption) (*AgentReferInfo, error) {
	out := new(AgentReferInfo)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/UpdateAgentReferInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListAccountReferred(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogAccountReferreds, error) {
	out := new(LogAccountReferreds)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListAccountReferred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListBillByAccountReferred(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogBillByAccountReferreds, error) {
	out := new(LogBillByAccountReferreds)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListBillByAccountReferred", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) ListPaidForAgentReferrer(ctx context.Context, in *common.Id, opts ...grpc.CallOption) (*LogPaidForAgentReferrers, error) {
	out := new(LogPaidForAgentReferrers)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/ListPaidForAgentReferrer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMgrClient) PaidForAgentReferrer(ctx context.Context, in *LogPaidForAgentReferrer, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/payment.PaymentMgr/PaidForAgentReferrer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentMgrServer is the server API for PaymentMgr service.
type PaymentMgrServer interface {
	Purchase(context.Context, *Subscription) (*Invoice, error)
	UpdateSubscription(context.Context, *Subscription) (*Subscription, error)
	GetSubscription(context.Context, *common.Id) (*Subscription, error)
	AddPaymentMethod(context.Context, *PaymentMethod) (*PaymentMethod, error)
	UpdatePaymentMethod(context.Context, *PaymentMethod) (*PaymentMethod, error)
	DeletePaymentMethod(context.Context, *common.Id) (*common.Empty, error)
	ListPaymentMethods(context.Context, *common.Id) (*PaymentMethods, error)
	Pay(context.Context, *PayRequest) (*Bill, error)
	ListInvoices(context.Context, *common.Id) (*Invoices, error)
	CreateInvoice(context.Context, *Invoice) (*Invoice, error)
	UpdateInvoice(context.Context, *Invoice) (*Invoice, error)
	FilterInvoices(context.Context, *ListInvoiceRequest) (*Invoices, error)
	DraftInvoice(context.Context, *Subscription) (*Invoice, error)
	DiffSubscriptions(context.Context, *DiffSubRequest) (*Invoice, error)
	ListComments(context.Context, *ListCommentsRequest) (*Comments, error)
	AddComment(context.Context, *Comment) (*Comment, error)
	ListPlans(context.Context, *common.Empty) (*Plans, error)
	ExportInvoice(context.Context, *common.Id) (*String, error)
	ConvertInvoiceToHtml(context.Context, *Invoice) (*String, error)
	GetExchangeRate(context.Context, *ExchangeRate) (*ExchangeRate, error)
	TransferMoney(context.Context, *PayRequest) (*Bill, error)
	Ping(context.Context, *common.PingRequest) (*common.Pong, error)
	ListLogs(context.Context, *ListLogsRequest) (*Logs, error)
	CreatePromotionCode(context.Context, *PromotionCode) (*PromotionCode, error)
	GetPromotionCode(context.Context, *String) (*PromotionCode, error)
	UsePromotionCode(context.Context, *PromotionCodeRequest) (*PromotionCodeResponse, error)
	ValidatePromotionCode(context.Context, *PromotionCodeRequest) (*PromotionCodeResponse, error)
	ListPromotionCode(context.Context, *ListPromotionCodeRequest) (*PromotionCodes, error)
	DeletePromotionCode(context.Context, *common.Id) (*common.Empty, error)
	GetAgentReferInfo(context.Context, *common.Id) (*AgentReferInfo, error)
	UpdateAgentReferInfo(context.Context, *AgentReferInfo) (*AgentReferInfo, error)
	ListAccountReferred(context.Context, *common.Id) (*LogAccountReferreds, error)
	ListBillByAccountReferred(context.Context, *common.Id) (*LogBillByAccountReferreds, error)
	ListPaidForAgentReferrer(context.Context, *common.Id) (*LogPaidForAgentReferrers, error)
	PaidForAgentReferrer(context.Context, *LogPaidForAgentReferrer) (*common.Empty, error)
}

func RegisterPaymentMgrServer(s *grpc.Server, srv PaymentMgrServer) {
	s.RegisterService(&_PaymentMgr_serviceDesc, srv)
}

func _PaymentMgr_Purchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).Purchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/Purchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).Purchase(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_UpdateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).UpdateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/UpdateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).UpdateSubscription(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_GetSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).GetSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/GetSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).GetSubscription(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_AddPaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).AddPaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/AddPaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).AddPaymentMethod(ctx, req.(*PaymentMethod))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_UpdatePaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).UpdatePaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/UpdatePaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).UpdatePaymentMethod(ctx, req.(*PaymentMethod))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_DeletePaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).DeletePaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/DeletePaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).DeletePaymentMethod(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListPaymentMethods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListPaymentMethods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListPaymentMethods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListPaymentMethods(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).Pay(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListInvoices(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_CreateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Invoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).CreateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/CreateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).CreateInvoice(ctx, req.(*Invoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_UpdateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Invoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).UpdateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/UpdateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).UpdateInvoice(ctx, req.(*Invoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_FilterInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).FilterInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/FilterInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).FilterInvoices(ctx, req.(*ListInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_DraftInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Subscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).DraftInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/DraftInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).DraftInvoice(ctx, req.(*Subscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_DiffSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiffSubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).DiffSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/DiffSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).DiffSubscriptions(ctx, req.(*DiffSubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListComments(ctx, req.(*ListCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_AddComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Comment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).AddComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/AddComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).AddComment(ctx, req.(*Comment))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListPlans(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ExportInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ExportInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ExportInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ExportInvoice(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ConvertInvoiceToHtml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Invoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ConvertInvoiceToHtml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ConvertInvoiceToHtml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ConvertInvoiceToHtml(ctx, req.(*Invoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_GetExchangeRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeRate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).GetExchangeRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/GetExchangeRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).GetExchangeRate(ctx, req.(*ExchangeRate))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_TransferMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).TransferMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/TransferMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).TransferMoney(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).Ping(ctx, req.(*common.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListLogs(ctx, req.(*ListLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_CreatePromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromotionCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).CreatePromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/CreatePromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).CreatePromotionCode(ctx, req.(*PromotionCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_GetPromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).GetPromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/GetPromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).GetPromotionCode(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_UsePromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromotionCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).UsePromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/UsePromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).UsePromotionCode(ctx, req.(*PromotionCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ValidatePromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromotionCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ValidatePromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ValidatePromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ValidatePromotionCode(ctx, req.(*PromotionCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListPromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPromotionCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListPromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListPromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListPromotionCode(ctx, req.(*ListPromotionCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_DeletePromotionCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).DeletePromotionCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/DeletePromotionCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).DeletePromotionCode(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_GetAgentReferInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).GetAgentReferInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/GetAgentReferInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).GetAgentReferInfo(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_UpdateAgentReferInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentReferInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).UpdateAgentReferInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/UpdateAgentReferInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).UpdateAgentReferInfo(ctx, req.(*AgentReferInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListAccountReferred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListAccountReferred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListAccountReferred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListAccountReferred(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListBillByAccountReferred_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListBillByAccountReferred(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListBillByAccountReferred",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListBillByAccountReferred(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_ListPaidForAgentReferrer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).ListPaidForAgentReferrer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/ListPaidForAgentReferrer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).ListPaidForAgentReferrer(ctx, req.(*common.Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMgr_PaidForAgentReferrer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogPaidForAgentReferrer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMgrServer).PaidForAgentReferrer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentMgr/PaidForAgentReferrer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMgrServer).PaidForAgentReferrer(ctx, req.(*LogPaidForAgentReferrer))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payment.PaymentMgr",
	HandlerType: (*PaymentMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Purchase",
			Handler:    _PaymentMgr_Purchase_Handler,
		},
		{
			MethodName: "UpdateSubscription",
			Handler:    _PaymentMgr_UpdateSubscription_Handler,
		},
		{
			MethodName: "GetSubscription",
			Handler:    _PaymentMgr_GetSubscription_Handler,
		},
		{
			MethodName: "AddPaymentMethod",
			Handler:    _PaymentMgr_AddPaymentMethod_Handler,
		},
		{
			MethodName: "UpdatePaymentMethod",
			Handler:    _PaymentMgr_UpdatePaymentMethod_Handler,
		},
		{
			MethodName: "DeletePaymentMethod",
			Handler:    _PaymentMgr_DeletePaymentMethod_Handler,
		},
		{
			MethodName: "ListPaymentMethods",
			Handler:    _PaymentMgr_ListPaymentMethods_Handler,
		},
		{
			MethodName: "Pay",
			Handler:    _PaymentMgr_Pay_Handler,
		},
		{
			MethodName: "ListInvoices",
			Handler:    _PaymentMgr_ListInvoices_Handler,
		},
		{
			MethodName: "CreateInvoice",
			Handler:    _PaymentMgr_CreateInvoice_Handler,
		},
		{
			MethodName: "UpdateInvoice",
			Handler:    _PaymentMgr_UpdateInvoice_Handler,
		},
		{
			MethodName: "FilterInvoices",
			Handler:    _PaymentMgr_FilterInvoices_Handler,
		},
		{
			MethodName: "DraftInvoice",
			Handler:    _PaymentMgr_DraftInvoice_Handler,
		},
		{
			MethodName: "DiffSubscriptions",
			Handler:    _PaymentMgr_DiffSubscriptions_Handler,
		},
		{
			MethodName: "ListComments",
			Handler:    _PaymentMgr_ListComments_Handler,
		},
		{
			MethodName: "AddComment",
			Handler:    _PaymentMgr_AddComment_Handler,
		},
		{
			MethodName: "ListPlans",
			Handler:    _PaymentMgr_ListPlans_Handler,
		},
		{
			MethodName: "ExportInvoice",
			Handler:    _PaymentMgr_ExportInvoice_Handler,
		},
		{
			MethodName: "ConvertInvoiceToHtml",
			Handler:    _PaymentMgr_ConvertInvoiceToHtml_Handler,
		},
		{
			MethodName: "GetExchangeRate",
			Handler:    _PaymentMgr_GetExchangeRate_Handler,
		},
		{
			MethodName: "TransferMoney",
			Handler:    _PaymentMgr_TransferMoney_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _PaymentMgr_Ping_Handler,
		},
		{
			MethodName: "ListLogs",
			Handler:    _PaymentMgr_ListLogs_Handler,
		},
		{
			MethodName: "CreatePromotionCode",
			Handler:    _PaymentMgr_CreatePromotionCode_Handler,
		},
		{
			MethodName: "GetPromotionCode",
			Handler:    _PaymentMgr_GetPromotionCode_Handler,
		},
		{
			MethodName: "UsePromotionCode",
			Handler:    _PaymentMgr_UsePromotionCode_Handler,
		},
		{
			MethodName: "ValidatePromotionCode",
			Handler:    _PaymentMgr_ValidatePromotionCode_Handler,
		},
		{
			MethodName: "ListPromotionCode",
			Handler:    _PaymentMgr_ListPromotionCode_Handler,
		},
		{
			MethodName: "DeletePromotionCode",
			Handler:    _PaymentMgr_DeletePromotionCode_Handler,
		},
		{
			MethodName: "GetAgentReferInfo",
			Handler:    _PaymentMgr_GetAgentReferInfo_Handler,
		},
		{
			MethodName: "UpdateAgentReferInfo",
			Handler:    _PaymentMgr_UpdateAgentReferInfo_Handler,
		},
		{
			MethodName: "ListAccountReferred",
			Handler:    _PaymentMgr_ListAccountReferred_Handler,
		},
		{
			MethodName: "ListBillByAccountReferred",
			Handler:    _PaymentMgr_ListBillByAccountReferred_Handler,
		},
		{
			MethodName: "ListPaidForAgentReferrer",
			Handler:    _PaymentMgr_ListPaidForAgentReferrer_Handler,
		},
		{
			MethodName: "PaidForAgentReferrer",
			Handler:    _PaymentMgr_PaidForAgentReferrer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment/payment.proto",
}
