// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment/payment.proto

/*
Package payment is a generated protocol buffer package.

It is generated from these files:
	payment/payment.proto

It has these top-level messages:
	PaymentMethod
	Limit
	Plan
	Subscription
	Bill
	Invoice
	InvoiceItem
	Customer
	Discount
	Credit
	ExchangeRate
	AccountNote
	InvoiceNote
	Log
	Addon
*/
package payment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bitbucket.org/subiz/header/common"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Currency int32

const (
	Currency_usd Currency = 0
	Currency_vnd Currency = 1
	Currency_brl Currency = 2
)

var Currency_name = map[int32]string{
	0: "usd",
	1: "vnd",
	2: "brl",
}
var Currency_value = map[string]int32{
	"usd": 0,
	"vnd": 1,
	"brl": 2,
}

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}
func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}
func (x *Currency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Currency_value, data, "Currency")
	if err != nil {
		return err
	}
	*x = Currency(value)
	return nil
}
func (Currency) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event int32

const (
	Event_LimitSynced  Event = 0
	Event_LimitUpdated Event = 1
)

var Event_name = map[int32]string{
	0: "LimitSynced",
	1: "LimitUpdated",
}
var Event_value = map[string]int32{
	"LimitSynced":  0,
	"LimitUpdated": 1,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}
func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}
func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}
func (Event) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PaymentMethod_Name int32

const (
	PaymentMethod_cash   PaymentMethod_Name = 0
	PaymentMethod_stripe PaymentMethod_Name = 1
)

var PaymentMethod_Name_name = map[int32]string{
	0: "cash",
	1: "stripe",
}
var PaymentMethod_Name_value = map[string]int32{
	"cash":   0,
	"stripe": 1,
}

func (x PaymentMethod_Name) Enum() *PaymentMethod_Name {
	p := new(PaymentMethod_Name)
	*p = x
	return p
}
func (x PaymentMethod_Name) String() string {
	return proto.EnumName(PaymentMethod_Name_name, int32(x))
}
func (x *PaymentMethod_Name) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentMethod_Name_value, data, "PaymentMethod_Name")
	if err != nil {
		return err
	}
	*x = PaymentMethod_Name(value)
	return nil
}
func (PaymentMethod_Name) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type PaymentMethod_Status int32

const (
	PaymentMethod_active   PaymentMethod_Status = 0
	PaymentMethod_inactive PaymentMethod_Status = 1
)

var PaymentMethod_Status_name = map[int32]string{
	0: "active",
	1: "inactive",
}
var PaymentMethod_Status_value = map[string]int32{
	"active":   0,
	"inactive": 1,
}

func (x PaymentMethod_Status) Enum() *PaymentMethod_Status {
	p := new(PaymentMethod_Status)
	*p = x
	return p
}
func (x PaymentMethod_Status) String() string {
	return proto.EnumName(PaymentMethod_Status_name, int32(x))
}
func (x *PaymentMethod_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentMethod_Status_value, data, "PaymentMethod_Status")
	if err != nil {
		return err
	}
	*x = PaymentMethod_Status(value)
	return nil
}
func (PaymentMethod_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Plan_ID int32

const (
	Plan_free     Plan_ID = 0
	Plan_standard Plan_ID = 1
	Plan_advanced Plan_ID = 2
)

var Plan_ID_name = map[int32]string{
	0: "free",
	1: "standard",
	2: "advanced",
}
var Plan_ID_value = map[string]int32{
	"free":     0,
	"standard": 1,
	"advanced": 2,
}

func (x Plan_ID) Enum() *Plan_ID {
	p := new(Plan_ID)
	*p = x
	return p
}
func (x Plan_ID) String() string {
	return proto.EnumName(Plan_ID_name, int32(x))
}
func (x *Plan_ID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Plan_ID_value, data, "Plan_ID")
	if err != nil {
		return err
	}
	*x = Plan_ID(value)
	return nil
}
func (Plan_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Plan_PeriodUnit int32

const (
	Plan_day   Plan_PeriodUnit = 0
	Plan_week  Plan_PeriodUnit = 1
	Plan_month Plan_PeriodUnit = 2
	Plan_year  Plan_PeriodUnit = 3
)

var Plan_PeriodUnit_name = map[int32]string{
	0: "day",
	1: "week",
	2: "month",
	3: "year",
}
var Plan_PeriodUnit_value = map[string]int32{
	"day":   0,
	"week":  1,
	"month": 2,
	"year":  3,
}

func (x Plan_PeriodUnit) Enum() *Plan_PeriodUnit {
	p := new(Plan_PeriodUnit)
	*p = x
	return p
}
func (x Plan_PeriodUnit) String() string {
	return proto.EnumName(Plan_PeriodUnit_name, int32(x))
}
func (x *Plan_PeriodUnit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Plan_PeriodUnit_value, data, "Plan_PeriodUnit")
	if err != nil {
		return err
	}
	*x = Plan_PeriodUnit(value)
	return nil
}
func (Plan_PeriodUnit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

type Subscription_Status int32

const (
	Subscription_pending  Subscription_Status = 0
	Subscription_active   Subscription_Status = 1
	Subscription_inactive Subscription_Status = 2
	Subscription_trialing Subscription_Status = 3
)

var Subscription_Status_name = map[int32]string{
	0: "pending",
	1: "active",
	2: "inactive",
	3: "trialing",
}
var Subscription_Status_value = map[string]int32{
	"pending":  0,
	"active":   1,
	"inactive": 2,
	"trialing": 3,
}

func (x Subscription_Status) Enum() *Subscription_Status {
	p := new(Subscription_Status)
	*p = x
	return p
}
func (x Subscription_Status) String() string {
	return proto.EnumName(Subscription_Status_name, int32(x))
}
func (x *Subscription_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Subscription_Status_value, data, "Subscription_Status")
	if err != nil {
		return err
	}
	*x = Subscription_Status(value)
	return nil
}
func (Subscription_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type Invoice_Status int32

const (
	Invoice_draft  Invoice_Status = 0
	Invoice_open   Invoice_Status = 1
	Invoice_closed Invoice_Status = 2
	Invoice_voided Invoice_Status = 3
)

var Invoice_Status_name = map[int32]string{
	0: "draft",
	1: "open",
	2: "closed",
	3: "voided",
}
var Invoice_Status_value = map[string]int32{
	"draft":  0,
	"open":   1,
	"closed": 2,
	"voided": 3,
}

func (x Invoice_Status) Enum() *Invoice_Status {
	p := new(Invoice_Status)
	*p = x
	return p
}
func (x Invoice_Status) String() string {
	return proto.EnumName(Invoice_Status_name, int32(x))
}
func (x *Invoice_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Invoice_Status_value, data, "Invoice_Status")
	if err != nil {
		return err
	}
	*x = Invoice_Status(value)
	return nil
}
func (Invoice_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type InvoiceItem_Type int32

const (
	InvoiceItem_plan  InvoiceItem_Type = 0
	InvoiceItem_addon InvoiceItem_Type = 1
)

var InvoiceItem_Type_name = map[int32]string{
	0: "plan",
	1: "addon",
}
var InvoiceItem_Type_value = map[string]int32{
	"plan":  0,
	"addon": 1,
}

func (x InvoiceItem_Type) Enum() *InvoiceItem_Type {
	p := new(InvoiceItem_Type)
	*p = x
	return p
}
func (x InvoiceItem_Type) String() string {
	return proto.EnumName(InvoiceItem_Type_name, int32(x))
}
func (x *InvoiceItem_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InvoiceItem_Type_value, data, "InvoiceItem_Type")
	if err != nil {
		return err
	}
	*x = InvoiceItem_Type(value)
	return nil
}
func (InvoiceItem_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type Customer_Contact_Title int32

const (
	Customer_Contact_mr  Customer_Contact_Title = 0
	Customer_Contact_ms  Customer_Contact_Title = 1
	Customer_Contact_mrs Customer_Contact_Title = 2
	Customer_Contact_dr  Customer_Contact_Title = 3
)

var Customer_Contact_Title_name = map[int32]string{
	0: "mr",
	1: "ms",
	2: "mrs",
	3: "dr",
}
var Customer_Contact_Title_value = map[string]int32{
	"mr":  0,
	"ms":  1,
	"mrs": 2,
	"dr":  3,
}

func (x Customer_Contact_Title) Enum() *Customer_Contact_Title {
	p := new(Customer_Contact_Title)
	*p = x
	return p
}
func (x Customer_Contact_Title) String() string {
	return proto.EnumName(Customer_Contact_Title_name, int32(x))
}
func (x *Customer_Contact_Title) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Customer_Contact_Title_value, data, "Customer_Contact_Title")
	if err != nil {
		return err
	}
	*x = Customer_Contact_Title(value)
	return nil
}
func (Customer_Contact_Title) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0, 0} }

type Discount_Type int32

const (
	Discount_fixed_amount    Discount_Type = 0
	Discount_percent         Discount_Type = 1
	Discount_credit          Discount_Type = 2
	Discount_referral_credit Discount_Type = 3
)

var Discount_Type_name = map[int32]string{
	0: "fixed_amount",
	1: "percent",
	2: "credit",
	3: "referral_credit",
}
var Discount_Type_value = map[string]int32{
	"fixed_amount":    0,
	"percent":         1,
	"credit":          2,
	"referral_credit": 3,
}

func (x Discount_Type) Enum() *Discount_Type {
	p := new(Discount_Type)
	*p = x
	return p
}
func (x Discount_Type) String() string {
	return proto.EnumName(Discount_Type_name, int32(x))
}
func (x *Discount_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Discount_Type_value, data, "Discount_Type")
	if err != nil {
		return err
	}
	*x = Discount_Type(value)
	return nil
}
func (Discount_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

type Log_Action int32

const (
	Log_create_invoice             Log_Action = 0
	Log_change_invoice_status      Log_Action = 1
	Log_create_discount            Log_Action = 2
	Log_delete_discount            Log_Action = 3
	Log_redeem_discount            Log_Action = 4
	Log_add_credit                 Log_Action = 5
	Log_redeem_credit              Log_Action = 6
	Log_delete_account             Log_Action = 7
	Log_change_plan                Log_Action = 8
	Log_change_subscription_status Log_Action = 9
	Log_renew_subscription         Log_Action = 10
	Log_click_subscribe_button     Log_Action = 11
	Log_pay_for_referrer           Log_Action = 12
	Log_add_money_for_referrer     Log_Action = 13
	Log_pay_invoice                Log_Action = 14
)

var Log_Action_name = map[int32]string{
	0:  "create_invoice",
	1:  "change_invoice_status",
	2:  "create_discount",
	3:  "delete_discount",
	4:  "redeem_discount",
	5:  "add_credit",
	6:  "redeem_credit",
	7:  "delete_account",
	8:  "change_plan",
	9:  "change_subscription_status",
	10: "renew_subscription",
	11: "click_subscribe_button",
	12: "pay_for_referrer",
	13: "add_money_for_referrer",
	14: "pay_invoice",
}
var Log_Action_value = map[string]int32{
	"create_invoice":             0,
	"change_invoice_status":      1,
	"create_discount":            2,
	"delete_discount":            3,
	"redeem_discount":            4,
	"add_credit":                 5,
	"redeem_credit":              6,
	"delete_account":             7,
	"change_plan":                8,
	"change_subscription_status": 9,
	"renew_subscription":         10,
	"click_subscribe_button":     11,
	"pay_for_referrer":           12,
	"add_money_for_referrer":     13,
	"pay_invoice":                14,
}

func (x Log_Action) Enum() *Log_Action {
	p := new(Log_Action)
	*p = x
	return p
}
func (x Log_Action) String() string {
	return proto.EnumName(Log_Action_name, int32(x))
}
func (x *Log_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Log_Action_value, data, "Log_Action")
	if err != nil {
		return err
	}
	*x = Log_Action(value)
	return nil
}
func (Log_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

type Addon_ID int32

const (
	Addon_credit Addon_ID = 0
	Addon_agent  Addon_ID = 1
)

var Addon_ID_name = map[int32]string{
	0: "credit",
	1: "agent",
}
var Addon_ID_value = map[string]int32{
	"credit": 0,
	"agent":  1,
}

func (x Addon_ID) Enum() *Addon_ID {
	p := new(Addon_ID)
	*p = x
	return p
}
func (x Addon_ID) String() string {
	return proto.EnumName(Addon_ID_name, int32(x))
}
func (x *Addon_ID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_ID_value, data, "Addon_ID")
	if err != nil {
		return err
	}
	*x = Addon_ID(value)
	return nil
}
func (Addon_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

type Addon_ChargeType int32

const (
	Addon_one_time  Addon_ChargeType = 0
	Addon_recurring Addon_ChargeType = 1
)

var Addon_ChargeType_name = map[int32]string{
	0: "one_time",
	1: "recurring",
}
var Addon_ChargeType_value = map[string]int32{
	"one_time":  0,
	"recurring": 1,
}

func (x Addon_ChargeType) Enum() *Addon_ChargeType {
	p := new(Addon_ChargeType)
	*p = x
	return p
}
func (x Addon_ChargeType) String() string {
	return proto.EnumName(Addon_ChargeType_name, int32(x))
}
func (x *Addon_ChargeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_ChargeType_value, data, "Addon_ChargeType")
	if err != nil {
		return err
	}
	*x = Addon_ChargeType(value)
	return nil
}
func (Addon_ChargeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 1} }

type Addon_PeriodUnit int32

const (
	Addon_day   Addon_PeriodUnit = 0
	Addon_week  Addon_PeriodUnit = 1
	Addon_month Addon_PeriodUnit = 2
	Addon_year  Addon_PeriodUnit = 3
)

var Addon_PeriodUnit_name = map[int32]string{
	0: "day",
	1: "week",
	2: "month",
	3: "year",
}
var Addon_PeriodUnit_value = map[string]int32{
	"day":   0,
	"week":  1,
	"month": 2,
	"year":  3,
}

func (x Addon_PeriodUnit) Enum() *Addon_PeriodUnit {
	p := new(Addon_PeriodUnit)
	*p = x
	return p
}
func (x Addon_PeriodUnit) String() string {
	return proto.EnumName(Addon_PeriodUnit_name, int32(x))
}
func (x *Addon_PeriodUnit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_PeriodUnit_value, data, "Addon_PeriodUnit")
	if err != nil {
		return err
	}
	*x = Addon_PeriodUnit(value)
	return nil
}
func (Addon_PeriodUnit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 2} }

type Addon_Type int32

const (
	Addon_on_off   Addon_Type = 0
	Addon_quantity Addon_Type = 1
)

var Addon_Type_name = map[int32]string{
	0: "on_off",
	1: "quantity",
}
var Addon_Type_value = map[string]int32{
	"on_off":   0,
	"quantity": 1,
}

func (x Addon_Type) Enum() *Addon_Type {
	p := new(Addon_Type)
	*p = x
	return p
}
func (x Addon_Type) String() string {
	return proto.EnumName(Addon_Type_name, int32(x))
}
func (x *Addon_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Addon_Type_value, data, "Addon_Type")
	if err != nil {
		return err
	}
	*x = Addon_Type(value)
	return nil
}
func (Addon_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 3} }

type PaymentMethod struct {
	Name             *PaymentMethod_Name       `protobuf:"varint,1,opt,name=name,enum=payment.PaymentMethod_Name,def=1" json:"name,omitempty"`
	AccountId        *string                   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	StripeInfo       *PaymentMethod_StripeInfo `protobuf:"bytes,3,opt,name=stripe_info,json=stripeInfo" json:"stripe_info,omitempty"`
	Status           *PaymentMethod_Status     `protobuf:"varint,4,opt,name=status,enum=payment.PaymentMethod_Status,def=1" json:"status,omitempty"`
	Primary          *bool                     `protobuf:"varint,5,opt,name=primary" json:"primary,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *PaymentMethod) Reset()                    { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string            { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()               {}
func (*PaymentMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_PaymentMethod_Name PaymentMethod_Name = PaymentMethod_stripe
const Default_PaymentMethod_Status PaymentMethod_Status = PaymentMethod_inactive

func (m *PaymentMethod) GetName() PaymentMethod_Name {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return Default_PaymentMethod_Name
}

func (m *PaymentMethod) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *PaymentMethod) GetStripeInfo() *PaymentMethod_StripeInfo {
	if m != nil {
		return m.StripeInfo
	}
	return nil
}

func (m *PaymentMethod) GetStatus() PaymentMethod_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_PaymentMethod_Status
}

func (m *PaymentMethod) GetPrimary() bool {
	if m != nil && m.Primary != nil {
		return *m.Primary
	}
	return false
}

type PaymentMethod_StripeInfo struct {
	CardLast4        *string `protobuf:"bytes,1,opt,name=card_last4,json=cardLast4" json:"card_last4,omitempty"`
	CustomerId       *string `protobuf:"bytes,2,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PaymentMethod_StripeInfo) Reset()                    { *m = PaymentMethod_StripeInfo{} }
func (m *PaymentMethod_StripeInfo) String() string            { return proto.CompactTextString(m) }
func (*PaymentMethod_StripeInfo) ProtoMessage()               {}
func (*PaymentMethod_StripeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *PaymentMethod_StripeInfo) GetCardLast4() string {
	if m != nil && m.CardLast4 != nil {
		return *m.CardLast4
	}
	return ""
}

func (m *PaymentMethod_StripeInfo) GetCustomerId() string {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return ""
}

type Limit struct {
	Ctx              *common.Context `protobuf:"bytes,1,opt,name=ctx" json:"ctx,omitempty"`
	MaxAutomations   *int32          `protobuf:"varint,2,opt,name=max_automations,json=maxAutomations" json:"max_automations,omitempty"`
	MaxConcurrents   *int32          `protobuf:"varint,3,opt,name=max_concurrents,json=maxConcurrents" json:"max_concurrents,omitempty"`
	MaxConversations *int32          `protobuf:"varint,4,opt,name=max_conversations,json=maxConversations" json:"max_conversations,omitempty"`
	MaxSegments      *int32          `protobuf:"varint,5,opt,name=max_segments,json=maxSegments" json:"max_segments,omitempty"`
	MaxAgents        *int32          `protobuf:"varint,6,opt,name=max_agents,json=maxAgents" json:"max_agents,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Limit) Reset()                    { *m = Limit{} }
func (m *Limit) String() string            { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()               {}
func (*Limit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Limit) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Limit) GetMaxAutomations() int32 {
	if m != nil && m.MaxAutomations != nil {
		return *m.MaxAutomations
	}
	return 0
}

func (m *Limit) GetMaxConcurrents() int32 {
	if m != nil && m.MaxConcurrents != nil {
		return *m.MaxConcurrents
	}
	return 0
}

func (m *Limit) GetMaxConversations() int32 {
	if m != nil && m.MaxConversations != nil {
		return *m.MaxConversations
	}
	return 0
}

func (m *Limit) GetMaxSegments() int32 {
	if m != nil && m.MaxSegments != nil {
		return *m.MaxSegments
	}
	return 0
}

func (m *Limit) GetMaxAgents() int32 {
	if m != nil && m.MaxAgents != nil {
		return *m.MaxAgents
	}
	return 0
}

type Plan struct {
	Id               *Plan_ID                   `protobuf:"varint,1,opt,name=id,enum=payment.Plan_ID" json:"id,omitempty"`
	Name             *string                    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Limit            *Limit                     `protobuf:"bytes,3,opt,name=limit" json:"limit,omitempty"`
	Price            *float32                   `protobuf:"fixed32,4,opt,name=price" json:"price,omitempty"`
	Currency         *Currency                  `protobuf:"varint,5,opt,name=currency,enum=payment.Currency,def=0" json:"currency,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=created" json:"created,omitempty"`
	TrialPeriodDays  *int32                     `protobuf:"varint,9,opt,name=trial_period_days,json=trialPeriodDays,def=30" json:"trial_period_days,omitempty"`
	Period           *int32                     `protobuf:"varint,10,opt,name=period,def=1" json:"period,omitempty"`
	PeriodUnit       *Plan_PeriodUnit           `protobuf:"varint,11,opt,name=period_unit,json=periodUnit,enum=payment.Plan_PeriodUnit,def=2" json:"period_unit,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Plan) Reset()                    { *m = Plan{} }
func (m *Plan) String() string            { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()               {}
func (*Plan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_Plan_Currency Currency = Currency_usd
const Default_Plan_TrialPeriodDays int32 = 30
const Default_Plan_Period int32 = 1
const Default_Plan_PeriodUnit Plan_PeriodUnit = Plan_month

func (m *Plan) GetId() Plan_ID {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Plan_free
}

func (m *Plan) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Plan) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *Plan) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Plan) GetCurrency() Currency {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return Default_Plan_Currency
}

func (m *Plan) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Plan) GetTrialPeriodDays() int32 {
	if m != nil && m.TrialPeriodDays != nil {
		return *m.TrialPeriodDays
	}
	return Default_Plan_TrialPeriodDays
}

func (m *Plan) GetPeriod() int32 {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return Default_Plan_Period
}

func (m *Plan) GetPeriodUnit() Plan_PeriodUnit {
	if m != nil && m.PeriodUnit != nil {
		return *m.PeriodUnit
	}
	return Default_Plan_PeriodUnit
}

type Subscription struct {
	Id               *string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DiscountId       *string                    `protobuf:"bytes,3,opt,name=discount_id,json=discountId" json:"discount_id,omitempty"`
	PeriodStart      *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=period_start,json=periodStart" json:"period_start,omitempty"`
	PeriodEnd        *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=period_end,json=periodEnd" json:"period_end,omitempty"`
	AutoRenew        *bool                      `protobuf:"varint,9,opt,name=auto_renew,json=autoRenew" json:"auto_renew,omitempty"`
	Status           *Subscription_Status       `protobuf:"varint,10,opt,name=status,enum=payment.Subscription_Status,def=0" json:"status,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=created" json:"created,omitempty"`
	BillingCycle     *int32                     `protobuf:"varint,15,opt,name=billing_cycle,json=billingCycle" json:"billing_cycle,omitempty"`
	PlanId           *Plan_ID                   `protobuf:"varint,16,opt,name=plan_id,json=planId,enum=payment.Plan_ID" json:"plan_id,omitempty"`
	PlanQuantity     *int32                     `protobuf:"varint,17,opt,name=plan_quantity,json=planQuantity" json:"plan_quantity,omitempty"`
	TrialStart       *google_protobuf.Timestamp `protobuf:"bytes,18,opt,name=trial_start,json=trialStart" json:"trial_start,omitempty"`
	TrialEnd         *google_protobuf.Timestamp `protobuf:"bytes,19,opt,name=trial_end,json=trialEnd" json:"trial_end,omitempty"`
	PlanPrice        *float32                   `protobuf:"fixed32,20,opt,name=plan_price,json=planPrice" json:"plan_price,omitempty"`
	Addons           []*Addon                   `protobuf:"bytes,21,rep,name=addons" json:"addons,omitempty"`
	Limit            *Limit                     `protobuf:"bytes,22,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Subscription) Reset()                    { *m = Subscription{} }
func (m *Subscription) String() string            { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()               {}
func (*Subscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_Subscription_Status Subscription_Status = Subscription_pending

func (m *Subscription) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Subscription) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Subscription) GetDiscountId() string {
	if m != nil && m.DiscountId != nil {
		return *m.DiscountId
	}
	return ""
}

func (m *Subscription) GetPeriodStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.PeriodStart
	}
	return nil
}

func (m *Subscription) GetPeriodEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.PeriodEnd
	}
	return nil
}

func (m *Subscription) GetAutoRenew() bool {
	if m != nil && m.AutoRenew != nil {
		return *m.AutoRenew
	}
	return false
}

func (m *Subscription) GetStatus() Subscription_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Subscription_Status
}

func (m *Subscription) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Subscription) GetBillingCycle() int32 {
	if m != nil && m.BillingCycle != nil {
		return *m.BillingCycle
	}
	return 0
}

func (m *Subscription) GetPlanId() Plan_ID {
	if m != nil && m.PlanId != nil {
		return *m.PlanId
	}
	return Plan_free
}

func (m *Subscription) GetPlanQuantity() int32 {
	if m != nil && m.PlanQuantity != nil {
		return *m.PlanQuantity
	}
	return 0
}

func (m *Subscription) GetTrialStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.TrialStart
	}
	return nil
}

func (m *Subscription) GetTrialEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.TrialEnd
	}
	return nil
}

func (m *Subscription) GetPlanPrice() float32 {
	if m != nil && m.PlanPrice != nil {
		return *m.PlanPrice
	}
	return 0
}

func (m *Subscription) GetAddons() []*Addon {
	if m != nil {
		return m.Addons
	}
	return nil
}

func (m *Subscription) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

type Bill struct {
	Id               *string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Amount           *float32                   `protobuf:"fixed32,3,opt,name=amount" json:"amount,omitempty"`
	InvoiceIds       []string                   `protobuf:"bytes,4,rep,name=invoice_ids,json=invoiceIds" json:"invoice_ids,omitempty"`
	PaymentMethod    *PaymentMethod_Name        `protobuf:"varint,5,opt,name=payment_method,json=paymentMethod,enum=payment.PaymentMethod_Name" json:"payment_method,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created" json:"created,omitempty"`
	CustomerInfo     *Customer_Contact          `protobuf:"bytes,7,opt,name=customer_info,json=customerInfo" json:"customer_info,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Bill) Reset()                    { *m = Bill{} }
func (m *Bill) String() string            { return proto.CompactTextString(m) }
func (*Bill) ProtoMessage()               {}
func (*Bill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Bill) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Bill) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Bill) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *Bill) GetInvoiceIds() []string {
	if m != nil {
		return m.InvoiceIds
	}
	return nil
}

func (m *Bill) GetPaymentMethod() PaymentMethod_Name {
	if m != nil && m.PaymentMethod != nil {
		return *m.PaymentMethod
	}
	return PaymentMethod_cash
}

func (m *Bill) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Bill) GetCustomerInfo() *Customer_Contact {
	if m != nil {
		return m.CustomerInfo
	}
	return nil
}

type Invoice struct {
	Id               *string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AmountDue        *float32                   `protobuf:"fixed32,4,opt,name=amount_due,json=amountDue" json:"amount_due,omitempty"`
	DiscountId       *string                    `protobuf:"bytes,5,opt,name=discount_id,json=discountId" json:"discount_id,omitempty"`
	Description      *string                    `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Currency         *Currency                  `protobuf:"varint,7,opt,name=currency,enum=payment.Currency" json:"currency,omitempty"`
	BillingInfo      *Customer_BillingInfo      `protobuf:"bytes,8,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	DueDate          *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=due_date,json=dueDate" json:"due_date,omitempty"`
	Status           *Invoice_Status            `protobuf:"varint,10,opt,name=status,enum=payment.Invoice_Status,def=0" json:"status,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=created" json:"created,omitempty"`
	LineItems        []*InvoiceItem             `protobuf:"bytes,12,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
	ExchangeRate     *ExchangeRate              `protobuf:"bytes,13,opt,name=exchange_rate,json=exchangeRate" json:"exchange_rate,omitempty"`
	Subtotal         *float32                   `protobuf:"fixed32,14,opt,name=subtotal" json:"subtotal,omitempty"`
	TaxPercent       *float32                   `protobuf:"fixed32,15,opt,name=tax_percent,json=taxPercent" json:"tax_percent,omitempty"`
	Tax              *float32                   `protobuf:"fixed32,16,opt,name=tax" json:"tax,omitempty"`
	Total            *float32                   `protobuf:"fixed32,17,opt,name=total" json:"total,omitempty"`
	Updated          *google_protobuf.Timestamp `protobuf:"bytes,18,opt,name=updated" json:"updated,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Invoice) Reset()                    { *m = Invoice{} }
func (m *Invoice) String() string            { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()               {}
func (*Invoice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

const Default_Invoice_Status Invoice_Status = Invoice_draft

func (m *Invoice) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Invoice) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Invoice) GetAmountDue() float32 {
	if m != nil && m.AmountDue != nil {
		return *m.AmountDue
	}
	return 0
}

func (m *Invoice) GetDiscountId() string {
	if m != nil && m.DiscountId != nil {
		return *m.DiscountId
	}
	return ""
}

func (m *Invoice) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Invoice) GetCurrency() Currency {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return Currency_usd
}

func (m *Invoice) GetBillingInfo() *Customer_BillingInfo {
	if m != nil {
		return m.BillingInfo
	}
	return nil
}

func (m *Invoice) GetDueDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.DueDate
	}
	return nil
}

func (m *Invoice) GetStatus() Invoice_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Invoice_Status
}

func (m *Invoice) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Invoice) GetLineItems() []*InvoiceItem {
	if m != nil {
		return m.LineItems
	}
	return nil
}

func (m *Invoice) GetExchangeRate() *ExchangeRate {
	if m != nil {
		return m.ExchangeRate
	}
	return nil
}

func (m *Invoice) GetSubtotal() float32 {
	if m != nil && m.Subtotal != nil {
		return *m.Subtotal
	}
	return 0
}

func (m *Invoice) GetTaxPercent() float32 {
	if m != nil && m.TaxPercent != nil {
		return *m.TaxPercent
	}
	return 0
}

func (m *Invoice) GetTax() float32 {
	if m != nil && m.Tax != nil {
		return *m.Tax
	}
	return 0
}

func (m *Invoice) GetTotal() float32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *Invoice) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

type InvoiceItem struct {
	Id               *string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Amount           *float32            `protobuf:"fixed32,2,opt,name=amount" json:"amount,omitempty"`
	Currency         *Currency           `protobuf:"varint,3,opt,name=currency,enum=payment.Currency" json:"currency,omitempty"`
	AccountId        *string             `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Description      *string             `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	InvoiceId        *string             `protobuf:"bytes,6,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Quantity         *int32              `protobuf:"varint,7,opt,name=quantity" json:"quantity,omitempty"`
	Period           *InvoiceItem_Period `protobuf:"bytes,8,opt,name=period" json:"period,omitempty"`
	Type             *InvoiceItem_Type   `protobuf:"varint,10,opt,name=type,enum=payment.InvoiceItem_Type,def=0" json:"type,omitempty"`
	PlanId           *Plan_ID            `protobuf:"varint,11,opt,name=plan_id,json=planId,enum=payment.Plan_ID" json:"plan_id,omitempty"`
	AddonId          *Addon_ID           `protobuf:"varint,12,opt,name=addon_id,json=addonId,enum=payment.Addon_ID" json:"addon_id,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *InvoiceItem) Reset()                    { *m = InvoiceItem{} }
func (m *InvoiceItem) String() string            { return proto.CompactTextString(m) }
func (*InvoiceItem) ProtoMessage()               {}
func (*InvoiceItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

const Default_InvoiceItem_Type InvoiceItem_Type = InvoiceItem_plan

func (m *InvoiceItem) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *InvoiceItem) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *InvoiceItem) GetCurrency() Currency {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return Currency_usd
}

func (m *InvoiceItem) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *InvoiceItem) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *InvoiceItem) GetInvoiceId() string {
	if m != nil && m.InvoiceId != nil {
		return *m.InvoiceId
	}
	return ""
}

func (m *InvoiceItem) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *InvoiceItem) GetPeriod() *InvoiceItem_Period {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *InvoiceItem) GetType() InvoiceItem_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_InvoiceItem_Type
}

func (m *InvoiceItem) GetPlanId() Plan_ID {
	if m != nil && m.PlanId != nil {
		return *m.PlanId
	}
	return Plan_free
}

func (m *InvoiceItem) GetAddonId() Addon_ID {
	if m != nil && m.AddonId != nil {
		return *m.AddonId
	}
	return Addon_credit
}

type InvoiceItem_Period struct {
	Start            *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End              *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *InvoiceItem_Period) Reset()                    { *m = InvoiceItem_Period{} }
func (m *InvoiceItem_Period) String() string            { return proto.CompactTextString(m) }
func (*InvoiceItem_Period) ProtoMessage()               {}
func (*InvoiceItem_Period) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *InvoiceItem_Period) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *InvoiceItem_Period) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

type Customer struct {
	Id               *string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Contacts         []*Customer_Contact        `protobuf:"bytes,4,rep,name=contacts" json:"contacts,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	BillingInfo      *Customer_BillingInfo      `protobuf:"bytes,6,opt,name=billing_info,json=billingInfo" json:"billing_info,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Customer) Reset()                    { *m = Customer{} }
func (m *Customer) String() string            { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()               {}
func (*Customer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Customer) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Customer) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Customer) GetContacts() []*Customer_Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Customer) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Customer) GetBillingInfo() *Customer_BillingInfo {
	if m != nil {
		return m.BillingInfo
	}
	return nil
}

type Customer_Contact struct {
	Name             *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email            *string                 `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Phone            *string                 `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	JobTitle         *string                 `protobuf:"bytes,4,opt,name=job_title,json=jobTitle" json:"job_title,omitempty"`
	Title            *Customer_Contact_Title `protobuf:"varint,5,opt,name=title,enum=payment.Customer_Contact_Title" json:"title,omitempty"`
	Primary          *bool                   `protobuf:"varint,6,opt,name=primary" json:"primary,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Customer_Contact) Reset()                    { *m = Customer_Contact{} }
func (m *Customer_Contact) String() string            { return proto.CompactTextString(m) }
func (*Customer_Contact) ProtoMessage()               {}
func (*Customer_Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *Customer_Contact) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Customer_Contact) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Customer_Contact) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *Customer_Contact) GetJobTitle() string {
	if m != nil && m.JobTitle != nil {
		return *m.JobTitle
	}
	return ""
}

func (m *Customer_Contact) GetTitle() Customer_Contact_Title {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return Customer_Contact_mr
}

func (m *Customer_Contact) GetPrimary() bool {
	if m != nil && m.Primary != nil {
		return *m.Primary
	}
	return false
}

type Customer_BillingInfo struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address          *string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Vat              *string `protobuf:"bytes,3,opt,name=vat" json:"vat,omitempty"`
	CountryCode      *string `protobuf:"bytes,4,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Customer_BillingInfo) Reset()                    { *m = Customer_BillingInfo{} }
func (m *Customer_BillingInfo) String() string            { return proto.CompactTextString(m) }
func (*Customer_BillingInfo) ProtoMessage()               {}
func (*Customer_BillingInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 1} }

func (m *Customer_BillingInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Customer_BillingInfo) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Customer_BillingInfo) GetVat() string {
	if m != nil && m.Vat != nil {
		return *m.Vat
	}
	return ""
}

func (m *Customer_BillingInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

type Discount struct {
	Id               *string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description      *string                    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type             *string                    `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Value            *float32                   `protobuf:"fixed32,4,opt,name=value" json:"value,omitempty"`
	TimesRedeemed    *int32                     `protobuf:"varint,5,opt,name=times_redeemed,json=timesRedeemed" json:"times_redeemed,omitempty"`
	CreatedBy        *string                    `protobuf:"bytes,9,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
	Code             *string                    `protobuf:"bytes,11,opt,name=code" json:"code,omitempty"`
	Constraint       *Discount_Constraint       `protobuf:"bytes,12,opt,name=constraint" json:"constraint,omitempty"`
	Name             *string                    `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Discount) Reset()                    { *m = Discount{} }
func (m *Discount) String() string            { return proto.CompactTextString(m) }
func (*Discount) ProtoMessage()               {}
func (*Discount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Discount) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Discount) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Discount) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Discount) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Discount) GetTimesRedeemed() int32 {
	if m != nil && m.TimesRedeemed != nil {
		return *m.TimesRedeemed
	}
	return 0
}

func (m *Discount) GetCreatedBy() string {
	if m != nil && m.CreatedBy != nil {
		return *m.CreatedBy
	}
	return ""
}

func (m *Discount) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Discount) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Discount) GetConstraint() *Discount_Constraint {
	if m != nil {
		return m.Constraint
	}
	return nil
}

func (m *Discount) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Discount_Constraint struct {
	Start            *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End              *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	PlanId           *Plan_ID                   `protobuf:"varint,3,opt,name=plan_id,json=planId,enum=payment.Plan_ID" json:"plan_id,omitempty"`
	AccountId        *string                    `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxRedemptions   *int32                     `protobuf:"varint,5,opt,name=max_redemptions,json=maxRedemptions" json:"max_redemptions,omitempty"`
	ReferrerId       *string                    `protobuf:"bytes,6,opt,name=referrer_id,json=referrerId" json:"referrer_id,omitempty"`
	MinAmount        *float32                   `protobuf:"fixed32,7,opt,name=min_amount,json=minAmount" json:"min_amount,omitempty"`
	MaxAmount        *float32                   `protobuf:"fixed32,8,opt,name=max_amount,json=maxAmount" json:"max_amount,omitempty"`
	AddonId          *Addon_ID                  `protobuf:"varint,9,opt,name=addon_id,json=addonId,enum=payment.Addon_ID" json:"addon_id,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Discount_Constraint) Reset()                    { *m = Discount_Constraint{} }
func (m *Discount_Constraint) String() string            { return proto.CompactTextString(m) }
func (*Discount_Constraint) ProtoMessage()               {}
func (*Discount_Constraint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *Discount_Constraint) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Discount_Constraint) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Discount_Constraint) GetPlanId() Plan_ID {
	if m != nil && m.PlanId != nil {
		return *m.PlanId
	}
	return Plan_free
}

func (m *Discount_Constraint) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Discount_Constraint) GetMaxRedemptions() int32 {
	if m != nil && m.MaxRedemptions != nil {
		return *m.MaxRedemptions
	}
	return 0
}

func (m *Discount_Constraint) GetReferrerId() string {
	if m != nil && m.ReferrerId != nil {
		return *m.ReferrerId
	}
	return ""
}

func (m *Discount_Constraint) GetMinAmount() float32 {
	if m != nil && m.MinAmount != nil {
		return *m.MinAmount
	}
	return 0
}

func (m *Discount_Constraint) GetMaxAmount() float32 {
	if m != nil && m.MaxAmount != nil {
		return *m.MaxAmount
	}
	return 0
}

func (m *Discount_Constraint) GetAddonId() Addon_ID {
	if m != nil && m.AddonId != nil {
		return *m.AddonId
	}
	return Addon_credit
}

type Credit struct {
	AccountId        *string  `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Amount           *float32 `protobuf:"fixed32,2,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Credit) Reset()                    { *m = Credit{} }
func (m *Credit) String() string            { return proto.CompactTextString(m) }
func (*Credit) ProtoMessage()               {}
func (*Credit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Credit) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Credit) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ExchangeRate struct {
	FromCurrency     *Currency                  `protobuf:"varint,1,opt,name=from_currency,json=fromCurrency,enum=payment.Currency" json:"from_currency,omitempty"`
	ToCurrency       *Currency                  `protobuf:"varint,2,opt,name=to_currency,json=toCurrency,enum=payment.Currency" json:"to_currency,omitempty"`
	ExchangeRate     *float32                   `protobuf:"fixed32,3,opt,name=exchange_rate,json=exchangeRate" json:"exchange_rate,omitempty"`
	ExchangeDate     *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=exchange_date,json=exchangeDate" json:"exchange_date,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ExchangeRate) Reset()                    { *m = ExchangeRate{} }
func (m *ExchangeRate) String() string            { return proto.CompactTextString(m) }
func (*ExchangeRate) ProtoMessage()               {}
func (*ExchangeRate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ExchangeRate) GetFromCurrency() Currency {
	if m != nil && m.FromCurrency != nil {
		return *m.FromCurrency
	}
	return Currency_usd
}

func (m *ExchangeRate) GetToCurrency() Currency {
	if m != nil && m.ToCurrency != nil {
		return *m.ToCurrency
	}
	return Currency_usd
}

func (m *ExchangeRate) GetExchangeRate() float32 {
	if m != nil && m.ExchangeRate != nil {
		return *m.ExchangeRate
	}
	return 0
}

func (m *ExchangeRate) GetExchangeDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExchangeDate
	}
	return nil
}

type AccountNote struct {
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Message          *string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CreatedBy        *string                    `protobuf:"bytes,4,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *AccountNote) Reset()                    { *m = AccountNote{} }
func (m *AccountNote) String() string            { return proto.CompactTextString(m) }
func (*AccountNote) ProtoMessage()               {}
func (*AccountNote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AccountNote) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *AccountNote) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AccountNote) GetCreatedBy() string {
	if m != nil && m.CreatedBy != nil {
		return *m.CreatedBy
	}
	return ""
}

func (m *AccountNote) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type InvoiceNote struct {
	AccountId        *string                    `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	InvoiceId        *string                    `protobuf:"bytes,3,opt,name=invoice_id,json=invoiceId" json:"invoice_id,omitempty"`
	Message          *string                    `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	CreatedBy        *string                    `protobuf:"bytes,5,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created" json:"created,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *InvoiceNote) Reset()                    { *m = InvoiceNote{} }
func (m *InvoiceNote) String() string            { return proto.CompactTextString(m) }
func (*InvoiceNote) ProtoMessage()               {}
func (*InvoiceNote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *InvoiceNote) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *InvoiceNote) GetInvoiceId() string {
	if m != nil && m.InvoiceId != nil {
		return *m.InvoiceId
	}
	return ""
}

func (m *InvoiceNote) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *InvoiceNote) GetCreatedBy() string {
	if m != nil && m.CreatedBy != nil {
		return *m.CreatedBy
	}
	return ""
}

func (m *InvoiceNote) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type Log struct {
	User             *string                    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Action           *Log_Action                `protobuf:"varint,2,opt,name=action,enum=payment.Log_Action" json:"action,omitempty"`
	Description      *string                    `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Time             *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Log) Reset()                    { *m = Log{} }
func (m *Log) String() string            { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()               {}
func (*Log) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Log) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *Log) GetAction() Log_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Log_create_invoice
}

func (m *Log) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Log) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type Addon struct {
	Id               *Addon_ID                  `protobuf:"varint,1,opt,name=id,enum=payment.Addon_ID" json:"id,omitempty"`
	Name             *string                    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Price            *float32                   `protobuf:"fixed32,3,opt,name=price" json:"price,omitempty"`
	Currency         *Currency                  `protobuf:"varint,4,opt,name=currency,enum=payment.Currency,def=0" json:"currency,omitempty"`
	ChargeType       *Addon_ChargeType          `protobuf:"varint,5,opt,name=charge_type,json=chargeType,enum=payment.Addon_ChargeType" json:"charge_type,omitempty"`
	Period           *int32                     `protobuf:"varint,6,opt,name=period,def=1" json:"period,omitempty"`
	PeriodUnit       *Addon_PeriodUnit          `protobuf:"varint,7,opt,name=period_unit,json=periodUnit,enum=payment.Addon_PeriodUnit,def=2" json:"period_unit,omitempty"`
	Type             *Addon_Type                `protobuf:"varint,8,opt,name=type,enum=payment.Addon_Type,def=1" json:"type,omitempty"`
	Created          *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=created" json:"created,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Addon) Reset()                    { *m = Addon{} }
func (m *Addon) String() string            { return proto.CompactTextString(m) }
func (*Addon) ProtoMessage()               {}
func (*Addon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

const Default_Addon_Currency Currency = Currency_usd
const Default_Addon_Period int32 = 1
const Default_Addon_PeriodUnit Addon_PeriodUnit = Addon_month
const Default_Addon_Type Addon_Type = Addon_quantity

func (m *Addon) GetId() Addon_ID {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Addon_credit
}

func (m *Addon) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Addon) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Addon) GetCurrency() Currency {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return Default_Addon_Currency
}

func (m *Addon) GetChargeType() Addon_ChargeType {
	if m != nil && m.ChargeType != nil {
		return *m.ChargeType
	}
	return Addon_one_time
}

func (m *Addon) GetPeriod() int32 {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return Default_Addon_Period
}

func (m *Addon) GetPeriodUnit() Addon_PeriodUnit {
	if m != nil && m.PeriodUnit != nil {
		return *m.PeriodUnit
	}
	return Default_Addon_PeriodUnit
}

func (m *Addon) GetType() Addon_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Addon_Type
}

func (m *Addon) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func init() {
	proto.RegisterType((*PaymentMethod)(nil), "payment.PaymentMethod")
	proto.RegisterType((*PaymentMethod_StripeInfo)(nil), "payment.PaymentMethod.StripeInfo")
	proto.RegisterType((*Limit)(nil), "payment.Limit")
	proto.RegisterType((*Plan)(nil), "payment.Plan")
	proto.RegisterType((*Subscription)(nil), "payment.Subscription")
	proto.RegisterType((*Bill)(nil), "payment.Bill")
	proto.RegisterType((*Invoice)(nil), "payment.Invoice")
	proto.RegisterType((*InvoiceItem)(nil), "payment.InvoiceItem")
	proto.RegisterType((*InvoiceItem_Period)(nil), "payment.InvoiceItem.Period")
	proto.RegisterType((*Customer)(nil), "payment.Customer")
	proto.RegisterType((*Customer_Contact)(nil), "payment.Customer.Contact")
	proto.RegisterType((*Customer_BillingInfo)(nil), "payment.Customer.BillingInfo")
	proto.RegisterType((*Discount)(nil), "payment.Discount")
	proto.RegisterType((*Discount_Constraint)(nil), "payment.Discount.Constraint")
	proto.RegisterType((*Credit)(nil), "payment.Credit")
	proto.RegisterType((*ExchangeRate)(nil), "payment.ExchangeRate")
	proto.RegisterType((*AccountNote)(nil), "payment.AccountNote")
	proto.RegisterType((*InvoiceNote)(nil), "payment.InvoiceNote")
	proto.RegisterType((*Log)(nil), "payment.Log")
	proto.RegisterType((*Addon)(nil), "payment.Addon")
	proto.RegisterEnum("payment.Currency", Currency_name, Currency_value)
	proto.RegisterEnum("payment.Event", Event_name, Event_value)
	proto.RegisterEnum("payment.PaymentMethod_Name", PaymentMethod_Name_name, PaymentMethod_Name_value)
	proto.RegisterEnum("payment.PaymentMethod_Status", PaymentMethod_Status_name, PaymentMethod_Status_value)
	proto.RegisterEnum("payment.Plan_ID", Plan_ID_name, Plan_ID_value)
	proto.RegisterEnum("payment.Plan_PeriodUnit", Plan_PeriodUnit_name, Plan_PeriodUnit_value)
	proto.RegisterEnum("payment.Subscription_Status", Subscription_Status_name, Subscription_Status_value)
	proto.RegisterEnum("payment.Invoice_Status", Invoice_Status_name, Invoice_Status_value)
	proto.RegisterEnum("payment.InvoiceItem_Type", InvoiceItem_Type_name, InvoiceItem_Type_value)
	proto.RegisterEnum("payment.Customer_Contact_Title", Customer_Contact_Title_name, Customer_Contact_Title_value)
	proto.RegisterEnum("payment.Discount_Type", Discount_Type_name, Discount_Type_value)
	proto.RegisterEnum("payment.Log_Action", Log_Action_name, Log_Action_value)
	proto.RegisterEnum("payment.Addon_ID", Addon_ID_name, Addon_ID_value)
	proto.RegisterEnum("payment.Addon_ChargeType", Addon_ChargeType_name, Addon_ChargeType_value)
	proto.RegisterEnum("payment.Addon_PeriodUnit", Addon_PeriodUnit_name, Addon_PeriodUnit_value)
	proto.RegisterEnum("payment.Addon_Type", Addon_Type_name, Addon_Type_value)
}

func init() { proto.RegisterFile("payment/payment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0xdb, 0xc6,
	0xf5, 0x17, 0x00, 0x82, 0x1f, 0x07, 0x24, 0x05, 0x6d, 0x64, 0xff, 0x69, 0x39, 0xfe, 0x5b, 0x46,
	0x9a, 0xd6, 0x71, 0x52, 0x2a, 0x91, 0xed, 0x64, 0xaa, 0xd4, 0x75, 0x64, 0xc9, 0x9d, 0xd1, 0x8c,
	0x9b, 0x71, 0x61, 0xe7, 0x1a, 0xb3, 0xc4, 0x2e, 0x29, 0xc4, 0xc0, 0x2e, 0x0b, 0x2c, 0x15, 0xb1,
	0xb7, 0x7d, 0x87, 0xde, 0xf4, 0x05, 0x3a, 0xed, 0x1b, 0xf4, 0xa2, 0xef, 0xd0, 0x8b, 0xde, 0xb7,
	0xd7, 0xed, 0x45, 0x67, 0xfa, 0x00, 0xed, 0xec, 0x07, 0x40, 0x90, 0xb2, 0x44, 0xb9, 0x9d, 0x5e,
	0x11, 0x7b, 0xf6, 0xb7, 0xcb, 0xb3, 0xe7, 0xe3, 0x77, 0xce, 0x2e, 0xdc, 0x98, 0xe2, 0x79, 0x46,
	0x99, 0xd8, 0x33, 0xbf, 0xc3, 0x69, 0xce, 0x05, 0x47, 0x2d, 0x33, 0xdc, 0x19, 0x8e, 0x12, 0x31,
	0x9a, 0xc5, 0x6f, 0xa8, 0x18, 0xf2, 0x7c, 0xb2, 0x57, 0xcc, 0x46, 0xc9, 0x2f, 0xf7, 0x4e, 0x29,
	0x26, 0x34, 0xdf, 0x8b, 0x79, 0x96, 0x71, 0x66, 0x7e, 0xf4, 0xc2, 0x9d, 0x2f, 0x27, 0x89, 0x38,
	0x9d, 0x8d, 0x86, 0x31, 0xcf, 0xf6, 0x26, 0x3c, 0xc5, 0x6c, 0xb2, 0xa7, 0x26, 0x46, 0xb3, 0xf1,
	0xde, 0x54, 0xcc, 0xa7, 0xb4, 0xd8, 0x13, 0x49, 0x46, 0x0b, 0x81, 0xb3, 0xe9, 0xe2, 0x4b, 0x2f,
	0x0e, 0x7e, 0xed, 0x40, 0xef, 0xa5, 0xfe, 0xe3, 0x9f, 0x51, 0x71, 0xca, 0x09, 0xfa, 0x02, 0x1a,
	0x0c, 0x67, 0x74, 0x60, 0xed, 0x5a, 0xf7, 0xfb, 0xfb, 0xb7, 0x87, 0xa5, 0x96, 0x4b, 0xa8, 0xe1,
	0xd7, 0x38, 0xa3, 0x07, 0xcd, 0x42, 0xe4, 0xc9, 0x94, 0x86, 0x6a, 0x01, 0xba, 0x03, 0x80, 0xe3,
	0x98, 0xcf, 0x98, 0x88, 0x12, 0x32, 0xb0, 0x77, 0xad, 0xfb, 0x9d, 0xb0, 0x63, 0x24, 0x27, 0x04,
	0x3d, 0x03, 0x4f, 0xc3, 0xa3, 0x84, 0x8d, 0xf9, 0xc0, 0xd9, 0xb5, 0xee, 0x7b, 0xfb, 0xf7, 0x2e,
	0xd9, 0xfe, 0x95, 0x42, 0x9e, 0xb0, 0x31, 0x0f, 0xa1, 0xa8, 0xbe, 0xd1, 0x53, 0x68, 0x16, 0x02,
	0x8b, 0x59, 0x31, 0x68, 0x28, 0xed, 0xee, 0x5c, 0xba, 0x5c, 0x82, 0x0e, 0xda, 0x09, 0xc3, 0xb1,
	0x48, 0xce, 0x68, 0x68, 0x96, 0xa1, 0x01, 0xb4, 0xa6, 0x79, 0x92, 0xe1, 0x7c, 0x3e, 0x70, 0x77,
	0xad, 0xfb, 0xed, 0xb0, 0x1c, 0xee, 0xbc, 0x00, 0x58, 0xfc, 0xa9, 0x3c, 0x4b, 0x8c, 0x73, 0x12,
	0xa5, 0xb8, 0x10, 0x8f, 0x94, 0x29, 0x3a, 0x61, 0x47, 0x4a, 0x5e, 0x48, 0x01, 0xba, 0x0b, 0x5e,
	0x3c, 0x2b, 0x04, 0xcf, 0x68, 0xbe, 0x38, 0x2b, 0x94, 0xa2, 0x13, 0x12, 0xbc, 0x0f, 0x0d, 0x69,
	0x21, 0xd4, 0x86, 0x46, 0x8c, 0x8b, 0x53, 0x7f, 0x03, 0x01, 0x18, 0x6b, 0xf9, 0x56, 0x10, 0x40,
	0x53, 0x6b, 0x28, 0xa5, 0x5a, 0x43, 0x7f, 0x03, 0x75, 0xa1, 0xd2, 0xd7, 0xb7, 0x82, 0xbf, 0x59,
	0xe0, 0xbe, 0x48, 0xb2, 0x44, 0xa0, 0x7b, 0xe0, 0xc4, 0xe2, 0x5c, 0x29, 0xe1, 0xed, 0x6f, 0x0e,
	0x8d, 0xef, 0x8f, 0x38, 0x13, 0xf4, 0x5c, 0x84, 0x72, 0x0e, 0xfd, 0x00, 0x36, 0x33, 0x7c, 0x1e,
	0xe1, 0x99, 0xe0, 0x19, 0x16, 0x09, 0x67, 0x85, 0xd2, 0xc9, 0x0d, 0xfb, 0x19, 0x3e, 0x3f, 0x5c,
	0x48, 0x4b, 0x60, 0xcc, 0x59, 0x3c, 0xcb, 0x73, 0xca, 0x44, 0xa1, 0x1c, 0xa1, 0x81, 0x47, 0x0b,
	0x29, 0xfa, 0x18, 0xb6, 0x0c, 0xf0, 0x8c, 0xe6, 0x85, 0xd9, 0xb3, 0xa1, 0xa0, 0xbe, 0x86, 0x2e,
	0xe4, 0xe8, 0x1e, 0x74, 0x25, 0xb8, 0xa0, 0x93, 0x4c, 0x6d, 0xe9, 0x2a, 0x9c, 0x97, 0xe1, 0xf3,
	0x57, 0x46, 0x24, 0x0d, 0xaa, 0x34, 0x9c, 0x28, 0x40, 0x53, 0x01, 0x3a, 0x52, 0x39, 0x25, 0x08,
	0xfe, 0xe4, 0x40, 0xe3, 0x65, 0x8a, 0x19, 0xda, 0x05, 0x3b, 0x21, 0x26, 0xf6, 0xfc, 0x85, 0x77,
	0x53, 0xcc, 0x86, 0x27, 0xc7, 0xa1, 0x9d, 0x10, 0x84, 0x4c, 0x7c, 0x6a, 0xa3, 0xeb, 0xd0, 0xfb,
	0x1e, 0xb8, 0xa9, 0xb4, 0x95, 0x89, 0xaa, 0x7e, 0xb5, 0x50, 0x59, 0x30, 0xd4, 0x93, 0x68, 0x1b,
	0xdc, 0x69, 0x9e, 0xc4, 0x54, 0x9d, 0xc3, 0x0e, 0xf5, 0x00, 0xed, 0x43, 0x5b, 0x9f, 0x3a, 0xd6,
	0x31, 0xd1, 0xdf, 0xdf, 0xaa, 0x96, 0x1f, 0x99, 0x89, 0x03, 0x67, 0x56, 0x90, 0xb0, 0xc2, 0xa1,
	0x47, 0xd0, 0x8a, 0x73, 0x8a, 0x05, 0x25, 0x83, 0xb6, 0xfa, 0xc7, 0x9d, 0xe1, 0x84, 0xf3, 0x49,
	0x4a, 0x87, 0x65, 0xe6, 0x0d, 0x5f, 0x97, 0x89, 0x16, 0x96, 0x50, 0x34, 0x84, 0x2d, 0x91, 0x27,
	0x38, 0x8d, 0xa6, 0x34, 0x4f, 0x38, 0x89, 0x08, 0x9e, 0x17, 0x83, 0x8e, 0x34, 0xc5, 0x81, 0xfd,
	0xf0, 0xd3, 0x70, 0x53, 0x4d, 0xbe, 0x54, 0x73, 0xc7, 0x78, 0x5e, 0xa0, 0x5b, 0xd0, 0xd4, 0xc8,
	0x01, 0x28, 0x90, 0xf5, 0x59, 0x68, 0x04, 0xe8, 0x2b, 0xf0, 0xcc, 0x26, 0x33, 0x96, 0x88, 0x81,
	0xa7, 0xf4, 0x1e, 0x2c, 0xdb, 0x4b, 0xef, 0xf4, 0x0d, 0x4b, 0xc4, 0x81, 0x9b, 0x71, 0x26, 0x4e,
	0x43, 0x98, 0x56, 0xa2, 0xe0, 0x01, 0xd8, 0x27, 0xc7, 0x32, 0x3e, 0xc7, 0x39, 0x35, 0xd1, 0x57,
	0x08, 0xcc, 0x08, 0xce, 0x89, 0x6f, 0xc9, 0x11, 0x26, 0x67, 0x98, 0xc5, 0x94, 0xf8, 0x76, 0xf0,
	0x08, 0x60, 0xb1, 0x19, 0x6a, 0x81, 0x43, 0xf0, 0xdc, 0xdf, 0x90, 0x8b, 0xbf, 0xa3, 0xf4, 0x8d,
	0x6f, 0xa1, 0x0e, 0xe8, 0x7f, 0xf0, 0x6d, 0x29, 0x9c, 0x53, 0x9c, 0xfb, 0x4e, 0xf0, 0xab, 0x26,
	0x74, 0x5f, 0xcd, 0x46, 0x45, 0x9c, 0x27, 0x53, 0x19, 0x27, 0xa8, 0x5f, 0xf9, 0xb6, 0xa3, 0x3c,
	0xb9, 0x86, 0x30, 0xee, 0x82, 0x47, 0x92, 0xa2, 0x9a, 0x77, 0x74, 0x92, 0x95, 0xa2, 0x13, 0x82,
	0x9e, 0x40, 0xd7, 0x18, 0xa1, 0x10, 0x38, 0x17, 0xca, 0x7b, 0x57, 0xbb, 0xc2, 0x18, 0xed, 0x95,
	0x84, 0xa3, 0x1f, 0x81, 0xb1, 0x47, 0x44, 0x19, 0x51, 0x21, 0x79, 0xf5, 0xe2, 0x8e, 0x46, 0x3f,
	0x67, 0x5a, 0xf3, 0x99, 0xe0, 0x51, 0x4e, 0x19, 0xfd, 0x4e, 0xb9, 0xb0, 0x1d, 0x76, 0xa4, 0x24,
	0x94, 0x02, 0xf4, 0xa4, 0xa2, 0x29, 0x50, 0x8e, 0x79, 0xbf, 0x72, 0x4c, 0xdd, 0x1e, 0x25, 0x4b,
	0xb5, 0xa6, 0x94, 0x91, 0x84, 0x4d, 0x2a, 0x92, 0xaa, 0x45, 0x97, 0x77, 0xfd, 0xe8, 0xfa, 0x00,
	0x7a, 0xa3, 0x24, 0x4d, 0x13, 0x36, 0x89, 0xe2, 0x79, 0x9c, 0xd2, 0xc1, 0xa6, 0x4a, 0xb2, 0xae,
	0x11, 0x1e, 0x49, 0x19, 0xfa, 0x08, 0x5a, 0xd3, 0x14, 0x33, 0x69, 0x4f, 0xff, 0x92, 0x1c, 0x6b,
	0x4a, 0xc0, 0x89, 0xda, 0x4f, 0x41, 0x7f, 0x31, 0xc3, 0x4c, 0x24, 0x62, 0x3e, 0xd8, 0xd2, 0xfb,
	0x49, 0xe1, 0xcf, 0x8d, 0x0c, 0x7d, 0x09, 0x9e, 0x0e, 0x69, 0xed, 0x01, 0xb4, 0x56, 0x5d, 0x50,
	0x70, 0xed, 0x80, 0x2f, 0xa0, 0xa3, 0x17, 0x4b, 0xfb, 0xbf, 0xb7, 0x76, 0x69, 0x5b, 0x81, 0x8d,
	0xf9, 0x95, 0x6a, 0x3a, 0x9b, 0xb7, 0x55, 0x36, 0x77, 0xa4, 0xe4, 0xa5, 0xca, 0xe8, 0xef, 0x43,
	0x13, 0x13, 0x22, 0x09, 0xeb, 0xc6, 0xae, 0xb3, 0x44, 0x07, 0x87, 0x52, 0x1c, 0x9a, 0xd9, 0x05,
	0x6b, 0xdc, 0xbc, 0x82, 0x35, 0x82, 0x27, 0x15, 0x59, 0x7b, 0x50, 0xba, 0x4a, 0xf3, 0x79, 0xc9,
	0xd5, 0x4b, 0xcc, 0x6d, 0xcb, 0x91, 0xd2, 0x54, 0xe2, 0x9c, 0xe0, 0xb7, 0x36, 0x34, 0x9e, 0x25,
	0x69, 0xfa, 0xae, 0xd1, 0x7f, 0x13, 0x9a, 0x38, 0x93, 0xdf, 0x2a, 0xf0, 0xed, 0xd0, 0x8c, 0x64,
	0x56, 0x24, 0xec, 0x8c, 0x27, 0x31, 0x8d, 0x12, 0x22, 0x29, 0xd9, 0x91, 0x59, 0x61, 0x44, 0x27,
	0xa4, 0x40, 0xcf, 0xa0, 0x6f, 0xce, 0x11, 0x65, 0xaa, 0x1a, 0x1a, 0x56, 0xbb, 0xaa, 0x92, 0x87,
	0xbd, 0xe9, 0x52, 0x0f, 0x50, 0x8b, 0xc0, 0xe6, 0xf5, 0x23, 0xf0, 0x27, 0xd0, 0x5b, 0x54, 0x45,
	0x59, 0xe3, 0x5b, 0x6a, 0xed, 0xad, 0x1a, 0x9d, 0xea, 0x59, 0x55, 0xbc, 0x70, 0x2c, 0xc2, 0x6e,
	0x55, 0x32, 0xd9, 0x98, 0x07, 0xff, 0x74, 0xa1, 0x75, 0xa2, 0x0f, 0xf2, 0xae, 0xd6, 0x92, 0xd3,
	0xca, 0x3e, 0x11, 0x99, 0x95, 0xfc, 0xde, 0xd1, 0x92, 0xe3, 0x19, 0x5d, 0xa5, 0x12, 0xf7, 0x02,
	0x95, 0xec, 0x82, 0x47, 0x68, 0x95, 0x99, 0xea, 0xd0, 0x9d, 0xb0, 0x2e, 0x42, 0x3f, 0xac, 0x95,
	0x89, 0xd6, 0x25, 0x65, 0xa2, 0x56, 0x21, 0xbe, 0x82, 0x32, 0xf1, 0xb4, 0x29, 0x74, 0x99, 0xb8,
	0x73, 0xd1, 0x14, 0xcf, 0x34, 0x4a, 0xb5, 0x3a, 0xde, 0x68, 0x31, 0x40, 0x8f, 0xa1, 0x4d, 0x66,
	0x34, 0x22, 0x58, 0x50, 0xc5, 0x30, 0x6b, 0x9c, 0x40, 0x66, 0xf4, 0x18, 0x0b, 0x8a, 0x3e, 0x5f,
	0xe1, 0x9e, 0xff, 0xab, 0xfe, 0xd2, 0x98, 0xb6, 0xa4, 0x1d, 0x97, 0xe4, 0x78, 0x2c, 0xfe, 0x4b,
	0xd2, 0x79, 0x08, 0x90, 0x26, 0x8c, 0x46, 0x89, 0xa0, 0x59, 0x31, 0xe8, 0xaa, 0x74, 0xdb, 0x5e,
	0xfd, 0xc7, 0x13, 0x41, 0xb3, 0xb0, 0x23, 0x71, 0xf2, 0xab, 0x40, 0x07, 0xd0, 0xa3, 0xe7, 0xf1,
	0x29, 0x66, 0x13, 0x1a, 0xe5, 0xf2, 0x78, 0x3d, 0xf5, 0x87, 0x37, 0xaa, 0x75, 0xcf, 0xcd, 0x6c,
	0x88, 0x05, 0x0d, 0xbb, 0xb4, 0x36, 0x42, 0x3b, 0xd0, 0x2e, 0x66, 0x23, 0xc1, 0x05, 0x4e, 0x07,
	0x7d, 0xe5, 0xe6, 0x6a, 0x2c, 0xbd, 0x2c, 0xf0, 0xb9, 0xac, 0xae, 0x31, 0x65, 0x42, 0xf1, 0x9f,
	0x1d, 0x82, 0xc0, 0xe7, 0x2f, 0xb5, 0x04, 0xf9, 0xe0, 0x08, 0x7c, 0xae, 0x98, 0xcf, 0x0e, 0xe5,
	0xa7, 0x6c, 0x09, 0xf4, 0x5e, 0x5b, 0xba, 0x25, 0xd0, 0x1b, 0x3d, 0x82, 0xd6, 0x6c, 0x4a, 0x94,
	0x2d, 0xd6, 0x33, 0x5a, 0x09, 0x0d, 0x1e, 0x57, 0x44, 0xd1, 0x01, 0x6d, 0x5c, 0x5d, 0x23, 0xf9,
	0x94, 0x32, 0xdf, 0x92, 0x84, 0x11, 0xa7, 0xbc, 0x90, 0x05, 0x55, 0x7e, 0x9f, 0xf1, 0x84, 0x50,
	0xe2, 0x3b, 0xc1, 0xef, 0x1a, 0xe0, 0xd5, 0x0c, 0x75, 0x21, 0xf2, 0x17, 0x44, 0x60, 0x2f, 0x11,
	0x41, 0x3d, 0x20, 0x9d, 0xf5, 0x01, 0xb9, 0x9c, 0x40, 0x8d, 0xd5, 0x04, 0x5a, 0x49, 0x00, 0xf7,
	0x62, 0x02, 0xdc, 0x01, 0x58, 0x10, 0x8f, 0xc9, 0x90, 0x4e, 0xc5, 0x3b, 0xd2, 0x31, 0x55, 0xa5,
	0x68, 0xa9, 0x4a, 0x51, 0x8d, 0xd1, 0xc3, 0xaa, 0x91, 0xd1, 0x69, 0x70, 0xfb, 0x6d, 0x11, 0x62,
	0xfa, 0x95, 0xaa, 0xc5, 0x79, 0x08, 0x0d, 0x79, 0x79, 0x31, 0x61, 0x7c, 0xeb, 0xad, 0x4b, 0x5e,
	0xcf, 0xa7, 0xf4, 0xa0, 0x21, 0x99, 0x3f, 0x54, 0xe0, 0x7a, 0x7d, 0xf3, 0xd6, 0xd4, 0xb7, 0x4f,
	0x64, 0x8b, 0x43, 0xb8, 0xc2, 0x76, 0x57, 0xec, 0xa7, 0xea, 0x84, 0x04, 0xb7, 0x14, 0xe4, 0x84,
	0xec, 0x9c, 0x42, 0x53, 0xeb, 0x87, 0x3e, 0x05, 0x57, 0x17, 0x3b, 0x6b, 0x6d, 0x68, 0x68, 0x20,
	0xfa, 0x04, 0x1c, 0x59, 0xe1, 0xec, 0xb5, 0x78, 0x09, 0x0b, 0x6e, 0x43, 0x43, 0x1e, 0x4b, 0x46,
	0x8e, 0xd4, 0xd4, 0xdf, 0x90, 0xe1, 0xa4, 0xd4, 0xf0, 0xad, 0xe0, 0x8f, 0x0d, 0x68, 0x97, 0xd4,
	0xf1, 0xae, 0x1c, 0xf9, 0x18, 0xda, 0xb1, 0xe6, 0x5d, 0x5d, 0x36, 0xae, 0x64, 0xe6, 0x0a, 0x5a,
	0x27, 0x06, 0xf7, 0xfa, 0xc4, 0xb0, 0xca, 0x7f, 0xcd, 0x77, 0xe5, 0xbf, 0x9d, 0xbf, 0x5a, 0xd0,
	0x32, 0xda, 0x54, 0x3d, 0xbf, 0x55, 0xeb, 0xf9, 0xb7, 0xc1, 0xa5, 0x19, 0x4e, 0x52, 0x73, 0x50,
	0x3d, 0x50, 0x3d, 0xfe, 0x29, 0x67, 0xd4, 0xb4, 0x8b, 0x7a, 0x80, 0x6e, 0x43, 0xe7, 0x5b, 0x3e,
	0x8a, 0x44, 0x22, 0x52, 0x6a, 0x62, 0xbf, 0xfd, 0x2d, 0x1f, 0xbd, 0x96, 0x63, 0xf4, 0x18, 0x5c,
	0x3d, 0xa1, 0xeb, 0xe4, 0xdd, 0x4b, 0x8d, 0x32, 0x54, 0xf8, 0x50, 0xa3, 0xeb, 0x57, 0xc9, 0xe6,
	0xd2, 0x55, 0x32, 0xb8, 0x0f, 0xae, 0xde, 0xb9, 0x09, 0x76, 0x96, 0xfb, 0x1b, 0xea, 0xb7, 0xf0,
	0x2d, 0xd9, 0x39, 0x67, 0x79, 0xe1, 0xdb, 0x52, 0x40, 0x72, 0xdf, 0xd9, 0x99, 0x82, 0x57, 0x3b,
	0xff, 0x5b, 0x8f, 0x39, 0x00, 0x19, 0x83, 0x39, 0x2d, 0x0a, 0x73, 0xd0, 0x72, 0x28, 0xd9, 0xec,
	0x0c, 0x0b, 0x73, 0x50, 0xf9, 0x29, 0xef, 0x61, 0xca, 0xd9, 0xf9, 0x3c, 0x8a, 0x39, 0x29, 0x4f,
	0xea, 0x19, 0xd9, 0x11, 0x27, 0x34, 0xf8, 0x97, 0x0b, 0xed, 0x63, 0x53, 0xf7, 0x2e, 0x04, 0xd0,
	0x0a, 0x09, 0xd8, 0x17, 0x49, 0x00, 0x99, 0xa4, 0xd4, 0x7f, 0xaa, 0x73, 0x6e, 0x1b, 0xdc, 0x33,
	0x9c, 0x56, 0x65, 0x57, 0x0f, 0xd0, 0x87, 0xd0, 0x57, 0x6f, 0x0d, 0x51, 0x4e, 0x09, 0xa5, 0x99,
	0x89, 0x1e, 0x37, 0xec, 0x29, 0x69, 0x68, 0x84, 0xea, 0xa2, 0xad, 0x43, 0x26, 0x1a, 0xcd, 0x55,
	0x9d, 0x93, 0x17, 0x6d, 0x2d, 0x79, 0xb6, 0x74, 0xd1, 0x82, 0xeb, 0x07, 0x1f, 0x82, 0x86, 0x3a,
	0xbf, 0xa7, 0xb5, 0x94, 0xdf, 0xe8, 0xc7, 0x00, 0x31, 0x67, 0x85, 0xc8, 0x71, 0xc2, 0x84, 0x4a,
	0x78, 0xaf, 0xd6, 0x97, 0x97, 0x26, 0x91, 0xae, 0x36, 0x98, 0xb0, 0x86, 0xaf, 0x3c, 0xd3, 0x5b,
	0x78, 0x66, 0xe7, 0xef, 0x36, 0xc0, 0x02, 0xfe, 0xbf, 0xe6, 0x85, 0x3a, 0xb5, 0x39, 0x6b, 0xa8,
	0x6d, 0x0d, 0xd7, 0x9b, 0x47, 0x00, 0xe9, 0x98, 0x6c, 0xaa, 0x6f, 0xf6, 0x6e, 0xf5, 0x08, 0x10,
	0x2e, 0xa4, 0xb2, 0xa0, 0xe6, 0x74, 0x4c, 0xf3, 0x5c, 0x3f, 0x73, 0x68, 0xce, 0x87, 0x52, 0xa4,
	0xff, 0x28, 0x4b, 0x58, 0x64, 0xea, 0x53, 0x4b, 0xb7, 0x5d, 0x59, 0xc2, 0x0e, 0x75, 0x89, 0x2a,
	0x2f, 0xfd, 0x7a, 0xba, 0x6d, 0xa6, 0xf1, 0xb9, 0x99, 0xae, 0x33, 0x70, 0x67, 0x1d, 0x03, 0x07,
	0x3f, 0x35, 0xbc, 0xe8, 0x43, 0x77, 0x9c, 0x9c, 0x53, 0x62, 0xb6, 0xf5, 0x37, 0x74, 0x5f, 0xae,
	0x2a, 0xbc, 0x29, 0xb3, 0x39, 0x25, 0x89, 0xf0, 0x6d, 0xf4, 0x1e, 0x6c, 0x6a, 0x65, 0x71, 0x1a,
	0x19, 0xa1, 0x13, 0x3c, 0x85, 0xe6, 0x91, 0xfa, 0x5e, 0x31, 0x93, 0x75, 0x79, 0x07, 0xbe, 0x54,
	0x78, 0x83, 0xbf, 0x58, 0xd0, 0xad, 0x77, 0x28, 0xe8, 0x73, 0xe8, 0x8d, 0x73, 0x9e, 0x45, 0x55,
	0x39, 0xb6, 0x2e, 0x2b, 0xc7, 0x5d, 0x89, 0x2b, 0x47, 0x68, 0x1f, 0x3c, 0xc1, 0x17, 0xab, 0xec,
	0xcb, 0x56, 0x81, 0xe0, 0xd5, 0x9a, 0x0f, 0x56, 0x7b, 0x27, 0x7d, 0x3b, 0x58, 0x6e, 0x92, 0x9e,
	0xd6, 0x40, 0xaa, 0x7f, 0x6c, 0xac, 0x0d, 0xb1, 0x6a, 0x03, 0xd9, 0x44, 0x06, 0xbf, 0xb1, 0xc0,
	0x3b, 0xd4, 0x86, 0xf8, 0x9a, 0x8b, 0xb5, 0x4f, 0x7b, 0x03, 0x68, 0x65, 0xb4, 0x28, 0xf0, 0xa4,
	0x24, 0x86, 0x72, 0xb8, 0x92, 0xde, 0x8d, 0x2b, 0xd2, 0xfb, 0xfa, 0xb5, 0x25, 0xf8, 0x83, 0x55,
	0x75, 0x4c, 0xd7, 0xd1, 0x6e, 0xb9, 0x71, 0x71, 0x56, 0x1b, 0x97, 0x9a, 0xf2, 0x8d, 0xab, 0x94,
	0x77, 0xaf, 0x50, 0xfe, 0xfa, 0x97, 0xa4, 0xe0, 0x1f, 0x0e, 0x38, 0x2f, 0xf8, 0x44, 0x32, 0xca,
	0xac, 0xa0, 0x79, 0xc9, 0xf5, 0xf2, 0x1b, 0x7d, 0xac, 0xef, 0x94, 0x86, 0x7a, 0xfb, 0xfb, 0xef,
	0x2d, 0x6e, 0xa4, 0x7c, 0x32, 0x3c, 0x54, 0x53, 0xa1, 0x81, 0xac, 0x92, 0xb5, 0x73, 0x91, 0xac,
	0x87, 0xd0, 0x90, 0x64, 0x7b, 0x0d, 0xef, 0x2b, 0x5c, 0xf0, 0x67, 0x1b, 0x9a, 0xfa, 0x4f, 0x10,
	0x82, 0xbe, 0x56, 0x38, 0x32, 0x86, 0xf2, 0x37, 0xd0, 0x2d, 0xb8, 0x61, 0x62, 0xaa, 0x34, 0xa7,
	0xbe, 0x3a, 0xf8, 0x96, 0x4c, 0x34, 0x03, 0x2f, 0xef, 0x54, 0x3a, 0xfb, 0x08, 0x4d, 0x69, 0x5d,
	0xe8, 0xe8, 0x94, 0x94, 0xdc, 0xbf, 0x10, 0x36, 0x50, 0x1f, 0x00, 0x13, 0x52, 0xa6, 0xa8, 0x8b,
	0xb6, 0xa0, 0x67, 0x40, 0x46, 0xd4, 0x94, 0x0a, 0x99, 0xcd, 0x8c, 0x63, 0xfd, 0x16, 0xda, 0x04,
	0xcf, 0x28, 0xa4, 0x1a, 0xa5, 0x36, 0xfa, 0x7f, 0xd8, 0x31, 0x82, 0xa2, 0xf6, 0xce, 0x52, 0xaa,
	0xd9, 0x41, 0x37, 0x01, 0xa9, 0x17, 0x9b, 0xa5, 0x69, 0x1f, 0xd0, 0x0e, 0xdc, 0x8c, 0xd3, 0x24,
	0x7e, 0x53, 0xca, 0x47, 0x34, 0x1a, 0xcd, 0x84, 0xe0, 0xcc, 0xf7, 0xd0, 0x36, 0xf8, 0x53, 0x3c,
	0x8f, 0xc6, 0x3c, 0x8f, 0x4a, 0xe2, 0xf3, 0xbb, 0x72, 0x85, 0xd4, 0x38, 0xe3, 0x8c, 0xae, 0xcc,
	0xf5, 0xa4, 0x5a, 0x72, 0x45, 0x69, 0xb8, 0x7e, 0xf0, 0xfb, 0x06, 0xb8, 0x8a, 0xcf, 0xd0, 0xbd,
	0xda, 0xeb, 0xe6, 0x5b, 0xb8, 0xee, 0xb2, 0xe7, 0xcd, 0xea, 0xe1, 0xd2, 0xb9, 0xec, 0xe1, 0xb2,
	0x71, 0xcd, 0x87, 0xcb, 0x03, 0x65, 0xb2, 0x7c, 0x42, 0x23, 0x55, 0xc6, 0xdd, 0x95, 0xde, 0x5a,
	0x6b, 0x72, 0xa4, 0x10, 0x92, 0x6c, 0x43, 0x88, 0xab, 0xef, 0xda, 0x73, 0x64, 0x73, 0xf5, 0x39,
	0xf2, 0x70, 0xf9, 0x39, 0xb2, 0xf5, 0xd6, 0x6d, 0xaf, 0x7c, 0x8f, 0x44, 0x9f, 0x99, 0xce, 0xa2,
	0xbd, 0x12, 0xf9, 0x7a, 0xad, 0x6a, 0xf4, 0xab, 0x0b, 0x85, 0x69, 0x3c, 0x6a, 0x09, 0xd8, 0xb9,
	0x7e, 0x02, 0xde, 0x56, 0x0f, 0x9f, 0x8b, 0x32, 0xa1, 0xfb, 0xeb, 0x89, 0xaa, 0x1e, 0xc1, 0x47,
	0x00, 0x8b, 0xd3, 0xa3, 0x2e, 0xb4, 0x39, 0xa3, 0x91, 0x4c, 0x0e, 0x7f, 0x03, 0xf5, 0xa0, 0x93,
	0x53, 0x69, 0xc9, 0x84, 0x4d, 0x7c, 0xeb, 0x3f, 0x7c, 0x14, 0xdd, 0x35, 0x55, 0x0c, 0xa0, 0xc9,
	0x59, 0xc4, 0xc7, 0x63, 0xfd, 0xf4, 0x5a, 0x9e, 0xcc, 0xb7, 0x1e, 0x7c, 0x28, 0x3b, 0x7c, 0xe3,
	0xae, 0x16, 0x48, 0xff, 0xf9, 0x1b, 0xf2, 0xe3, 0x8c, 0x11, 0xdd, 0x42, 0x8e, 0xf2, 0xd4, 0xb7,
	0x1f, 0x3c, 0x00, 0xf7, 0xf9, 0x99, 0xbc, 0xd4, 0x6e, 0x82, 0xa7, 0xde, 0xab, 0x5e, 0xcd, 0xd5,
	0x6b, 0xed, 0x86, 0x2c, 0x90, 0x4a, 0xf0, 0x8d, 0xbe, 0x97, 0xfa, 0xd6, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x60, 0xc2, 0x06, 0x87, 0x72, 0x1a, 0x00, 0x00,
}
