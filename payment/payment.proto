syntax = "proto2";

package payment;

import "bitbucket.org/subiz/header/common/common.proto";

enum Currency {
	usd = 0;
	vnd = 1;
	brl = 2;
}

message Stripe {
	optional string card_last4 = 2;
	optional string customer_id = 3;
	optional string token = 4; // REST only
}

message PaymentMethods {
	repeated PaymentMethod payment_methods = 2;
}

message PaymentMethod {
	enum Type {
		bank_transfer = 0;
		credit_card = 1;
	}

	optional string type = 2;
	optional string id = 3;
	optional string account_id = 4;
	enum State {
		active = 0;
		inactive = 1;
	}
	optional string state = 5;
	optional int64 created = 8;
	optional Stripe stripe = 9;
}

message Limit {
	optional common.Context ctx = 1;
	optional string account_id = 3;
	optional int32 max_automations = 4;
	optional int32 max_conversations = 6;
	optional int32 max_segments = 7;
	optional int32 max_agents = 8;
}

message Plans {
	repeated Plan plans = 2;
}

message Plan {
	optional string name = 2;
	optional Limit limit = 3;
	optional float price = 4; // usd
	optional int64 created = 8;
	optional int32 trial_period_days = 9; // default 30
	optional int32 period = 10; // default 1

	enum PeriodUnit {
		day = 0;
		week = 1;
		month = 2;
		year = 3;
	}

	optional string period_unit = 11;
	enum Type {
		free = 0;
		standard = 1;
		advanced = 2;
	}
	optional int32 level = 14;
}

message Subscription {
	optional string account_id = 3;
	optional int64 created = 11;
	optional string promotion_code = 4;
	optional int64 started = 5; // dont ever change this
	optional int64 due_date = 6; // read-only
	optional bool auto_renew = 9;

	enum State {
		pending = 0; // waiting for payment
		active = 1;
		inactive = 2; //
		trialing = 3;
	}
	optional string state = 10;

	optional int32 billing_cycle_month = 15;
	optional int32 next_billing_cycle_month = 16;
	optional string plan = 17;

	optional int64 trial_start = 18;
	optional int64 trial_end = 19;

	repeated Addon addons = 21;

	optional int32 agent_count = 24;
	optional float unit_price = 25;
	optional float credit = 27;
	repeated Note notes = 28;
	optional string referral_by = 29; // account_id
	optional int64 paid = 30;
	optional Customer customer = 31;
	optional string default_payment_method = 32;
}

message Bill {
	optional string id = 3;
	optional string account_id = 4;
	optional float amount = 5;
	repeated string invoice_ids = 6;
	optional int64 created = 7;
	optional Contact customer_info = 8;
	optional string payment_method = 10;
	optional int32 year = 11;
	optional string description = 12;
}

message Note {
	optional string message = 4;
	optional string creator = 5;
	optional int64 created = 6;
}

message Invoices {
	repeated Invoice invoices = 2;
}

message Invoice {
	optional string account_id = 2;
	optional string id = 3;
	optional float amount_due = 4;
	optional string promotion_code = 5;
	optional string description = 6;
	optional BillingInfo billing_info = 8;
	optional int64 due_date = 9;

	enum State {
		draft = 0;
		open = 1;
		paid = 2;
		voided = 3;
		queueing = 4;
	}
	optional string state = 10;
	optional int64 created = 11;
	repeated InvoiceItem items = 12;
	optional ExchangeRate exchange_rate = 13;
	optional float subtotal = 14;
	optional float tax_percent = 15;
	optional float tax = 16;
	optional float total = 17;
	optional int64 updated = 18;
	optional int32 year = 19;
	repeated Note notes = 22;
	repeated string bills = 23;
	optional float payment_made = 24;
	optional Subscription current_sub = 25;
	optional Plan current_plan = 26;
}

message UpgradePlanInvoiceItem {
	optional int64 start_period = 8;
	optional int64 end_period = 9;
}

message ExtraChangeAgentCountInvoiceItem {
	optional Plan plan = 3;
	optional int32 day_left = 4;
	optional int32 old_agent_count = 5;
	optional int32 new_agent_count = 6;
}

message RenewInvoiceItem {
	optional Plan plan = 3;
	optional int32 billing_cycle_month = 4;
	optional int32 agent_count = 5;
}

message SubscribeInvoiceItem {
}

message ExtraUpdateSubscriptionInvoiceItem {
	optional Plan old_plan = 2;
	optional Plan new_plan = 3;
	optional int32 day_left = 4;
	optional int32 old_agent_count = 5;
	optional int32 new_agent_count = 6;
}

message InvoiceItem {
	optional string description = 5;
	optional string invoice_id = 6;
	optional int32 quantity = 7;
	optional float price = 8; // per unit
	message Data {
		optional UpgradePlanInvoiceItem upgrade_plan = 1;
		optional RenewInvoiceItem renew = 2;
		optional ExtraChangeAgentCountInvoiceItem extra_change_agent_count = 3;
		optional SubscribeInvoiceItem subscribe = 4;
		optional ExtraUpdateSubscriptionInvoiceItem extra_update_subscription = 5;
	}
	optional Data data = 9;
}

message BillingInfo {
	optional string name = 2;
	optional string address = 3;
	optional string vat = 4;
	optional string country_code = 5;
}

message Contact {
	optional string name = 2;
	optional string email = 3;
	optional string phone = 4;
	optional string job_title = 5;

	enum Title {
		mr = 0;
		ms = 1;
		mrs = 2;
		dr = 3;
	}
	optional string title = 6;
	optional bool primary = 7;
}

message Customer {
	optional string id = 2;
	optional string account_id = 3;

	repeated Contact contacts = 4;
	optional int64 created = 5;
	optional BillingInfo billing_info = 6;
}

message FixedAmountPromotionCode {
	optional float amount = 2;
}

message PercentPromotionCode {
	optional float percent = 2;
	optional float min_amount = 7;
	optional float max_amount = 8;
}

message CreditCode {
	optional float credit = 2;
}

message ReferralCreditCode {
	optional string referrer_id = 2;
	optional float credit = 3;
}

message PromotionCode {
	optional string description = 3;

	enum Type {
		fixed_amount_promotion_code = 0;
		percent_promotion_code = 1;
		credit_code = 2;
		referral_credit_code = 3;
	}
	optional string type = 6;
	optional float value = 4;

	optional int32 redeem_count = 5;
	optional string creator = 9;
	optional int64 created = 10;
	optional string code = 11;

	message Data {
		optional FixedAmountPromotionCode fixed_amount = 1;
		optional PercentPromotionCode percent = 2;
		optional CreditCode credit = 3;
		optional ReferralCreditCode referral = 4;
	}
	optional Data data = 14;

	optional int64 start = 16;
	optional int64 end = 17;
	optional string for_plan = 18;
	optional string for_account_id = 19;
	optional int32 max_redemptions = 20;
	optional string addon = 21;
}

message ExchangeRate {
	optional string from_currency = 2;
	optional string to_currency = 3;
	optional float exchange_rate = 4;
	optional int64 exchange_date = 5;
}

message Log {
	enum Action {
		create_invoice = 0;
		change_invoice_status = 1;
		create_discount = 2;
		delete_discount = 3;
		redeem_discount = 4;
		add_credit = 5;
		redeem_credit = 6;
		delete_account = 7;
		change_plan = 8;
		change_subscription_status = 9;
		renew_subscription = 10;
		click_subscribe_button = 11;
		pay_for_referrer = 12;
		add_money_for_referrer = 13;
		pay_invoice = 14;
	}
	optional string user = 2;
	optional string id = 8;
	optional string action = 3;
	optional int64 created = 4;
	optional string description = 5;
	optional string account_id = 6;
	optional int32 month = 7;
}

message Addon {
	enum Type {
		credit = 0;
		agent = 1;
	}
	optional string type = 2;
	optional string name = 3;
	optional float price = 4;
	optional Currency currency = 5;

	enum ChargeType {
		one_time = 0;
		recurring = 1;
	}
	optional string charge_type = 6;
	optional int32 period = 7;

	enum PeriodUnit {
		day = 0;
		week = 1;
		month = 2;
		year = 3;
	}
	optional string period_unit = 8;
	optional int32 quantity = 9;
	optional int64 created = 10;
}

enum Event {
	PaymentSynced = 0;
	LimitUpdated = 1;

	PaymentRequested = 4;
	PaymentRenewCycle = 5;
}

message PaymentRenewCycleRequested {
	optional common.Context ctx = 1;
	optional string account_id = 2;
	optional Subscription sub = 3;
	optional string cycle_id = 4;
}

service SubizInternalPaymentMgr {
	rpc CreateBill(Bill) returns (Bill);
}

service PaymentMgr {
	rpc UpdateSubscription(Subscription) returns (Subscription);
	rpc GetSubscription(common.Empty) returns (Subscription);
	rpc GetPromotionCode(String) returns (PromotionCode);
	rpc AddPaymentMethod(PaymentMethod) returns (PaymentMethod);
	rpc UpdatePaymentMethod(PaymentMethod) returns (PaymentMethod);
	rpc DeletePaymentMethod(common.Id) returns (common.Empty);
	rpc ListPaymentMethods(common.Empty) returns (PaymentMethods);
	rpc Pay(PayRequest) returns (Bill);
	rpc ListInvoices(common.Id) returns (Invoices);
	// rpc Creat(Customer) returns (Customer);
	rpc ListPlans(common.Empty) returns (Plans);
	rpc ExportInvoice(common.Id) returns (String);
}

message String {
	optional string str = 2;
}

message PayRequest {
	optional string account_id = 8;
	repeated string invoice_ids = 6;
	optional string description = 7;
	optional Contact CustomerInfo = 9;
	optional float amount = 10;
}

message RenewCycle {
	optional string account_id = 2;
	optional string id = 3;
	optional int64 done = 4;
}