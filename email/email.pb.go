// Code generated by protoc-gen-go. DO NOT EDIT.
// source: email/email.proto

package email

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_Email_SendRequest Event = 0
)

var Event_name = map[int32]string{
	0: "Email_SendRequest",
}

var Event_value = map[string]int32{
	"Email_SendRequest": 0,
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_74366e5b77a2734d, []int{0}
}

type Email struct {
	Ctx  *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	From string          `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// string to = 4;
	Subject              string            `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string            `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	Header               map[string]string `protobuf:"bytes,7,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attachments          []*Attachment     `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	To                   []string          `protobuf:"bytes,9,rep,name=to,proto3" json:"to,omitempty"`
	Cc                   []string          `protobuf:"bytes,10,rep,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  []string          `protobuf:"bytes,11,rep,name=bcc,proto3" json:"bcc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_74366e5b77a2734d, []int{0}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetCtx() *common.Context {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *Email) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Email) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Email) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Email) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Email) GetCc() []string {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *Email) GetBcc() []string {
	if m != nil {
		return m.Bcc
	}
	return nil
}

type Attachment struct {
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mimetype             string   `protobuf:"bytes,4,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attachment) Reset()         { *m = Attachment{} }
func (m *Attachment) String() string { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()    {}
func (*Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_74366e5b77a2734d, []int{1}
}

func (m *Attachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attachment.Unmarshal(m, b)
}
func (m *Attachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attachment.Marshal(b, m, deterministic)
}
func (m *Attachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachment.Merge(m, src)
}
func (m *Attachment) XXX_Size() int {
	return xxx_messageInfo_Attachment.Size(m)
}
func (m *Attachment) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachment.DiscardUnknown(m)
}

var xxx_messageInfo_Attachment proto.InternalMessageInfo

func (m *Attachment) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Attachment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attachment) GetMimetype() string {
	if m != nil {
		return m.Mimetype
	}
	return ""
}

func init() {
	proto.RegisterEnum("email.Event", Event_name, Event_value)
	proto.RegisterType((*Email)(nil), "email.Email")
	proto.RegisterMapType((map[string]string)(nil), "email.Email.HeaderEntry")
	proto.RegisterType((*Attachment)(nil), "email.Attachment")
}

func init() { proto.RegisterFile("email/email.proto", fileDescriptor_74366e5b77a2734d) }

var fileDescriptor_74366e5b77a2734d = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x51, 0xc1, 0x4e, 0x83, 0x40,
	0x14, 0x14, 0x28, 0x6d, 0x79, 0x24, 0xda, 0x6e, 0x34, 0xd9, 0xf4, 0x60, 0xb0, 0x27, 0xa2, 0x09,
	0x98, 0xf6, 0xa2, 0xde, 0x8c, 0x69, 0xe2, 0xc9, 0x03, 0x7e, 0x80, 0x81, 0xed, 0xd3, 0xa2, 0x5d,
	0xb6, 0xc2, 0xa3, 0x29, 0x7e, 0x9d, 0x9f, 0x66, 0x76, 0xa1, 0xb5, 0x17, 0x98, 0x99, 0x37, 0x03,
	0x6f, 0x67, 0x61, 0x8c, 0x32, 0xcd, 0xd7, 0xb1, 0x79, 0x46, 0x9b, 0x52, 0x91, 0x62, 0xae, 0x21,
	0x93, 0x9b, 0x8f, 0x9c, 0x56, 0x75, 0x16, 0x09, 0x25, 0xe3, 0xaa, 0xce, 0xf2, 0x9f, 0x78, 0x85,
	0xe9, 0x12, 0xcb, 0x58, 0x28, 0x29, 0x55, 0xd1, 0xbd, 0xda, 0xcc, 0xf4, 0xd7, 0x06, 0x77, 0xa1,
	0x63, 0xec, 0x0a, 0x1c, 0x41, 0x3b, 0x6e, 0x05, 0x56, 0xe8, 0xcf, 0xce, 0xa2, 0xce, 0xf5, 0xa4,
	0x0a, 0xc2, 0x1d, 0x25, 0x7a, 0xc6, 0x18, 0xf4, 0xde, 0x4b, 0x25, 0xb9, 0x13, 0x58, 0xa1, 0x97,
	0x18, 0xcc, 0x38, 0x0c, 0xaa, 0x3a, 0xfb, 0x44, 0x41, 0xdc, 0x35, 0xf2, 0x9e, 0x6a, 0x77, 0xa6,
	0x96, 0x0d, 0xef, 0xb7, 0x6e, 0x8d, 0xd9, 0x2d, 0xf4, 0xdb, 0x65, 0xf8, 0x20, 0x70, 0x42, 0x7f,
	0xc6, 0xa3, 0xf6, 0x00, 0x66, 0x85, 0xe8, 0xd9, 0x8c, 0x16, 0x05, 0x95, 0x4d, 0xd2, 0xf9, 0xd8,
	0x1c, 0xfc, 0x94, 0x28, 0x15, 0x2b, 0x89, 0x05, 0x55, 0x7c, 0x68, 0x62, 0xe3, 0x2e, 0xf6, 0x78,
	0x98, 0x24, 0xc7, 0x2e, 0x76, 0x0a, 0x36, 0x29, 0xee, 0x05, 0x4e, 0xe8, 0x25, 0x36, 0x29, 0xcd,
	0x85, 0xe0, 0xd0, 0x72, 0x21, 0xd8, 0x08, 0x9c, 0x4c, 0x08, 0xee, 0x1b, 0x41, 0xc3, 0xc9, 0x3d,
	0xf8, 0x47, 0x7f, 0xd7, 0x86, 0x2f, 0x6c, 0x4c, 0x19, 0x5e, 0xa2, 0x21, 0x3b, 0x07, 0x77, 0x9b,
	0xae, 0x6b, 0xe4, 0xb6, 0xd1, 0x5a, 0xf2, 0x60, 0xdf, 0x59, 0xd3, 0x17, 0x80, 0xff, 0x3d, 0x74,
	0xb2, 0x2e, 0xd7, 0x9d, 0x4b, 0x43, 0xdd, 0x43, 0x91, 0x4a, 0xdc, 0xb7, 0xa6, 0x31, 0x9b, 0xc0,
	0x50, 0xe6, 0x12, 0xa9, 0xd9, 0x20, 0xef, 0x19, 0xfd, 0xc0, 0xaf, 0x2f, 0xc1, 0x5d, 0x6c, 0xf5,
	0xa7, 0x2e, 0x60, 0x6c, 0x7a, 0x79, 0x7b, 0xc5, 0x62, 0x99, 0xe0, 0x77, 0x8d, 0x15, 0x8d, 0x4e,
	0xb2, 0xbe, 0xb9, 0xb9, 0xf9, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0x9b, 0xf5, 0xa0, 0x02,
	0x02, 0x00, 0x00,
}
