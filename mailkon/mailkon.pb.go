// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mailkon/mailkon.proto

package mailkon

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	event "github.com/subiz/header/event"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event int32

const (
	Event_MaikonRequested               Event = 1000
	Event_MailkonSynced                 Event = 1001
	Event_MailkonJob                    Event = 2
	Event_MailkonCreateAccountRequested Event = 0
)

var Event_name = map[int32]string{
	1000: "MaikonRequested",
	1001: "MailkonSynced",
	2:    "MailkonJob",
	0:    "MailkonCreateAccountRequested",
}

var Event_value = map[string]int32{
	"MaikonRequested":               1000,
	"MailkonSynced":                 1001,
	"MailkonJob":                    2,
	"MailkonCreateAccountRequested": 0,
}

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return proto.EnumName(Event_name, int32(x))
}

func (x *Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_value, data, "Event")
	if err != nil {
		return err
	}
	*x = Event(value)
	return nil
}

func (Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{0}
}

type JobType int32

const (
	JobType_sendgrid_inbound JobType = 0
	JobType_sendgrid_event   JobType = 1
	JobType_subiz_event      JobType = 3
)

var JobType_name = map[int32]string{
	0: "sendgrid_inbound",
	1: "sendgrid_event",
	3: "subiz_event",
}

var JobType_value = map[string]int32{
	"sendgrid_inbound": 0,
	"sendgrid_event":   1,
	"subiz_event":      3,
}

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return proto.EnumName(JobType_name, int32(x))
}

func (x *JobType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JobType_value, data, "JobType")
	if err != nil {
		return err
	}
	*x = JobType(value)
	return nil
}

func (JobType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{1}
}

type Address struct {
	AccountId            *string  `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Address              *string  `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Updated              *int64   `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Address) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type Domain struct {
	AccountId            *string  `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Domain               *string  `protobuf:"bytes,2,opt,name=domain" json:"domain,omitempty"`
	Updated              *int64   `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	Dnstype              *string  `protobuf:"bytes,4,opt,name=dnstype" json:"dnstype,omitempty"`
	Data                 *string  `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Domain) Reset()         { *m = Domain{} }
func (m *Domain) String() string { return proto.CompactTextString(m) }
func (*Domain) ProtoMessage()    {}
func (*Domain) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{1}
}

func (m *Domain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Domain.Unmarshal(m, b)
}
func (m *Domain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Domain.Marshal(b, m, deterministic)
}
func (m *Domain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Domain.Merge(m, src)
}
func (m *Domain) XXX_Size() int {
	return xxx_messageInfo_Domain.Size(m)
}
func (m *Domain) XXX_DiscardUnknown() {
	xxx_messageInfo_Domain.DiscardUnknown(m)
}

var xxx_messageInfo_Domain proto.InternalMessageInfo

func (m *Domain) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Domain) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *Domain) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

func (m *Domain) GetDnstype() string {
	if m != nil && m.Dnstype != nil {
		return *m.Dnstype
	}
	return ""
}

func (m *Domain) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type Message struct {
	MessageId            *string  `protobuf:"bytes,2,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	AccountId            *string  `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string  `protobuf:"bytes,4,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	FromAddr             *string  `protobuf:"bytes,5,opt,name=from_addr,json=fromAddr" json:"from_addr,omitempty"`
	ToAddr               *string  `protobuf:"bytes,6,opt,name=to_addr,json=toAddr" json:"to_addr,omitempty"`
	Subject              *string  `protobuf:"bytes,7,opt,name=subject" json:"subject,omitempty"`
	Body                 *string  `protobuf:"bytes,8,opt,name=body" json:"body,omitempty"`
	Header               *string  `protobuf:"bytes,9,opt,name=header" json:"header,omitempty"`
	Attachments          []string `protobuf:"bytes,10,rep,name=attachments" json:"attachments,omitempty"`
	Created              *int64   `protobuf:"varint,11,opt,name=created" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{2}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *Message) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Message) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *Message) GetFromAddr() string {
	if m != nil && m.FromAddr != nil {
		return *m.FromAddr
	}
	return ""
}

func (m *Message) GetToAddr() string {
	if m != nil && m.ToAddr != nil {
		return *m.ToAddr
	}
	return ""
}

func (m *Message) GetSubject() string {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *Message) GetHeader() string {
	if m != nil && m.Header != nil {
		return *m.Header
	}
	return ""
}

func (m *Message) GetAttachments() []string {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Message) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

type User struct {
	AccountId            *string  `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId               *string  `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	EmailAddress         *string  `protobuf:"bytes,4,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	Seen                 *int64   `protobuf:"varint,5,opt,name=seen" json:"seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *User) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *User) GetEmailAddress() string {
	if m != nil && m.EmailAddress != nil {
		return *m.EmailAddress
	}
	return ""
}

func (m *User) GetSeen() int64 {
	if m != nil && m.Seen != nil {
		return *m.Seen
	}
	return 0
}

type SendgridEvent struct {
	EventId              *string      `protobuf:"bytes,3,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	AccountId            *string      `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ConversationId       *string      `protobuf:"bytes,6,opt,name=conversation_id,json=conversationId" json:"conversation_id,omitempty"`
	MessageId            *string      `protobuf:"bytes,7,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Data                 []string     `protobuf:"bytes,8,rep,name=data" json:"data,omitempty"`
	FullMessageId        *string      `protobuf:"bytes,9,opt,name=full_message_id,json=fullMessageId" json:"full_message_id,omitempty"`
	Subject              *string      `protobuf:"bytes,10,opt,name=subject" json:"subject,omitempty"`
	Event                *event.Event `protobuf:"bytes,11,opt,name=event" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendgridEvent) Reset()         { *m = SendgridEvent{} }
func (m *SendgridEvent) String() string { return proto.CompactTextString(m) }
func (*SendgridEvent) ProtoMessage()    {}
func (*SendgridEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{4}
}

func (m *SendgridEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendgridEvent.Unmarshal(m, b)
}
func (m *SendgridEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendgridEvent.Marshal(b, m, deterministic)
}
func (m *SendgridEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendgridEvent.Merge(m, src)
}
func (m *SendgridEvent) XXX_Size() int {
	return xxx_messageInfo_SendgridEvent.Size(m)
}
func (m *SendgridEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SendgridEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SendgridEvent proto.InternalMessageInfo

func (m *SendgridEvent) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *SendgridEvent) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *SendgridEvent) GetConversationId() string {
	if m != nil && m.ConversationId != nil {
		return *m.ConversationId
	}
	return ""
}

func (m *SendgridEvent) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *SendgridEvent) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SendgridEvent) GetFullMessageId() string {
	if m != nil && m.FullMessageId != nil {
		return *m.FullMessageId
	}
	return ""
}

func (m *SendgridEvent) GetSubject() string {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return ""
}

func (m *SendgridEvent) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UserAvail struct {
	AccountId            *string  `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	EmailAddress         *string  `protobuf:"bytes,5,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	Availability         *bool    `protobuf:"varint,6,opt,name=availability" json:"availability,omitempty"`
	Updated              *int64   `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAvail) Reset()         { *m = UserAvail{} }
func (m *UserAvail) String() string { return proto.CompactTextString(m) }
func (*UserAvail) ProtoMessage()    {}
func (*UserAvail) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{5}
}

func (m *UserAvail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAvail.Unmarshal(m, b)
}
func (m *UserAvail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAvail.Marshal(b, m, deterministic)
}
func (m *UserAvail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAvail.Merge(m, src)
}
func (m *UserAvail) XXX_Size() int {
	return xxx_messageInfo_UserAvail.Size(m)
}
func (m *UserAvail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAvail.DiscardUnknown(m)
}

var xxx_messageInfo_UserAvail proto.InternalMessageInfo

func (m *UserAvail) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *UserAvail) GetEmailAddress() string {
	if m != nil && m.EmailAddress != nil {
		return *m.EmailAddress
	}
	return ""
}

func (m *UserAvail) GetAvailability() bool {
	if m != nil && m.Availability != nil {
		return *m.Availability
	}
	return false
}

func (m *UserAvail) GetUpdated() int64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type HttpChunk struct {
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	ChunkId              *int32   `protobuf:"varint,4,opt,name=chunk_id,json=chunkId" json:"chunk_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	ChunkSize            *int32   `protobuf:"varint,6,opt,name=chunk_size,json=chunkSize" json:"chunk_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpChunk) Reset()         { *m = HttpChunk{} }
func (m *HttpChunk) String() string { return proto.CompactTextString(m) }
func (*HttpChunk) ProtoMessage()    {}
func (*HttpChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{6}
}

func (m *HttpChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpChunk.Unmarshal(m, b)
}
func (m *HttpChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpChunk.Marshal(b, m, deterministic)
}
func (m *HttpChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpChunk.Merge(m, src)
}
func (m *HttpChunk) XXX_Size() int {
	return xxx_messageInfo_HttpChunk.Size(m)
}
func (m *HttpChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpChunk.DiscardUnknown(m)
}

var xxx_messageInfo_HttpChunk proto.InternalMessageInfo

func (m *HttpChunk) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *HttpChunk) GetChunkId() int32 {
	if m != nil && m.ChunkId != nil {
		return *m.ChunkId
	}
	return 0
}

func (m *HttpChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HttpChunk) GetChunkSize() int32 {
	if m != nil && m.ChunkSize != nil {
		return *m.ChunkSize
	}
	return 0
}

type Job struct {
	Topic                *string  `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Partition            *int32   `protobuf:"varint,3,opt,name=partition" json:"partition,omitempty"`
	Offset               *int64   `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	ContentType          *string  `protobuf:"bytes,5,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	Type                 *string  `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	RequestId            *string  `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd8bd8fbf5ba445, []int{7}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Job) GetPartition() int32 {
	if m != nil && m.Partition != nil {
		return *m.Partition
	}
	return 0
}

func (m *Job) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Job) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *Job) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Job) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func init() {
	proto.RegisterEnum("mailkon.Event", Event_name, Event_value)
	proto.RegisterEnum("mailkon.JobType", JobType_name, JobType_value)
	proto.RegisterType((*Address)(nil), "mailkon.Address")
	proto.RegisterType((*Domain)(nil), "mailkon.Domain")
	proto.RegisterType((*Message)(nil), "mailkon.Message")
	proto.RegisterType((*User)(nil), "mailkon.User")
	proto.RegisterType((*SendgridEvent)(nil), "mailkon.SendgridEvent")
	proto.RegisterType((*UserAvail)(nil), "mailkon.UserAvail")
	proto.RegisterType((*HttpChunk)(nil), "mailkon.HttpChunk")
	proto.RegisterType((*Job)(nil), "mailkon.Job")
}

func init() { proto.RegisterFile("mailkon/mailkon.proto", fileDescriptor_5cd8bd8fbf5ba445) }

var fileDescriptor_5cd8bd8fbf5ba445 = []byte{
	// 739 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x6e, 0x13, 0x3b,
	0x14, 0x6d, 0x32, 0x99, 0x38, 0xb3, 0x73, 0x95, 0xd5, 0x73, 0x3a, 0xe7, 0x52, 0x29, 0x1d, 0x24,
	0x28, 0x7d, 0x68, 0x24, 0xfe, 0xa0, 0x6a, 0x91, 0x48, 0xa5, 0xbc, 0x4c, 0xe1, 0x0d, 0x29, 0xf2,
	0x8c, 0x9d, 0xc6, 0x34, 0xb1, 0xc3, 0xd8, 0x53, 0x94, 0xfe, 0x00, 0x0f, 0x88, 0xef, 0x80, 0x4f,
	0x83, 0xbf, 0x40, 0xbe, 0xa4, 0xb9, 0xb4, 0xa8, 0xbc, 0x24, 0x5e, 0x6b, 0x7b, 0xec, 0xe5, 0xb5,
	0x97, 0x0d, 0x7f, 0xcd, 0x09, 0x9f, 0xdd, 0x48, 0x31, 0xf0, 0xff, 0xa7, 0x8b, 0x42, 0x6a, 0x89,
	0x91, 0x87, 0xff, 0xbe, 0xbc, 0xe6, 0x7a, 0x5a, 0x66, 0xa7, 0xb9, 0x9c, 0x0f, 0x54, 0x99, 0xf1,
	0xbb, 0xc1, 0x94, 0x11, 0xca, 0x8a, 0x01, 0xbb, 0x65, 0x42, 0xbb, 0x5f, 0xf7, 0x4d, 0xf2, 0x1e,
	0xd0, 0x19, 0xa5, 0x05, 0x53, 0x0a, 0x1f, 0x02, 0x90, 0x3c, 0x97, 0xa5, 0xd0, 0x63, 0x4e, 0xe3,
	0x4a, 0xbf, 0x72, 0x1c, 0xa5, 0x91, 0x67, 0x86, 0x14, 0xc7, 0x80, 0x88, 0x9b, 0x19, 0x57, 0x6d,
	0x6d, 0x05, 0x4d, 0xa5, 0x5c, 0x50, 0xa2, 0x19, 0x8d, 0x83, 0x7e, 0xe5, 0x38, 0x48, 0x57, 0x30,
	0xf9, 0x5c, 0x81, 0xfa, 0x85, 0x9c, 0x13, 0x2e, 0x9e, 0x5a, 0xfd, 0x6f, 0xa8, 0x53, 0x3b, 0xd1,
	0x2f, 0xee, 0xd1, 0xef, 0xd7, 0x36, 0x15, 0x2a, 0x94, 0x5e, 0x2e, 0x58, 0x5c, 0x73, 0x7a, 0x3c,
	0xc4, 0x18, 0x6a, 0x94, 0x68, 0x12, 0x87, 0x96, 0xb6, 0xe3, 0xe4, 0x7b, 0x15, 0xd0, 0x88, 0x29,
	0x45, 0xae, 0x99, 0x91, 0x32, 0x77, 0x43, 0x23, 0xc5, 0xed, 0x17, 0x79, 0x66, 0x48, 0x77, 0x94,
	0x06, 0xbb, 0x4a, 0x5f, 0x40, 0x37, 0x97, 0xe2, 0x96, 0x15, 0x8a, 0x68, 0x2e, 0x85, 0x99, 0xe3,
	0xf6, 0xef, 0x6c, 0xd2, 0x43, 0x8a, 0xff, 0x83, 0x68, 0x52, 0xc8, 0xf9, 0xd8, 0xd8, 0xe4, 0xb5,
	0x34, 0x0c, 0x61, 0xfc, 0xc6, 0x07, 0x80, 0xb4, 0x74, 0xa5, 0xba, 0x3b, 0xb0, 0x96, 0xb6, 0x10,
	0x03, 0x52, 0x65, 0xf6, 0x81, 0xe5, 0x3a, 0x46, 0xee, 0x58, 0x1e, 0x9a, 0x63, 0x65, 0x92, 0x2e,
	0xe3, 0x86, 0x3b, 0x96, 0x19, 0x1b, 0xdb, 0x5c, 0x6b, 0xe3, 0xc8, 0xad, 0xe2, 0x10, 0xee, 0x43,
	0x93, 0x68, 0x4d, 0xf2, 0xe9, 0x9c, 0x09, 0xad, 0x62, 0xe8, 0x07, 0xc7, 0x51, 0xba, 0x49, 0x99,
	0x7d, 0xf2, 0x82, 0x59, 0x63, 0x9b, 0xce, 0x58, 0x0f, 0x93, 0x4f, 0x50, 0x7b, 0xa7, 0x58, 0xb1,
	0xe3, 0x43, 0x75, 0xd7, 0x87, 0x03, 0x40, 0xa5, 0x62, 0xc5, 0xda, 0xa3, 0xba, 0x81, 0x43, 0x8a,
	0x9f, 0x41, 0x9b, 0x99, 0x24, 0x8e, 0x57, 0x71, 0x71, 0xf6, 0xb4, 0x2c, 0xb9, 0x0a, 0x1b, 0x86,
	0x9a, 0x62, 0x4c, 0x58, 0x5f, 0x82, 0xd4, 0x8e, 0x93, 0x2f, 0x55, 0x68, 0x5f, 0x31, 0x41, 0xaf,
	0x0b, 0x4e, 0x5f, 0x9b, 0x8c, 0xe2, 0x7f, 0xa0, 0x61, 0xc3, 0xba, 0xde, 0x04, 0x59, 0xfc, 0xa0,
	0x4b, 0xb5, 0x3f, 0xe8, 0x52, 0xfd, 0xd1, 0x2e, 0x6d, 0x87, 0x01, 0xed, 0x86, 0x61, 0x95, 0xa5,
	0x86, 0x75, 0xd0, 0x8e, 0xf1, 0x73, 0xe8, 0x4e, 0xca, 0xd9, 0x6c, 0xbc, 0xf1, 0x9d, 0x73, 0xbf,
	0x6d, 0xe8, 0xd1, 0xfd, 0xb7, 0x1b, 0xad, 0x84, 0xed, 0x56, 0x26, 0x10, 0xda, 0x73, 0x58, 0xeb,
	0x9b, 0xaf, 0x5a, 0xa7, 0xee, 0x4a, 0xda, 0x43, 0xa7, 0xae, 0x94, 0x7c, 0xad, 0x40, 0x64, 0xfa,
	0x70, 0x76, 0x4b, 0xf8, 0xec, 0xa9, 0x50, 0x3e, 0xf0, 0x3c, 0x7c, 0xc4, 0xf3, 0x04, 0x5a, 0xc4,
	0x2c, 0x46, 0x32, 0x3e, 0xe3, 0x7a, 0x69, 0x0d, 0x69, 0xa4, 0x5b, 0xdc, 0xe6, 0x7d, 0x43, 0xdb,
	0x77, 0x99, 0x43, 0xf4, 0x46, 0xeb, 0xc5, 0xf9, 0xb4, 0x14, 0x37, 0xb8, 0x03, 0xd5, 0x7b, 0x19,
	0x55, 0x4e, 0x4d, 0xa3, 0x72, 0x53, 0x58, 0xf5, 0x22, 0x4c, 0x91, 0xc5, 0x1b, 0x0e, 0x1a, 0x45,
	0x2d, 0xef, 0xe0, 0x21, 0x80, 0x9b, 0xae, 0xf8, 0x1d, 0xb3, 0x3a, 0xc2, 0x34, 0xb2, 0xcc, 0x15,
	0xbf, 0x63, 0xc9, 0xb7, 0x0a, 0x04, 0x97, 0x32, 0xc3, 0xfb, 0x10, 0x6a, 0xb9, 0xe0, 0xb9, 0x0f,
	0x9f, 0x03, 0xf8, 0x7f, 0x88, 0x16, 0xa4, 0xd0, 0xdc, 0x34, 0xd0, 0x4a, 0x08, 0xd3, 0x35, 0x61,
	0x6e, 0x84, 0x9c, 0x4c, 0x14, 0xd3, 0x56, 0x47, 0x90, 0x7a, 0x84, 0x8f, 0xa0, 0x95, 0x4b, 0xa1,
	0x4d, 0x98, 0xec, 0x9b, 0xe1, 0x0c, 0x6a, 0x7a, 0xee, 0xad, 0x7f, 0x37, 0x6c, 0xc9, 0x05, 0xc5,
	0x8e, 0x8d, 0xd2, 0x82, 0x7d, 0x2c, 0x99, 0xd2, 0x1b, 0xf1, 0xf0, 0xcc, 0x90, 0x9e, 0x50, 0x08,
	0x5d, 0x52, 0xf7, 0xa1, 0x3b, 0x22, 0xfc, 0x46, 0x8a, 0xd4, 0xd5, 0x18, 0xed, 0xfd, 0x40, 0x18,
	0x43, 0x7b, 0xe4, 0xde, 0xe4, 0xab, 0xa5, 0xc8, 0x19, 0xed, 0xfd, 0x44, 0xb8, 0x03, 0xe0, 0xb9,
	0x4b, 0x99, 0xf5, 0xaa, 0xf8, 0x08, 0x0e, 0x3d, 0x3e, 0xb7, 0x17, 0xf0, 0xcc, 0x35, 0x75, 0xbd,
	0xce, 0xde, 0xc9, 0x05, 0xa0, 0x4b, 0x99, 0x59, 0x8d, 0xfb, 0xd0, 0x53, 0xfe, 0x8a, 0x8c, 0xb9,
	0xc8, 0x64, 0x29, 0x68, 0x6f, 0x0f, 0x63, 0xe8, 0xdc, 0xb3, 0x36, 0x3d, 0xbd, 0x0a, 0xee, 0x42,
	0xd3, 0xbe, 0xfd, 0x9e, 0x08, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x2e, 0x1c, 0xc2, 0x36,
	0x06, 0x00, 0x00,
}
